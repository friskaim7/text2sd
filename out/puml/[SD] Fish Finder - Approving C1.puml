@startuml Fish Finder - Approving C1
 -> UnknownClass: unknownMethod()
UnknownClass -> PreApplyLoansCmdExe: isWhiteListB(jsonData)
PreApplyLoansCmdExe -> GoldFishManager: isWhiteListB(userId)
GoldFishManager -> UfiWhiteListDubboService: existsUfiWhiteList(userId)
GoldFishManager <-- UfiWhiteListDubboService: Boolean
PreApplyLoansCmdExe <-- GoldFishManager: boolean
UnknownClass <-- PreApplyLoansCmdExe: Boolean
UnknownClass -> PreApplyLoansCmdExe: process(jsonData)
PreApplyLoansCmdExe -> GoldFishManager: isGoldFish(loanNumber)>> boolean
PreApplyLoansCmdExe <-- GoldFishManager: 
UnknownClass <-- PreApplyLoansCmdExe: void
UnknownClass -> FdcFailJob: execute(shardingContext)
FdcFailJob -> PreApplyLoansCmdExe: runPreRule(loanNumber)
PreApplyLoansCmdExe -> GoldFishRuleService: preReject(loanNumber)
GoldFishRuleService -> GoldFishRuleService: goldFishProcess(userType, loanNumber, userId, nik, StringBuilder)
GoldFishRuleService -> GoldFishRule: FdcCheckHasOver15(userId, nik)
GoldFishRuleService <-- GoldFishRule: Response<Boolean>
GoldFishRuleService <-- GoldFishRuleService: RuleResultDto
PreApplyLoansCmdExe <-- GoldFishRuleService: RuleResultDto
FdcFailJob <-- PreApplyLoansCmdExe: void
UnknownClass <-- FdcFailJob: void
UnknownClass -> FdcFailJob: execute(shardingContext)
FdcFailJob -> PreApplyLoansCmdExe: runPreRule(loanNumber)
PreApplyLoansCmdExe -> GoldFishRuleService: preReject(loanNumber)
GoldFishRuleService -> GoldFishRule: ocrCheck(userId, sourceId)
GoldFishRule -> ApplicationServiceFacde: getPaperworkDataList(userId, source)
GoldFishRule <-- ApplicationServiceFacde: List<PaperworkDataVO>
GoldFishRuleService <-- GoldFishRule: String
PreApplyLoansCmdExe <-- GoldFishRuleService: RuleResultDto
FdcFailJob <-- PreApplyLoansCmdExe: void
UnknownClass <-- FdcFailJob: void
UnknownClass -> BaseRule: rejectByFNDI(userId)
BaseRule -> BaseRule: commonCheck(StringBuilder, applyInfoDto, loanNumber, item, mobile)
BaseRule -> BaseRule: reject(loanNumber)
BaseRule <-- BaseRule: RuleResultDto
BaseRule <-- BaseRule: RuleResultDto
UnknownClass <-- BaseRule: Boolean
UnknownClass -> ApplyReportTwoConsumer: process(message)
ApplyReportTwoConsumer -> GoldFishManager: fishFinderSecondCheck(ruleResultDto, loanNumber)
GoldFishManager -> FifInsightClient: loadFifinsightCheck(loadFifinsightCheck)
FifInsightClient -> BaseFifinsightCheckService: getOneByNik(nik)
BaseFifinsightCheckService -> FifinsightController: getFifinsight()
BaseFifinsightCheckService <-- FifinsightController: 
FifInsightClient <-- BaseFifinsightCheckService: FifinsightCheck
GoldFishManager <-- FifInsightClient: FifinsightCheck
ApplyReportTwoConsumer <-- GoldFishManager: RuleResultDto
UnknownClass <-- ApplyReportTwoConsumer: void
UnknownClass -> BaseCheckService: gadaCheck(userInfo, loanNumber)
BaseCheckService -> DukcapilClientV2Service: doCall(dukcapilRequest)
DukcapilClientV2Service -> BaseCheckService: checkGadaAsli(loanNumber, docId)
BaseCheckService -> BaseCheckService: checkBasicSelfie(VidaAsliBO )
BaseCheckService <-- BaseCheckService: String
DukcapilClientV2Service <-- BaseCheckService: String
BaseCheckService <-- DukcapilClientV2Service: String
UnknownClass <-- BaseCheckService: String
UnknownClass -> ApplyReportTwoConsumer: process(message)
ApplyReportTwoConsumer -> GoldFishManager: fishFinderSecondCheck(ruleResultDto, loanNumber)
GoldFishManager -> GoldFishManager: getCheckScore(userType, uw2aSegment, uw2bSegment, nik, loanNumber)
GoldFishManager -> ScoreCheck2GoldFish: checkScore(nik, loanNumber)
ScoreCheck2GoldFish -> ScoreCheck2GoldFish: doScoreCheck(nik, loanNumber)
ScoreCheck2GoldFish -> AbstractScoreCheckService: doResult(response, isScoreNullReject)
AbstractScoreCheckService -> AbstractScoreCheckService: getApprovalScoreConfig(loanNumber, nik, userType)
AbstractScoreCheckService -> BaseCheckService: getLastDigit():
BaseCheckService -> ScoreCheckService: getLastDigit(loanNumber)
BaseCheckService <-- ScoreCheckService: int
AbstractScoreCheckService <-- BaseCheckService: 
AbstractScoreCheckService <-- AbstractScoreCheckService: Response<ScoreResultBO>
ScoreCheck2GoldFish <-- AbstractScoreCheckService: Response<ScoreResultBO>
ScoreCheck2GoldFish <-- ScoreCheck2GoldFish: Response<ScoreResultBO>
GoldFishManager <-- ScoreCheck2GoldFish: Response<ScoreResultBO>
GoldFishManager <-- GoldFishManager: Response<ScoreResultBO>
ApplyReportTwoConsumer <-- GoldFishManager: RuleResultDto
UnknownClass <-- ApplyReportTwoConsumer: void
UnknownClass -> GoldFishManager: getCreditTagUW2(origin, score, flagList)
GoldFishManager -> BackstageConfigServiceFacade: getConfigValue(configKey)
GoldFishManager <-- BackstageConfigServiceFacade: String
UnknownClass <-- GoldFishManager: String
UnknownClass -> ScoreCheck2GoldFish: defaultScoring(nik, lastDigit, loanNumber, userProfile)
ScoreCheck2GoldFish -> ScoreCheck2GoldFish: scoreFive2Nine(nik, lastDigit, loanNumber)
ScoreCheck2GoldFish <-- ScoreCheck2GoldFish: Response
UnknownClass <-- ScoreCheck2GoldFish: Respond
UnknownClass -> BaseCheckService: checkSelfieScore(loanNumber)
BaseCheckService -> BaseCheckService: checkSelfieScoreNew(loanNumber, hitBasic)
BaseCheckService -> BaseCheckService: findKyc(loanNumber)
BaseCheckService -> BaseCheckService: vidaScoreCheck(loanNumber, hitBasic, type)
BaseCheckService -> BaseCheckService: checkSelfieScoreVida(loanNumber, hitBasic, type)
BaseCheckService -> VidaClient: checkSelfieScore(loanNumber, hitBasic, type)
VidaClient -> VidaClient: checkLiveness(loanNumber, data)
VidaClient -> VidaClient: checkCodesOrKycstatus(loanNumber, errors, data, respObj)
VidaClient -> VidaClient: processCheckSelfieScore(loanNumber, errors, data, respObj)
VidaClient <-- VidaClient: String
VidaClient <-- VidaClient: boolean
VidaClient <-- VidaClient: boolean
BaseCheckService <-- VidaClient: VerifyResultBO
BaseCheckService <-- BaseCheckService: VerifyResultBO
BaseCheckService <-- BaseCheckService: Response<Boolean>
BaseCheckService -> BaseCheckService: verihubScoreCheck(loanNumber, hitBasic, type)
BaseCheckService -> AsliClient: verifyAsliNew(loanNumber, hitBasic, type)
AsliClient -> BaseCheckService: processCheckAsliScoreNew()
AsliClient <-- BaseCheckService: 
BaseCheckService <-- AsliClient: String
BaseCheckService <-- BaseCheckService: Response<Boolean>
BaseCheckService <-- BaseCheckService: String
BaseCheckService <-- BaseCheckService: String
UnknownClass <-- BaseCheckService: String
UnknownClass -> AdvanceTeleConsumer: onMessage():
AdvanceTeleConsumer -> BaseApprovalService: handAdvanceCallBack():
BaseApprovalService -> BaseCheckService: checkAdvanceCallBack():
BaseCheckService -> BaseCheckService: checkTeleStatus()
BaseCheckService <-- BaseCheckService: 
BaseApprovalService <-- BaseCheckService: 
AdvanceTeleConsumer <-- BaseApprovalService: 
UnknownClass <-- AdvanceTeleConsumer: 
UnknownClass -> NotifyUtils: saveTag()
UnknownClass <-- NotifyUtils: 
 <-- UnknownClass: Unknown
@enduml
