@startuml
class com.welab.report.awda.Column {
- String type
- String name
}
interface com.welab.report.mapper.ext.domo.DomoQueryMapper {
~ List<Map<String,Object>> queryDomoBase(Map<String,Object>)
~ List<Map<String,Object>> queryDomoLoans(Map<String,Object>)
~ List<Map<String,Object>> queryDomoClosed(Map<String,Object>)
~ List<Map<String,Object>> queryDomoBusinessAnalysisSnapshot(Map<String,Object>)
~ List<Map<String,Object>> queryDomoBusinessAnalysisWaterfall(Map<String,Object>)
~ List<Map<String,Object>> querydomoProductDashboardCustInsights(Map<String,Object>)
~ List<Map<String,Object>> querydomoProductDashboardFunnel(Map<String,Object>)
~ List<Map<String,Object>> querydomoProductDashboardPushMessage(Map<String,Object>)
~ List<Map<String,Object>> querydomoProductDashboardTatFunnel(Map<String,Object>)
~ List<Map<String,Object>> querydomoProductDashboardTatProduct(Map<String,Object>)
~ List<Map<String,Object>> queryDomoDueList(Map<String,Object>)
~ List<Map<String,Object>> queryDomoRepayment(Map<String,Object>)
~ List<Map<String,Object>> queryApprovalLoansTrack(Map<String,Object>)
~ List<Map<String,Object>> queryLoanOverdueInfo(Map<String,Object>)
~ List<Map<String,Object>> queryDomoMessageVcodeLog(Map<String,Object>)
~ void callDataCenterUserPro(String,String,int)
~ void callDataCenterUserInitPro(Integer)
~ void callDataCenterLoanPro(String,String,int)
~ void callDataCenterLoanInitPro(Integer)
~ List<Map<String,Object>> queryDataCenterLoan(Map<String,Object>)
~ List<Map<String,Object>> queryDataCenterUser(Map<String,Object>)
~ List<Map<String,Object>> queryDomoNsApplyInfo(Map<String,Object>)
~ List<Map<String,Object>> queryDomoNsLoanInfo(Map<String,Object>)
~ List<Map<String,Object>> queryDomoNsTagInfo(Map<String,Object>)
~ List<Map<String,Object>> queryDomoNsUserTagLog(Map<String,Object>)
}
class com.welab.report.test.reportjob.DataReportingJobTest2 {
- RepaymentDataReportingCmd repaymentDataReportingCmd
+ void runTest()
}
class com.welab.report.datasource.MultiDataSource {
- {static} ThreadLocal<String> dataSourceKey
- String defaultKey
# Object determineCurrentLookupKey()
+ {static} void setDataSourceKey(String)
+ {static} void clearDataSourceKey()
}
class com.welab.report.test.TempTest {
- DefaultConfigService defaultConfigService
+ void yaml()
+ void yaml2()
}
class com.welab.report.exception.ResponsCodeType {
+ {static} String PARAM_IS_NOT_NULL
}
enum com.welab.report.exception.ReportResponsCodeTypeEnum {
+  PARAM_IS_NOT_NULL
- Integer code
- String message
- <<Create>> ReportResponsCodeTypeEnum(Integer,String)
+ Integer getCode()
+ String getMessage()
}
class com.welab.report.dto.AppInputDto {
- String key
- String value
- Long time
+ String getKey()
+ void setKey(String)
+ String getValue()
+ void setValue(String)
+ Long getTime()
+ void setTime(Long)
+ String toString()
}
class com.welab.report.config.Swagger2Config {
+ Docket createRestApi()
- ApiInfo apiInfo()
}
interface com.welab.report.mapper.DomoJobMapper {
~ int countByExample(DomoJobExample)
~ int deleteByExample(DomoJobExample)
~ int deleteByPrimaryKey(Long)
~ int insert(DomoJob)
~ int insertSelective(DomoJob)
~ List<DomoJob> selectByExample(DomoJobExample)
~ DomoJob selectByPrimaryKey(Long)
~ int updateByExampleSelective(DomoJob,DomoJobExample)
~ int updateByExample(DomoJob,DomoJobExample)
~ int updateByPrimaryKeySelective(DomoJob)
~ int updateByPrimaryKey(DomoJob)
}
class com.welab.report.test.SimpleTest {
+ <<Create>> SimpleTest()
}
class com.welab.report.exception.ReportException {
- {static} long serialVersionUID
+ <<Create>> ReportException(Integer)
+ <<Create>> ReportException(Integer,String)
+ <<Create>> ReportException(ResponsCodeType.ReportResponsCodeTypeEnum)
}
class com.welab.report.service.GadaReportService {
- String appId
- String GADA_REPORT_KEY
- BaseGadaReportService baseGadaReportService
- BackstageConfigsServiceFacade backstageConfigsServiceFacade
- MessageEmailServiceFacade messageEmailServiceFacade
- JedisCluster jedisCluster
+ void exec(String)
+ void sendEmail()
# List<LoanDetail> setData(Calendar,Date,Date)
- Integer getMaxDay(LoanDetail)
}
class com.welab.report.Application {
- {static} Logger LOG
+ {static} void main(String[])
}
class com.welab.report.dto.AccountAssignmentReportDTO {
- {static} long serialVersionUID
- String loanNumber
- String agentName
- String email
- String assignedDate
- String assignedTime
- String dueDate
- Long loanAmount
- Long outstandingBalance
- Long amountDue
- Integer overdueInstallment
- Long originalRepaymentAmount
}
class com.welab.report.dto.TaskFileReportDTO {
- {static} long serialVersionUID
- String clientName
- String clientCode
- String productName
- String productType
- String customerName
- String nik
- Long mobilePhone
- Long totalAmountDue
- String loanNumber
- String dueDate
- Long dpd
- Long loanAmount
- String disburseDate
- String disbursementBank
- Long amountDisbursed
- String merchant
- String tenor
- Long outstandingBalance
- Long amountDue
- Long earlySettlementAmount
- String gender
- String birthdate
- String homePhone
- String email
- Integer age
- String idAddressProvince
- String idAddressCity
- String idAddressArea
- String idAddressVillage
- String idDetailAddress
- Integer idAddressZipcode
- Integer idAddressRW
- Integer idAddressRT
- String currentProvince
- String currentCity
- String currentArea
- String currentVillage
- String currentAddress
- Integer currentZipcode
- Integer currentRw
- Integer currentRw40
- String workProvince
- String workCity
- String workArea
- String workVillage
- String workAddress
- Integer workZipcode
- String workRw
- String workRt
- String companyName
- String position
- Long monthlyIncome
- String officePhone
- Integer yearsOfServices
- String emergencyContact1Name
- String emergencyContact1Relationship
- String emergencyContact1MobilePhone
- String emergencyContact1Email
- String emergencyContact1Address
- String emergencyContact2Name
- String emergencyContact2Relationship
- String emergencyContact2MobilePhone
- String emergencyContact2Email
- String emergencyContact2Address
- String emergencyContact3Name
- String emergencyContact3Relationship
- String emergencyContact3MobilePhone
- String emergencyContact3Email
- String emergencyContact3Address
- Long lateFee
- String vaAccount
- Long overdueInstallment
- Long originalRepaymentAmount
- String group
- String indexOutstandingAmount
- String indexLateFee
- String indexAmountDue
- String partialPaymentFlag
- String lateFeeUpdateFlag
- String score
}
class com.welab.report.configruation.GcpConfigruation {
- String clientId
- String clientEmail
- String privateKeyPkcs8
- String privateKeyId
- String projectId
- String pathPrefix
+ String getPathPrefix()
+ Credentials getCredentials()
~ {static} PrivateKey privateKeyFromPkcs8(String)
}
class com.welab.report.job.DataReportingCleanJob {
- RepaymentDataClearCmd repaymentDataClearCmd
+ void execute(ShardingContext)
}
interface com.welab.report.common.Urls {
~ String ROOT
~ String ROOT_DESC
~ String V1
}
interface com.welab.report.common.Urls$Test {
~ String V1_TEST
~ String V1_TEST_DESC
~ String V1_GET_FILE
~ String V1_GET_FILE_DESC
}
class com.welab.report.awda.DatabaseConver {
+ {static} String convert(Column,Object)
}
class com.welab.report.app.cmd.AwdaQuirosReportCmdExe {
- GcpConfigruation gcpConfigruation
- SftpConfiguration sftpConfiguration
- String dataSetName
- String tableName
+ void saveToGcp()
+ Map<String,Object> quirosDataToMap(Map<Integer,String>)
- List<Map<Integer,String>> parseQuirosFile(InputStream)
- Map<Integer,String> stringToMap(String)
}
class com.welab.report.domo.DomoDataSyn {
- DomoQueryMapper domoQueryMapper
- DomoMapper domoMapper
- DomoService domoService
- TableTool tableTool
+ void excute(String)
- DomoDataSyn getThis()
+ void excuteInit(String,String,String)
+ void excute(String,String,Map<String,Object>,String)
- void initDataCenterUser(String,String,String)
- void initDataCenterLoan(String,String,String)
- void syndomoDomoDueList(String,String,Map<String,Object>)
+ void syndomoDomoDueList(List<Map<String,Object>>)
- void synDomoBase(String,String,Map<String,Object>)
+ void synDomoBase(List<Map<String,Object>>)
- void synDomoLoans(String,String,Map<String,Object>)
+ void synDomoLoans(List<Map<String,Object>>)
- void synDomoBusinessAnalysisSnapshot(String,String,Map<String,Object>)
+ void synDomoBusinessAnalysisSnapshot(List<Map<String,Object>>)
- void synDomoBusinessAnalysisWaterfall(String,String,Map<String,Object>)
+ void synDomoBusinessAnalysisWaterfall(List<Map<String,Object>>)
- void syndomoProductDashboardCustInsights(String,String,Map<String,Object>)
+ void syndomoProductDashboardCustInsights(List<Map<String,Object>>)
- void syndomoProductDashboardFunnel(String,String,Map<String,Object>)
+ void syndomoProductDashboardFunnel(List<Map<String,Object>>)
- void syndomoProductDashboardPushMessage(String,String,Map<String,Object>)
+ void syndomoProductDashboardPushMessage(List<Map<String,Object>>)
- void syndomoProductDashboardTatFunnel(String,String,Map<String,Object>)
+ void syndomoProductDashboardTatFunnel(List<Map<String,Object>>)
- void syndomoProductDashboardTatProduct(String,String,Map<String,Object>)
+ void syndomoProductDashboardTatProduct(List<Map<String,Object>>)
- void syndomoApprovalLoansTrack(String,String,Map<String,Object>)
+ void syndomoApprovalLoansTrack(List<Map<String,Object>>)
- void syndomoLoanOverdueInfo(String,String,Map<String,Object>)
+ void syndomoLoanOverdueInfo(List<Map<String,Object>>)
- void synDataCenterLoan(String,String,Map<String,Object>)
+ void synDataCenterLoan(List<Map<String,Object>>)
- void synDataCenterUser(String,String,Map<String,Object>)
+ void synDataCenterUser(List<Map<String,Object>>)
- void synDomoMessageVcodeLog(String,String,Map<String,Object>)
+ void synDomoMessageVcodeLog(List<Map<String,Object>>)
- void synDomoNsApplyInfo(String,String,Map<String,Object>)
+ void synDomoNsApplyInfo(List<Map<String,Object>>)
- void synDomoNsLoanInfo(String,String,Map<String,Object>)
+ void synDomoNsLoanInfo(List<Map<String,Object>>)
- void synDomoNsTagInfo(String,String,Map<String,Object>)
+ void synDomoNsTagInfo(List<Map<String,Object>>)
- void synDomoNsUserTagLog(String,String,Map<String,Object>)
+ void synDomoNsUserTagLog(List<Map<String,Object>>)
+ void switchDataSource()
+ void switchDefaultDataSource()
- void deleteDomoBase()
+ boolean exist(String,String)
+ void save(String,String,int,Double)
}
class com.welab.report.dto.AppInputListDto {
- AppInputDto[] appInputDtos
- Long time
+ AppInputDto[] getAppInputDtos()
+ void setAppInputDtos(AppInputDto[])
+ Long getTime()
+ void setTime(Long)
+ String toString()
}
class com.welab.report.awda.SqlConfig {
- {static} Map<String,String> sqlMap
+ {static} List<String> SELECT_USERID_LOANNUMBER
+ {static} void main(String[])
+ {static} String getSelectIdSql(String)
+ {static} String bulidSelectIdsSql(String,String,String)
+ {static} String bulidSelectIdsSqlForUpdate(String,String,String)
}
class com.welab.report.constants.Constants {
+ {static} String REPORT_KEY
}
class com.welab.report.dto.AppEventDto {
- String eventType
- Long consumeTime
}
class com.welab.report.awda.DataSyncClient {
+ ExecutorService executorService
- {static} Map<String,List<String>> sqlColums
+ void excute(String,String,String)
+ Map<String,List<String>> getAllUserIdAndLoanNumber(String,String,JdbcTemplate)
- void syncTable(String,String,String,DatebaseConfig,String,String)
- void transferToSqlserverForMysqlIds(String,String,List<Long>,DatebaseConfig)
- void excuteSql(String,String,DatebaseConfig)
- {static} String bulidSqlServerInsertSql(String,List<Column>,List<Map<String,Object>>)
+ {static} void main(String[])
}
class com.welab.report.model.DomoJobExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> DomoJobExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.report.model.DomoJobExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDateStrIsNull()
+ Criteria andDateStrIsNotNull()
+ Criteria andDateStrEqualTo(String)
+ Criteria andDateStrNotEqualTo(String)
+ Criteria andDateStrGreaterThan(String)
+ Criteria andDateStrGreaterThanOrEqualTo(String)
+ Criteria andDateStrLessThan(String)
+ Criteria andDateStrLessThanOrEqualTo(String)
+ Criteria andDateStrLike(String)
+ Criteria andDateStrNotLike(String)
+ Criteria andDateStrIn(List<String>)
+ Criteria andDateStrNotIn(List<String>)
+ Criteria andDateStrBetween(String,String)
+ Criteria andDateStrNotBetween(String,String)
+ Criteria andJobNameIsNull()
+ Criteria andJobNameIsNotNull()
+ Criteria andJobNameEqualTo(String)
+ Criteria andJobNameNotEqualTo(String)
+ Criteria andJobNameGreaterThan(String)
+ Criteria andJobNameGreaterThanOrEqualTo(String)
+ Criteria andJobNameLessThan(String)
+ Criteria andJobNameLessThanOrEqualTo(String)
+ Criteria andJobNameLike(String)
+ Criteria andJobNameNotLike(String)
+ Criteria andJobNameIn(List<String>)
+ Criteria andJobNameNotIn(List<String>)
+ Criteria andJobNameBetween(String,String)
+ Criteria andJobNameNotBetween(String,String)
+ Criteria andTotalIsNull()
+ Criteria andTotalIsNotNull()
+ Criteria andTotalEqualTo(Integer)
+ Criteria andTotalNotEqualTo(Integer)
+ Criteria andTotalGreaterThan(Integer)
+ Criteria andTotalGreaterThanOrEqualTo(Integer)
+ Criteria andTotalLessThan(Integer)
+ Criteria andTotalLessThanOrEqualTo(Integer)
+ Criteria andTotalIn(List<Integer>)
+ Criteria andTotalNotIn(List<Integer>)
+ Criteria andTotalBetween(Integer,Integer)
+ Criteria andTotalNotBetween(Integer,Integer)
+ Criteria andExcuteTimeIsNull()
+ Criteria andExcuteTimeIsNotNull()
+ Criteria andExcuteTimeEqualTo(String)
+ Criteria andExcuteTimeNotEqualTo(String)
+ Criteria andExcuteTimeGreaterThan(String)
+ Criteria andExcuteTimeGreaterThanOrEqualTo(String)
+ Criteria andExcuteTimeLessThan(String)
+ Criteria andExcuteTimeLessThanOrEqualTo(String)
+ Criteria andExcuteTimeLike(String)
+ Criteria andExcuteTimeNotLike(String)
+ Criteria andExcuteTimeIn(List<String>)
+ Criteria andExcuteTimeNotIn(List<String>)
+ Criteria andExcuteTimeBetween(String,String)
+ Criteria andExcuteTimeNotBetween(String,String)
}
class com.welab.report.model.DomoJobExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.report.model.DomoJobExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.report.util.SSLSocketClient {
+ {static} SSLSocketFactory getSSLSocketFactory()
- {static} TrustManager[] getTrustManager()
+ {static} HostnameVerifier getHostnameVerifier()
}
class com.welab.report.test.reportjob.PremiumAmountReportTest {
- PremiumAmountReportService premiumAmountReportService
- EmailSender emailSender
+ void sendExport()
+ void baseMailSend()
}
class com.welab.report.domo.DomoService {
- DomoJobMapper domoJobMapper
+ boolean exist(String,String)
+ DomoJob findOne(String,String)
+ boolean save(DomoJob)
}
class com.welab.report.job.AwdaDataSyncJob {
- DataSyncClient dataSyncClient
- String awdaDataSync
+ void execute(ShardingContext)
}
class com.welab.report.app.base.BaseGadaReportService {
- GadaReportMapper gadaReportMapper
+ List<LoanDetail> getLastMonthCloseLoan(CommonParams)
+ List<LoanDetail> getLastMonthNoCloseLoan(CommonParams)
+ List<LoanDetail> getLastMonthNoCloseForCloseLoan(CommonParams)
+ List<String> getOverDueLoans(List<String>)
}
class com.welab.report.job.domo.DomoExcuteJob {
- DomoDataSyn domoDataSyn
+ void execute(ShardingContext)
}
class com.welab.report.dto.SystemEventDto {
- String loanNumber
- String path
}
class com.welab.report.test.ScaffoldTest {
- DefaultConfigService config
- String ZOOKEEPER_URL
+ void test1()
+ void appId()
}
class com.welab.report.dto.RoboCallReportDTO {
- {static} long serialVersionUID
- String taskName
- String callId
- String name
- String phoneNumber
- Integer callTimes
- String callStatus
- Date callStartTime
- Date callEndTime
- String robot
- String platform
- Integer duration
- String hangupType
- String ringType
- String comments
- String intention
- String description
}
interface com.welab.report.mapper.ext.PremiumAmountReportMapper {
~ List<PremiumAmount> findPremiumAmountRecord(CommonParams)
~ List<String> findPremiumAmountLoanNumbers(String)
~ List<PremiumAmount> findPremiumAmountLoans(List<String>)
}
interface com.welab.report.mapper.ext.GadaReportMapper {
+ List<LoanDetail> getLastMonthCloseLoan(CommonParams)
+ List<LoanDetail> getLastMonthNoCloseLoan(CommonParams)
+ List<LoanDetail> getLastMonthNoCloseForCloseLoan(CommonParams)
+ List<String> getOverDueLoans(List<String>)
}
class com.welab.report.job.GADAMonthlyReportJob {
- GadaReportService gadaReportService
+ void execute(ShardingContext)
}
class com.welab.report.dto.CallResultReportDTO {
- {static} long serialVersionUID
- String loanNumber
- String dueDate
- String customerName
- Long loanAmount
- String disburseDate
- String tenor
- Long outstandingBalance
- Long amountDue
- Long earlySettlementAmount
- String gender
- String nik
- String birthdate
- String homePhone
- String mobilePhone
- String email
- Integer age
- String officePhone
- String emergencyContact1Name
- String emergencyContact1Relationship
- String emergencyContact1MobilePhone
- String emergencyContact1Email
- String emergencyContact1Address
- String emergencyContact2Name
- String emergencyContact2Relationship
- String emergencyContact2MobilePhone
- String emergencyContact2Email
- String emergencyContact2Address
- String emergencyContact3Name
- String emergencyContact3Relationship
- String emergencyContact3MobilePhone
- String emergencyContact3Email
- String emergencyContact3Address
- String callType
- String placeToCall
- String partyContact
- String action
- String callResultCreatedDate
- String agentName
- String agentEmail
- String note
- String ptpDate
- String ptpAmount
- String ptpResult
- Long repaymentAmount1
- String repaymentDate1
- List<String> repaymentsAmountAdditional
- List<String> repaymentsDateAdditional
}
class com.welab.report.app.base.BasePremiumAmountReportService {
- PremiumAmountReportMapper premiumAmountReportMapper
+ List<PremiumAmount> findPremiumAmountRecord(CommonParams)
+ List<String> findPremiumAmountLoanNumbers(String)
+ List<PremiumAmount> findPremiumAmountLoans(List<String>)
}
class com.welab.report.facade.MessageEmailServiceFacade {
- MessageEmailService messageEmailService
+ void sendMail(MailDTO)
+ void sendMailByTmplName(MailDTO)
}
class com.welab.report.test.junit.JunitSpringBootContextLoader {
+ ApplicationContext loadContext(MergedContextConfiguration)
- boolean isEmbeddedWebEnvironment(MergedContextConfiguration)
- void setActiveProfiles(ConfigurableEnvironment,String[])
- void disableJmx(List<String>)
}
class com.welab.report.test.junit.JunitSpringBootContextLoader$WebConfigurer {
~ void configure(MergedContextConfiguration,SpringApplication,List<ApplicationContextInitializer<?>>)
- void addMockServletContext(List<ApplicationContextInitializer<?>>,WebMergedContextConfiguration)
}
class com.welab.report.test.reportjob.DataReportingJobTest {
- RepaymentDataReportingCmd repaymentDataReportingCmd
- RepaymentDataClearCmd repaymentDataClearCmd
+ void runTest()
+ void clean()
}
class com.welab.report.job.EmailSendJob {
- GadaReportService gadaReportService
+ void execute(ShardingContext)
}
class com.welab.report.app.cmd.RepaymentDataClearCmd {
- String ip
- Integer port
- String userName
- String password
+ void clearExpiredFile()
}
class com.welab.report.awda.DatebaseConfig {
- String config
- int batchCount
- Map<String,String> tableMapping
- String slave_jdbc_driver
- String slave_jdbc_url
- String slave_jdbc_username
- String slave_jdbc_password
- String sql_server_jdbc_driver
- String sql_server_jdbc_url
- String sql_server_jdbc_username
- String sql_server_jdbc_password
+ DruidDataSource mysqlDataSource
+ DruidDataSource sqlServerDataSource
+ JdbcTemplate mysqlJdbc
+ JdbcTemplate sqlServerJdbc
- <<Create>> DatebaseConfig()
+ <<Create>> DatebaseConfig(String)
+ void init(String)
+ DruidDataSource slaveSource()
+ DruidDataSource sqlServerSource()
+ JdbcTemplate getSlaveJdbcTemplate()
+ JdbcTemplate getSqlServerJdbcTemplate()
+ {static} void main(String[])
+ void close()
}
class com.welab.report.model.ext.LoanDetail {
- String loanNumber
- String orderNo
- Date lendAt
- Long amount
- String tenor
- String tenorMax
- Date dueDate
- Long repaymentAmount
- Date closeDate
- Integer repayStatus
- Long lateFee
- String remainingTenor
- String dpd
- String loanStatus
- BigDecimal gadaFee
- BigDecimal gadaVatFee
}
class com.welab.report.controller.TestController {
+ Response test()
+ Response<DocumentDto> getLastestOneFile(DocQueryDto)
}
class com.welab.report.model.ext.PremiumAmount {
- String loanNumber
- String name
- String nik
- String gender
- String birthday
- String mobile
- String email
- Date lendAt
- String secondProdCode
- String productCode
- String tenure
- Long premiumAmount
- String ext
- String userTag
}
class com.welab.report.filter.LogFilter {
- {static} Logger LOGGER
- {static} String NOTIFICATION_PREFIX
- {static} String REQUEST_PREFIX
- {static} String RESPONSE_PREFIX
- AtomicLong _id
# void doFilterInternal(HttpServletRequest,HttpServletResponse,FilterChain)
+ void destroy()
- void log(StringBuilder)
- StringBuilder prefixId(StringBuilder,long)
- void printRequestLine(StringBuilder,String,long,String,String)
- void printResponseLine(StringBuilder,String,long,int)
- void printPrefixedHeaders(StringBuilder,long,String,HttpServletRequest)
}
class com.welab.report.configruation.SftpConfiguration {
- String ipAssignment
- Integer portAssignment
- String userNameAssignment
- String passwordAssignment
- String ipTaskFile
- Integer portTaskFile
- String userNameTaskFile
- String passwordTaskFile
- String ipQuiros
- Integer portQuiros
- String userNameQuiros
- String passwordQuiros
+ SftpClient clientCollectionDataAssignment()
+ SftpClient clientCollectionTaskFile()
+ SftpClient clientDataQuiros()
}
interface com.welab.report.mapper.ext.domo.DomoMapper {
~ void batchSaveDomoBase(List<Map<String,Object>>)
~ void batchSaveDomoLoans(List<Map<String,Object>>)
~ void batchSaveDomoClosed(List<Map<String,Object>>)
~ void batchSaveDomoBusinessAnalysisSnapshot(List<Map<String,Object>>)
~ void batchSaveDomoBusinessAnalysisWaterfall(List<Map<String,Object>>)
~ void batchSavedomoProductDashboardCustInsights(List<Map<String,Object>>)
~ void batchSavedomoProductDashboardFunnel(List<Map<String,Object>>)
~ void batchSavedomoProductDashboardPushMessage(List<Map<String,Object>>)
~ void batchSavedomoProductDashboardTatFunnel(List<Map<String,Object>>)
~ void batchSavedomoProductDashboardTatProduct(List<Map<String,Object>>)
~ void deleteDomoBase()
~ void deleteDomoLoans()
~ void deleteDomoClosed()
~ void deleteDomoBusinessAnalysisSnapshot()
~ void deleteDomoBusinessAnalysisWaterfall()
~ void deletedomoProductDashboardCustInsights()
~ void deletedomoProductDashboardFunnel()
~ void deletedomoProductDashboardPushMessage()
~ void deletedomoProductDashboardTatFunnel()
~ void deletedomoProductDashboardTatProduct()
~ void batchSaveDomoClosedForBase()
~ void deleteDomoDueList()
~ void batchSaveDomoDueList(List<Map<String,Object>>)
~ void deletedomoRepayment()
~ void batchSavedomoRepayment(List<Map<String,Object>>)
~ void batchSaveApprovalLoansTrack(List<Map<String,Object>>)
~ void batchSaveLoanOverdueInfo(List<Map<String,Object>>)
~ void batchSaveDomoMessageVcodeLog(List<Map<String,Object>>)
~ String lastOneForDateStr(String)
~ void callDomoMessageVcodeLogPro()
~ void batchSaveDataCenterLoan(List<Map<String,Object>>)
~ void batchSaveDataCenterUser(List<Map<String,Object>>)
~ void insert(String)
~ void batchSaveDomoNsApplyInfo(List<Map<String,Object>>)
~ void batchSaveDomoNsLoanInfo(List<Map<String,Object>>)
~ void batchSaveDomoNsTagInfo(List<Map<String,Object>>)
~ void batchSaveDomoNsUserTagLog(List<Map<String,Object>>)
}
class com.welab.report.job.PremiumAmountReportJob {
- PremiumAmountReportService premiumAmountReportService
+ void execute(ShardingContext)
}
class com.welab.report.domo.DomoGroup {
- {static} List<String> group1
- {static} List<String> group9
- {static} List<String> group10
- {static} List<String> group11
- {static} List<String> group12
- {static} List<String> group2
- {static} List<String> group3
- {static} List<String> group4
- {static} List<String> group5
- {static} List<String> group6
- {static} List<String> group7
- {static} List<String> group8
+ {static} Map<String,List<String>> groupMap
}
class com.welab.report.app.cmd.RepaymentDataReportingCmd {
- ElasticSearchClient elasticSearchClient
- DruidDataSource slaveDataSource
- JdbcTemplate jdbcTemplate
- String ip
- Integer port
- String userName
- String password
+ {static} String SFTP_DIR
~ String[] DateTimeKeys
~ String[] DateKeys
- void init()
+ void exec()
- List<File> createRepayment()
- void processDateTime(JSONObject)
- LinkedHashMap<String,String> getExcelHeadMapForRepayment()
- List<File> createDemografi()
- LinkedHashMap<String,String> getExcelHeadMapForDemografi()
- List<File> createOverDueInfo()
- LinkedHashMap<String,String> getExcelHeadMapForOverDue()
- List<File> createBaseDisburse()
- LinkedHashMap<String,String> getExcelHeadMapForBaseDisburse()
- List<File> createAppLoan()
- LinkedHashMap<String,String> getExcelHeadMap()
}
class com.welab.report.facade.BackstageConfigsServiceFacade {
- BackstageConfigService backstageConfigService
+ String getCacheConfigValue(String)
}
class com.welab.report.domo.TableTool {
- DomoDataSyn domoDataSyn
- JdbcTemplate jdbcTemplate
- DomoMapper domoMapper
- {static} Map<String,List<String>> fileMap
- {static} Map<String,String> insertHeadMap
- {static} Map<String,String> tables
- List<String> getFiles(String)
+ List<Map<String,Object>> select(String,String,String,String)
+ String bulidInserHead(String)
+ void synForTable(String,String,String)
- String bulidSql(String,List<String>,List<Map<String,Object>>)
- String val(Object)
}
class com.welab.report.service.PremiumAmountReportService {
~ List<Pattern> shortList
~ List<Pattern> longList
~ Map<String,String> fixed
~ List<String> shortCodeList
~ List<String> longCodeList
- BasePremiumAmountReportService basePremiumAmountReportService
- EmailSender emailSender
- String appId
+ void exec(String)
# void setProductCode(PremiumAmount,List<Pattern>,List<String>)
}
class com.welab.report.datasource.DynamicDataSourceAspect {
- void init()
+ void dsPointCut()
+ void switchDataSource(JoinPoint)
+ void restoreDataSource(JoinPoint)
}
class com.welab.report.job.GcpQuirosJob {
- AwdaQuirosReportCmdExe awdaQuirosReportCmdExe
+ void execute(ShardingContext)
}
class com.welab.report.test.reportjob.GadaReportTest {
- GadaReportService gadaReportService
+ void sendMonthReport()
+ void sendEmail()
}
class com.welab.report.model.ext.CommonParams {
- Date startDate
- Date endDate
}
class com.welab.report.model.DomoJob {
- Long id
- Date createdAt
- Date updatedAt
- String dateStr
- String jobName
- Integer total
- String excuteTime
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getDateStr()
+ void setDateStr(String)
+ String getJobName()
+ void setJobName(String)
+ Integer getTotal()
+ void setTotal(Integer)
+ String getExcuteTime()
+ void setExcuteTime(String)
}
class com.welab.report.job.DataReportingJob {
- RepaymentDataReportingCmd repaymentDataReportingCmd
+ void execute(ShardingContext)
}
class com.welab.report.test.cmd.AwdaQuirosReportCmdExeTest {
~ AwdaQuirosReportCmdExe awdaQuirosReportCmdExe
~ void saveToGcp()
}


org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource <|-- com.welab.report.datasource.MultiDataSource
com.welab.common.exception.FastRuntimeException <|-- com.welab.report.exception.ReportException
java.io.Serializable <|.. com.welab.report.dto.AccountAssignmentReportDTO
java.io.Serializable <|.. com.welab.report.dto.TaskFileReportDTO
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.report.job.DataReportingCleanJob
com.welab.report.common.Urls +.. com.welab.report.common.Urls$Test
com.welab.report.model.DomoJobExample +.. com.welab.report.model.DomoJobExample$GeneratedCriteria
com.welab.report.model.DomoJobExample +.. com.welab.report.model.DomoJobExample$Criteria
com.welab.report.model.GeneratedCriteria <|-- com.welab.report.model.DomoJobExample$Criteria
com.welab.report.model.DomoJobExample +.. com.welab.report.model.DomoJobExample$Criterion
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.report.job.AwdaDataSyncJob
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.report.job.domo.DomoExcuteJob
com.welab.report.test.SimpleTest <|-- com.welab.report.test.ScaffoldTest
java.io.Serializable <|.. com.welab.report.dto.RoboCallReportDTO
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.report.job.GADAMonthlyReportJob
java.io.Serializable <|.. com.welab.report.dto.CallResultReportDTO
org.springframework.boot.test.context.SpringBootContextLoader <|-- com.welab.report.test.junit.JunitSpringBootContextLoader
com.welab.report.test.junit.JunitSpringBootContextLoader +.. com.welab.report.test.junit.JunitSpringBootContextLoader$WebConfigurer
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.report.job.EmailSendJob
org.springframework.web.filter.OncePerRequestFilter <|-- com.welab.report.filter.LogFilter
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.report.job.PremiumAmountReportJob
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.report.job.GcpQuirosJob
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.report.job.DataReportingJob
@enduml