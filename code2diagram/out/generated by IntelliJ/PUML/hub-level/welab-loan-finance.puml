@startuml
class com.welab.loan.finance.app.command.tb.dues.costreq.impl.TravelokaPayLaterCostReqBuilder {
+ void doBuild(CostReqDTO)
+ String getKey()
}
class com.welab.loan.finance.dto.cmd.tb.FrozenTbUserAccountCmd {
- String partner
- String partnerUserNo
- Long freezeMoney
}
class com.welab.loan.finance.model.DuesExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> DuesExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.DuesExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
# void addCriterionForJDBCDate(String,Date,String)
# void addCriterionForJDBCDate(String,List<Date>,String)
# void addCriterionForJDBCDate(String,Date,Date,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanIdIsNull()
+ Criteria andLoanIdIsNotNull()
+ Criteria andLoanIdEqualTo(String)
+ Criteria andLoanIdNotEqualTo(String)
+ Criteria andLoanIdGreaterThan(String)
+ Criteria andLoanIdGreaterThanOrEqualTo(String)
+ Criteria andLoanIdLessThan(String)
+ Criteria andLoanIdLessThanOrEqualTo(String)
+ Criteria andLoanIdLike(String)
+ Criteria andLoanIdNotLike(String)
+ Criteria andLoanIdIn(List<String>)
+ Criteria andLoanIdNotIn(List<String>)
+ Criteria andLoanIdBetween(String,String)
+ Criteria andLoanIdNotBetween(String,String)
+ Criteria andOrgIdIsNull()
+ Criteria andOrgIdIsNotNull()
+ Criteria andOrgIdEqualTo(Long)
+ Criteria andOrgIdNotEqualTo(Long)
+ Criteria andOrgIdGreaterThan(Long)
+ Criteria andOrgIdGreaterThanOrEqualTo(Long)
+ Criteria andOrgIdLessThan(Long)
+ Criteria andOrgIdLessThanOrEqualTo(Long)
+ Criteria andOrgIdIn(List<Long>)
+ Criteria andOrgIdNotIn(List<Long>)
+ Criteria andOrgIdBetween(Long,Long)
+ Criteria andOrgIdNotBetween(Long,Long)
+ Criteria andDueIndexIsNull()
+ Criteria andDueIndexIsNotNull()
+ Criteria andDueIndexEqualTo(Integer)
+ Criteria andDueIndexNotEqualTo(Integer)
+ Criteria andDueIndexGreaterThan(Integer)
+ Criteria andDueIndexGreaterThanOrEqualTo(Integer)
+ Criteria andDueIndexLessThan(Integer)
+ Criteria andDueIndexLessThanOrEqualTo(Integer)
+ Criteria andDueIndexIn(List<Integer>)
+ Criteria andDueIndexNotIn(List<Integer>)
+ Criteria andDueIndexBetween(Integer,Integer)
+ Criteria andDueIndexNotBetween(Integer,Integer)
+ Criteria andDueDateIsNull()
+ Criteria andDueDateIsNotNull()
+ Criteria andDueDateEqualTo(Date)
+ Criteria andDueDateNotEqualTo(Date)
+ Criteria andDueDateGreaterThan(Date)
+ Criteria andDueDateGreaterThanOrEqualTo(Date)
+ Criteria andDueDateLessThan(Date)
+ Criteria andDueDateLessThanOrEqualTo(Date)
+ Criteria andDueDateIn(List<Date>)
+ Criteria andDueDateNotIn(List<Date>)
+ Criteria andDueDateBetween(Date,Date)
+ Criteria andDueDateNotBetween(Date,Date)
+ Criteria andDueTypeIsNull()
+ Criteria andDueTypeIsNotNull()
+ Criteria andDueTypeEqualTo(String)
+ Criteria andDueTypeNotEqualTo(String)
+ Criteria andDueTypeGreaterThan(String)
+ Criteria andDueTypeGreaterThanOrEqualTo(String)
+ Criteria andDueTypeLessThan(String)
+ Criteria andDueTypeLessThanOrEqualTo(String)
+ Criteria andDueTypeLike(String)
+ Criteria andDueTypeNotLike(String)
+ Criteria andDueTypeIn(List<String>)
+ Criteria andDueTypeNotIn(List<String>)
+ Criteria andDueTypeBetween(String,String)
+ Criteria andDueTypeNotBetween(String,String)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andRepayIndexIsNull()
+ Criteria andRepayIndexIsNotNull()
+ Criteria andRepayIndexEqualTo(Integer)
+ Criteria andRepayIndexNotEqualTo(Integer)
+ Criteria andRepayIndexGreaterThan(Integer)
+ Criteria andRepayIndexGreaterThanOrEqualTo(Integer)
+ Criteria andRepayIndexLessThan(Integer)
+ Criteria andRepayIndexLessThanOrEqualTo(Integer)
+ Criteria andRepayIndexIn(List<Integer>)
+ Criteria andRepayIndexNotIn(List<Integer>)
+ Criteria andRepayIndexBetween(Integer,Integer)
+ Criteria andRepayIndexNotBetween(Integer,Integer)
+ Criteria andSettledAmountIsNull()
+ Criteria andSettledAmountIsNotNull()
+ Criteria andSettledAmountEqualTo(Long)
+ Criteria andSettledAmountNotEqualTo(Long)
+ Criteria andSettledAmountGreaterThan(Long)
+ Criteria andSettledAmountGreaterThanOrEqualTo(Long)
+ Criteria andSettledAmountLessThan(Long)
+ Criteria andSettledAmountLessThanOrEqualTo(Long)
+ Criteria andSettledAmountIn(List<Long>)
+ Criteria andSettledAmountNotIn(List<Long>)
+ Criteria andSettledAmountBetween(Long,Long)
+ Criteria andSettledAmountNotBetween(Long,Long)
+ Criteria andRemainingAmountIsNull()
+ Criteria andRemainingAmountIsNotNull()
+ Criteria andRemainingAmountEqualTo(Long)
+ Criteria andRemainingAmountNotEqualTo(Long)
+ Criteria andRemainingAmountGreaterThan(Long)
+ Criteria andRemainingAmountGreaterThanOrEqualTo(Long)
+ Criteria andRemainingAmountLessThan(Long)
+ Criteria andRemainingAmountLessThanOrEqualTo(Long)
+ Criteria andRemainingAmountIn(List<Long>)
+ Criteria andRemainingAmountNotIn(List<Long>)
+ Criteria andRemainingAmountBetween(Long,Long)
+ Criteria andRemainingAmountNotBetween(Long,Long)
+ Criteria andCapitalCodeIsNull()
+ Criteria andCapitalCodeIsNotNull()
+ Criteria andCapitalCodeEqualTo(String)
+ Criteria andCapitalCodeNotEqualTo(String)
+ Criteria andCapitalCodeGreaterThan(String)
+ Criteria andCapitalCodeGreaterThanOrEqualTo(String)
+ Criteria andCapitalCodeLessThan(String)
+ Criteria andCapitalCodeLessThanOrEqualTo(String)
+ Criteria andCapitalCodeLike(String)
+ Criteria andCapitalCodeNotLike(String)
+ Criteria andCapitalCodeIn(List<String>)
+ Criteria andCapitalCodeNotIn(List<String>)
+ Criteria andCapitalCodeBetween(String,String)
+ Criteria andCapitalCodeNotBetween(String,String)
+ Criteria andIsAdvancedIsNull()
+ Criteria andIsAdvancedIsNotNull()
+ Criteria andIsAdvancedEqualTo(String)
+ Criteria andIsAdvancedNotEqualTo(String)
+ Criteria andIsAdvancedGreaterThan(String)
+ Criteria andIsAdvancedGreaterThanOrEqualTo(String)
+ Criteria andIsAdvancedLessThan(String)
+ Criteria andIsAdvancedLessThanOrEqualTo(String)
+ Criteria andIsAdvancedLike(String)
+ Criteria andIsAdvancedNotLike(String)
+ Criteria andIsAdvancedIn(List<String>)
+ Criteria andIsAdvancedNotIn(List<String>)
+ Criteria andIsAdvancedBetween(String,String)
+ Criteria andIsAdvancedNotBetween(String,String)
+ Criteria andIsKantouFeeIsNull()
+ Criteria andIsKantouFeeIsNotNull()
+ Criteria andIsKantouFeeEqualTo(String)
+ Criteria andIsKantouFeeNotEqualTo(String)
+ Criteria andIsKantouFeeGreaterThan(String)
+ Criteria andIsKantouFeeGreaterThanOrEqualTo(String)
+ Criteria andIsKantouFeeLessThan(String)
+ Criteria andIsKantouFeeLessThanOrEqualTo(String)
+ Criteria andIsKantouFeeLike(String)
+ Criteria andIsKantouFeeNotLike(String)
+ Criteria andIsKantouFeeIn(List<String>)
+ Criteria andIsKantouFeeNotIn(List<String>)
+ Criteria andIsKantouFeeBetween(String,String)
+ Criteria andIsKantouFeeNotBetween(String,String)
+ Criteria andDiscountLateFeeIsNull()
+ Criteria andDiscountLateFeeIsNotNull()
+ Criteria andDiscountLateFeeEqualTo(Long)
+ Criteria andDiscountLateFeeNotEqualTo(Long)
+ Criteria andDiscountLateFeeGreaterThan(Long)
+ Criteria andDiscountLateFeeGreaterThanOrEqualTo(Long)
+ Criteria andDiscountLateFeeLessThan(Long)
+ Criteria andDiscountLateFeeLessThanOrEqualTo(Long)
+ Criteria andDiscountLateFeeIn(List<Long>)
+ Criteria andDiscountLateFeeNotIn(List<Long>)
+ Criteria andDiscountLateFeeBetween(Long,Long)
+ Criteria andDiscountLateFeeNotBetween(Long,Long)
+ Criteria andCouponFeeIsNull()
+ Criteria andCouponFeeIsNotNull()
+ Criteria andCouponFeeEqualTo(Long)
+ Criteria andCouponFeeNotEqualTo(Long)
+ Criteria andCouponFeeGreaterThan(Long)
+ Criteria andCouponFeeGreaterThanOrEqualTo(Long)
+ Criteria andCouponFeeLessThan(Long)
+ Criteria andCouponFeeLessThanOrEqualTo(Long)
+ Criteria andCouponFeeIn(List<Long>)
+ Criteria andCouponFeeNotIn(List<Long>)
+ Criteria andCouponFeeBetween(Long,Long)
+ Criteria andCouponFeeNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andIsCloseIsNull()
+ Criteria andIsCloseIsNotNull()
+ Criteria andIsCloseEqualTo(Boolean)
+ Criteria andIsCloseNotEqualTo(Boolean)
+ Criteria andIsCloseGreaterThan(Boolean)
+ Criteria andIsCloseGreaterThanOrEqualTo(Boolean)
+ Criteria andIsCloseLessThan(Boolean)
+ Criteria andIsCloseLessThanOrEqualTo(Boolean)
+ Criteria andIsCloseIn(List<Boolean>)
+ Criteria andIsCloseNotIn(List<Boolean>)
+ Criteria andIsCloseBetween(Boolean,Boolean)
+ Criteria andIsCloseNotBetween(Boolean,Boolean)
+ Criteria andPlanTypeIsNull()
+ Criteria andPlanTypeIsNotNull()
+ Criteria andPlanTypeEqualTo(Byte)
+ Criteria andPlanTypeNotEqualTo(Byte)
+ Criteria andPlanTypeGreaterThan(Byte)
+ Criteria andPlanTypeGreaterThanOrEqualTo(Byte)
+ Criteria andPlanTypeLessThan(Byte)
+ Criteria andPlanTypeLessThanOrEqualTo(Byte)
+ Criteria andPlanTypeIn(List<Byte>)
+ Criteria andPlanTypeNotIn(List<Byte>)
+ Criteria andPlanTypeBetween(Byte,Byte)
+ Criteria andPlanTypeNotBetween(Byte,Byte)
+ Criteria andLateFeeAmountIsNull()
+ Criteria andLateFeeAmountIsNotNull()
+ Criteria andLateFeeAmountEqualTo(Long)
+ Criteria andLateFeeAmountNotEqualTo(Long)
+ Criteria andLateFeeAmountGreaterThan(Long)
+ Criteria andLateFeeAmountGreaterThanOrEqualTo(Long)
+ Criteria andLateFeeAmountLessThan(Long)
+ Criteria andLateFeeAmountLessThanOrEqualTo(Long)
+ Criteria andLateFeeAmountIn(List<Long>)
+ Criteria andLateFeeAmountNotIn(List<Long>)
+ Criteria andLateFeeAmountBetween(Long,Long)
+ Criteria andLateFeeAmountNotBetween(Long,Long)
+ Criteria andOverAmountIsNull()
+ Criteria andOverAmountIsNotNull()
+ Criteria andOverAmountEqualTo(Long)
+ Criteria andOverAmountNotEqualTo(Long)
+ Criteria andOverAmountGreaterThan(Long)
+ Criteria andOverAmountGreaterThanOrEqualTo(Long)
+ Criteria andOverAmountLessThan(Long)
+ Criteria andOverAmountLessThanOrEqualTo(Long)
+ Criteria andOverAmountIn(List<Long>)
+ Criteria andOverAmountNotIn(List<Long>)
+ Criteria andOverAmountBetween(Long,Long)
+ Criteria andOverAmountNotBetween(Long,Long)
+ Criteria andIsLockIsNull()
+ Criteria andIsLockIsNotNull()
+ Criteria andIsLockEqualTo(Boolean)
+ Criteria andIsLockNotEqualTo(Boolean)
+ Criteria andIsLockGreaterThan(Boolean)
+ Criteria andIsLockGreaterThanOrEqualTo(Boolean)
+ Criteria andIsLockLessThan(Boolean)
+ Criteria andIsLockLessThanOrEqualTo(Boolean)
+ Criteria andIsLockIn(List<Boolean>)
+ Criteria andIsLockNotIn(List<Boolean>)
+ Criteria andIsLockBetween(Boolean,Boolean)
+ Criteria andIsLockNotBetween(Boolean,Boolean)
+ Criteria andIsRecalculateIsNull()
+ Criteria andIsRecalculateIsNotNull()
+ Criteria andIsRecalculateEqualTo(Boolean)
+ Criteria andIsRecalculateNotEqualTo(Boolean)
+ Criteria andIsRecalculateGreaterThan(Boolean)
+ Criteria andIsRecalculateGreaterThanOrEqualTo(Boolean)
+ Criteria andIsRecalculateLessThan(Boolean)
+ Criteria andIsRecalculateLessThanOrEqualTo(Boolean)
+ Criteria andIsRecalculateIn(List<Boolean>)
+ Criteria andIsRecalculateNotIn(List<Boolean>)
+ Criteria andIsRecalculateBetween(Boolean,Boolean)
+ Criteria andIsRecalculateNotBetween(Boolean,Boolean)
+ Criteria andCreditTagIsNull()
+ Criteria andCreditTagIsNotNull()
+ Criteria andCreditTagEqualTo(String)
+ Criteria andCreditTagNotEqualTo(String)
+ Criteria andCreditTagGreaterThan(String)
+ Criteria andCreditTagGreaterThanOrEqualTo(String)
+ Criteria andCreditTagLessThan(String)
+ Criteria andCreditTagLessThanOrEqualTo(String)
+ Criteria andCreditTagLike(String)
+ Criteria andCreditTagNotLike(String)
+ Criteria andCreditTagIn(List<String>)
+ Criteria andCreditTagNotIn(List<String>)
+ Criteria andCreditTagBetween(String,String)
+ Criteria andCreditTagNotBetween(String,String)
}
class com.welab.loan.finance.model.DuesExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.DuesExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
enum com.welab.loan.finance.enums.RepayOriginEnum {
+  NormalRepay
+  SigapRepay
+  CollectionRepay
+  UVFRepay
+  FlexfitRepay
+  BACK_REPAY
+  MANUAL_REPAY
- byte value
- String name
- String desc
- <<Create>> RepayOriginEnum(int,String,String)
+ byte getValue()
+ String getName()
+ String getDesc()
+ {static} List getStatusList()
+ {static} Map<Byte,String> getStrMap()
+ {static} RepayOriginEnum getByName(String)
}
class com.welab.loan.finance.service.credit.CreditUserTagServiceImpl {
- BaseCreditUserAccountService baseCreditUserAccountService
- CreditProductListQryExe creditProductListQryExe
- CreditLoanAmountConfigServiceImpl creditLoanAmountConfigServiceImpl
- CreditUserTagRuleService creditUserTagRuleService
- BaseCreditUserTagService baseCreditUserTagService
- CreditMaxinstallCalculationManager creditMaxinstallCalculationManager
- BaseCreditUserInfoService baseCreditUserInfoService
- CreditActivityAbTestManager creditActivityAbTestManager
- InSuranceDubboServiceFacade inSuranceDubboServiceFacade
- UserProfilesServiceFacade userProfilesServiceFacade
+ List<TagProductVO> getTagProductVOList(CreditUserAccountDTO)
+ Response<CalculationTagAmountVO> calcculationTagAmount(CalculationTagAmountDTO)
+ List<CreditUserTagConfigDTO> getTagProductConfig(String)
+ List<CreditUserTagConfigDTO> getTagProductConfig(UpdateCreditUserAccountVO)
- void initialConfig(JSONObject)
- void putConfig(JSONObject,String)
- Long getUsableMoney(CreditUserAccountExt)
+ Response<Long> getUFIcount()
+ Response<Long> getUFIcountByTag(CreditUserTagListEnum)
+ List<CreditUserTagConfigDTO> getTagProductConfigForCustomer(CreditUserAccountDTO)
}
class com.welab.loan.finance.dto.qry.AdvanceRepaymentQry {
- {static} long serialVersionUID
- Long recordId
- String loanNumber
- List<Long> msgIds
+ <<Create>> AdvanceRepaymentQry()
+ <<Create>> AdvanceRepaymentQry(String)
+ <<Create>> AdvanceRepaymentQry(Long)
}
class com.welab.loan.finance.job.LoanOffLineSignJob {
- BaseLoanService baseLoanService
- ApplicationService applicationService
- FifStoreService fifStoreService
- DisburseService disburseService
- Map<Long,FifBranchDTO> cacheStore
- Integer index
+ void execute(ShardingContext)
+ UserProfileVO getUserInfo(Long)
+ List quaryList(String)
+ LoanSign transform(Object)
+ LinkedHashMap getExcelHead()
+ String getSubject(String)
+ void setEmailUser()
+ void calculatorAdminFee(LoanSign)
+ AdminFeeResp calculator(LoanSign,Boolean)
}
class com.welab.loan.finance.test.SpringTest {
# Logger logger
}
class com.welab.loan.finance.app.service.NsLoanManagementServcie {
}
class com.welab.loan.finance.test.paybills.PayBillsTest {
- BcaPayBillsService bcaPayBillsService
- BniPayBillsService bniPayBillsService
- PayBillsManager payBillsManager
- RechargeBusiService rechargeBusiService
+ void testBca()
+ void testBni()
+ void testGetRechargeInfo()
+ void testGetReversalInfo()
+ void testGetReversal()
+ void testRecharge()
+ void testRefresh()
}
class com.welab.loan.finance.app.command.advance.AdvanceRepaymentQryExe {
- BaseAdvanceMsgListService baseAdvanceMsgListService
- BaseLoanService baseLoanService
+ Response<AdvanceRepaymentDTO> queryAdvanceRepaymentInfo(AdvanceRepaymentQry)
+ Response<Boolean> decideAdvancedEnable(AdvanceRepaymentQry)
+ Response<AdvanceRepaymentDTO> lastRecordByLoanNumber(AdvanceRepaymentQry)
}
interface com.welab.loan.finance.mapper.CreditAccountTrackMapper {
~ long countByExample(CreditAccountTrackExample)
~ int deleteByExample(CreditAccountTrackExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditAccountTrack)
~ int insertSelective(CreditAccountTrack)
~ List<CreditAccountTrack> selectByExample(CreditAccountTrackExample)
~ CreditAccountTrack selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditAccountTrack,CreditAccountTrackExample)
~ int updateByExample(CreditAccountTrack,CreditAccountTrackExample)
~ int updateByPrimaryKeySelective(CreditAccountTrack)
~ int updateByPrimaryKey(CreditAccountTrack)
}
class com.welab.loan.finance.common.FinanceMqConstans {
}
class com.welab.loan.finance.common.FinanceMqConstans$exchange {
+ {static} String DISBURSEMENT_NOTIFY
+ {static} String REPAYMENT_NOTIFY
+ {static} String TB_OVERDUE_NOTIFY
}
class com.welab.loan.finance.common.FinanceMqConstans$queue {
+ {static} String ADVANCE_PAYMENT_QUEUE
}
class com.welab.loan.finance.job.AstrapayJob {
- FinanceTradingExtMapper financeTradingExtMapper
- FinanceTradingMapper financeTradingMapper
# FundAccountInfoService fundAccountInfoService
- LendBusiService lendBusiService
- PayService payService
- BaseFundAccountService baseFundAccountService
- CashFlowStatusService cashFlowStatusService
- TransferConsumer transferConsumer
+ void doExecute(String)
+ void execute(ShardingContext)
}
class com.welab.loan.finance.model.BusinessCalendarsExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> BusinessCalendarsExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.BusinessCalendarsExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
# void addCriterionForJDBCDate(String,Date,String)
# void addCriterionForJDBCDate(String,List<Date>,String)
# void addCriterionForJDBCDate(String,Date,Date,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCalYearIsNull()
+ Criteria andCalYearIsNotNull()
+ Criteria andCalYearEqualTo(Integer)
+ Criteria andCalYearNotEqualTo(Integer)
+ Criteria andCalYearGreaterThan(Integer)
+ Criteria andCalYearGreaterThanOrEqualTo(Integer)
+ Criteria andCalYearLessThan(Integer)
+ Criteria andCalYearLessThanOrEqualTo(Integer)
+ Criteria andCalYearIn(List<Integer>)
+ Criteria andCalYearNotIn(List<Integer>)
+ Criteria andCalYearBetween(Integer,Integer)
+ Criteria andCalYearNotBetween(Integer,Integer)
+ Criteria andCalDayIsNull()
+ Criteria andCalDayIsNotNull()
+ Criteria andCalDayEqualTo(Date)
+ Criteria andCalDayNotEqualTo(Date)
+ Criteria andCalDayGreaterThan(Date)
+ Criteria andCalDayGreaterThanOrEqualTo(Date)
+ Criteria andCalDayLessThan(Date)
+ Criteria andCalDayLessThanOrEqualTo(Date)
+ Criteria andCalDayIn(List<Date>)
+ Criteria andCalDayNotIn(List<Date>)
+ Criteria andCalDayBetween(Date,Date)
+ Criteria andCalDayNotBetween(Date,Date)
+ Criteria andBizDayIsNull()
+ Criteria andBizDayIsNotNull()
+ Criteria andBizDayEqualTo(Boolean)
+ Criteria andBizDayNotEqualTo(Boolean)
+ Criteria andBizDayGreaterThan(Boolean)
+ Criteria andBizDayGreaterThanOrEqualTo(Boolean)
+ Criteria andBizDayLessThan(Boolean)
+ Criteria andBizDayLessThanOrEqualTo(Boolean)
+ Criteria andBizDayIn(List<Boolean>)
+ Criteria andBizDayNotIn(List<Boolean>)
+ Criteria andBizDayBetween(Boolean,Boolean)
+ Criteria andBizDayNotBetween(Boolean,Boolean)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.BusinessCalendarsExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.BusinessCalendarsExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.core.dto.va.UserRepayDTO {
- Long amount
- Long id
}
class com.welab.loan.finance.app.command.tb.lend.TbPayService {
- FinanceTradingManager financeTradingManager
- PayServiceFacade payServiceFacade
- IFundMatchService iFundMatchService
+ FinanceTrading insertTrading(Long,String,long,long,String,String,String,Byte,TradingTypeEnum,FundTradingTypeEnum)
+ void asyncTransfer(FinanceTrading)
+ FundAccount getLoanAccount(String,String)
}
class com.welab.loan.finance.dto.config.FinanceConfigDto {
- Integer id
- Date createdAt
- Date updatedAt
- String category
- String key
- String value
- String createBy
- String updateBy
- Integer sort
- Boolean deleted
- Integer status
- String keyDesc
}
class com.welab.loan.finance.dto.paylater.DuesExtDTO {
- String status
}
class com.welab.loan.finance.model.UvfFileRepaymentExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> UvfFileRepaymentExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.UvfFileRepaymentExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateTimeIsNull()
+ Criteria andCreateTimeIsNotNull()
+ Criteria andCreateTimeEqualTo(Date)
+ Criteria andCreateTimeNotEqualTo(Date)
+ Criteria andCreateTimeGreaterThan(Date)
+ Criteria andCreateTimeGreaterThanOrEqualTo(Date)
+ Criteria andCreateTimeLessThan(Date)
+ Criteria andCreateTimeLessThanOrEqualTo(Date)
+ Criteria andCreateTimeIn(List<Date>)
+ Criteria andCreateTimeNotIn(List<Date>)
+ Criteria andCreateTimeBetween(Date,Date)
+ Criteria andCreateTimeNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andTaskIdIsNull()
+ Criteria andTaskIdIsNotNull()
+ Criteria andTaskIdEqualTo(String)
+ Criteria andTaskIdNotEqualTo(String)
+ Criteria andTaskIdGreaterThan(String)
+ Criteria andTaskIdGreaterThanOrEqualTo(String)
+ Criteria andTaskIdLessThan(String)
+ Criteria andTaskIdLessThanOrEqualTo(String)
+ Criteria andTaskIdLike(String)
+ Criteria andTaskIdNotLike(String)
+ Criteria andTaskIdIn(List<String>)
+ Criteria andTaskIdNotIn(List<String>)
+ Criteria andTaskIdBetween(String,String)
+ Criteria andTaskIdNotBetween(String,String)
+ Criteria andField1IsNull()
+ Criteria andField1IsNotNull()
+ Criteria andField1EqualTo(String)
+ Criteria andField1NotEqualTo(String)
+ Criteria andField1GreaterThan(String)
+ Criteria andField1GreaterThanOrEqualTo(String)
+ Criteria andField1LessThan(String)
+ Criteria andField1LessThanOrEqualTo(String)
+ Criteria andField1Like(String)
+ Criteria andField1NotLike(String)
+ Criteria andField1In(List<String>)
+ Criteria andField1NotIn(List<String>)
+ Criteria andField1Between(String,String)
+ Criteria andField1NotBetween(String,String)
+ Criteria andField2IsNull()
+ Criteria andField2IsNotNull()
+ Criteria andField2EqualTo(String)
+ Criteria andField2NotEqualTo(String)
+ Criteria andField2GreaterThan(String)
+ Criteria andField2GreaterThanOrEqualTo(String)
+ Criteria andField2LessThan(String)
+ Criteria andField2LessThanOrEqualTo(String)
+ Criteria andField2Like(String)
+ Criteria andField2NotLike(String)
+ Criteria andField2In(List<String>)
+ Criteria andField2NotIn(List<String>)
+ Criteria andField2Between(String,String)
+ Criteria andField2NotBetween(String,String)
+ Criteria andField3IsNull()
+ Criteria andField3IsNotNull()
+ Criteria andField3EqualTo(String)
+ Criteria andField3NotEqualTo(String)
+ Criteria andField3GreaterThan(String)
+ Criteria andField3GreaterThanOrEqualTo(String)
+ Criteria andField3LessThan(String)
+ Criteria andField3LessThanOrEqualTo(String)
+ Criteria andField3Like(String)
+ Criteria andField3NotLike(String)
+ Criteria andField3In(List<String>)
+ Criteria andField3NotIn(List<String>)
+ Criteria andField3Between(String,String)
+ Criteria andField3NotBetween(String,String)
+ Criteria andField4IsNull()
+ Criteria andField4IsNotNull()
+ Criteria andField4EqualTo(String)
+ Criteria andField4NotEqualTo(String)
+ Criteria andField4GreaterThan(String)
+ Criteria andField4GreaterThanOrEqualTo(String)
+ Criteria andField4LessThan(String)
+ Criteria andField4LessThanOrEqualTo(String)
+ Criteria andField4Like(String)
+ Criteria andField4NotLike(String)
+ Criteria andField4In(List<String>)
+ Criteria andField4NotIn(List<String>)
+ Criteria andField4Between(String,String)
+ Criteria andField4NotBetween(String,String)
+ Criteria andField5IsNull()
+ Criteria andField5IsNotNull()
+ Criteria andField5EqualTo(String)
+ Criteria andField5NotEqualTo(String)
+ Criteria andField5GreaterThan(String)
+ Criteria andField5GreaterThanOrEqualTo(String)
+ Criteria andField5LessThan(String)
+ Criteria andField5LessThanOrEqualTo(String)
+ Criteria andField5Like(String)
+ Criteria andField5NotLike(String)
+ Criteria andField5In(List<String>)
+ Criteria andField5NotIn(List<String>)
+ Criteria andField5Between(String,String)
+ Criteria andField5NotBetween(String,String)
+ Criteria andField6IsNull()
+ Criteria andField6IsNotNull()
+ Criteria andField6EqualTo(String)
+ Criteria andField6NotEqualTo(String)
+ Criteria andField6GreaterThan(String)
+ Criteria andField6GreaterThanOrEqualTo(String)
+ Criteria andField6LessThan(String)
+ Criteria andField6LessThanOrEqualTo(String)
+ Criteria andField6Like(String)
+ Criteria andField6NotLike(String)
+ Criteria andField6In(List<String>)
+ Criteria andField6NotIn(List<String>)
+ Criteria andField6Between(String,String)
+ Criteria andField6NotBetween(String,String)
}
class com.welab.loan.finance.model.UvfFileRepaymentExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.UvfFileRepaymentExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
enum com.welab.loan.finance.enums.CreditAccountTypeEnums {
+  CASH_LOAN
+  PAY_LATER
+  ALL
- String accountType
- String code
+ {static} CreditAccountTypeEnums getEnumByType(String)
+ {static} String toAccountType(String)
}
class com.welab.loan.finance.rabbitmq.CreditAccountMQConsumer {
- CreditUserAccountServiceImpl creditUserAccountServiceImpl
+ void applyUseCredit(Message)
+ void useCredit(Message)
+ void restoreCredit(Message)
+ void cancelApplyCredit(Message)
}
enum com.welab.loan.finance.core.enums.EventEnum {
+  BeforeLoanInfo
+  AfterLoanInfo
+  AfterTransfer
+  AfterLend
+  AfterRecharge
- String desc
}
interface com.welab.loan.finance.service.ITbLoanQueryService {
~ Response<Long> countTbLoanQry(TbLoanQry)
}
class com.welab.loan.finance.dto.CessieLoanCloseReqDTO {
- String loanNumber
- Long amount
- Date repaymentDate
}
class com.welab.loan.finance.app.base.tb.BaseTbUserService {
- TbUserExtMapper tbUserExtMapper
+ List<TbUser> selectList(TbUserQry)
+ TbUser selectTbUser(String,String)
+ TbUser selectTbUserByNik(String,String)
+ TbUser selectTbUser(Long)
+ List<TbUser> selectTbUser(List<Long>)
+ TbUser selectTbUserByPartnerUserNo(String,String)
+ List<TbUser> selectTbUserByPartnerUserNos(Long,List<String>)
+ int insert(TbUser)
+ List<TbUser> selectList(TBEnum,String,List<String>)
+ String findParterUserDocIdBy(String)
+ long findParterUserIdBy(String)
+ Long count(TbUserQry)
+ List<TbUserCreditAmountDTO> queryTbUserCreditAmount(Long,String,String)
}
class com.welab.loan.finance.job.LoanListExportJob {
- BaseLoanService baseLoanService
- String url
- String fundIdList
- JedisCluster jedisCluster
+ void execute(ShardingContext)
- void delete(Map<String,String>)
+ void setEmailUser()
+ MailDTO buildMail(String)
}
class com.welab.loan.finance.test.dues.DuesAndRepayImportTest {
- DuesAndRepayImportUpdateExe duesAndRepayImportUpdateExe
- DuesAndRepaySaveCmdExe repaySaveCmdExe
+ void testUpload()
+ void testSave()
}
abstract class com.welab.loan.finance.job.base.AbstractExcelEmailJob {
# String path
+ {abstract}List quaryList(String)
+ {abstract}T transform(Object)
+ {abstract}LinkedHashMap getExcelHead()
+ {abstract}String getSubject(String)
+ void postEmailDto(MailDTO)
+ Map<String,String> buildExcel(List<T>)
+ MailDTO buildMail(String)
}
class com.welab.loan.finance.dto.EditRepayConfig {
- Integer id
- Integer status
- Integer sort
}
class com.welab.loan.finance.service.business.lend.fifuvf.FifUvfLendServiceImpl {
- LoanUvfDetailMapper loanUvfDetailMapper
- BNILoanPassKeyManager bniLoanPassKeyManager
+ OrgIdEnum getProductId()
+ TypeEnum getLoanType(String)
+ Response verifyData(String,TypeEnum,LendModeEnum)
+ FinanceLend buildLendRecord(String,TypeEnum,LendModeEnum,boolean)
+ LoanUvfDetail findLoanDetail(String)
+ Long getLoanFundId(String)
+ Boolean repairLoan(String,LendModeEnum)
+ TransferAmountDto getTransferAmount(String,TradingTypeEnum)
+ FinanceLend buildLend(String,TypeEnum,LendModeEnum,boolean)
}
class com.welab.loan.finance.vo.request.LendSaveReq {
- LoanDetail loanDetail
- FinanceUserBankcard userBankcard
- TypeEnum typeEnum
- boolean isKantou
- Long fee
- Long channelFee
- String provisionRate
- boolean isRetry
- Long retryPayAmount
- Long storeId
+ Long getPayAmount()
+ Long getRealAdminFee()
+ Long scheduleAdminFee(ProductCodeEnum)
+ Long scheduleAdminFee()
+ Long getRealProvisionFee()
+ Long getSurplusAmount()
+ {static} void main(String[])
}
class com.welab.loan.finance.app.base.credit.BaseCreditAccountTrackService {
- CreditAccountRemainingTrackMapper creditAccountRemainingTrackMapper
+ void save(CreditAccountRemainingTrack)
}
class com.welab.loan.finance.dto.cmd.ApplyFPlanCmd {
- List<String> loanNumbers
- Integer day
- Double disLateFeeRatio
- Double disPrincipalRatio
- Long optId
- String optName
- Date expireDate
- Integer reason
}
class com.welab.loan.finance.vo.tb.BillingAndNettVatVO {
- String billingNo
- String nettVat
}
class com.welab.loan.finance.vo.tb.HsoLoanExportVO {
- {static} LinkedHashMap<String,String> headMap
- String customerName
- String customerNumber
- Long userId
- String partner
- String loanNumber
- String orderNo
- String docId
- Long invoiceAmount
- Date invoiceDate
- Byte lendStatus
- String lendStatusStr
- Byte repayStatus
- String repayStatusStr
- Long serviceFeeAmount
- String creditControlArea
- String customerAddress
- String spareparts
+ {static} LinkedHashMap<String,String> getHeadmap()
+ String getCustomerName()
+ void setCustomerName(String)
+ String getCustomerNumber()
+ void setCustomerNumber(String)
+ Long getUserId()
+ void setUserId(Long)
+ String getPartner()
+ void setPartner(String)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getOrderNo()
+ void setOrderNo(String)
+ String getDocId()
+ void setDocId(String)
+ Long getInvoiceAmount()
+ void setInvoiceAmount(Long)
+ Date getInvoiceDate()
+ void setInvoiceDate(Date)
+ Byte getLendStatus()
+ void setLendStatus(Byte)
+ String getLendStatusStr()
+ void setLendStatusStr(String)
+ Byte getRepayStatus()
+ void setRepayStatus(Byte)
+ String getRepayStatusStr()
+ void setRepayStatusStr(String)
+ Long getServiceFeeAmount()
+ void setServiceFeeAmount(Long)
+ String getCreditControlArea()
+ void setCreditControlArea(String)
+ String getCustomerAddress()
+ void setCustomerAddress(String)
+ String getSpareparts()
+ void setSpareparts(String)
}
class com.welab.loan.finance.core.dto.RateExtendDto {
- String collectionType
- String feeType
- BigDecimal value
}
enum com.welab.loan.finance.core.dto.FeeTypeEnum {
+  TOTAL_SERVICE_FEE_RATE
+  FUND_INTEREST_EFFECTIVE_RATE
+  PROVISION_FEE_EFFECTIVE_RATE
- String value
- String desc
~ <<Create>> FeeTypeEnum(String,String)
+ String getValue()
+ void setValue(String)
+ String getDesc()
+ void setDesc(String)
}
enum com.welab.loan.finance.core.dto.CollectionTypeEnum {
+  UP_FRONT_FEE
+  REPAY
- String value
- String desc
~ <<Create>> CollectionTypeEnum(String,String)
+ String getValue()
+ void setValue(String)
+ String getDesc()
+ void setDesc(String)
}
class com.welab.loan.finance.test.app.manager.DuesVATFeeMergeManagerTest {
+ void feeMergeDelVAT()
}
class com.welab.loan.finance.job.bca.BcaTransferSyncJob {
- FinanceLendExtMapper lendExtMapper
- FinanceTradingExtMapper tradingExtMapper
- BaseBcaTransferService baseBcaTransferService
+ void execute(ShardingContext)
}
class com.welab.loan.finance.dto.TbCreditUserAccountDTO {
- Long id
- Long userId
- Long sumMoney
- Long useMoney
- Long freezeMoney
- Long availableMoney
- String accountStatus
- Byte status
}
class com.welab.loan.finance.core.dto.overdue.CreditLateDTO {
- Long lateAmount
- Long maxLateFee
- Long orgLateFee
}
class com.welab.loan.finance.app.command.coupon.CheckCouponLoansAbleExe {
- IRepaymentService iRepaymentService
- DuesExtMapper duesExtMapper
- BaseDuesService baseDuesService
+ Response<List<CouponLoansAbleDTO>> checkCouponLoansAble(CouponLoansAbleCmd)
+ Response<List<CouponLoansAbleDTO>> checkCouponLoansAbleForMarketing(CouponLoansAbleCmd)
}
abstract class com.welab.loan.finance.app.service.flow.AbstractFlowComponent {
- FlowTaskTrackManager flowTaskTrackManager
+ {abstract}FlowTaskNodeEnum flowTaskNode()
# {abstract}void process(T)
# boolean isSkipProcess(T)
- void setFlowParamData(FlowTaskTrack)
# V getFlowParamData(String,Class<V>)
# void setFlowParamData(String,V)
- ConcurrentHashMap<String,Object> getFlowParamData()
- String flowParamData2Json()
- void hand()
+ void process()
+ boolean isAccess()
+ boolean isContinueOnError()
- T getRequestData()
}
class com.welab.loan.finance.service.business.repayment.DiscountDuesService {
- <<Create>> DiscountDuesService()
+ {static} Long findRepaymentAmount(List<DiscountDuesDTO>)
+ {static} CouponRepayment findRepaymentAmount(List<DiscountDuesDTO>,Long)
+ {static} List<DiscountDuesDTO> transformDuesListByDefault(List<Dues>)
+ {static} List<DiscountDuesDTO> transformDuesListByAdvance(List<Dues>,BigDecimal)
+ {static} List<DiscountDuesDTO> transformDuesListByDefaultPlan(List<Dues>,PlansTypeEnum)
+ {static} List<DiscountDuesDTO> transformDuesListByPlan(List<Dues>,LoanApplyPlans)
- {static} List<DiscountDuesDTO> transformDuesListByPlan(List<Dues>,LoanApplyPlans,BigDecimal)
+ {static} void disVatFee(List<DiscountDuesDTO>,Dues,Boolean,PlansTypeEnum)
+ {static} void calVatFee(Dues,DiscountDuesDTO,Long,PlansTypeEnum)
+ {static} void disCarryVatFee(List<DiscountDuesDTO>,boolean,Integer)
+ {static} List<DiscountDuesDTO> transformDuesListByCoupon(List<Dues>,LoanCoupon,Set<Integer>)
+ {static} List<DiscountDuesDTO> transformDuesListByCouponCustom(List<Dues>,LoanCoupon,Long,Set<Integer>)
- {static} List<DiscountDuesDTO> transformDuesListByCouponCustomAmount(List<Dues>,LoanCoupon,Long,Set<Integer>)
+ {static} void handleAdvanceApkCarryFee(List<DiscountDuesDTO>,Long)
- {static} Map<Integer,LoanCoupon> calLoanCouponForDueIndex(List<Dues>,LoanCoupon,Set<Integer>)
- {static} void resetAdvanceCoupon(Map<Integer,LoanCoupon>,LoanCoupon)
- {static} LoanCoupon getLastAdvanceCoupon(List<LoanCoupon>,LoanCoupon)
- {static} Map<String,BigDecimal> getAdvanceCouponMap(List<Dues>,Set<Integer>)
- {static} boolean isCessieOreder(Dues)
- {static} boolean isAdvanceApk(Dues)
+ {static} List<Dues> findDeepCopyList(List<Dues>)
+ {static} List<Dues> findDeepCopyListExt(List<Dues>)
+ {static} Long findRepaymentAmountByDefault(List<DiscountDuesDTO>)
+ {static} Long findRepaymentAmountByCustom(List<DiscountDuesDTO>,Long)
- {static} RepayAmountDTO findRepaymentAmountByDefaultOrCustom(List<DiscountDuesDTO>,Long)
+ {static} void printData(List<DiscountDuesDTO>)
- {static} Long findSubAdvanceAmount(Dues,BigDecimal,Boolean,DuesMergeDTO)
- {static} Long findCouponAmount(Dues,LoanCoupon,Long,Set<Integer>)
- {static} void findSetLoanCouponAmount(LoanCoupon,String,Long,boolean)
- {static} DuesMergeDTO findAdvDiscountServiceAmount(BigDecimal,List<Dues>)
- {static} boolean skipCarryFee(Long,String)
}
class com.welab.loan.finance.vo.LoanDayExtVo {
- String loanNumber
- Integer overDay
- Integer closeDay
- Integer totalDay
}
class com.welab.loan.finance.app.command.gateway.GatewayLoanCancelCmdExe {
- QueryTaskService queryTaskService
- BaseLoanDetailService baseLoanDetailService
- MaucashLendServiceImpl iTransferService
- CashFlowStatusService cashFlowStatusService
- BaseFinanceLendService baseFinanceLendService
+ void doCheck(List<String>)
+ CreditLoanCancelEnum.DealStatus doCancel(String)
- void doTransfer(String,TransferDto)
}
class com.welab.loan.finance.app.command.tb.lend.lend.impl.SmpFinanceLendBuilder {
# String getPrefix()
+ String getKey()
}
class com.welab.loan.finance.test.RepaymentServiceTest {
- IRepaymentService iRepaymentService
+ void getRealAmount()
}
class com.welab.loan.finance.service.core.BaseFifUvfService {
- LoanUvfDetailMapper loanUvfDetailMapper
- LoanUvfInputMapper loanUvfInputMapper
- LoanUvfRepaymentMapper loanUvfRepaymentMapper
- LoanUvfDuesMapper loanUvfDuesMapper
- FundAccountInfoService fundAccountInfoService
- LoanUvfDetailExtMapper loanUvfDetailExtMapper
+ PageInfo<LoanUvfDetailExt> findLoanListByPage(UvfLoanDto)
+ long countByExample(LoanUvfDetailExample)
+ LoanUvfDetailExample transLoanMap(UvfLoanDto)
+ LoanUvfDetail findLoanByApplyNo(String,String)
+ List<LoanUvfDetail> findLoanByApplyNoList(List<String>,String)
+ LoanUvfDetail findLoanByContractId(String)
+ LoanUvfDetail findLoanByContractId(String,String)
+ LoanUvfDetail findLoan(String)
+ int updateLoanById(LoanUvfDetail)
+ FifUvfExcelVo findDetailByLoanNumber(String)
+ FifUvfExcelVo findDetailByApplyNo(String)
+ void loanExport(UvfLoanDto,String)
+ List<LoanUvfDetailExt> translatedData(List<LoanUvfDetail>)
+ PageInfo<LoanUvfRepayment> findRepaymentListByPage(UvfRepaymentDto)
+ LoanUvfRepaymentExample transLoanRepaymentMap(UvfRepaymentDto)
+ void loanRepaymentExport(UvfRepaymentDto,String)
+ List<LoanUvfDues> findDuesListByLoanNumber(String)
+ List<LoanUvfDues> findDuesListByContractId(String)
+ List<LoanUvfDues> findDuesListByLoanNumberList(List<String>)
+ PageInfo<LoanUvfDues> findDuesListByPage(UvfDueDto)
+ LoanUvfDuesExample buildLoanUvfDuesExample(UvfDueDto)
+ LoanUvfDetail getUvfDetailByContractId(String)
+ LoanUvfDetail getUvfDetailByContractId(String,String)
+ LoanUvfDetail findOneForNotEqNik(String,String,String)
}
interface com.welab.loan.finance.mapper.OperateLoanDetailExtendFlagHistoryMapper {
~ long countByExample(OperateLoanDetailExtendFlagHistoryExample)
~ int deleteByPrimaryKey(Long)
~ int insert(OperateLoanDetailExtendFlagHistory)
~ int insertSelective(OperateLoanDetailExtendFlagHistory)
~ List<OperateLoanDetailExtendFlagHistory> selectByExample(OperateLoanDetailExtendFlagHistoryExample)
~ OperateLoanDetailExtendFlagHistory selectByPrimaryKey(Long)
~ int updateByExampleSelective(OperateLoanDetailExtendFlagHistory,OperateLoanDetailExtendFlagHistoryExample)
~ int updateByExample(OperateLoanDetailExtendFlagHistory,OperateLoanDetailExtendFlagHistoryExample)
~ int updateByPrimaryKeySelective(OperateLoanDetailExtendFlagHistory)
~ int updateByPrimaryKey(OperateLoanDetailExtendFlagHistory)
}
class com.welab.loan.finance.core.dto.syn.SynCouponDTO {
- String loanNumber
- byte type
- Date lendDate
}
class com.welab.loan.finance.dto.UvfRepaymentDto {
- String loanNumber
- String applyNo
- String contractId
- String secondProCode
- Long adminId
}
class com.welab.loan.finance.app.command.tb.lend.lend.impl.DayaFinanceLendBuilder {
# String getPrefix()
+ String getKey()
}
class com.welab.loan.finance.facade.credit.InsuranceAbTestDubboServiceFacade {
- InsuranceAbTestService insuranceAbTestService
+ InsuranceConfigDTO getPremiumTestGroupSecondProductCodeByLoanNumber(String)
+ InsuranceConfigDTO matchInsuranceConfig(String,String,Long)
}
interface com.welab.loan.finance.service.InvitePeopleService {
~ Response<Boolean> findQualityInvitePeople(Long)
}
class com.welab.loan.finance.service.impl.InsuranceDetailDubboServiceImpl {
- BaseInsuranceDetailService baseInsuranceDetailService
+ InsuranceDetailDTO getInsuranceDetail(String,InsuranceDetailEnum.TypeEnum)
}
class com.welab.loan.finance.dto.qry.TbLoanQry {
- String partner
- List<Byte> lendStatusList
}
interface com.welab.loan.finance.mapper.LoanUvfInputMapper {
~ int countByExample(LoanUvfInputExample)
~ int deleteByExample(LoanUvfInputExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanUvfInput)
~ int insertSelective(LoanUvfInput)
~ List<LoanUvfInput> selectByExampleWithBLOBs(LoanUvfInputExample)
~ List<LoanUvfInput> selectByExample(LoanUvfInputExample)
~ LoanUvfInput selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanUvfInput,LoanUvfInputExample)
~ int updateByExampleWithBLOBs(LoanUvfInput,LoanUvfInputExample)
~ int updateByExample(LoanUvfInput,LoanUvfInputExample)
~ int updateByPrimaryKeySelective(LoanUvfInput)
~ int updateByPrimaryKeyWithBLOBs(LoanUvfInput)
~ int updateByPrimaryKey(LoanUvfInput)
}
interface com.welab.loan.finance.service.CPlanService {
~ Response<Void> sendC1Push(SendC1PushCmd)
~ Response<List<LoanPlansContractDTO>> queryC1PlanContract(C1PlanContractQry)
~ Response<CustomRangeDTO> queryCustomRange(QueryCustomRangeCmd)
~ Response<List<DuesRepayMentDTO>> tryRepayPlanDetail(TryPlanRepaymentDTO)
~ Response<CalCplanRepayDTO> tryCplanRepayment(TryPlanRepaymentDTO)
~ Response<String> createC1LoanPlansContract(CreateC1ContractCmd)
~ Response<Void> repayApplyPlan(ApplyPlanDTO)
~ Response<Void> applyCPlanByNik(BatchApplyCPlanCmd)
~ Response<CustomRangeDTO> queryRepayAmountForCPlan(QueryCPlanAmountCmd)
~ Response<TryRepayCPlanDTO> tryRepayCPlan(TryRepayCPlanCmd)
~ Response repayApplyCPlan(ApplyCPlanCmd)
~ Response createCPlanContracts(CreateCPlanContractCmd)
~ Response repayAmountCheckForCPlan(CheckCPlanCustomAmountCmd)
~ Response tryCPlanForCollection(TryCPlanParamDTO)
~ Response submitCPlanForCollection(TryCPlanParamDTO)
~ Response<TryRepayCPlanLoanDetailDto> tryRepayCPlanLoanDetail(String,Long)
~ Response getAllowJoinCPlanLoan(Long)
+ Response tryCPlanForUser(Long)
}
class com.welab.loan.finance.response.PageBean {
- List<T> data
- Long total
- Integer pageSize
- Integer pageNum
- Integer pages
+ <<Create>> PageBean()
+ <<Create>> PageBean(List<T>,Long,Integer,Integer,Integer)
+ <<Create>> PageBean(Page)
}
class com.welab.loan.finance.core.overdue.LateFeeUpdateService {
- {static} String PREFIX
- DuesCalculationMapper duesCalculationMapper
- CalculatorOverdueJob calculatorOverdueJob
- TbDuesUpdateService tbDuesUpdateService
- IVirtualAccount virtualAccount
- JedisCluster jedisCluster
- Integer hour
+ boolean updateLateFee(Long)
+ boolean updateTbDuesAndLateFee(Long)
- boolean doupdateLateFee(Long)
- boolean isCanUpdate(Long,String)
- boolean isHasUpdated(String)
- String getKey(Long)
}
class com.welab.loan.finance.dto.UvfLoanDto {
- String loanNumber
- Integer status
- String nik
- String mobile
- String applyNo
- String contractId
- Long adminId
- String secondProductCode
}
class com.welab.loan.finance.test.dues.DuesManagerTest {
- DuesTryManager duesTryManager
+ void tryDues()
}
class com.welab.loan.finance.service.core.BaseUserAccountService {
- FinanceUserAccountMapper accountMapper
+ FinanceUserAccount getUserAccount(Long)
+ void initUserAcount(Long)
- BaseUserAccountService getThis()
+ void insertSelective(Long,Long)
}
class com.welab.loan.finance.model.CreditUserAccountStatusLog {
- Long id
- Long userId
- String creditStatus
- String operateAction
- String freezeReason
- Long operateUserId
- String operateUser
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ String getCreditStatus()
+ void setCreditStatus(String)
+ String getOperateAction()
+ void setOperateAction(String)
+ String getFreezeReason()
+ void setFreezeReason(String)
+ Long getOperateUserId()
+ void setOperateUserId(Long)
+ String getOperateUser()
+ void setOperateUser(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.facade.collection.CollectionPlanServiceFacade {
- ICollectionPlanService collectionPlanService
+ CollectionPlanApplyLogDTO getLastApply(Long)
}
interface com.welab.loan.finance.mapper.FinanceConfigMapper {
~ int countByExample(FinanceConfigExample)
~ int deleteByExample(FinanceConfigExample)
~ int deleteByPrimaryKey(Integer)
~ int insert(FinanceConfig)
~ int insertSelective(FinanceConfig)
~ List<FinanceConfig> selectByExample(FinanceConfigExample)
~ FinanceConfig selectByPrimaryKey(Integer)
~ int updateByExampleSelective(FinanceConfig,FinanceConfigExample)
~ int updateByExample(FinanceConfig,FinanceConfigExample)
~ int updateByPrimaryKeySelective(FinanceConfig)
~ int updateByPrimaryKey(FinanceConfig)
}
class com.welab.loan.finance.app.service.flow.repaymentback.VaAmountBackCompont {
- BaseRabbitTemplate baseRabbitTemplate
- UserProfilesServiceFacade profilesServiceFacade
+ void vaAmountGoBack(String,Long)
+ FlowTaskNodeEnum flowTaskNode()
# void process(RepaymentBackFlowContext)
}
class com.welab.loan.finance.helper.PlanHelper {
+ {static} boolean isNotSupport(String)
}
class com.welab.loan.finance.controller.TbController {
- TbUserService tbUserImportService
- TbLoanService tbLoanService
- ToBAgreementService toBAgreementService
- ProductService productService
- TbUserService tbUserService
- TbQueryService tbQueryService
- BaseFinanceDuesService baseFinanceDuesService
+ Response<PageInfo<TbPendRepayVO>> partnerMultipleRepayment(String,Long,MulRepaymentDTO)
+ Response disbursementExport(Long,String,TbDisbursementQry)
+ Response repaymentExport(Long,TbRepaymentQry)
+ Response loanExport(Long,TravelokaLoanQry)
+ Response duesExport(Long,TbDuesQry)
}
class com.welab.loan.finance.model.LoanApplyPlans {
- Long id
- String loanNumber
- Integer dueIndex
- Byte type
- Byte triggerType
- Long applyUserId
- Long reason
- BigDecimal disDownPaymentRatio
- BigDecimal disAdminFeeRatio
- BigDecimal disServiceFeeRatio
- BigDecimal disPrincipalRatio
- BigDecimal disLateFeeRatio
- Long minRepaymentAmount
- Integer day
- Byte status
- Date createdAt
- Date updatedAt
- Date expireAt
- String optName
- String remark
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Integer getDueIndex()
+ void setDueIndex(Integer)
+ Byte getType()
+ void setType(Byte)
+ Byte getTriggerType()
+ void setTriggerType(Byte)
+ Long getApplyUserId()
+ void setApplyUserId(Long)
+ Long getReason()
+ void setReason(Long)
+ BigDecimal getDisDownPaymentRatio()
+ void setDisDownPaymentRatio(BigDecimal)
+ BigDecimal getDisAdminFeeRatio()
+ void setDisAdminFeeRatio(BigDecimal)
+ BigDecimal getDisServiceFeeRatio()
+ void setDisServiceFeeRatio(BigDecimal)
+ BigDecimal getDisPrincipalRatio()
+ void setDisPrincipalRatio(BigDecimal)
+ BigDecimal getDisLateFeeRatio()
+ void setDisLateFeeRatio(BigDecimal)
+ Integer getDay()
+ void setDay(Integer)
+ Byte getStatus()
+ void setStatus(Byte)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Date getExpireAt()
+ void setExpireAt(Date)
+ String getOptName()
+ void setOptName(String)
+ String getRemark()
+ void setRemark(String)
+ Long getMinRepaymentAmount()
+ void setMinRepaymentAmount(Long)
}
enum com.welab.loan.finance.enums.OrderTypeEnums {
+  CREDIT_APPLY
- Integer orderType
}
class com.welab.loan.finance.vo.FinanceProductRateConfigVO {
- String controlGroupSecondProdCode
}
enum com.welab.loan.finance.enums.UserAdvanceStatusEnum {
+  OPEN
+  PENDING
+  EXPIRED
+  CLOSED
- byte status
~ <<Create>> UserAdvanceStatusEnum(byte)
+ byte getStatus()
}
class com.welab.loan.finance.core.dto.syn.SynEventDTO {
- Long orgId
- Object object
- Object data
- EventEnum eventEnum
}
class com.welab.loan.finance.model.CreditBigFieldRelation {
- Long id
- Date createdAt
- Date updatedAt
- String content
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getContent()
+ void setContent(String)
}
enum com.welab.loan.finance.enums.AdvanceMsgStatusEnum {
+  INIT
+  ENABLE
+  REPAYMENTED
+  INVALIDATIONED
- Byte status
- String desc
}
interface com.welab.loan.finance.service.InsuranceDetailDubboService {
~ InsuranceDetailDTO getInsuranceDetail(String,InsuranceDetailEnum.TypeEnum)
}
class com.welab.loan.finance.dto.paylater.PayLaterLoanReqDTO {
- Integer pageNum
- Integer pageSize
- Long userId
- String loanNumbers
- String orderStatus
- String orderNos
- String origin
}
class com.welab.loan.finance.core.repayment.MultiRepaymentTemplate {
- MultipleRepayDTO repay
- JedisCluster jedisCluster
- ILoanUserRepay iLoanUserRepay
- IUserRepayAmount iUserRepayAmount
- BaseLoanUserRepayService loanUserRepayService
- FlexifitWhiteDubboService flexifitWhiteService
- LoanDetailMapper detailMapper
- BaseDuesService baseDuesService
- LoanCessieInfoService loanCessieInfoService
- EPlanAdvanceCloseNotifyCmdExe ePlanCloseNotifyCmdExe
- BaseRabbitTemplate baseRabbitTemplate
- IAccountService accountService
- AbnormalRepaymentRecord abnormalRepaymentRecord
- PayBillsManager payBillsManager
- Long accountAmount
- List<String> loans
- List<UserRepayAmountDTO> repayList
- JSONObject vaCacheData
- Long syncVaId
- List<PlansTypeEnum> planTypeEnumList
- BaseAbnormalRepaymentRecordService abnormalRepaymentRecordService
+ <<Create>> MultiRepaymentTemplate(MultipleRepayDTO)
+ boolean multRepayment()
- void doSaveAbnormal()
- void doInitAbnormalRepay()
- void abnormalRepayment()
- boolean doBefore()
- void readyFixVaAmount()
- boolean beforeVerify()
- boolean beforeAccount()
- boolean beforeFindLoans()
- boolean beforeAssignRepayAmount()
- List<UserRepayRangeDTO> getTravelokaRepay()
- void beforeSetDefault()
- boolean doMultiRepayment()
- void findRepaymentPlan(PlansTypeEnum)
- List<Long> findFasPayFeeList()
- void doAfter()
- void refreshPayBill()
- void notifyEplan()
- void cleanVaCache()
# void delLoanUserRepay()
# void restAccount()
# void notifyCredit()
# void notifyFlexFit()
- void synDuesData()
- void notifyBatchFPlan()
- LoanApplyPlansExample buildLoanApplyPlansExample(List<String>,PlansTypeEnum,ApplyRepaymentStatusEnum)
- void cessienSynData()
}
enum com.welab.loan.finance.enums.RepayStatusEnum {
+  INIT
+  REPAYING
+  OVERDUE
+  CLOSE
+  RESTRUCTURE
+  REBOOK
+  DPD_GT_150
~ Byte value
~ String name
~ String enName
+ {static} List<Byte> CLOSE_STATUS_LIST
- <<Create>> RepayStatusEnum(int,String,String)
+ Byte getValue()
+ String getName()
+ String getEnName()
+ {static} String getRepayStatusEnumStr(Byte)
+ {static} Map getStatusMap(boolean)
+ {static} List getStatusList(boolean)
+ {static} boolean getIsRepaySucc(Byte)
+ {static} boolean getIsLendSucc(Byte)
}
interface com.welab.loan.finance.mapper.LoanCreditRuleMapper {
~ long countByExample(LoanCreditRuleExample)
~ int deleteByExample(LoanCreditRuleExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanCreditRule)
~ int insertSelective(LoanCreditRule)
~ List<LoanCreditRule> selectByExampleWithBLOBs(LoanCreditRuleExample)
~ List<LoanCreditRule> selectByExample(LoanCreditRuleExample)
~ LoanCreditRule selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanCreditRule,LoanCreditRuleExample)
~ int updateByExampleWithBLOBs(LoanCreditRule,LoanCreditRuleExample)
~ int updateByExample(LoanCreditRule,LoanCreditRuleExample)
~ int updateByPrimaryKeySelective(LoanCreditRule)
~ int updateByPrimaryKeyWithBLOBs(LoanCreditRule)
~ int updateByPrimaryKey(LoanCreditRule)
}
class com.welab.loan.finance.facade.application.CooperationUserServiceFacade {
- CooperationUserService cooperationUserService
+ boolean isFlexifitAndSelectYES(Long)
}
class com.welab.loan.finance.service.core.BaseUvfFileService {
- UvfFileTaskMapper uvfFileTaskMapper
- UvfFileLoanMapper uvfFileLoanMapper
- UvfFileRepaymentDetailMapper detailMapper
- UvfFileRepaymentMapper repaymentMapper
- UvfFileRepaymentPkkfrekapMapper pkkfrekapMapper
- ReportDetailContractMapper reportDetailContractMapper
+ UvfFileTask getOneByFileName(String)
+ boolean saveTask(UvfFileTask)
+ void saveLoan(UvfFileLoan)
+ UvfFileLoan getLoanByNo(String)
+ void updateLoan(UvfFileLoan)
+ void saveRepaymentDetail(List<UvfFileRepaymentDetail>)
+ void saveRepayment(List<UvfFileRepayment>)
+ void saveRepaymentPkk(List<UvfFileRepaymentPkkfrekap>)
+ void saveContracts(List<ReportDetailContract>)
}
interface com.welab.loan.finance.service.business.event.ICallbackEvent {
~ void trigger(Long,Object,EventEnum)
~ void trigger(Long,Object,EventEnum,Object)
}
class com.welab.loan.finance.vo.CalculationTagAmountVO {
- String tag
- Long cashLoanAmount
- Long payLaterAmount
}
class com.welab.loan.finance.vo.RepayTrackVo {
- String loanNumber
- Date repaymentAt
- Long repaymentAmount
- Long repayUnPayAmount
- Byte fundType
- String bankCode
- Byte type
- Long storeId
- Long lateTotalAmount
- String channel
}
class com.welab.loan.finance.app.manager.dues.DuesVATFeeMergeManager {
+ {static} void feeMergeDelVATExt(List<DuesExtItem>)
+ {static} void feeMergeDelVAT(List<Dues>)
+ {static} void feeMerge(Dues,Dues)
- {static} String getKey(Dues,String)
}
class com.welab.loan.finance.core.account.AccountServiceImpl {
- FinanceUserAccountMapper accountMapper
- FinanceUserAccountDetailMapper accountDetailMapper
- FinanceUserAccountBalanceBakMapper financeUserAccountBalanceBakMapper
- BaseFinanceUserAccountBalanceBakService baseFinanceUserAccountBalanceBakService
- JedisCluster jedisCluster
+ void initAccount(Long)
+ Long getAccountAmount(Long)
+ boolean rechargeAccountAmount(Account)
+ FinanceUserAccount findAccount(Long)
# int countAccount(Long)
- boolean rechargeAccount(Account)
+ boolean chargeAccountAmount(Account)
+ void findUserBalanceAndUpdate(Long)
}
class com.welab.loan.finance.model.ReportDetailContract {
- Long id
- Date createdAt
- Date updatedAt
- Boolean deleted
- String applNo
- String applDate
- String contractNo
- String contractActiveDate
- String custNo
- String custName
- String bussUnit
- String sipGrade
- String coriGrade
- String objBrand
- String intrType
- String pctEff
- String advArrear
- String roType
- String objDesc
- String promoDtlId
- String periode
- String ltv
- String bpkbSameName
- String flagAwda
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ String getApplNo()
+ void setApplNo(String)
+ String getApplDate()
+ void setApplDate(String)
+ String getContractNo()
+ void setContractNo(String)
+ String getContractActiveDate()
+ void setContractActiveDate(String)
+ String getCustNo()
+ void setCustNo(String)
+ String getCustName()
+ void setCustName(String)
+ String getBussUnit()
+ void setBussUnit(String)
+ String getSipGrade()
+ void setSipGrade(String)
+ String getCoriGrade()
+ void setCoriGrade(String)
+ String getObjBrand()
+ void setObjBrand(String)
+ String getIntrType()
+ void setIntrType(String)
+ String getPctEff()
+ void setPctEff(String)
+ String getAdvArrear()
+ void setAdvArrear(String)
+ String getRoType()
+ void setRoType(String)
+ String getObjDesc()
+ void setObjDesc(String)
+ String getPromoDtlId()
+ void setPromoDtlId(String)
+ String getPeriode()
+ void setPeriode(String)
+ String getLtv()
+ void setLtv(String)
+ String getBpkbSameName()
+ void setBpkbSameName(String)
+ String getFlagAwda()
+ void setFlagAwda(String)
}
enum com.welab.loan.finance.enums.ProductTypeEnum {
+  MAUCASH
+  CASH_LOAN_USED
+  ASTRA_PAY_USED
+  TAPP
+  TRAVELOKA
+  HSO
+  RESTOCK
+  AOP
+  TRIO
+  MAUMODAL
- Byte type
- String displayName
+ {static} String MAUCASH_TYPE
+ {static} String CASH_LOAN_AND_PAYLATER_TYPE
+ {static} String getName(Byte)
+ {static} ProductTypeEnum getByType(Byte)
+ {static} byte productTypeByLoanNumber(String)
}
interface com.welab.loan.finance.mapper.ext.FPlanExtMapper {
~ int countForApplying(long)
}
class com.welab.loan.finance.core.repayment.SingleRepaymentTemplate {
- SingleRepayDTO repay
- LoanDetailMapper loanDetailMapper
- IAccountService accountService
- IQueryDuesService queryDuesService
- IRepaymentService repaymentService
- ActivityDubboService activityDubboService
- DuesMapper duesMapper
- LoanApplyPlansMapper loanApplyPlansMapper
- LoanPlansLogMapper loanPlansLogMapper
- LoanPlansRelationMapper loanPlansRelationMapper
- LoanCouponMapper loanCouponMapper
- LoanCouponDetailMapper loanCouponDetailMapper
- LoanStatusNoticService loanStatusNoticService
- FinanceRepaymentTrackMapper trackMapper
- FundService fundService
- ApplicationService applicationService
- DocumentService documentService
- EPlanService ePlanService
- BaseRabbitTemplate baseRabbitTemplate
- MessageProducer messageProducer
- LoanOverdueInfoMapper loanOverdueInfoMapper
- CreditUserAccountService creditUserAccountService
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- BaseLoanRepaymentService baseLoanRepaymentService
- RebookTimeLimitCmdExe rebookTimeLimitCmdExe
- DuesService duesService
- ApolloUtils apolloUtils
- LoanDetail loanDetail
- LoanDetailExtend extend
- Long accountAmount
- List<Dues> allRepaymentDues
- List<DeductDuesDTO> deductDuesList
- BaseRepaymentAmountInfoVo repaymentAmountInfo
- Boolean isRealAdvance
- LoanCoupon loanCoupon
- LoanApplyPlans loanApplyPlans
- PlansTypeEnum plansTypeEnum
- LoanPlansRelation loanPlansRelation
- Long includeAWDAAmount
- EPlanTransferCmdExe ePlanTransferCmdExe
- LoanPlansRelationDTO plansRelDTO
- DeductDetailDTO deductDetailDTO
- LoanStatusNoticDTO loanStatusNoticDTO
- TbRepaymentNotifyService tbRepaymentNotifyService
- List<Dues> remainDuesList
- VatCostProvider vatCostProvider
- boolean isAdvanceAPK
+ SingleRepaymentTemplate buildData(SingleRepayDTO,BaseRabbitTemplate,IAccountService)
+ void clear()
+ boolean repayment()
+ PlansTypeEnum findUserRepayPlan()
# boolean doBefore()
- boolean beforeLoanDetail()
- boolean beforeDues()
# boolean doRepayment()
# void doNotify()
# void doAfter()
- void doReady()
- void doDeduct()
- void doTransform()
- void doCoupon()
- void doDues()
- String getUserTag()
- void doPlan()
- void doTrack()
- void doLoanRepayment()
- void doAccount()
- void doUnDeduct()
- void doCloseDues()
- void doDetail()
- void doOverDue()
- void updateTravelokaPaylaterDpd()
- void doRestoreCredit()
- void newAddRepaymentTrack(DuesMergeDTO,Long)
- void notifyApplication()
- void notifyCollection()
- void notifyPlan()
- void notifyMessage()
- void notifyAdvanceApk()
- void invalidAdvanceApk()
- void notifyContract()
- void invalidCoupon()
- void notifyFund()
- void invalidAdvLetter()
- void notifyTb()
- LoanDetail findLoanDetail(String)
- LoanDetailExtend findLoanDetailExtend(String)
- void addLoanCouponDetail(List<LoanCouponDetail>,String,CouponStatusEnum)
- void saveDues(Dues)
- void loanStatusNotice(LoanStatusNoticDTO)
- LoanApplyPlans findApplyPlan(String,PlansTypeEnum)
- LoanPlansRelation findLoanPlansRelation(String)
- LoanCoupon findLoanCoupon(String)
- List<LoanCouponDetail> findAllUserCoupon(String)
- void saveLoanCoupon(LoanCoupon)
- LoanPlansRelationDTO saveLoanApplyPlansByAll()
- void addLoanPlanLog(List<LoanPlansLog>,Byte,PlansStatusEnum)
- void sendTransferToAWDA()
}
class com.welab.loan.finance.uvf.ParseConfig {
+ {static} LinkedHashMap<String,Integer> AGUNAN
+ {static} LinkedHashMap<String,Integer> CIF
+ {static} LinkedHashMap<String,Integer> CIF2
+ {static} LinkedHashMap<String,Integer> FINANCIAL
+ {static} LinkedHashMap<String,Integer> SIPD
}
class com.welab.loan.finance.dto.cmd.tb.TbLendCallbackCmd {
- {static} long serialVersionUID
- String batchNo
- String transId
- Date lendTime
}
class com.welab.loan.finance.vo.LoanTimeoutConfigVo {
- {static} long serialVersionUID
- String productCode
- Integer unconfirm
- Integer untake
- Boolean whetherExistOrigin
- String origin
}
class com.welab.loan.finance.dto.cmd.AdvanceRepaymentStartCmd {
- {static} long serialVersionUID
- Long advanceRepaymentId
- Long userId
}
class com.welab.loan.finance.app.command.tb.lend.transfer.TbTransferServiceProvider {
}
class com.welab.loan.finance.utils.Formulas {
+ {static} int ROUND
+ {static} BigDecimal pmt(BigDecimal,int,BigDecimal,BigDecimal,int)
+ {static} BigDecimal ipmt(BigDecimal,int,int,BigDecimal,BigDecimal,int)
+ {static} BigDecimal ppmt(BigDecimal,int,int,BigDecimal,BigDecimal,int)
+ {static} BigDecimal fv(BigDecimal,int,BigDecimal,BigDecimal,int)
- {static} BigDecimal onePlusPrPowNper(BigDecimal,int)
- {static} BigDecimal prMultiplyTypePlusone(BigDecimal,int)
}
class com.welab.loan.finance.core.dto.transform.LoanInfoDTO {
- String loanNumber
- String productName
- Date dueDate
- Long amount
- Long creditAmount
- String period
- Integer type
- boolean display
- Integer curDueIndex
- Integer totalDueIndex
- String secondProdCode
- Long lateFee
- Long dueAmount
- String activityCode
- String discountsDesc
- Long orgAmount
- Boolean isOver
- Integer overdueDays
- Byte planType
- Long planExpiredTime
- String customRepayStatus
}
class com.welab.loan.finance.core.mq.MqConstants {
}
class com.welab.loan.finance.core.mq.MqConstants$queue {
+ {static} String PAYMENT
+ {static} String TRANSFER
+ {static} String RECHARGE
+ {static} String FLEXFIT
+ {static} String LOANS_INFO
+ {static} String LOANS_REJECT
+ {static} String LOANS_WAIT_STATUS
+ {static} String COUPON_EXPIRED
+ {static} String BANKCARD_CHANGE
+ {static} String USER_TAG_CHANGE
+ {static} String USER_TAG_CHANGE_TEMP
+ {static} String USER_TAG_CHANGE_FOR_DPD
+ {static} String USER_TAG_CHANGE_FOR_DPD_TEMP
+ {static} String TB_USER_CREDIT_CHANGE_FOR_DPD
+ {static} String CREDIT_FREEZE
+ {static} String CREDIT_FREEZE_TEMP
+ {static} String CREDIT_FREEZE_List
+ {static} String CREDIT_FREEZE_List_TEMP
+ {static} String USER_ACCOUNT_RE_CHECK
+ {static} String USER_ACCOUNT_RE_CHECK_TEMP
+ {static} String CREDIT_OLD_USER_CHANGE
+ {static} String CREDIT_OLD_USER_CHANGE_TEMP
+ {static} String CREATE_OR_UPDATE_VA
+ {static} String WELAB_SEA_APPLICATION_DATA_FIXED
+ {static} String WELAB_SEA_FINANCE_CREDIT_ACCOUNT_TRACK
+ {static} String WELAB_SEA_FINANCE_CREDIT_ACCOUNT_TRACK_TEMP
+ {static} String SYN_ACCOUNT
+ {static} String SYN_DUES
+ {static} String SYN_COUPON
+ {static} String RECOVERY
+ {static} String LATE_FEE_MODIFY
+ {static} String SYN_TRANSFER
+ {static} String SYN_EVENT
+ {static} String SYN_DELAY
+ {static} String WELCOME_CALL_LOANS_FINANCE
+ {static} String WELCOME_CALL_LOANS_APPROVAL
+ {static} String CREDIT_MIGRATE_USER
+ {static} String CREDIT_MIGRATE_USER_TEMP
+ {static} String USER_MIGRATE
+ {static} String CREDIT_APPLY
+ {static} String CREDIT_APPLY_TEMP
+ {static} String CREDIT_USE
+ {static} String CREDIT_USE_TEMP
+ {static} String CREDIT_RESTORE
+ {static} String CREDIT_RESTORE_TEMP
+ {static} String CREDIT_CANCEL
+ {static} String CREDIT_CANCEL_TEMP
+ {static} String INVALID_ADV_LETTER
+ {static} String INVALID_NO_ENABLE_ADV_LETTER
+ {static} String AHASS_SIGN_UP_TIMEOUT_QUEUE
+ {static} String F_PLAN_CLOSE
+ {static} String F_PLAN_OPEN
+ {static} String AHASS_REPAYMENT_QUEUE
+ {static} String AHASS_LOAN_SUCCESS_QUEUE
+ {static} String AOP_REPAYMENT_QUEUE
+ {static} String AOP_LOAN_SUCCESS_QUEUE
+ {static} String USER_TAG_CHANGE_SUCCSESS_NOTIFY
+ {static} String SYN_CONTRACT_TO_BILLING
+ {static} String SYN_USER_BALANCE
}
class com.welab.loan.finance.core.mq.MqConstants$exchange {
+ {static} String RECHARGE
+ {static} String TRANSFER
+ {static} String PAYMENT
+ {static} String CASHIER_REJECTED
+ {static} String SYN_DELAY
+ {static} String OVER_DAY
+ {static} String OVERDUE_TASK_COMPLETED
+ {static} String USER_ADVANCE_PAYMENT_EXCHANG
}
class com.welab.loan.finance.app.command.tb.repayment.FlexRepaymentImportCmdExe {
- BaseLoanService baseLoanService
- IAccountService accountService
- BaseDuesService baseDuesService
+ Response<FlexRepaymentResult> excute(RepaymentImportCmd)
+ Response doExcute(List<FlexRepaymentDto>)
- void repayment(LoanDetail,long)
+ String[] getFields()
}
class com.welab.loan.finance.vo.credit.CreditActivityAbTestRequestVo {
- Date fromDate
- Date toDate
- Integer sortBy
- String searchInput
- String activityStatus
}
class com.welab.loan.finance.service.other.FifStoreService {
- FifBranchesService fifBranchesService
+ FifBranchDTO findStoreById(Long)
+ FifBranchDTO findCacheStoreById(Map<Long,FifBranchDTO>,Long)
}
class com.welab.loan.finance.model.FinanceLendExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FinanceLendExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FinanceLendExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andOrgIdIsNull()
+ Criteria andOrgIdIsNotNull()
+ Criteria andOrgIdEqualTo(Long)
+ Criteria andOrgIdNotEqualTo(Long)
+ Criteria andOrgIdGreaterThan(Long)
+ Criteria andOrgIdGreaterThanOrEqualTo(Long)
+ Criteria andOrgIdLessThan(Long)
+ Criteria andOrgIdLessThanOrEqualTo(Long)
+ Criteria andOrgIdIn(List<Long>)
+ Criteria andOrgIdNotIn(List<Long>)
+ Criteria andOrgIdBetween(Long,Long)
+ Criteria andOrgIdNotBetween(Long,Long)
+ Criteria andIsPayAdminfeeIsNull()
+ Criteria andIsPayAdminfeeIsNotNull()
+ Criteria andIsPayAdminfeeEqualTo(Boolean)
+ Criteria andIsPayAdminfeeNotEqualTo(Boolean)
+ Criteria andIsPayAdminfeeGreaterThan(Boolean)
+ Criteria andIsPayAdminfeeGreaterThanOrEqualTo(Boolean)
+ Criteria andIsPayAdminfeeLessThan(Boolean)
+ Criteria andIsPayAdminfeeLessThanOrEqualTo(Boolean)
+ Criteria andIsPayAdminfeeIn(List<Boolean>)
+ Criteria andIsPayAdminfeeNotIn(List<Boolean>)
+ Criteria andIsPayAdminfeeBetween(Boolean,Boolean)
+ Criteria andIsPayAdminfeeNotBetween(Boolean,Boolean)
+ Criteria andIsPayChannelfeeIsNull()
+ Criteria andIsPayChannelfeeIsNotNull()
+ Criteria andIsPayChannelfeeEqualTo(Boolean)
+ Criteria andIsPayChannelfeeNotEqualTo(Boolean)
+ Criteria andIsPayChannelfeeGreaterThan(Boolean)
+ Criteria andIsPayChannelfeeGreaterThanOrEqualTo(Boolean)
+ Criteria andIsPayChannelfeeLessThan(Boolean)
+ Criteria andIsPayChannelfeeLessThanOrEqualTo(Boolean)
+ Criteria andIsPayChannelfeeIn(List<Boolean>)
+ Criteria andIsPayChannelfeeNotIn(List<Boolean>)
+ Criteria andIsPayChannelfeeBetween(Boolean,Boolean)
+ Criteria andIsPayChannelfeeNotBetween(Boolean,Boolean)
+ Criteria andModeIsNull()
+ Criteria andModeIsNotNull()
+ Criteria andModeEqualTo(Byte)
+ Criteria andModeNotEqualTo(Byte)
+ Criteria andModeGreaterThan(Byte)
+ Criteria andModeGreaterThanOrEqualTo(Byte)
+ Criteria andModeLessThan(Byte)
+ Criteria andModeLessThanOrEqualTo(Byte)
+ Criteria andModeIn(List<Byte>)
+ Criteria andModeNotIn(List<Byte>)
+ Criteria andModeBetween(Byte,Byte)
+ Criteria andModeNotBetween(Byte,Byte)
+ Criteria andMobileIsNull()
+ Criteria andMobileIsNotNull()
+ Criteria andMobileEqualTo(String)
+ Criteria andMobileNotEqualTo(String)
+ Criteria andMobileGreaterThan(String)
+ Criteria andMobileGreaterThanOrEqualTo(String)
+ Criteria andMobileLessThan(String)
+ Criteria andMobileLessThanOrEqualTo(String)
+ Criteria andMobileLike(String)
+ Criteria andMobileNotLike(String)
+ Criteria andMobileIn(List<String>)
+ Criteria andMobileNotIn(List<String>)
+ Criteria andMobileBetween(String,String)
+ Criteria andMobileNotBetween(String,String)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andChannelFeeIsNull()
+ Criteria andChannelFeeIsNotNull()
+ Criteria andChannelFeeEqualTo(Long)
+ Criteria andChannelFeeNotEqualTo(Long)
+ Criteria andChannelFeeGreaterThan(Long)
+ Criteria andChannelFeeGreaterThanOrEqualTo(Long)
+ Criteria andChannelFeeLessThan(Long)
+ Criteria andChannelFeeLessThanOrEqualTo(Long)
+ Criteria andChannelFeeIn(List<Long>)
+ Criteria andChannelFeeNotIn(List<Long>)
+ Criteria andChannelFeeBetween(Long,Long)
+ Criteria andChannelFeeNotBetween(Long,Long)
+ Criteria andOtherFeeIsNull()
+ Criteria andOtherFeeIsNotNull()
+ Criteria andOtherFeeEqualTo(Long)
+ Criteria andOtherFeeNotEqualTo(Long)
+ Criteria andOtherFeeGreaterThan(Long)
+ Criteria andOtherFeeGreaterThanOrEqualTo(Long)
+ Criteria andOtherFeeLessThan(Long)
+ Criteria andOtherFeeLessThanOrEqualTo(Long)
+ Criteria andOtherFeeIn(List<Long>)
+ Criteria andOtherFeeNotIn(List<Long>)
+ Criteria andOtherFeeBetween(Long,Long)
+ Criteria andOtherFeeNotBetween(Long,Long)
+ Criteria andProvisionFeeIsNull()
+ Criteria andProvisionFeeIsNotNull()
+ Criteria andProvisionFeeEqualTo(Long)
+ Criteria andProvisionFeeNotEqualTo(Long)
+ Criteria andProvisionFeeGreaterThan(Long)
+ Criteria andProvisionFeeGreaterThanOrEqualTo(Long)
+ Criteria andProvisionFeeLessThan(Long)
+ Criteria andProvisionFeeLessThanOrEqualTo(Long)
+ Criteria andProvisionFeeIn(List<Long>)
+ Criteria andProvisionFeeNotIn(List<Long>)
+ Criteria andProvisionFeeBetween(Long,Long)
+ Criteria andProvisionFeeNotBetween(Long,Long)
+ Criteria andAstraFeeIsNull()
+ Criteria andAstraFeeIsNotNull()
+ Criteria andAstraFeeEqualTo(Long)
+ Criteria andAstraFeeNotEqualTo(Long)
+ Criteria andAstraFeeGreaterThan(Long)
+ Criteria andAstraFeeGreaterThanOrEqualTo(Long)
+ Criteria andAstraFeeLessThan(Long)
+ Criteria andAstraFeeLessThanOrEqualTo(Long)
+ Criteria andAstraFeeIn(List<Long>)
+ Criteria andAstraFeeNotIn(List<Long>)
+ Criteria andAstraFeeBetween(Long,Long)
+ Criteria andAstraFeeNotBetween(Long,Long)
+ Criteria andSurplusAmountIsNull()
+ Criteria andSurplusAmountIsNotNull()
+ Criteria andSurplusAmountEqualTo(Long)
+ Criteria andSurplusAmountNotEqualTo(Long)
+ Criteria andSurplusAmountGreaterThan(Long)
+ Criteria andSurplusAmountGreaterThanOrEqualTo(Long)
+ Criteria andSurplusAmountLessThan(Long)
+ Criteria andSurplusAmountLessThanOrEqualTo(Long)
+ Criteria andSurplusAmountIn(List<Long>)
+ Criteria andSurplusAmountNotIn(List<Long>)
+ Criteria andSurplusAmountBetween(Long,Long)
+ Criteria andSurplusAmountNotBetween(Long,Long)
+ Criteria andReceivedAmountIsNull()
+ Criteria andReceivedAmountIsNotNull()
+ Criteria andReceivedAmountEqualTo(Long)
+ Criteria andReceivedAmountNotEqualTo(Long)
+ Criteria andReceivedAmountGreaterThan(Long)
+ Criteria andReceivedAmountGreaterThanOrEqualTo(Long)
+ Criteria andReceivedAmountLessThan(Long)
+ Criteria andReceivedAmountLessThanOrEqualTo(Long)
+ Criteria andReceivedAmountIn(List<Long>)
+ Criteria andReceivedAmountNotIn(List<Long>)
+ Criteria andReceivedAmountBetween(Long,Long)
+ Criteria andReceivedAmountNotBetween(Long,Long)
+ Criteria andLendAccountIsNull()
+ Criteria andLendAccountIsNotNull()
+ Criteria andLendAccountEqualTo(String)
+ Criteria andLendAccountNotEqualTo(String)
+ Criteria andLendAccountGreaterThan(String)
+ Criteria andLendAccountGreaterThanOrEqualTo(String)
+ Criteria andLendAccountLessThan(String)
+ Criteria andLendAccountLessThanOrEqualTo(String)
+ Criteria andLendAccountLike(String)
+ Criteria andLendAccountNotLike(String)
+ Criteria andLendAccountIn(List<String>)
+ Criteria andLendAccountNotIn(List<String>)
+ Criteria andLendAccountBetween(String,String)
+ Criteria andLendAccountNotBetween(String,String)
+ Criteria andBankCodeIsNull()
+ Criteria andBankCodeIsNotNull()
+ Criteria andBankCodeEqualTo(String)
+ Criteria andBankCodeNotEqualTo(String)
+ Criteria andBankCodeGreaterThan(String)
+ Criteria andBankCodeGreaterThanOrEqualTo(String)
+ Criteria andBankCodeLessThan(String)
+ Criteria andBankCodeLessThanOrEqualTo(String)
+ Criteria andBankCodeLike(String)
+ Criteria andBankCodeNotLike(String)
+ Criteria andBankCodeIn(List<String>)
+ Criteria andBankCodeNotIn(List<String>)
+ Criteria andBankCodeBetween(String,String)
+ Criteria andBankCodeNotBetween(String,String)
+ Criteria andReceiptAccountIsNull()
+ Criteria andReceiptAccountIsNotNull()
+ Criteria andReceiptAccountEqualTo(String)
+ Criteria andReceiptAccountNotEqualTo(String)
+ Criteria andReceiptAccountGreaterThan(String)
+ Criteria andReceiptAccountGreaterThanOrEqualTo(String)
+ Criteria andReceiptAccountLessThan(String)
+ Criteria andReceiptAccountLessThanOrEqualTo(String)
+ Criteria andReceiptAccountLike(String)
+ Criteria andReceiptAccountNotLike(String)
+ Criteria andReceiptAccountIn(List<String>)
+ Criteria andReceiptAccountNotIn(List<String>)
+ Criteria andReceiptAccountBetween(String,String)
+ Criteria andReceiptAccountNotBetween(String,String)
+ Criteria andAccountNameIsNull()
+ Criteria andAccountNameIsNotNull()
+ Criteria andAccountNameEqualTo(String)
+ Criteria andAccountNameNotEqualTo(String)
+ Criteria andAccountNameGreaterThan(String)
+ Criteria andAccountNameGreaterThanOrEqualTo(String)
+ Criteria andAccountNameLessThan(String)
+ Criteria andAccountNameLessThanOrEqualTo(String)
+ Criteria andAccountNameLike(String)
+ Criteria andAccountNameNotLike(String)
+ Criteria andAccountNameIn(List<String>)
+ Criteria andAccountNameNotIn(List<String>)
+ Criteria andAccountNameBetween(String,String)
+ Criteria andAccountNameNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andTransIdIsNull()
+ Criteria andTransIdIsNotNull()
+ Criteria andTransIdEqualTo(String)
+ Criteria andTransIdNotEqualTo(String)
+ Criteria andTransIdGreaterThan(String)
+ Criteria andTransIdGreaterThanOrEqualTo(String)
+ Criteria andTransIdLessThan(String)
+ Criteria andTransIdLessThanOrEqualTo(String)
+ Criteria andTransIdLike(String)
+ Criteria andTransIdNotLike(String)
+ Criteria andTransIdIn(List<String>)
+ Criteria andTransIdNotIn(List<String>)
+ Criteria andTransIdBetween(String,String)
+ Criteria andTransIdNotBetween(String,String)
+ Criteria andLendidIsNull()
+ Criteria andLendidIsNotNull()
+ Criteria andLendidEqualTo(String)
+ Criteria andLendidNotEqualTo(String)
+ Criteria andLendidGreaterThan(String)
+ Criteria andLendidGreaterThanOrEqualTo(String)
+ Criteria andLendidLessThan(String)
+ Criteria andLendidLessThanOrEqualTo(String)
+ Criteria andLendidLike(String)
+ Criteria andLendidNotLike(String)
+ Criteria andLendidIn(List<String>)
+ Criteria andLendidNotIn(List<String>)
+ Criteria andLendidBetween(String,String)
+ Criteria andLendidNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Long)
+ Criteria andFundIdNotEqualTo(Long)
+ Criteria andFundIdGreaterThan(Long)
+ Criteria andFundIdGreaterThanOrEqualTo(Long)
+ Criteria andFundIdLessThan(Long)
+ Criteria andFundIdLessThanOrEqualTo(Long)
+ Criteria andFundIdIn(List<Long>)
+ Criteria andFundIdNotIn(List<Long>)
+ Criteria andFundIdBetween(Long,Long)
+ Criteria andFundIdNotBetween(Long,Long)
+ Criteria andLendTypeIsNull()
+ Criteria andLendTypeIsNotNull()
+ Criteria andLendTypeEqualTo(Byte)
+ Criteria andLendTypeNotEqualTo(Byte)
+ Criteria andLendTypeGreaterThan(Byte)
+ Criteria andLendTypeGreaterThanOrEqualTo(Byte)
+ Criteria andLendTypeLessThan(Byte)
+ Criteria andLendTypeLessThanOrEqualTo(Byte)
+ Criteria andLendTypeIn(List<Byte>)
+ Criteria andLendTypeNotIn(List<Byte>)
+ Criteria andLendTypeBetween(Byte,Byte)
+ Criteria andLendTypeNotBetween(Byte,Byte)
+ Criteria andStoreIdIsNull()
+ Criteria andStoreIdIsNotNull()
+ Criteria andStoreIdEqualTo(Long)
+ Criteria andStoreIdNotEqualTo(Long)
+ Criteria andStoreIdGreaterThan(Long)
+ Criteria andStoreIdGreaterThanOrEqualTo(Long)
+ Criteria andStoreIdLessThan(Long)
+ Criteria andStoreIdLessThanOrEqualTo(Long)
+ Criteria andStoreIdIn(List<Long>)
+ Criteria andStoreIdNotIn(List<Long>)
+ Criteria andStoreIdBetween(Long,Long)
+ Criteria andStoreIdNotBetween(Long,Long)
+ Criteria andFundTypeIsNull()
+ Criteria andFundTypeIsNotNull()
+ Criteria andFundTypeEqualTo(Byte)
+ Criteria andFundTypeNotEqualTo(Byte)
+ Criteria andFundTypeGreaterThan(Byte)
+ Criteria andFundTypeGreaterThanOrEqualTo(Byte)
+ Criteria andFundTypeLessThan(Byte)
+ Criteria andFundTypeLessThanOrEqualTo(Byte)
+ Criteria andFundTypeIn(List<Byte>)
+ Criteria andFundTypeNotIn(List<Byte>)
+ Criteria andFundTypeBetween(Byte,Byte)
+ Criteria andFundTypeNotBetween(Byte,Byte)
+ Criteria andOrderNoIsNull()
+ Criteria andOrderNoIsNotNull()
+ Criteria andOrderNoEqualTo(String)
+ Criteria andOrderNoNotEqualTo(String)
+ Criteria andOrderNoGreaterThan(String)
+ Criteria andOrderNoGreaterThanOrEqualTo(String)
+ Criteria andOrderNoLessThan(String)
+ Criteria andOrderNoLessThanOrEqualTo(String)
+ Criteria andOrderNoLike(String)
+ Criteria andOrderNoNotLike(String)
+ Criteria andOrderNoIn(List<String>)
+ Criteria andOrderNoNotIn(List<String>)
+ Criteria andOrderNoBetween(String,String)
+ Criteria andOrderNoNotBetween(String,String)
+ Criteria andFundInterestFeeIsNull()
+ Criteria andFundInterestFeeIsNotNull()
+ Criteria andFundInterestFeeEqualTo(Long)
+ Criteria andFundInterestFeeNotEqualTo(Long)
+ Criteria andFundInterestFeeGreaterThan(Long)
+ Criteria andFundInterestFeeGreaterThanOrEqualTo(Long)
+ Criteria andFundInterestFeeLessThan(Long)
+ Criteria andFundInterestFeeLessThanOrEqualTo(Long)
+ Criteria andFundInterestFeeIn(List<Long>)
+ Criteria andFundInterestFeeNotIn(List<Long>)
+ Criteria andFundInterestFeeBetween(Long,Long)
+ Criteria andFundInterestFeeNotBetween(Long,Long)
+ Criteria andServiceFeeIsNull()
+ Criteria andServiceFeeIsNotNull()
+ Criteria andServiceFeeEqualTo(Long)
+ Criteria andServiceFeeNotEqualTo(Long)
+ Criteria andServiceFeeGreaterThan(Long)
+ Criteria andServiceFeeGreaterThanOrEqualTo(Long)
+ Criteria andServiceFeeLessThan(Long)
+ Criteria andServiceFeeLessThanOrEqualTo(Long)
+ Criteria andServiceFeeIn(List<Long>)
+ Criteria andServiceFeeNotIn(List<Long>)
+ Criteria andServiceFeeBetween(Long,Long)
+ Criteria andServiceFeeNotBetween(Long,Long)
+ Criteria andCarryExtIsNull()
+ Criteria andCarryExtIsNotNull()
+ Criteria andCarryExtEqualTo(String)
+ Criteria andCarryExtNotEqualTo(String)
+ Criteria andCarryExtGreaterThan(String)
+ Criteria andCarryExtGreaterThanOrEqualTo(String)
+ Criteria andCarryExtLessThan(String)
+ Criteria andCarryExtLessThanOrEqualTo(String)
+ Criteria andCarryExtLike(String)
+ Criteria andCarryExtNotLike(String)
+ Criteria andCarryExtIn(List<String>)
+ Criteria andCarryExtNotIn(List<String>)
+ Criteria andCarryExtBetween(String,String)
+ Criteria andCarryExtNotBetween(String,String)
+ Criteria andPreviousTransIdIsNull()
+ Criteria andPreviousTransIdIsNotNull()
+ Criteria andPreviousTransIdEqualTo(String)
+ Criteria andPreviousTransIdNotEqualTo(String)
+ Criteria andPreviousTransIdGreaterThan(String)
+ Criteria andPreviousTransIdGreaterThanOrEqualTo(String)
+ Criteria andPreviousTransIdLessThan(String)
+ Criteria andPreviousTransIdLessThanOrEqualTo(String)
+ Criteria andPreviousTransIdLike(String)
+ Criteria andPreviousTransIdNotLike(String)
+ Criteria andPreviousTransIdIn(List<String>)
+ Criteria andPreviousTransIdNotIn(List<String>)
+ Criteria andPreviousTransIdBetween(String,String)
+ Criteria andPreviousTransIdNotBetween(String,String)
+ Criteria andAfTransferIsNull()
+ Criteria andAfTransferIsNotNull()
+ Criteria andAfTransferEqualTo(Long)
+ Criteria andAfTransferNotEqualTo(Long)
+ Criteria andAfTransferGreaterThan(Long)
+ Criteria andAfTransferGreaterThanOrEqualTo(Long)
+ Criteria andAfTransferLessThan(Long)
+ Criteria andAfTransferLessThanOrEqualTo(Long)
+ Criteria andAfTransferIn(List<Long>)
+ Criteria andAfTransferNotIn(List<Long>)
+ Criteria andAfTransferBetween(Long,Long)
+ Criteria andAfTransferNotBetween(Long,Long)
+ Criteria andLendUpdatedAtIsNull()
+ Criteria andLendUpdatedAtIsNotNull()
+ Criteria andLendUpdatedAtEqualTo(Date)
+ Criteria andLendUpdatedAtNotEqualTo(Date)
+ Criteria andLendUpdatedAtGreaterThan(Date)
+ Criteria andLendUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andLendUpdatedAtLessThan(Date)
+ Criteria andLendUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andLendUpdatedAtIn(List<Date>)
+ Criteria andLendUpdatedAtNotIn(List<Date>)
+ Criteria andLendUpdatedAtBetween(Date,Date)
+ Criteria andLendUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.FinanceLendExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FinanceLendExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
interface com.welab.loan.finance.app.command.tb.dues.costreq.CostReqBuilder {
~ void doBuild(CostReqDTO)
}
class com.welab.loan.finance.response.CalculatorAmountVo {
- String tenor
- Long payable
- Long orgPayable
- String type
- Long adminFee
- Long orgAdminFee
- Long interestFee
- Long orgInterestFee
- Long repayAmount
- Long receivedAmount
- Date dueDate
- Integer enable
- Integer dueIndex
- Long oldPrincipal
- Long oldServiceFee
- Long oldFundInterest
- Long realAmount
- Long disLendAmount
- Long disRepayAmount
- Long lateFeePerDay
- Long premiumAmount
}
class com.welab.loan.finance.app.command.repayment.DuesAndRepayImportCheckCmdExe {
- BaseLoanDetailService baseLoanDetailService
- BaseLoanApplyPlansService baseLoanApplyPlansService
- BaseDuesService baseDuesService
- VatCostProvider vatCostProvider
+ Response doCheck(DuesAndRepaymentVO)
}
class com.welab.loan.finance.app.base.flow.BaseFlowTaskService {
- FlowTaskMapper flowTaskMapper
+ int addFlowTask(FlowTask)
+ int updateFlowTaskStatus(Long,Byte)
+ int updateFlowTask(FlowTask)
+ int updateFlowTaskStatus(List<Long>,Byte)
+ List<FlowTask> getRetryFlowTaskList(int,Integer)
}
class com.welab.loan.finance.app.service.flow.repaymentback.CreditUserAccountBackCompont {
- RepaymentGoBackManager repaymentGoBackManager
+ FlowTaskNodeEnum flowTaskNode()
# void process(RepaymentBackFlowContext)
}
class com.welab.loan.finance.model.CreditUserTagLog {
- Long id
- Long userId
- String originalTag
- String updateTag
- String originalSecondTag
- String updateSecondTag
- String triggerMethod
- String transId
- String remark
- Date createdAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ String getOriginalTag()
+ void setOriginalTag(String)
+ String getUpdateTag()
+ void setUpdateTag(String)
+ String getOriginalSecondTag()
+ void setOriginalSecondTag(String)
+ String getUpdateSecondTag()
+ void setUpdateSecondTag(String)
+ String getTriggerMethod()
+ void setTriggerMethod(String)
+ String getTransId()
+ void setTransId(String)
+ String getRemark()
+ void setRemark(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
}
class com.welab.loan.finance.app.command.plan.ApplyCPlanCmdExe {
- CPlanManager cPlanManager
- PlanServiceImpl planService
- BaseRabbitTemplate baseRabbitTemplate
- DuesExtMapper duesExtMapper
- CheckCPlanCustomAmountCmdExe checkCPlanCustomAmountCmdExe
- CPlanCalculationCmdExe cPlanCalculationCmdExe
- BaseLoanDetailService baseLoanDetailService
- MessageAppFacade messageAppFacade
- UserProfilesServiceFacade profilesServiceFacade
- BaseDuesService baseDuesService
- LoanCessieInfoService loanCessieInfoService
+ Response excute(ApplyCPlanCmd)
+ Response submitCPlan(TryCPlanParamDTO)
+ void pushAppMsg(Long,String)
+ Response getAllowJoinCPlanLoan(Long)
}
class com.welab.loan.finance.dto.LoanPlansContractDTO {
- String loanNumber
- Integer dueIndex
- String url
}
class com.welab.loan.finance.vo.response.NsRepaymentVO {
- String transactionNumber
- Long userId
- String fundName
- Long fundId
- Long totalRepaymentAmount
- Long totalFaspayFee
- Long totalCouponPrincipal
- Long totalLateFee
- Long totalRoundingFee
- Long totalAmountApproved
- Long totalAdminFeeDiscount
- Long totalProvisionFee
- Long totalInterestFundFee
- Long totalPlatformFeeDiscount
- String channel
- Integer channelId
- String program
- List<FinanceRepaymentTrackExt> repaymentTrackExtList
}
class com.welab.loan.finance.common.FinanceRedisKeys {
+ {static} String FINANCE_PREFIX
+ {static} String FINANCE_SIGN_TYPE
+ {static} String STEP_FOR_INSTALLMENT_PRODUCTLIST
+ {static} String STEP_FOR_INSTALLMENT_PRODUCT_LIST_ABTEST
+ {static} String PRODUCT_CODE_MAP_TAG
+ {static} String PARTNER_INFO
+ {static} String REDIS_KEY_CREDIT_ACTIVITY_AB_TEST_RUNNING
+ {static} String REDIS_KEY_CREDIT_ACTIVITY_AB_TEST_GROUP_ID
+ {static} String REDIS_KEY_CREDIT_ACTIVITY_AB_TEST_ACTIVITY_ID
+ {static} String TRAVELOKA_PAYLATER_KEY
+ {static} String TRAVELOKA_PAYLATER_FIELD_AMOUNT
+ {static} String TRAVELOKA_PAYLATER_FIELD_REPAYMENT_AMOUNT
+ {static} String IMPORT_USERIDS
+ {static} String OVER_DUE_JOB_PROCESS
}
interface com.welab.loan.finance.mapper.PayBillsMapper {
~ long countByExample(PayBillsExample)
~ int deleteByPrimaryKey(Long)
~ int insert(PayBills)
~ int insertSelective(PayBills)
~ List<PayBills> selectByExample(PayBillsExample)
~ PayBills selectByPrimaryKey(Long)
~ int updateByExampleSelective(PayBills,PayBillsExample)
~ int updateByExample(PayBills,PayBillsExample)
~ int updateByPrimaryKeySelective(PayBills)
~ int updateByPrimaryKey(PayBills)
}
class com.welab.loan.finance.test.eplan.EplanTest {
- BaseLoanPlanRelationService baseLoanPlansRelationService
- EPlanTryCalculationCmdExe ePlanTryCalculationCmdExe
- EPlanCalculationCmdExe ePlanCalculationCmdExe
- EPlanApplyCmdExe ePlanApplyCmdExe
- PlanService planService
- EPlanCheckCmdExe ePlanCheckCmdExe
- EPlanAdvanceCloseNotifyCmdExe ePlanAdvanceCloseNotifyCmdExe
- DuesService duesService
- BaseLoanDetailService loanDetailService
- BaseLoanDetailExtendService loanDetailExtendService
+ void testECal()
+ void testCheck()
+ void applyPlan()
+ void testPlan()
+ void testTryEplanForApp()
+ void testTryEPlanForUser()
+ void tryEPlanForCollection()
+ void tryEPlanForContract()
+ void eplanApply()
+ void verifyPlanData()
+ void notifyUser()
+ void rebookDuesTest()
}
interface com.welab.loan.finance.core.loan.rest.IVirtualAccount {
~ List<VirtualAccountVO> findVirtualAccounts(SynAccountDTO)
~ VirtualAccountVO findVirtualAccountByKey(String,List<VirtualAccountVO>)
~ List<VirtualAccountVO> findVirtualAccountListByKey(String,List<VirtualAccountVO>)
~ List<VirtualAccountVO> findVirtualAccountListByKeyAndPaygateway(String,Byte,List<VirtualAccountVO>)
~ InvoiceVO findInvoice(SynAccountDTO)
~ void asynBatchVirtualAccounts(List<SynAccountDTO>)
}
class com.welab.loan.finance.model.AbnormalRepaymentRecordExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> AbnormalRepaymentRecordExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.AbnormalRepaymentRecordExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumbersIsNull()
+ Criteria andLoanNumbersIsNotNull()
+ Criteria andLoanNumbersEqualTo(String)
+ Criteria andLoanNumbersNotEqualTo(String)
+ Criteria andLoanNumbersGreaterThan(String)
+ Criteria andLoanNumbersGreaterThanOrEqualTo(String)
+ Criteria andLoanNumbersLessThan(String)
+ Criteria andLoanNumbersLessThanOrEqualTo(String)
+ Criteria andLoanNumbersLike(String)
+ Criteria andLoanNumbersNotLike(String)
+ Criteria andLoanNumbersIn(List<String>)
+ Criteria andLoanNumbersNotIn(List<String>)
+ Criteria andLoanNumbersBetween(String,String)
+ Criteria andLoanNumbersNotBetween(String,String)
+ Criteria andRepaymentParamIsNull()
+ Criteria andRepaymentParamIsNotNull()
+ Criteria andRepaymentParamEqualTo(String)
+ Criteria andRepaymentParamNotEqualTo(String)
+ Criteria andRepaymentParamGreaterThan(String)
+ Criteria andRepaymentParamGreaterThanOrEqualTo(String)
+ Criteria andRepaymentParamLessThan(String)
+ Criteria andRepaymentParamLessThanOrEqualTo(String)
+ Criteria andRepaymentParamLike(String)
+ Criteria andRepaymentParamNotLike(String)
+ Criteria andRepaymentParamIn(List<String>)
+ Criteria andRepaymentParamNotIn(List<String>)
+ Criteria andRepaymentParamBetween(String,String)
+ Criteria andRepaymentParamNotBetween(String,String)
+ Criteria andRepaymentMethodIsNull()
+ Criteria andRepaymentMethodIsNotNull()
+ Criteria andRepaymentMethodEqualTo(Byte)
+ Criteria andRepaymentMethodNotEqualTo(Byte)
+ Criteria andRepaymentMethodGreaterThan(Byte)
+ Criteria andRepaymentMethodGreaterThanOrEqualTo(Byte)
+ Criteria andRepaymentMethodLessThan(Byte)
+ Criteria andRepaymentMethodLessThanOrEqualTo(Byte)
+ Criteria andRepaymentMethodIn(List<Byte>)
+ Criteria andRepaymentMethodNotIn(List<Byte>)
+ Criteria andRepaymentMethodBetween(Byte,Byte)
+ Criteria andRepaymentMethodNotBetween(Byte,Byte)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.AbnormalRepaymentRecordExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.AbnormalRepaymentRecordExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.TbLendBatchExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> TbLendBatchExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.TbLendBatchExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andPartnerIsNull()
+ Criteria andPartnerIsNotNull()
+ Criteria andPartnerEqualTo(String)
+ Criteria andPartnerNotEqualTo(String)
+ Criteria andPartnerGreaterThan(String)
+ Criteria andPartnerGreaterThanOrEqualTo(String)
+ Criteria andPartnerLessThan(String)
+ Criteria andPartnerLessThanOrEqualTo(String)
+ Criteria andPartnerLike(String)
+ Criteria andPartnerNotLike(String)
+ Criteria andPartnerIn(List<String>)
+ Criteria andPartnerNotIn(List<String>)
+ Criteria andPartnerBetween(String,String)
+ Criteria andPartnerNotBetween(String,String)
+ Criteria andBatchNoIsNull()
+ Criteria andBatchNoIsNotNull()
+ Criteria andBatchNoEqualTo(String)
+ Criteria andBatchNoNotEqualTo(String)
+ Criteria andBatchNoGreaterThan(String)
+ Criteria andBatchNoGreaterThanOrEqualTo(String)
+ Criteria andBatchNoLessThan(String)
+ Criteria andBatchNoLessThanOrEqualTo(String)
+ Criteria andBatchNoLike(String)
+ Criteria andBatchNoNotLike(String)
+ Criteria andBatchNoIn(List<String>)
+ Criteria andBatchNoNotIn(List<String>)
+ Criteria andBatchNoBetween(String,String)
+ Criteria andBatchNoNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Integer)
+ Criteria andStatusNotEqualTo(Integer)
+ Criteria andStatusGreaterThan(Integer)
+ Criteria andStatusGreaterThanOrEqualTo(Integer)
+ Criteria andStatusLessThan(Integer)
+ Criteria andStatusLessThanOrEqualTo(Integer)
+ Criteria andStatusIn(List<Integer>)
+ Criteria andStatusNotIn(List<Integer>)
+ Criteria andStatusBetween(Integer,Integer)
+ Criteria andStatusNotBetween(Integer,Integer)
+ Criteria andExpectLendAtIsNull()
+ Criteria andExpectLendAtIsNotNull()
+ Criteria andExpectLendAtEqualTo(Date)
+ Criteria andExpectLendAtNotEqualTo(Date)
+ Criteria andExpectLendAtGreaterThan(Date)
+ Criteria andExpectLendAtGreaterThanOrEqualTo(Date)
+ Criteria andExpectLendAtLessThan(Date)
+ Criteria andExpectLendAtLessThanOrEqualTo(Date)
+ Criteria andExpectLendAtIn(List<Date>)
+ Criteria andExpectLendAtNotIn(List<Date>)
+ Criteria andExpectLendAtBetween(Date,Date)
+ Criteria andExpectLendAtNotBetween(Date,Date)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Long)
+ Criteria andFundIdNotEqualTo(Long)
+ Criteria andFundIdGreaterThan(Long)
+ Criteria andFundIdGreaterThanOrEqualTo(Long)
+ Criteria andFundIdLessThan(Long)
+ Criteria andFundIdLessThanOrEqualTo(Long)
+ Criteria andFundIdIn(List<Long>)
+ Criteria andFundIdNotIn(List<Long>)
+ Criteria andFundIdBetween(Long,Long)
+ Criteria andFundIdNotBetween(Long,Long)
}
class com.welab.loan.finance.model.TbLendBatchExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.TbLendBatchExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.service.core.BaseCreditUserLoanService {
- CreditUserLoanMapper creditUserLoanMapper
+ CreditUserLoan findOne(String,CreditUserLoanStatusEnum)
+ CreditUserLoan findOne(String)
+ boolean save(CreditUserLoan)
+ List<CreditUserLoan> findList(Long,CreditUserLoanStatusEnum)
+ List<CreditUserLoan> findList(List<String>)
+ List<CreditUserLoan> findUserSuccessLoan(CreditUserLoan)
}
class com.welab.loan.finance.core.dto.CouponRepayment {
- Long amount
- Long orgAmount
}
interface com.welab.loan.finance.mapper.CreditUserTagRuleDelayTriggerMapper {
~ long countByExample(CreditUserTagRuleDelayTriggerExample)
~ int deleteByExample(CreditUserTagRuleDelayTriggerExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditUserTagRuleDelayTrigger)
~ int insertSelective(CreditUserTagRuleDelayTrigger)
~ List<CreditUserTagRuleDelayTrigger> selectByExample(CreditUserTagRuleDelayTriggerExample)
~ CreditUserTagRuleDelayTrigger selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditUserTagRuleDelayTrigger,CreditUserTagRuleDelayTriggerExample)
~ int updateByExample(CreditUserTagRuleDelayTrigger,CreditUserTagRuleDelayTriggerExample)
~ int updateByPrimaryKeySelective(CreditUserTagRuleDelayTrigger)
~ int updateByPrimaryKey(CreditUserTagRuleDelayTrigger)
}
class com.welab.loan.finance.dto.FundBackDto {
- String name
- String fundCode
- Byte status
- String orgType
- String fundType
- String legalType
- String repaymentMode
- String isApprove
- String paymentMethod
}
class com.welab.loan.finance.test.vat.VatDuesInitTest {
- VatDuesInitCmdExe vatDuesInitCmdExe
- BaseFinanceDuesService baseFinanceDuesService
+ void testInit()
+ void testSynDuesData()
}
class com.welab.loan.finance.core.dto.va.LoanRepayDTO {
- Long id
- boolean isAdd
}
class com.welab.loan.finance.dto.qry.TackDetailForRefundQry {
- {static} long serialVersionUID
- Integer channel
- List<String> days
- MarkTypeEnum markType
- Long fundId
- String buyerCode
}
class com.welab.loan.finance.test.insurance.InsuranceTest {
- PremiumTransferJob premiumTransferJob
+ void premiumJobTest()
}
class com.welab.loan.finance.model.FinanceDues {
- Long id
- Long orgId
- String loanId
- Integer dueIndex
- Date dueDate
- Boolean isClose
- Byte planType
- Byte repaymentType
- String plansStr
- String promotionCode
- Long principalAmount
- Long principalPay
- Long principalUnpay
- Long principalDiscount
- Long principalPlanDiscount
- Long adminFeeAmount
- Long adminFeePay
- Long adminFeeUnpay
- Long adminFeeDiscount
- Long adminFeePlanDiscount
- Long fundInterestAmount
- Long fundInterestPay
- Long fundInterestUnpay
- Long fundInterestDiscount
- Long fundInterestPlanDiscount
- Long serviceFeeAmount
- Long serviceFeePay
- Long serviceFeeUnpay
- Long serviceFeeDiscount
- Long serviceFeePlanDiscount
- Long provisionPlanDiscount
- Long provisionDiscount
- Long provisionUnpay
- Long provisionPay
- Long provisionAmount
- Long lateFeeAmount
- Long lateFeePay
- Long lateFeeUnpay
- Long lateFeeDiscount
- Long lateFeePlanDiscount
- Long carryingFeeAmount
- Long carryingFeePay
- Long carryingFeeUnpay
- Date createdAt
- Date updatedAt
- Long eplanUnpay
- Byte plansType
- Long fundInterestWhtAmount
- Long fundInterestWhtPay
- Long fundInterestWhtUnpay
- Long fundInterestWhtDiscount
- Long fundInterestWhtPlanDiscount
+ Long getId()
+ void setId(Long)
+ Long getOrgId()
+ void setOrgId(Long)
+ String getLoanId()
+ void setLoanId(String)
+ Integer getDueIndex()
+ void setDueIndex(Integer)
+ Date getDueDate()
+ void setDueDate(Date)
+ Boolean getIsClose()
+ void setIsClose(Boolean)
+ Byte getPlanType()
+ void setPlanType(Byte)
+ Byte getRepaymentType()
+ void setRepaymentType(Byte)
+ String getPlansStr()
+ void setPlansStr(String)
+ String getPromotionCode()
+ void setPromotionCode(String)
+ Long getPrincipalAmount()
+ void setPrincipalAmount(Long)
+ Long getPrincipalPay()
+ void setPrincipalPay(Long)
+ Long getPrincipalUnpay()
+ void setPrincipalUnpay(Long)
+ Long getPrincipalDiscount()
+ void setPrincipalDiscount(Long)
+ Long getPrincipalPlanDiscount()
+ void setPrincipalPlanDiscount(Long)
+ Long getAdminFeeAmount()
+ void setAdminFeeAmount(Long)
+ Long getAdminFeePay()
+ void setAdminFeePay(Long)
+ Long getAdminFeeUnpay()
+ void setAdminFeeUnpay(Long)
+ Long getAdminFeeDiscount()
+ void setAdminFeeDiscount(Long)
+ Long getAdminFeePlanDiscount()
+ void setAdminFeePlanDiscount(Long)
+ Long getFundInterestAmount()
+ void setFundInterestAmount(Long)
+ Long getFundInterestPay()
+ void setFundInterestPay(Long)
+ Long getFundInterestUnpay()
+ void setFundInterestUnpay(Long)
+ Long getFundInterestDiscount()
+ void setFundInterestDiscount(Long)
+ Long getFundInterestPlanDiscount()
+ void setFundInterestPlanDiscount(Long)
+ Long getServiceFeeAmount()
+ void setServiceFeeAmount(Long)
+ Long getServiceFeePay()
+ void setServiceFeePay(Long)
+ Long getServiceFeeUnpay()
+ void setServiceFeeUnpay(Long)
+ Long getServiceFeeDiscount()
+ void setServiceFeeDiscount(Long)
+ Long getServiceFeePlanDiscount()
+ void setServiceFeePlanDiscount(Long)
+ Long getProvisionPlanDiscount()
+ void setProvisionPlanDiscount(Long)
+ Long getProvisionDiscount()
+ void setProvisionDiscount(Long)
+ Long getProvisionUnpay()
+ void setProvisionUnpay(Long)
+ Long getProvisionPay()
+ void setProvisionPay(Long)
+ Long getProvisionAmount()
+ void setProvisionAmount(Long)
+ Long getLateFeeAmount()
+ void setLateFeeAmount(Long)
+ Long getLateFeePay()
+ void setLateFeePay(Long)
+ Long getLateFeeUnpay()
+ void setLateFeeUnpay(Long)
+ Long getLateFeeDiscount()
+ void setLateFeeDiscount(Long)
+ Long getLateFeePlanDiscount()
+ void setLateFeePlanDiscount(Long)
+ Long getCarryingFeeAmount()
+ void setCarryingFeeAmount(Long)
+ Long getCarryingFeePay()
+ void setCarryingFeePay(Long)
+ Long getCarryingFeeUnpay()
+ void setCarryingFeeUnpay(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Long getEplanUnpay()
+ void setEplanUnpay(Long)
+ Byte getPlansType()
+ void setPlansType(Byte)
+ Long getFundInterestWhtAmount()
+ void setFundInterestWhtAmount(Long)
+ Long getFundInterestWhtPay()
+ void setFundInterestWhtPay(Long)
+ Long getFundInterestWhtUnpay()
+ void setFundInterestWhtUnpay(Long)
+ Long getFundInterestWhtDiscount()
+ void setFundInterestWhtDiscount(Long)
+ Long getFundInterestWhtPlanDiscount()
+ void setFundInterestWhtPlanDiscount(Long)
}
class com.welab.loan.finance.dto.plan.CalEPlanAmountDTO {
- {static} long serialVersionUID
- Long minRepaymentTotalAmount
- Date nextDueDate
- List<CalEPlanDetailAmountDTO> calEPlanDetailAmountList
}
class com.welab.loan.finance.app.manager.credit.activity.CreditActivityImportUserIdManager {
- JedisCluster jedisCluster
- BaseCreditUserInfoService baseCreditUserInfoService
+ String importFile(List<String>)
+ List<Long> getCacheUserIds(String)
}
class com.welab.loan.finance.service.core.BaseUserAdvancePaymentService {
- UserAdvancePaymentMapper userAdvancePaymentMapper
- UserAdvancePaymentExtndMapper extendMapper
+ Long save(UserAdvancePayment)
+ void saveExtend(Long,List<String>)
+ UserAdvancePayment match(Long,Long)
+ void saveTrxUuid(Long,String)
+ void saveSyncCacheId(Long,Long)
+ UserAdvancePayment getByTrxUuid(String)
- List<UserAdvancePaymentExtnd> getByRepaymentId(Long)
+ void closed(Long)
+ void expired(Long,Long)
}
class com.welab.loan.finance.service.core.BaseLoanDuesLogService {
- LoanDuesLogMapper logMapper
+ void save(LoanDuesLog)
}
class com.welab.loan.finance.app.command.advance.AdvanceRepaymentInvalidationCmdExe {
- MessageAppFacade messageAppFacade
- BaseAdvanceMsgListService baseAdvanceMsgListService
- BaseLoanService baseLoanService
- AdvanceRepaymentManager advanceRepaymentManager
+ void invalidationRecord(String)
+ void invalidNoEnableAdvLetter()
}
class com.welab.loan.finance.service.impl.DuesServiceImpl {
- BaseLoanService baseLoanService
- BaseDuesService baseDuesService
- RateService rateService
- BaseUserAccountService baseUserAccountService
- DuesCalculationMapper duesCalculationMapper
- BaseLoanCodeService baseLoanCodeService
- BaseLoanDetailExtendService baseLoanDetailExtendService
- BaseFinanceDuesService baseFinanceDuesService
- LoanCouponMapper loanCouponMapper
- LoanCouponDetailMapper loanCouponDetailMapper
- DuesExtMapper duesExtMapper
- FinanceLendMapper financeLendMapper
- PlanServiceImpl planService
- BaseLoanApplyPlansService baseLoanApplyPlansService
- IRepaymentService repaymentService
- IAccountService accountService
- BaseLoanPlansRelationService baseLoanPlansRelationService
- EPlanService ePlanService
- BaseRabbitTemplate rabbitTemplate
- IUserRepayAmount userRepayAmount
- ActivityDubboServiceFacade activityDubboServiceFacade
- DuesManger duesManger
- LoanUserRepayDetailMapper userRepayDetailMapper
- ILoanUserRepay loanUserRepay
- BaseLoanDetailService baseLoanDetailService
- RebookAmountService rebookAmountService
- DuesSaveService duesSaveService
- VatCostProvider vatCostProvider
- BaseLoanCessieInfoService baseLoaderServiceFacade
- LoanCessieInfoService loanCessieInfoService
- BaseFinanceLendService baseFinanceLendService
- LateFeeUpdateService lateFeeUpdateService
- MaumodalDuesManager maumudalDuesManager
+ Response<RepaymentData> paymentSchedule(String)
+ Response<RepaymentData> getPaymentSchedule(String)
+ Response<RepaymentData> paymentSchedule(String,boolean,Date,boolean)
+ Response<RepaymentData> paymentSchedule(String,boolean,Date,boolean,boolean)
+ RepayDuesRspDTO tryPaymentScheduleByLater(PaymentScheduleDto)
+ List<DuesVO> tryPaymentSchedule(PaymentScheduleDto)
+ Response<RepaymentVO> findRepayInfo(RepayInfoDto)
+ void findReceivedAmountByDdm(RepaymentVO,LoanDetail)
+ void setDuesExtCoupon(DuesExtVo,LoanCouponDetail)
+ void setDuesCoupon(DuesVO,LoanCouponDetail)
+ Response<RepaymentVO> tryRepayInfo(RepayInfoDto)
+ Response<TryCalDuesVO> tryCalDuesForMaumodal(ScheduleAmountDto)
+ Response<RepayDuesVO> getCalDues(String)
+ Response<ActivityRepaymentVO> tryActivityRepaymentVO(TryActivityDto)
+ Response<CouponRepaymentVo> findCouponRepayment(LoanCouponCalDto)
+ Response<String> confirmRepayment(RepaymentDto)
+ Response<BaseRepaymentAmountInfoVo> advanceSchedule(String)
+ Response<CalculatorVo> trySchedule(CalculatorDto)
+ Response<List<DuesExtVo>> findDues(String,Boolean)
+ Response<RepaymentVO> findRepayInfoBycode(String)
+ Response<List<RepaymentVO>> findListRepayInfoBycode(String)
+ Response<List<CalculatorAmountVo>> scheduleAmount(Long,String,String,Long,String,String)
+ Response<List<CalculatorAmountVo>> scheduleAmountByOrigin(ScheduleAmountDto)
+ Response<CalculatorAmountVo> scheduleAmountCreditByOrigin(ScheduleAmountDto)
- List<String> buildSpektraTenors(ScheduleAmountDto)
+ Response updateSkipOverdue(OverDuesDto)
+ Response<Integer> findLoanOverdueState(OverDuesDto)
+ Response<String> findOffLineRepayCode(String)
+ Response<List<DuesAmountExtVo>> findMergeDues(String)
+ Response updateLateFee(LateFeeDto)
+ Response batchUpdateLateFee(List<LateFeeDto>)
- void updatLateFee(LateFeeDto,LoanDetail)
+ Response<String> selectBadDebt()
+ Response<String> selectBadDebtV2()
+ String findLoanCoupon(String)
+ Boolean checkCouponCode(String,Long)
- void findBuildRepaymentCalculator(String,String,String,String,CostReqDTO,LoanDetail)
+ void buildTryRepaymentCalculator(String,String,String,String,CostReqDTO,LoanDetail)
+ LoanPlansRelationDTO getLastEplanLoans(String)
+ Long findAllDuesAmount(String)
+ Response<AstraPayInfoVo> getAstraPayInfoByUserId(Long)
+ RepayUnPayDTO findUnPayAmount(String)
+ Map<String,Long> getRemainingAmount(QueryRemainingAmountDTO)
+ List<EPlanAmountDTO> getUnPayAmountByLoanNumberForE(List<EPlanRateDTO>)
- EUnPayAmountDTO getUnPayAmountForE(List<Dues>,BigDecimal,Long)
- boolean isOverDue(Date)
- Dues matchDues(List<Dues>,String,Integer)
+ Response<List<LoanOverdueInfoDTO>> listOverDueInfoByUserAndDpd(List<Long>,Integer)
+ Response<PageInfo<RepaymentScheduleInfoDTO>> listRepaymentScheduleInfoByUserId(List<String>,Long,Integer,Integer,Integer)
+ Response<List<RepaymentScheduleInfoDTO>> listRepaymentScheduleInfoDetail(String,List<Integer>)
+ Response<List<DueSimpleDTO>> listIsCloseAndSoldDue(List<DueSimpleDTO>)
+ Response<Boolean> lateFeeUpdate(Long)
}
enum com.welab.loan.finance.enums.PlansStatusEnum {
+  INIT
+  APPLIED
+  USED
+  EXPIRED
+  USEDUN
+  UNDEDUCT
+  CANCELED
- byte val
- String enDesc
- String desc
}
class com.welab.loan.finance.model.FlowTaskExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FlowTaskExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FlowTaskExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andTaskCodeIsNull()
+ Criteria andTaskCodeIsNotNull()
+ Criteria andTaskCodeEqualTo(String)
+ Criteria andTaskCodeNotEqualTo(String)
+ Criteria andTaskCodeGreaterThan(String)
+ Criteria andTaskCodeGreaterThanOrEqualTo(String)
+ Criteria andTaskCodeLessThan(String)
+ Criteria andTaskCodeLessThanOrEqualTo(String)
+ Criteria andTaskCodeLike(String)
+ Criteria andTaskCodeNotLike(String)
+ Criteria andTaskCodeIn(List<String>)
+ Criteria andTaskCodeNotIn(List<String>)
+ Criteria andTaskCodeBetween(String,String)
+ Criteria andTaskCodeNotBetween(String,String)
+ Criteria andTradeNoIsNull()
+ Criteria andTradeNoIsNotNull()
+ Criteria andTradeNoEqualTo(String)
+ Criteria andTradeNoNotEqualTo(String)
+ Criteria andTradeNoGreaterThan(String)
+ Criteria andTradeNoGreaterThanOrEqualTo(String)
+ Criteria andTradeNoLessThan(String)
+ Criteria andTradeNoLessThanOrEqualTo(String)
+ Criteria andTradeNoLike(String)
+ Criteria andTradeNoNotLike(String)
+ Criteria andTradeNoIn(List<String>)
+ Criteria andTradeNoNotIn(List<String>)
+ Criteria andTradeNoBetween(String,String)
+ Criteria andTradeNoNotBetween(String,String)
+ Criteria andTaskParamIsNull()
+ Criteria andTaskParamIsNotNull()
+ Criteria andTaskParamEqualTo(String)
+ Criteria andTaskParamNotEqualTo(String)
+ Criteria andTaskParamGreaterThan(String)
+ Criteria andTaskParamGreaterThanOrEqualTo(String)
+ Criteria andTaskParamLessThan(String)
+ Criteria andTaskParamLessThanOrEqualTo(String)
+ Criteria andTaskParamLike(String)
+ Criteria andTaskParamNotLike(String)
+ Criteria andTaskParamIn(List<String>)
+ Criteria andTaskParamNotIn(List<String>)
+ Criteria andTaskParamBetween(String,String)
+ Criteria andTaskParamNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andRetryCountIsNull()
+ Criteria andRetryCountIsNotNull()
+ Criteria andRetryCountEqualTo(Integer)
+ Criteria andRetryCountNotEqualTo(Integer)
+ Criteria andRetryCountGreaterThan(Integer)
+ Criteria andRetryCountGreaterThanOrEqualTo(Integer)
+ Criteria andRetryCountLessThan(Integer)
+ Criteria andRetryCountLessThanOrEqualTo(Integer)
+ Criteria andRetryCountIn(List<Integer>)
+ Criteria andRetryCountNotIn(List<Integer>)
+ Criteria andRetryCountBetween(Integer,Integer)
+ Criteria andRetryCountNotBetween(Integer,Integer)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.FlowTaskExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FlowTaskExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.app.command.tb.lend.lend.impl.TravelokaPaylaterFinanceLendBuilder {
+ void doBuild(FinanceLend,LoanDetail)
+ String getKey()
}
class com.welab.loan.finance.app.impl.dues.DuesServiceImpl {
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
- IQueryDuesService iQueryDuesService
+ Response<Integer> findMaxOverdueDay(LoanOverdueQry)
+ Response<List<DuesDto>> findAllDues(List<String>,Boolean)
}
class com.welab.loan.finance.dto.cmd.tb.HsoLoanQry {
- {static} long serialVersionUID
- String partner
- Long adminId
- List<Byte> repayStatusList
- List<String> customerNumberList
- Date invoiceDateStart
- Date invoiceDateEnd
- String invoiceNo
- String billingNo
- String storeName
}
class com.welab.loan.finance.vo.LoanStateVO {
- String loanNumber
- Date lendAt
- Byte lendStatus
- Byte repayStatus
}
abstract class com.welab.loan.finance.utils.DateUtils {
- {static} Logger LOGGER
+ {static} String GMT_EIGHT_TIMEZONE
+ {static} int UTC_OFFSET_IN_HOURS
- {static} String TIME_STAMP_FORMAT
+ {static} String YYYYMMDDHHMMSS
+ {static} String DATE_FORMAT
+ {static} String YYYY_MM_DD
+ {static} String YYYYMMDD
+ {static} String HH_MM_SS
+ {static} String HHMMSS
+ {static} String YYYY_MM_DD_HHMMSS_SSS
+ {static} String HH
+ {static} String MMM_DD_YY_UK
+ {static} boolean matcherDate(String)
- {static} int calculateUtcOffsetInHours()
+ {static} long currentTimeSeconds()
+ {static} long getTimeSeconds(Date)
+ {static} Date getCurrentDateTime()
+ {static} int getCurrentHour()
+ {static} Date getCurrentDate()
+ {static} String parseDate(Date)
+ {static} String formatDate(Date,String)
+ {static} LocalDate date2LocalDate(Date)
+ {static} LocalDateTime date2LocalDateTime(Date)
+ {static} LocalDateTime date2LocalDateTimeBegin(Date)
+ {static} LocalDateTime date2LocalDateTimeEnd(Date)
+ {static} long localDateTime2long(LocalDateTime)
+ {static} Date localDate2Date(LocalDate)
+ {static} Date travelTo(int,Unit)
+ {static} Date travelTo(Date,int,Unit)
+ {static} Date parseDateAny(String)
+ {static} long daysUtilNow(String)
+ {static} long daysUntilCurrentDate(Date)
+ {static} long daysUntilCurrentDate(java.sql.Date)
+ {static} boolean isAfterCurrentDate(Date)
+ {static} boolean isAfterCurrentDate(java.sql.Date)
+ {static} boolean isAfterCurrentDateTime(Date)
+ {static} boolean isAfter(Date,Date)
+ {static} boolean isAfter(java.sql.Date,Date)
+ {static} boolean isDateTimeAfter(Date,Date)
+ {static} boolean isBeforeCurrentDate(Date)
+ {static} boolean isBeforeCurrentDate(java.sql.Date)
+ {static} boolean isBeforeCurrentDateTime(Date)
+ {static} boolean isBefore(Date,Date)
+ {static} boolean isBefore(java.sql.Date,Date)
+ {static} boolean isDateTimeBefore(Date,Date)
+ {static} boolean isCurrentDateTimeBetween(Date,Date)
+ {static} boolean isDateTimeBetween(Date,Date,Date)
+ {static} boolean isEqualsCurrentDate(Date)
+ {static} boolean isEqual(Date,Date)
+ {static} DateFormat getDateFormat()
+ {static} DateFormat getChinaLongDateFormat()
+ {static} int getYear(Date)
+ {static} int getMonth(Date)
+ {static} int durationInDays(Date,Date)
+ {static} Date plusDays(Date,int)
+ {static} Date plusMinutes(Date,int)
+ {static} Date plusDaysOnNow(int)
+ {static} Date plusMinutesOnNow(int)
+ {static} Date plusDaysOnCurrentDate(int)
+ {static} Date plusDaysOnExpectDate(Date,int)
+ {static} Date plusNaturalMonthOnCurrentDate(int)
+ {static} Date plusNaturalMonthOnExpectMonth(Date,int)
+ {static} boolean isHoursAgo(Date,int)
+ {static} boolean isOutBussinessTime()
+ {static} java.sql.Date date2SqlDate(Date)
+ {static} Date adjustTimeToSuitUTCTimeZone(Date)
+ {static} Date getCurrentDateWithoutTime()
+ {static} Date getDateWithoutTime(Date)
+ {static} Date parseDate(String,String)
+ {static} Date parseDate(String,String[])
+ {static} boolean isTimeBefore(Date,Date)
+ {static} String getDay(Date)
+ {static} Date addDay(Date,Integer)
- {static} Calendar getGregorianCalendar(Date)
+ {static} int daysBetween(Date,Date)
+ {static} boolean compareDate(Date,Date,Date)
+ {static} Date str2Date(String,String)
+ {static} String getNowTimeStamp()
+ {static} Date parseDate(String)
+ {static} Date interParseDate(String,String)
+ {static} Date getStartTime(Date)
+ {static} Date getLastDayOfMonth(Date)
+ {static} Date getEndTime(Date)
+ {static} Date parseTime(String,Date)
+ {static} String convertWeekday(LocalDateTime)
}
enum com.welab.loan.finance.utils.Unit {
+  MONTHS
+  DAYS
+  HOURS
+  MINUTES
+  SECONDS
- Duration m_duration
- <<Create>> Unit(Duration)
+ Duration value()
}
class com.welab.loan.finance.model.UvfFileLoanExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> UvfFileLoanExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.UvfFileLoanExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateTimeIsNull()
+ Criteria andCreateTimeIsNotNull()
+ Criteria andCreateTimeEqualTo(Date)
+ Criteria andCreateTimeNotEqualTo(Date)
+ Criteria andCreateTimeGreaterThan(Date)
+ Criteria andCreateTimeGreaterThanOrEqualTo(Date)
+ Criteria andCreateTimeLessThan(Date)
+ Criteria andCreateTimeLessThanOrEqualTo(Date)
+ Criteria andCreateTimeIn(List<Date>)
+ Criteria andCreateTimeNotIn(List<Date>)
+ Criteria andCreateTimeBetween(Date,Date)
+ Criteria andCreateTimeNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andTaskIdIsNull()
+ Criteria andTaskIdIsNotNull()
+ Criteria andTaskIdEqualTo(String)
+ Criteria andTaskIdNotEqualTo(String)
+ Criteria andTaskIdGreaterThan(String)
+ Criteria andTaskIdGreaterThanOrEqualTo(String)
+ Criteria andTaskIdLessThan(String)
+ Criteria andTaskIdLessThanOrEqualTo(String)
+ Criteria andTaskIdLike(String)
+ Criteria andTaskIdNotLike(String)
+ Criteria andTaskIdIn(List<String>)
+ Criteria andTaskIdNotIn(List<String>)
+ Criteria andTaskIdBetween(String,String)
+ Criteria andTaskIdNotBetween(String,String)
+ Criteria andJumlahBpkbIsNull()
+ Criteria andJumlahBpkbIsNotNull()
+ Criteria andJumlahBpkbEqualTo(String)
+ Criteria andJumlahBpkbNotEqualTo(String)
+ Criteria andJumlahBpkbGreaterThan(String)
+ Criteria andJumlahBpkbGreaterThanOrEqualTo(String)
+ Criteria andJumlahBpkbLessThan(String)
+ Criteria andJumlahBpkbLessThanOrEqualTo(String)
+ Criteria andJumlahBpkbLike(String)
+ Criteria andJumlahBpkbNotLike(String)
+ Criteria andJumlahBpkbIn(List<String>)
+ Criteria andJumlahBpkbNotIn(List<String>)
+ Criteria andJumlahBpkbBetween(String,String)
+ Criteria andJumlahBpkbNotBetween(String,String)
+ Criteria andNamaPemilikBpkbIsNull()
+ Criteria andNamaPemilikBpkbIsNotNull()
+ Criteria andNamaPemilikBpkbEqualTo(String)
+ Criteria andNamaPemilikBpkbNotEqualTo(String)
+ Criteria andNamaPemilikBpkbGreaterThan(String)
+ Criteria andNamaPemilikBpkbGreaterThanOrEqualTo(String)
+ Criteria andNamaPemilikBpkbLessThan(String)
+ Criteria andNamaPemilikBpkbLessThanOrEqualTo(String)
+ Criteria andNamaPemilikBpkbLike(String)
+ Criteria andNamaPemilikBpkbNotLike(String)
+ Criteria andNamaPemilikBpkbIn(List<String>)
+ Criteria andNamaPemilikBpkbNotIn(List<String>)
+ Criteria andNamaPemilikBpkbBetween(String,String)
+ Criteria andNamaPemilikBpkbNotBetween(String,String)
+ Criteria andTglBpkbIsNull()
+ Criteria andTglBpkbIsNotNull()
+ Criteria andTglBpkbEqualTo(String)
+ Criteria andTglBpkbNotEqualTo(String)
+ Criteria andTglBpkbGreaterThan(String)
+ Criteria andTglBpkbGreaterThanOrEqualTo(String)
+ Criteria andTglBpkbLessThan(String)
+ Criteria andTglBpkbLessThanOrEqualTo(String)
+ Criteria andTglBpkbLike(String)
+ Criteria andTglBpkbNotLike(String)
+ Criteria andTglBpkbIn(List<String>)
+ Criteria andTglBpkbNotIn(List<String>)
+ Criteria andTglBpkbBetween(String,String)
+ Criteria andTglBpkbNotBetween(String,String)
+ Criteria andNoBpkbIsNull()
+ Criteria andNoBpkbIsNotNull()
+ Criteria andNoBpkbEqualTo(String)
+ Criteria andNoBpkbNotEqualTo(String)
+ Criteria andNoBpkbGreaterThan(String)
+ Criteria andNoBpkbGreaterThanOrEqualTo(String)
+ Criteria andNoBpkbLessThan(String)
+ Criteria andNoBpkbLessThanOrEqualTo(String)
+ Criteria andNoBpkbLike(String)
+ Criteria andNoBpkbNotLike(String)
+ Criteria andNoBpkbIn(List<String>)
+ Criteria andNoBpkbNotIn(List<String>)
+ Criteria andNoBpkbBetween(String,String)
+ Criteria andNoBpkbNotBetween(String,String)
+ Criteria andBuktiKepemilikanIsNull()
+ Criteria andBuktiKepemilikanIsNotNull()
+ Criteria andBuktiKepemilikanEqualTo(String)
+ Criteria andBuktiKepemilikanNotEqualTo(String)
+ Criteria andBuktiKepemilikanGreaterThan(String)
+ Criteria andBuktiKepemilikanGreaterThanOrEqualTo(String)
+ Criteria andBuktiKepemilikanLessThan(String)
+ Criteria andBuktiKepemilikanLessThanOrEqualTo(String)
+ Criteria andBuktiKepemilikanLike(String)
+ Criteria andBuktiKepemilikanNotLike(String)
+ Criteria andBuktiKepemilikanIn(List<String>)
+ Criteria andBuktiKepemilikanNotIn(List<String>)
+ Criteria andBuktiKepemilikanBetween(String,String)
+ Criteria andBuktiKepemilikanNotBetween(String,String)
+ Criteria andAlamatDealerIsNull()
+ Criteria andAlamatDealerIsNotNull()
+ Criteria andAlamatDealerEqualTo(String)
+ Criteria andAlamatDealerNotEqualTo(String)
+ Criteria andAlamatDealerGreaterThan(String)
+ Criteria andAlamatDealerGreaterThanOrEqualTo(String)
+ Criteria andAlamatDealerLessThan(String)
+ Criteria andAlamatDealerLessThanOrEqualTo(String)
+ Criteria andAlamatDealerLike(String)
+ Criteria andAlamatDealerNotLike(String)
+ Criteria andAlamatDealerIn(List<String>)
+ Criteria andAlamatDealerNotIn(List<String>)
+ Criteria andAlamatDealerBetween(String,String)
+ Criteria andAlamatDealerNotBetween(String,String)
+ Criteria andNamaDealerIsNull()
+ Criteria andNamaDealerIsNotNull()
+ Criteria andNamaDealerEqualTo(String)
+ Criteria andNamaDealerNotEqualTo(String)
+ Criteria andNamaDealerGreaterThan(String)
+ Criteria andNamaDealerGreaterThanOrEqualTo(String)
+ Criteria andNamaDealerLessThan(String)
+ Criteria andNamaDealerLessThanOrEqualTo(String)
+ Criteria andNamaDealerLike(String)
+ Criteria andNamaDealerNotLike(String)
+ Criteria andNamaDealerIn(List<String>)
+ Criteria andNamaDealerNotIn(List<String>)
+ Criteria andNamaDealerBetween(String,String)
+ Criteria andNamaDealerNotBetween(String,String)
+ Criteria andTglAngs1DdIsNull()
+ Criteria andTglAngs1DdIsNotNull()
+ Criteria andTglAngs1DdEqualTo(String)
+ Criteria andTglAngs1DdNotEqualTo(String)
+ Criteria andTglAngs1DdGreaterThan(String)
+ Criteria andTglAngs1DdGreaterThanOrEqualTo(String)
+ Criteria andTglAngs1DdLessThan(String)
+ Criteria andTglAngs1DdLessThanOrEqualTo(String)
+ Criteria andTglAngs1DdLike(String)
+ Criteria andTglAngs1DdNotLike(String)
+ Criteria andTglAngs1DdIn(List<String>)
+ Criteria andTglAngs1DdNotIn(List<String>)
+ Criteria andTglAngs1DdBetween(String,String)
+ Criteria andTglAngs1DdNotBetween(String,String)
+ Criteria andBiayaLainnyaYangDikreditkanIsNull()
+ Criteria andBiayaLainnyaYangDikreditkanIsNotNull()
+ Criteria andBiayaLainnyaYangDikreditkanEqualTo(String)
+ Criteria andBiayaLainnyaYangDikreditkanNotEqualTo(String)
+ Criteria andBiayaLainnyaYangDikreditkanGreaterThan(String)
+ Criteria andBiayaLainnyaYangDikreditkanGreaterThanOrEqualTo(String)
+ Criteria andBiayaLainnyaYangDikreditkanLessThan(String)
+ Criteria andBiayaLainnyaYangDikreditkanLessThanOrEqualTo(String)
+ Criteria andBiayaLainnyaYangDikreditkanLike(String)
+ Criteria andBiayaLainnyaYangDikreditkanNotLike(String)
+ Criteria andBiayaLainnyaYangDikreditkanIn(List<String>)
+ Criteria andBiayaLainnyaYangDikreditkanNotIn(List<String>)
+ Criteria andBiayaLainnyaYangDikreditkanBetween(String,String)
+ Criteria andBiayaLainnyaYangDikreditkanNotBetween(String,String)
+ Criteria andBiayaAsuransuJiwaIsNull()
+ Criteria andBiayaAsuransuJiwaIsNotNull()
+ Criteria andBiayaAsuransuJiwaEqualTo(String)
+ Criteria andBiayaAsuransuJiwaNotEqualTo(String)
+ Criteria andBiayaAsuransuJiwaGreaterThan(String)
+ Criteria andBiayaAsuransuJiwaGreaterThanOrEqualTo(String)
+ Criteria andBiayaAsuransuJiwaLessThan(String)
+ Criteria andBiayaAsuransuJiwaLessThanOrEqualTo(String)
+ Criteria andBiayaAsuransuJiwaLike(String)
+ Criteria andBiayaAsuransuJiwaNotLike(String)
+ Criteria andBiayaAsuransuJiwaIn(List<String>)
+ Criteria andBiayaAsuransuJiwaNotIn(List<String>)
+ Criteria andBiayaAsuransuJiwaBetween(String,String)
+ Criteria andBiayaAsuransuJiwaNotBetween(String,String)
+ Criteria andBiayaAsuransiKendaraanIsNull()
+ Criteria andBiayaAsuransiKendaraanIsNotNull()
+ Criteria andBiayaAsuransiKendaraanEqualTo(String)
+ Criteria andBiayaAsuransiKendaraanNotEqualTo(String)
+ Criteria andBiayaAsuransiKendaraanGreaterThan(String)
+ Criteria andBiayaAsuransiKendaraanGreaterThanOrEqualTo(String)
+ Criteria andBiayaAsuransiKendaraanLessThan(String)
+ Criteria andBiayaAsuransiKendaraanLessThanOrEqualTo(String)
+ Criteria andBiayaAsuransiKendaraanLike(String)
+ Criteria andBiayaAsuransiKendaraanNotLike(String)
+ Criteria andBiayaAsuransiKendaraanIn(List<String>)
+ Criteria andBiayaAsuransiKendaraanNotIn(List<String>)
+ Criteria andBiayaAsuransiKendaraanBetween(String,String)
+ Criteria andBiayaAsuransiKendaraanNotBetween(String,String)
+ Criteria andNetDpIsNull()
+ Criteria andNetDpIsNotNull()
+ Criteria andNetDpEqualTo(String)
+ Criteria andNetDpNotEqualTo(String)
+ Criteria andNetDpGreaterThan(String)
+ Criteria andNetDpGreaterThanOrEqualTo(String)
+ Criteria andNetDpLessThan(String)
+ Criteria andNetDpLessThanOrEqualTo(String)
+ Criteria andNetDpLike(String)
+ Criteria andNetDpNotLike(String)
+ Criteria andNetDpIn(List<String>)
+ Criteria andNetDpNotIn(List<String>)
+ Criteria andNetDpBetween(String,String)
+ Criteria andNetDpNotBetween(String,String)
+ Criteria andNoPkIsNull()
+ Criteria andNoPkIsNotNull()
+ Criteria andNoPkEqualTo(String)
+ Criteria andNoPkNotEqualTo(String)
+ Criteria andNoPkGreaterThan(String)
+ Criteria andNoPkGreaterThanOrEqualTo(String)
+ Criteria andNoPkLessThan(String)
+ Criteria andNoPkLessThanOrEqualTo(String)
+ Criteria andNoPkLike(String)
+ Criteria andNoPkNotLike(String)
+ Criteria andNoPkIn(List<String>)
+ Criteria andNoPkNotIn(List<String>)
+ Criteria andNoPkBetween(String,String)
+ Criteria andNoPkNotBetween(String,String)
+ Criteria andTenorAwalIsNull()
+ Criteria andTenorAwalIsNotNull()
+ Criteria andTenorAwalEqualTo(String)
+ Criteria andTenorAwalNotEqualTo(String)
+ Criteria andTenorAwalGreaterThan(String)
+ Criteria andTenorAwalGreaterThanOrEqualTo(String)
+ Criteria andTenorAwalLessThan(String)
+ Criteria andTenorAwalLessThanOrEqualTo(String)
+ Criteria andTenorAwalLike(String)
+ Criteria andTenorAwalNotLike(String)
+ Criteria andTenorAwalIn(List<String>)
+ Criteria andTenorAwalNotIn(List<String>)
+ Criteria andTenorAwalBetween(String,String)
+ Criteria andTenorAwalNotBetween(String,String)
+ Criteria andPokokAwalIsNull()
+ Criteria andPokokAwalIsNotNull()
+ Criteria andPokokAwalEqualTo(String)
+ Criteria andPokokAwalNotEqualTo(String)
+ Criteria andPokokAwalGreaterThan(String)
+ Criteria andPokokAwalGreaterThanOrEqualTo(String)
+ Criteria andPokokAwalLessThan(String)
+ Criteria andPokokAwalLessThanOrEqualTo(String)
+ Criteria andPokokAwalLike(String)
+ Criteria andPokokAwalNotLike(String)
+ Criteria andPokokAwalIn(List<String>)
+ Criteria andPokokAwalNotIn(List<String>)
+ Criteria andPokokAwalBetween(String,String)
+ Criteria andPokokAwalNotBetween(String,String)
+ Criteria andPeriodePembayaranIsNull()
+ Criteria andPeriodePembayaranIsNotNull()
+ Criteria andPeriodePembayaranEqualTo(String)
+ Criteria andPeriodePembayaranNotEqualTo(String)
+ Criteria andPeriodePembayaranGreaterThan(String)
+ Criteria andPeriodePembayaranGreaterThanOrEqualTo(String)
+ Criteria andPeriodePembayaranLessThan(String)
+ Criteria andPeriodePembayaranLessThanOrEqualTo(String)
+ Criteria andPeriodePembayaranLike(String)
+ Criteria andPeriodePembayaranNotLike(String)
+ Criteria andPeriodePembayaranIn(List<String>)
+ Criteria andPeriodePembayaranNotIn(List<String>)
+ Criteria andPeriodePembayaranBetween(String,String)
+ Criteria andPeriodePembayaranNotBetween(String,String)
+ Criteria andCaraBayarLainIsNull()
+ Criteria andCaraBayarLainIsNotNull()
+ Criteria andCaraBayarLainEqualTo(String)
+ Criteria andCaraBayarLainNotEqualTo(String)
+ Criteria andCaraBayarLainGreaterThan(String)
+ Criteria andCaraBayarLainGreaterThanOrEqualTo(String)
+ Criteria andCaraBayarLainLessThan(String)
+ Criteria andCaraBayarLainLessThanOrEqualTo(String)
+ Criteria andCaraBayarLainLike(String)
+ Criteria andCaraBayarLainNotLike(String)
+ Criteria andCaraBayarLainIn(List<String>)
+ Criteria andCaraBayarLainNotIn(List<String>)
+ Criteria andCaraBayarLainBetween(String,String)
+ Criteria andCaraBayarLainNotBetween(String,String)
+ Criteria andBiayaLainIsNull()
+ Criteria andBiayaLainIsNotNull()
+ Criteria andBiayaLainEqualTo(String)
+ Criteria andBiayaLainNotEqualTo(String)
+ Criteria andBiayaLainGreaterThan(String)
+ Criteria andBiayaLainGreaterThanOrEqualTo(String)
+ Criteria andBiayaLainLessThan(String)
+ Criteria andBiayaLainLessThanOrEqualTo(String)
+ Criteria andBiayaLainLike(String)
+ Criteria andBiayaLainNotLike(String)
+ Criteria andBiayaLainIn(List<String>)
+ Criteria andBiayaLainNotIn(List<String>)
+ Criteria andBiayaLainBetween(String,String)
+ Criteria andBiayaLainNotBetween(String,String)
+ Criteria andKodePaketIsNull()
+ Criteria andKodePaketIsNotNull()
+ Criteria andKodePaketEqualTo(String)
+ Criteria andKodePaketNotEqualTo(String)
+ Criteria andKodePaketGreaterThan(String)
+ Criteria andKodePaketGreaterThanOrEqualTo(String)
+ Criteria andKodePaketLessThan(String)
+ Criteria andKodePaketLessThanOrEqualTo(String)
+ Criteria andKodePaketLike(String)
+ Criteria andKodePaketNotLike(String)
+ Criteria andKodePaketIn(List<String>)
+ Criteria andKodePaketNotIn(List<String>)
+ Criteria andKodePaketBetween(String,String)
+ Criteria andKodePaketNotBetween(String,String)
+ Criteria andPembayaranPremiIsNull()
+ Criteria andPembayaranPremiIsNotNull()
+ Criteria andPembayaranPremiEqualTo(String)
+ Criteria andPembayaranPremiNotEqualTo(String)
+ Criteria andPembayaranPremiGreaterThan(String)
+ Criteria andPembayaranPremiGreaterThanOrEqualTo(String)
+ Criteria andPembayaranPremiLessThan(String)
+ Criteria andPembayaranPremiLessThanOrEqualTo(String)
+ Criteria andPembayaranPremiLike(String)
+ Criteria andPembayaranPremiNotLike(String)
+ Criteria andPembayaranPremiIn(List<String>)
+ Criteria andPembayaranPremiNotIn(List<String>)
+ Criteria andPembayaranPremiBetween(String,String)
+ Criteria andPembayaranPremiNotBetween(String,String)
+ Criteria andPremiAsuransiIsNull()
+ Criteria andPremiAsuransiIsNotNull()
+ Criteria andPremiAsuransiEqualTo(String)
+ Criteria andPremiAsuransiNotEqualTo(String)
+ Criteria andPremiAsuransiGreaterThan(String)
+ Criteria andPremiAsuransiGreaterThanOrEqualTo(String)
+ Criteria andPremiAsuransiLessThan(String)
+ Criteria andPremiAsuransiLessThanOrEqualTo(String)
+ Criteria andPremiAsuransiLike(String)
+ Criteria andPremiAsuransiNotLike(String)
+ Criteria andPremiAsuransiIn(List<String>)
+ Criteria andPremiAsuransiNotIn(List<String>)
+ Criteria andPremiAsuransiBetween(String,String)
+ Criteria andPremiAsuransiNotBetween(String,String)
+ Criteria andJenisAsuransiIsNull()
+ Criteria andJenisAsuransiIsNotNull()
+ Criteria andJenisAsuransiEqualTo(String)
+ Criteria andJenisAsuransiNotEqualTo(String)
+ Criteria andJenisAsuransiGreaterThan(String)
+ Criteria andJenisAsuransiGreaterThanOrEqualTo(String)
+ Criteria andJenisAsuransiLessThan(String)
+ Criteria andJenisAsuransiLessThanOrEqualTo(String)
+ Criteria andJenisAsuransiLike(String)
+ Criteria andJenisAsuransiNotLike(String)
+ Criteria andJenisAsuransiIn(List<String>)
+ Criteria andJenisAsuransiNotIn(List<String>)
+ Criteria andJenisAsuransiBetween(String,String)
+ Criteria andJenisAsuransiNotBetween(String,String)
+ Criteria andAlamat2AsuransiIsNull()
+ Criteria andAlamat2AsuransiIsNotNull()
+ Criteria andAlamat2AsuransiEqualTo(String)
+ Criteria andAlamat2AsuransiNotEqualTo(String)
+ Criteria andAlamat2AsuransiGreaterThan(String)
+ Criteria andAlamat2AsuransiGreaterThanOrEqualTo(String)
+ Criteria andAlamat2AsuransiLessThan(String)
+ Criteria andAlamat2AsuransiLessThanOrEqualTo(String)
+ Criteria andAlamat2AsuransiLike(String)
+ Criteria andAlamat2AsuransiNotLike(String)
+ Criteria andAlamat2AsuransiIn(List<String>)
+ Criteria andAlamat2AsuransiNotIn(List<String>)
+ Criteria andAlamat2AsuransiBetween(String,String)
+ Criteria andAlamat2AsuransiNotBetween(String,String)
+ Criteria andAlamat1AsuransiIsNull()
+ Criteria andAlamat1AsuransiIsNotNull()
+ Criteria andAlamat1AsuransiEqualTo(String)
+ Criteria andAlamat1AsuransiNotEqualTo(String)
+ Criteria andAlamat1AsuransiGreaterThan(String)
+ Criteria andAlamat1AsuransiGreaterThanOrEqualTo(String)
+ Criteria andAlamat1AsuransiLessThan(String)
+ Criteria andAlamat1AsuransiLessThanOrEqualTo(String)
+ Criteria andAlamat1AsuransiLike(String)
+ Criteria andAlamat1AsuransiNotLike(String)
+ Criteria andAlamat1AsuransiIn(List<String>)
+ Criteria andAlamat1AsuransiNotIn(List<String>)
+ Criteria andAlamat1AsuransiBetween(String,String)
+ Criteria andAlamat1AsuransiNotBetween(String,String)
+ Criteria andAlamatAsuransiIsNull()
+ Criteria andAlamatAsuransiIsNotNull()
+ Criteria andAlamatAsuransiEqualTo(String)
+ Criteria andAlamatAsuransiNotEqualTo(String)
+ Criteria andAlamatAsuransiGreaterThan(String)
+ Criteria andAlamatAsuransiGreaterThanOrEqualTo(String)
+ Criteria andAlamatAsuransiLessThan(String)
+ Criteria andAlamatAsuransiLessThanOrEqualTo(String)
+ Criteria andAlamatAsuransiLike(String)
+ Criteria andAlamatAsuransiNotLike(String)
+ Criteria andAlamatAsuransiIn(List<String>)
+ Criteria andAlamatAsuransiNotIn(List<String>)
+ Criteria andAlamatAsuransiBetween(String,String)
+ Criteria andAlamatAsuransiNotBetween(String,String)
+ Criteria andNamaPtAsuransiIsNull()
+ Criteria andNamaPtAsuransiIsNotNull()
+ Criteria andNamaPtAsuransiEqualTo(String)
+ Criteria andNamaPtAsuransiNotEqualTo(String)
+ Criteria andNamaPtAsuransiGreaterThan(String)
+ Criteria andNamaPtAsuransiGreaterThanOrEqualTo(String)
+ Criteria andNamaPtAsuransiLessThan(String)
+ Criteria andNamaPtAsuransiLessThanOrEqualTo(String)
+ Criteria andNamaPtAsuransiLike(String)
+ Criteria andNamaPtAsuransiNotLike(String)
+ Criteria andNamaPtAsuransiIn(List<String>)
+ Criteria andNamaPtAsuransiNotIn(List<String>)
+ Criteria andNamaPtAsuransiBetween(String,String)
+ Criteria andNamaPtAsuransiNotBetween(String,String)
+ Criteria andNilaiAgunanIsNull()
+ Criteria andNilaiAgunanIsNotNull()
+ Criteria andNilaiAgunanEqualTo(String)
+ Criteria andNilaiAgunanNotEqualTo(String)
+ Criteria andNilaiAgunanGreaterThan(String)
+ Criteria andNilaiAgunanGreaterThanOrEqualTo(String)
+ Criteria andNilaiAgunanLessThan(String)
+ Criteria andNilaiAgunanLessThanOrEqualTo(String)
+ Criteria andNilaiAgunanLike(String)
+ Criteria andNilaiAgunanNotLike(String)
+ Criteria andNilaiAgunanIn(List<String>)
+ Criteria andNilaiAgunanNotIn(List<String>)
+ Criteria andNilaiAgunanBetween(String,String)
+ Criteria andNilaiAgunanNotBetween(String,String)
+ Criteria andKondisiAgunanIsNull()
+ Criteria andKondisiAgunanIsNotNull()
+ Criteria andKondisiAgunanEqualTo(String)
+ Criteria andKondisiAgunanNotEqualTo(String)
+ Criteria andKondisiAgunanGreaterThan(String)
+ Criteria andKondisiAgunanGreaterThanOrEqualTo(String)
+ Criteria andKondisiAgunanLessThan(String)
+ Criteria andKondisiAgunanLessThanOrEqualTo(String)
+ Criteria andKondisiAgunanLike(String)
+ Criteria andKondisiAgunanNotLike(String)
+ Criteria andKondisiAgunanIn(List<String>)
+ Criteria andKondisiAgunanNotIn(List<String>)
+ Criteria andKondisiAgunanBetween(String,String)
+ Criteria andKondisiAgunanNotBetween(String,String)
+ Criteria andBungaBankIsNull()
+ Criteria andBungaBankIsNotNull()
+ Criteria andBungaBankEqualTo(String)
+ Criteria andBungaBankNotEqualTo(String)
+ Criteria andBungaBankGreaterThan(String)
+ Criteria andBungaBankGreaterThanOrEqualTo(String)
+ Criteria andBungaBankLessThan(String)
+ Criteria andBungaBankLessThanOrEqualTo(String)
+ Criteria andBungaBankLike(String)
+ Criteria andBungaBankNotLike(String)
+ Criteria andBungaBankIn(List<String>)
+ Criteria andBungaBankNotIn(List<String>)
+ Criteria andBungaBankBetween(String,String)
+ Criteria andBungaBankNotBetween(String,String)
+ Criteria andBungaIsNull()
+ Criteria andBungaIsNotNull()
+ Criteria andBungaEqualTo(String)
+ Criteria andBungaNotEqualTo(String)
+ Criteria andBungaGreaterThan(String)
+ Criteria andBungaGreaterThanOrEqualTo(String)
+ Criteria andBungaLessThan(String)
+ Criteria andBungaLessThanOrEqualTo(String)
+ Criteria andBungaLike(String)
+ Criteria andBungaNotLike(String)
+ Criteria andBungaIn(List<String>)
+ Criteria andBungaNotIn(List<String>)
+ Criteria andBungaBetween(String,String)
+ Criteria andBungaNotBetween(String,String)
+ Criteria andAngsuranBankIsNull()
+ Criteria andAngsuranBankIsNotNull()
+ Criteria andAngsuranBankEqualTo(String)
+ Criteria andAngsuranBankNotEqualTo(String)
+ Criteria andAngsuranBankGreaterThan(String)
+ Criteria andAngsuranBankGreaterThanOrEqualTo(String)
+ Criteria andAngsuranBankLessThan(String)
+ Criteria andAngsuranBankLessThanOrEqualTo(String)
+ Criteria andAngsuranBankLike(String)
+ Criteria andAngsuranBankNotLike(String)
+ Criteria andAngsuranBankIn(List<String>)
+ Criteria andAngsuranBankNotIn(List<String>)
+ Criteria andAngsuranBankBetween(String,String)
+ Criteria andAngsuranBankNotBetween(String,String)
+ Criteria andAngsuranDebiturIsNull()
+ Criteria andAngsuranDebiturIsNotNull()
+ Criteria andAngsuranDebiturEqualTo(String)
+ Criteria andAngsuranDebiturNotEqualTo(String)
+ Criteria andAngsuranDebiturGreaterThan(String)
+ Criteria andAngsuranDebiturGreaterThanOrEqualTo(String)
+ Criteria andAngsuranDebiturLessThan(String)
+ Criteria andAngsuranDebiturLessThanOrEqualTo(String)
+ Criteria andAngsuranDebiturLike(String)
+ Criteria andAngsuranDebiturNotLike(String)
+ Criteria andAngsuranDebiturIn(List<String>)
+ Criteria andAngsuranDebiturNotIn(List<String>)
+ Criteria andAngsuranDebiturBetween(String,String)
+ Criteria andAngsuranDebiturNotBetween(String,String)
+ Criteria andAddmIsNull()
+ Criteria andAddmIsNotNull()
+ Criteria andAddmEqualTo(String)
+ Criteria andAddmNotEqualTo(String)
+ Criteria andAddmGreaterThan(String)
+ Criteria andAddmGreaterThanOrEqualTo(String)
+ Criteria andAddmLessThan(String)
+ Criteria andAddmLessThanOrEqualTo(String)
+ Criteria andAddmLike(String)
+ Criteria andAddmNotLike(String)
+ Criteria andAddmIn(List<String>)
+ Criteria andAddmNotIn(List<String>)
+ Criteria andAddmBetween(String,String)
+ Criteria andAddmNotBetween(String,String)
+ Criteria andCostBankIsNull()
+ Criteria andCostBankIsNotNull()
+ Criteria andCostBankEqualTo(String)
+ Criteria andCostBankNotEqualTo(String)
+ Criteria andCostBankGreaterThan(String)
+ Criteria andCostBankGreaterThanOrEqualTo(String)
+ Criteria andCostBankLessThan(String)
+ Criteria andCostBankLessThanOrEqualTo(String)
+ Criteria andCostBankLike(String)
+ Criteria andCostBankNotLike(String)
+ Criteria andCostBankIn(List<String>)
+ Criteria andCostBankNotIn(List<String>)
+ Criteria andCostBankBetween(String,String)
+ Criteria andCostBankNotBetween(String,String)
+ Criteria andCostIsNull()
+ Criteria andCostIsNotNull()
+ Criteria andCostEqualTo(String)
+ Criteria andCostNotEqualTo(String)
+ Criteria andCostGreaterThan(String)
+ Criteria andCostGreaterThanOrEqualTo(String)
+ Criteria andCostLessThan(String)
+ Criteria andCostLessThanOrEqualTo(String)
+ Criteria andCostLike(String)
+ Criteria andCostNotLike(String)
+ Criteria andCostIn(List<String>)
+ Criteria andCostNotIn(List<String>)
+ Criteria andCostBetween(String,String)
+ Criteria andCostNotBetween(String,String)
+ Criteria andJumlahAngsuranIsNull()
+ Criteria andJumlahAngsuranIsNotNull()
+ Criteria andJumlahAngsuranEqualTo(String)
+ Criteria andJumlahAngsuranNotEqualTo(String)
+ Criteria andJumlahAngsuranGreaterThan(String)
+ Criteria andJumlahAngsuranGreaterThanOrEqualTo(String)
+ Criteria andJumlahAngsuranLessThan(String)
+ Criteria andJumlahAngsuranLessThanOrEqualTo(String)
+ Criteria andJumlahAngsuranLike(String)
+ Criteria andJumlahAngsuranNotLike(String)
+ Criteria andJumlahAngsuranIn(List<String>)
+ Criteria andJumlahAngsuranNotIn(List<String>)
+ Criteria andJumlahAngsuranBetween(String,String)
+ Criteria andJumlahAngsuranNotBetween(String,String)
+ Criteria andTglAngsuranIsNull()
+ Criteria andTglAngsuranIsNotNull()
+ Criteria andTglAngsuranEqualTo(String)
+ Criteria andTglAngsuranNotEqualTo(String)
+ Criteria andTglAngsuranGreaterThan(String)
+ Criteria andTglAngsuranGreaterThanOrEqualTo(String)
+ Criteria andTglAngsuranLessThan(String)
+ Criteria andTglAngsuranLessThanOrEqualTo(String)
+ Criteria andTglAngsuranLike(String)
+ Criteria andTglAngsuranNotLike(String)
+ Criteria andTglAngsuranIn(List<String>)
+ Criteria andTglAngsuranNotIn(List<String>)
+ Criteria andTglAngsuranBetween(String,String)
+ Criteria andTglAngsuranNotBetween(String,String)
+ Criteria andTglValidIsNull()
+ Criteria andTglValidIsNotNull()
+ Criteria andTglValidEqualTo(String)
+ Criteria andTglValidNotEqualTo(String)
+ Criteria andTglValidGreaterThan(String)
+ Criteria andTglValidGreaterThanOrEqualTo(String)
+ Criteria andTglValidLessThan(String)
+ Criteria andTglValidLessThanOrEqualTo(String)
+ Criteria andTglValidLike(String)
+ Criteria andTglValidNotLike(String)
+ Criteria andTglValidIn(List<String>)
+ Criteria andTglValidNotIn(List<String>)
+ Criteria andTglValidBetween(String,String)
+ Criteria andTglValidNotBetween(String,String)
+ Criteria andTglPkIsNull()
+ Criteria andTglPkIsNotNull()
+ Criteria andTglPkEqualTo(String)
+ Criteria andTglPkNotEqualTo(String)
+ Criteria andTglPkGreaterThan(String)
+ Criteria andTglPkGreaterThanOrEqualTo(String)
+ Criteria andTglPkLessThan(String)
+ Criteria andTglPkLessThanOrEqualTo(String)
+ Criteria andTglPkLike(String)
+ Criteria andTglPkNotLike(String)
+ Criteria andTglPkIn(List<String>)
+ Criteria andTglPkNotIn(List<String>)
+ Criteria andTglPkBetween(String,String)
+ Criteria andTglPkNotBetween(String,String)
+ Criteria andNoPinjamanIsNull()
+ Criteria andNoPinjamanIsNotNull()
+ Criteria andNoPinjamanEqualTo(String)
+ Criteria andNoPinjamanNotEqualTo(String)
+ Criteria andNoPinjamanGreaterThan(String)
+ Criteria andNoPinjamanGreaterThanOrEqualTo(String)
+ Criteria andNoPinjamanLessThan(String)
+ Criteria andNoPinjamanLessThanOrEqualTo(String)
+ Criteria andNoPinjamanLike(String)
+ Criteria andNoPinjamanNotLike(String)
+ Criteria andNoPinjamanIn(List<String>)
+ Criteria andNoPinjamanNotIn(List<String>)
+ Criteria andNoPinjamanBetween(String,String)
+ Criteria andNoPinjamanNotBetween(String,String)
+ Criteria andJenisPenggunaanKreditIsNull()
+ Criteria andJenisPenggunaanKreditIsNotNull()
+ Criteria andJenisPenggunaanKreditEqualTo(String)
+ Criteria andJenisPenggunaanKreditNotEqualTo(String)
+ Criteria andJenisPenggunaanKreditGreaterThan(String)
+ Criteria andJenisPenggunaanKreditGreaterThanOrEqualTo(String)
+ Criteria andJenisPenggunaanKreditLessThan(String)
+ Criteria andJenisPenggunaanKreditLessThanOrEqualTo(String)
+ Criteria andJenisPenggunaanKreditLike(String)
+ Criteria andJenisPenggunaanKreditNotLike(String)
+ Criteria andJenisPenggunaanKreditIn(List<String>)
+ Criteria andJenisPenggunaanKreditNotIn(List<String>)
+ Criteria andJenisPenggunaanKreditBetween(String,String)
+ Criteria andJenisPenggunaanKreditNotBetween(String,String)
+ Criteria andKategoriDebiturUmkmIsNull()
+ Criteria andKategoriDebiturUmkmIsNotNull()
+ Criteria andKategoriDebiturUmkmEqualTo(String)
+ Criteria andKategoriDebiturUmkmNotEqualTo(String)
+ Criteria andKategoriDebiturUmkmGreaterThan(String)
+ Criteria andKategoriDebiturUmkmGreaterThanOrEqualTo(String)
+ Criteria andKategoriDebiturUmkmLessThan(String)
+ Criteria andKategoriDebiturUmkmLessThanOrEqualTo(String)
+ Criteria andKategoriDebiturUmkmLike(String)
+ Criteria andKategoriDebiturUmkmNotLike(String)
+ Criteria andKategoriDebiturUmkmIn(List<String>)
+ Criteria andKategoriDebiturUmkmNotIn(List<String>)
+ Criteria andKategoriDebiturUmkmBetween(String,String)
+ Criteria andKategoriDebiturUmkmNotBetween(String,String)
+ Criteria andAlamatEmailDebiturPeroranganIsNull()
+ Criteria andAlamatEmailDebiturPeroranganIsNotNull()
+ Criteria andAlamatEmailDebiturPeroranganEqualTo(String)
+ Criteria andAlamatEmailDebiturPeroranganNotEqualTo(String)
+ Criteria andAlamatEmailDebiturPeroranganGreaterThan(String)
+ Criteria andAlamatEmailDebiturPeroranganGreaterThanOrEqualTo(String)
+ Criteria andAlamatEmailDebiturPeroranganLessThan(String)
+ Criteria andAlamatEmailDebiturPeroranganLessThanOrEqualTo(String)
+ Criteria andAlamatEmailDebiturPeroranganLike(String)
+ Criteria andAlamatEmailDebiturPeroranganNotLike(String)
+ Criteria andAlamatEmailDebiturPeroranganIn(List<String>)
+ Criteria andAlamatEmailDebiturPeroranganNotIn(List<String>)
+ Criteria andAlamatEmailDebiturPeroranganBetween(String,String)
+ Criteria andAlamatEmailDebiturPeroranganNotBetween(String,String)
+ Criteria andKodeBidangUsahaSlikIsNull()
+ Criteria andKodeBidangUsahaSlikIsNotNull()
+ Criteria andKodeBidangUsahaSlikEqualTo(String)
+ Criteria andKodeBidangUsahaSlikNotEqualTo(String)
+ Criteria andKodeBidangUsahaSlikGreaterThan(String)
+ Criteria andKodeBidangUsahaSlikGreaterThanOrEqualTo(String)
+ Criteria andKodeBidangUsahaSlikLessThan(String)
+ Criteria andKodeBidangUsahaSlikLessThanOrEqualTo(String)
+ Criteria andKodeBidangUsahaSlikLike(String)
+ Criteria andKodeBidangUsahaSlikNotLike(String)
+ Criteria andKodeBidangUsahaSlikIn(List<String>)
+ Criteria andKodeBidangUsahaSlikNotIn(List<String>)
+ Criteria andKodeBidangUsahaSlikBetween(String,String)
+ Criteria andKodeBidangUsahaSlikNotBetween(String,String)
+ Criteria andKodeJenisPenggunaaanIsNull()
+ Criteria andKodeJenisPenggunaaanIsNotNull()
+ Criteria andKodeJenisPenggunaaanEqualTo(String)
+ Criteria andKodeJenisPenggunaaanNotEqualTo(String)
+ Criteria andKodeJenisPenggunaaanGreaterThan(String)
+ Criteria andKodeJenisPenggunaaanGreaterThanOrEqualTo(String)
+ Criteria andKodeJenisPenggunaaanLessThan(String)
+ Criteria andKodeJenisPenggunaaanLessThanOrEqualTo(String)
+ Criteria andKodeJenisPenggunaaanLike(String)
+ Criteria andKodeJenisPenggunaaanNotLike(String)
+ Criteria andKodeJenisPenggunaaanIn(List<String>)
+ Criteria andKodeJenisPenggunaaanNotIn(List<String>)
+ Criteria andKodeJenisPenggunaaanBetween(String,String)
+ Criteria andKodeJenisPenggunaaanNotBetween(String,String)
+ Criteria andTakeoverDariIsNull()
+ Criteria andTakeoverDariIsNotNull()
+ Criteria andTakeoverDariEqualTo(String)
+ Criteria andTakeoverDariNotEqualTo(String)
+ Criteria andTakeoverDariGreaterThan(String)
+ Criteria andTakeoverDariGreaterThanOrEqualTo(String)
+ Criteria andTakeoverDariLessThan(String)
+ Criteria andTakeoverDariLessThanOrEqualTo(String)
+ Criteria andTakeoverDariLike(String)
+ Criteria andTakeoverDariNotLike(String)
+ Criteria andTakeoverDariIn(List<String>)
+ Criteria andTakeoverDariNotIn(List<String>)
+ Criteria andTakeoverDariBetween(String,String)
+ Criteria andTakeoverDariNotBetween(String,String)
+ Criteria andGolonganKreditIsNull()
+ Criteria andGolonganKreditIsNotNull()
+ Criteria andGolonganKreditEqualTo(String)
+ Criteria andGolonganKreditNotEqualTo(String)
+ Criteria andGolonganKreditGreaterThan(String)
+ Criteria andGolonganKreditGreaterThanOrEqualTo(String)
+ Criteria andGolonganKreditLessThan(String)
+ Criteria andGolonganKreditLessThanOrEqualTo(String)
+ Criteria andGolonganKreditLike(String)
+ Criteria andGolonganKreditNotLike(String)
+ Criteria andGolonganKreditIn(List<String>)
+ Criteria andGolonganKreditNotIn(List<String>)
+ Criteria andGolonganKreditBetween(String,String)
+ Criteria andGolonganKreditNotBetween(String,String)
+ Criteria andPerjanjianPisahHartaIsNull()
+ Criteria andPerjanjianPisahHartaIsNotNull()
+ Criteria andPerjanjianPisahHartaEqualTo(String)
+ Criteria andPerjanjianPisahHartaNotEqualTo(String)
+ Criteria andPerjanjianPisahHartaGreaterThan(String)
+ Criteria andPerjanjianPisahHartaGreaterThanOrEqualTo(String)
+ Criteria andPerjanjianPisahHartaLessThan(String)
+ Criteria andPerjanjianPisahHartaLessThanOrEqualTo(String)
+ Criteria andPerjanjianPisahHartaLike(String)
+ Criteria andPerjanjianPisahHartaNotLike(String)
+ Criteria andPerjanjianPisahHartaIn(List<String>)
+ Criteria andPerjanjianPisahHartaNotIn(List<String>)
+ Criteria andPerjanjianPisahHartaBetween(String,String)
+ Criteria andPerjanjianPisahHartaNotBetween(String,String)
+ Criteria andTanggalLahirPasanganIsNull()
+ Criteria andTanggalLahirPasanganIsNotNull()
+ Criteria andTanggalLahirPasanganEqualTo(String)
+ Criteria andTanggalLahirPasanganNotEqualTo(String)
+ Criteria andTanggalLahirPasanganGreaterThan(String)
+ Criteria andTanggalLahirPasanganGreaterThanOrEqualTo(String)
+ Criteria andTanggalLahirPasanganLessThan(String)
+ Criteria andTanggalLahirPasanganLessThanOrEqualTo(String)
+ Criteria andTanggalLahirPasanganLike(String)
+ Criteria andTanggalLahirPasanganNotLike(String)
+ Criteria andTanggalLahirPasanganIn(List<String>)
+ Criteria andTanggalLahirPasanganNotIn(List<String>)
+ Criteria andTanggalLahirPasanganBetween(String,String)
+ Criteria andTanggalLahirPasanganNotBetween(String,String)
+ Criteria andNamaPasanganSesuaiIdIsNull()
+ Criteria andNamaPasanganSesuaiIdIsNotNull()
+ Criteria andNamaPasanganSesuaiIdEqualTo(String)
+ Criteria andNamaPasanganSesuaiIdNotEqualTo(String)
+ Criteria andNamaPasanganSesuaiIdGreaterThan(String)
+ Criteria andNamaPasanganSesuaiIdGreaterThanOrEqualTo(String)
+ Criteria andNamaPasanganSesuaiIdLessThan(String)
+ Criteria andNamaPasanganSesuaiIdLessThanOrEqualTo(String)
+ Criteria andNamaPasanganSesuaiIdLike(String)
+ Criteria andNamaPasanganSesuaiIdNotLike(String)
+ Criteria andNamaPasanganSesuaiIdIn(List<String>)
+ Criteria andNamaPasanganSesuaiIdNotIn(List<String>)
+ Criteria andNamaPasanganSesuaiIdBetween(String,String)
+ Criteria andNamaPasanganSesuaiIdNotBetween(String,String)
+ Criteria andNoKtpPasanganIsNull()
+ Criteria andNoKtpPasanganIsNotNull()
+ Criteria andNoKtpPasanganEqualTo(String)
+ Criteria andNoKtpPasanganNotEqualTo(String)
+ Criteria andNoKtpPasanganGreaterThan(String)
+ Criteria andNoKtpPasanganGreaterThanOrEqualTo(String)
+ Criteria andNoKtpPasanganLessThan(String)
+ Criteria andNoKtpPasanganLessThanOrEqualTo(String)
+ Criteria andNoKtpPasanganLike(String)
+ Criteria andNoKtpPasanganNotLike(String)
+ Criteria andNoKtpPasanganIn(List<String>)
+ Criteria andNoKtpPasanganNotIn(List<String>)
+ Criteria andNoKtpPasanganBetween(String,String)
+ Criteria andNoKtpPasanganNotBetween(String,String)
+ Criteria andStatusPerkawinanDebiturIsNull()
+ Criteria andStatusPerkawinanDebiturIsNotNull()
+ Criteria andStatusPerkawinanDebiturEqualTo(String)
+ Criteria andStatusPerkawinanDebiturNotEqualTo(String)
+ Criteria andStatusPerkawinanDebiturGreaterThan(String)
+ Criteria andStatusPerkawinanDebiturGreaterThanOrEqualTo(String)
+ Criteria andStatusPerkawinanDebiturLessThan(String)
+ Criteria andStatusPerkawinanDebiturLessThanOrEqualTo(String)
+ Criteria andStatusPerkawinanDebiturLike(String)
+ Criteria andStatusPerkawinanDebiturNotLike(String)
+ Criteria andStatusPerkawinanDebiturIn(List<String>)
+ Criteria andStatusPerkawinanDebiturNotIn(List<String>)
+ Criteria andStatusPerkawinanDebiturBetween(String,String)
+ Criteria andStatusPerkawinanDebiturNotBetween(String,String)
+ Criteria andJumlahTanggunganIsNull()
+ Criteria andJumlahTanggunganIsNotNull()
+ Criteria andJumlahTanggunganEqualTo(String)
+ Criteria andJumlahTanggunganNotEqualTo(String)
+ Criteria andJumlahTanggunganGreaterThan(String)
+ Criteria andJumlahTanggunganGreaterThanOrEqualTo(String)
+ Criteria andJumlahTanggunganLessThan(String)
+ Criteria andJumlahTanggunganLessThanOrEqualTo(String)
+ Criteria andJumlahTanggunganLike(String)
+ Criteria andJumlahTanggunganNotLike(String)
+ Criteria andJumlahTanggunganIn(List<String>)
+ Criteria andJumlahTanggunganNotIn(List<String>)
+ Criteria andJumlahTanggunganBetween(String,String)
+ Criteria andJumlahTanggunganNotBetween(String,String)
+ Criteria andPenghasilanIsNull()
+ Criteria andPenghasilanIsNotNull()
+ Criteria andPenghasilanEqualTo(String)
+ Criteria andPenghasilanNotEqualTo(String)
+ Criteria andPenghasilanGreaterThan(String)
+ Criteria andPenghasilanGreaterThanOrEqualTo(String)
+ Criteria andPenghasilanLessThan(String)
+ Criteria andPenghasilanLessThanOrEqualTo(String)
+ Criteria andPenghasilanLike(String)
+ Criteria andPenghasilanNotLike(String)
+ Criteria andPenghasilanIn(List<String>)
+ Criteria andPenghasilanNotIn(List<String>)
+ Criteria andPenghasilanBetween(String,String)
+ Criteria andPenghasilanNotBetween(String,String)
+ Criteria andAlamatTempatBekerjaIsNull()
+ Criteria andAlamatTempatBekerjaIsNotNull()
+ Criteria andAlamatTempatBekerjaEqualTo(String)
+ Criteria andAlamatTempatBekerjaNotEqualTo(String)
+ Criteria andAlamatTempatBekerjaGreaterThan(String)
+ Criteria andAlamatTempatBekerjaGreaterThanOrEqualTo(String)
+ Criteria andAlamatTempatBekerjaLessThan(String)
+ Criteria andAlamatTempatBekerjaLessThanOrEqualTo(String)
+ Criteria andAlamatTempatBekerjaLike(String)
+ Criteria andAlamatTempatBekerjaNotLike(String)
+ Criteria andAlamatTempatBekerjaIn(List<String>)
+ Criteria andAlamatTempatBekerjaNotIn(List<String>)
+ Criteria andAlamatTempatBekerjaBetween(String,String)
+ Criteria andAlamatTempatBekerjaNotBetween(String,String)
+ Criteria andIdentitasIsNull()
+ Criteria andIdentitasIsNotNull()
+ Criteria andIdentitasEqualTo(String)
+ Criteria andIdentitasNotEqualTo(String)
+ Criteria andIdentitasGreaterThan(String)
+ Criteria andIdentitasGreaterThanOrEqualTo(String)
+ Criteria andIdentitasLessThan(String)
+ Criteria andIdentitasLessThanOrEqualTo(String)
+ Criteria andIdentitasLike(String)
+ Criteria andIdentitasNotLike(String)
+ Criteria andIdentitasIn(List<String>)
+ Criteria andIdentitasNotIn(List<String>)
+ Criteria andIdentitasBetween(String,String)
+ Criteria andIdentitasNotBetween(String,String)
+ Criteria andTempatLahirSesuaiDatiIsNull()
+ Criteria andTempatLahirSesuaiDatiIsNotNull()
+ Criteria andTempatLahirSesuaiDatiEqualTo(String)
+ Criteria andTempatLahirSesuaiDatiNotEqualTo(String)
+ Criteria andTempatLahirSesuaiDatiGreaterThan(String)
+ Criteria andTempatLahirSesuaiDatiGreaterThanOrEqualTo(String)
+ Criteria andTempatLahirSesuaiDatiLessThan(String)
+ Criteria andTempatLahirSesuaiDatiLessThanOrEqualTo(String)
+ Criteria andTempatLahirSesuaiDatiLike(String)
+ Criteria andTempatLahirSesuaiDatiNotLike(String)
+ Criteria andTempatLahirSesuaiDatiIn(List<String>)
+ Criteria andTempatLahirSesuaiDatiNotIn(List<String>)
+ Criteria andTempatLahirSesuaiDatiBetween(String,String)
+ Criteria andTempatLahirSesuaiDatiNotBetween(String,String)
+ Criteria andNamaDebiturTanpaSingkatanIsNull()
+ Criteria andNamaDebiturTanpaSingkatanIsNotNull()
+ Criteria andNamaDebiturTanpaSingkatanEqualTo(String)
+ Criteria andNamaDebiturTanpaSingkatanNotEqualTo(String)
+ Criteria andNamaDebiturTanpaSingkatanGreaterThan(String)
+ Criteria andNamaDebiturTanpaSingkatanGreaterThanOrEqualTo(String)
+ Criteria andNamaDebiturTanpaSingkatanLessThan(String)
+ Criteria andNamaDebiturTanpaSingkatanLessThanOrEqualTo(String)
+ Criteria andNamaDebiturTanpaSingkatanLike(String)
+ Criteria andNamaDebiturTanpaSingkatanNotLike(String)
+ Criteria andNamaDebiturTanpaSingkatanIn(List<String>)
+ Criteria andNamaDebiturTanpaSingkatanNotIn(List<String>)
+ Criteria andNamaDebiturTanpaSingkatanBetween(String,String)
+ Criteria andNamaDebiturTanpaSingkatanNotBetween(String,String)
+ Criteria andKodeCabangIsNull()
+ Criteria andKodeCabangIsNotNull()
+ Criteria andKodeCabangEqualTo(String)
+ Criteria andKodeCabangNotEqualTo(String)
+ Criteria andKodeCabangGreaterThan(String)
+ Criteria andKodeCabangGreaterThanOrEqualTo(String)
+ Criteria andKodeCabangLessThan(String)
+ Criteria andKodeCabangLessThanOrEqualTo(String)
+ Criteria andKodeCabangLike(String)
+ Criteria andKodeCabangNotLike(String)
+ Criteria andKodeCabangIn(List<String>)
+ Criteria andKodeCabangNotIn(List<String>)
+ Criteria andKodeCabangBetween(String,String)
+ Criteria andKodeCabangNotBetween(String,String)
+ Criteria andDati2IsNull()
+ Criteria andDati2IsNotNull()
+ Criteria andDati2EqualTo(String)
+ Criteria andDati2NotEqualTo(String)
+ Criteria andDati2GreaterThan(String)
+ Criteria andDati2GreaterThanOrEqualTo(String)
+ Criteria andDati2LessThan(String)
+ Criteria andDati2LessThanOrEqualTo(String)
+ Criteria andDati2Like(String)
+ Criteria andDati2NotLike(String)
+ Criteria andDati2In(List<String>)
+ Criteria andDati2NotIn(List<String>)
+ Criteria andDati2Between(String,String)
+ Criteria andDati2NotBetween(String,String)
+ Criteria andTempatPendirianPerusahaanIsNull()
+ Criteria andTempatPendirianPerusahaanIsNotNull()
+ Criteria andTempatPendirianPerusahaanEqualTo(String)
+ Criteria andTempatPendirianPerusahaanNotEqualTo(String)
+ Criteria andTempatPendirianPerusahaanGreaterThan(String)
+ Criteria andTempatPendirianPerusahaanGreaterThanOrEqualTo(String)
+ Criteria andTempatPendirianPerusahaanLessThan(String)
+ Criteria andTempatPendirianPerusahaanLessThanOrEqualTo(String)
+ Criteria andTempatPendirianPerusahaanLike(String)
+ Criteria andTempatPendirianPerusahaanNotLike(String)
+ Criteria andTempatPendirianPerusahaanIn(List<String>)
+ Criteria andTempatPendirianPerusahaanNotIn(List<String>)
+ Criteria andTempatPendirianPerusahaanBetween(String,String)
+ Criteria andTempatPendirianPerusahaanNotBetween(String,String)
+ Criteria andTglAkteAkhirIsNull()
+ Criteria andTglAkteAkhirIsNotNull()
+ Criteria andTglAkteAkhirEqualTo(String)
+ Criteria andTglAkteAkhirNotEqualTo(String)
+ Criteria andTglAkteAkhirGreaterThan(String)
+ Criteria andTglAkteAkhirGreaterThanOrEqualTo(String)
+ Criteria andTglAkteAkhirLessThan(String)
+ Criteria andTglAkteAkhirLessThanOrEqualTo(String)
+ Criteria andTglAkteAkhirLike(String)
+ Criteria andTglAkteAkhirNotLike(String)
+ Criteria andTglAkteAkhirIn(List<String>)
+ Criteria andTglAkteAkhirNotIn(List<String>)
+ Criteria andTglAkteAkhirBetween(String,String)
+ Criteria andTglAkteAkhirNotBetween(String,String)
+ Criteria andNoAkteAkhirIsNull()
+ Criteria andNoAkteAkhirIsNotNull()
+ Criteria andNoAkteAkhirEqualTo(String)
+ Criteria andNoAkteAkhirNotEqualTo(String)
+ Criteria andNoAkteAkhirGreaterThan(String)
+ Criteria andNoAkteAkhirGreaterThanOrEqualTo(String)
+ Criteria andNoAkteAkhirLessThan(String)
+ Criteria andNoAkteAkhirLessThanOrEqualTo(String)
+ Criteria andNoAkteAkhirLike(String)
+ Criteria andNoAkteAkhirNotLike(String)
+ Criteria andNoAkteAkhirIn(List<String>)
+ Criteria andNoAkteAkhirNotIn(List<String>)
+ Criteria andNoAkteAkhirBetween(String,String)
+ Criteria andNoAkteAkhirNotBetween(String,String)
+ Criteria andTglAkteAwalIsNull()
+ Criteria andTglAkteAwalIsNotNull()
+ Criteria andTglAkteAwalEqualTo(String)
+ Criteria andTglAkteAwalNotEqualTo(String)
+ Criteria andTglAkteAwalGreaterThan(String)
+ Criteria andTglAkteAwalGreaterThanOrEqualTo(String)
+ Criteria andTglAkteAwalLessThan(String)
+ Criteria andTglAkteAwalLessThanOrEqualTo(String)
+ Criteria andTglAkteAwalLike(String)
+ Criteria andTglAkteAwalNotLike(String)
+ Criteria andTglAkteAwalIn(List<String>)
+ Criteria andTglAkteAwalNotIn(List<String>)
+ Criteria andTglAkteAwalBetween(String,String)
+ Criteria andTglAkteAwalNotBetween(String,String)
+ Criteria andNoAkteIsNull()
+ Criteria andNoAkteIsNotNull()
+ Criteria andNoAkteEqualTo(String)
+ Criteria andNoAkteNotEqualTo(String)
+ Criteria andNoAkteGreaterThan(String)
+ Criteria andNoAkteGreaterThanOrEqualTo(String)
+ Criteria andNoAkteLessThan(String)
+ Criteria andNoAkteLessThanOrEqualTo(String)
+ Criteria andNoAkteLike(String)
+ Criteria andNoAkteNotLike(String)
+ Criteria andNoAkteIn(List<String>)
+ Criteria andNoAkteNotIn(List<String>)
+ Criteria andNoAkteBetween(String,String)
+ Criteria andNoAkteNotBetween(String,String)
+ Criteria andBidangUsahaIsNull()
+ Criteria andBidangUsahaIsNotNull()
+ Criteria andBidangUsahaEqualTo(String)
+ Criteria andBidangUsahaNotEqualTo(String)
+ Criteria andBidangUsahaGreaterThan(String)
+ Criteria andBidangUsahaGreaterThanOrEqualTo(String)
+ Criteria andBidangUsahaLessThan(String)
+ Criteria andBidangUsahaLessThanOrEqualTo(String)
+ Criteria andBidangUsahaLike(String)
+ Criteria andBidangUsahaNotLike(String)
+ Criteria andBidangUsahaIn(List<String>)
+ Criteria andBidangUsahaNotIn(List<String>)
+ Criteria andBidangUsahaBetween(String,String)
+ Criteria andBidangUsahaNotBetween(String,String)
+ Criteria andTempatBekerjaIsNull()
+ Criteria andTempatBekerjaIsNotNull()
+ Criteria andTempatBekerjaEqualTo(String)
+ Criteria andTempatBekerjaNotEqualTo(String)
+ Criteria andTempatBekerjaGreaterThan(String)
+ Criteria andTempatBekerjaGreaterThanOrEqualTo(String)
+ Criteria andTempatBekerjaLessThan(String)
+ Criteria andTempatBekerjaLessThanOrEqualTo(String)
+ Criteria andTempatBekerjaLike(String)
+ Criteria andTempatBekerjaNotLike(String)
+ Criteria andTempatBekerjaIn(List<String>)
+ Criteria andTempatBekerjaNotIn(List<String>)
+ Criteria andTempatBekerjaBetween(String,String)
+ Criteria andTempatBekerjaNotBetween(String,String)
+ Criteria andSandiPekerjaanIsNull()
+ Criteria andSandiPekerjaanIsNotNull()
+ Criteria andSandiPekerjaanEqualTo(String)
+ Criteria andSandiPekerjaanNotEqualTo(String)
+ Criteria andSandiPekerjaanGreaterThan(String)
+ Criteria andSandiPekerjaanGreaterThanOrEqualTo(String)
+ Criteria andSandiPekerjaanLessThan(String)
+ Criteria andSandiPekerjaanLessThanOrEqualTo(String)
+ Criteria andSandiPekerjaanLike(String)
+ Criteria andSandiPekerjaanNotLike(String)
+ Criteria andSandiPekerjaanIn(List<String>)
+ Criteria andSandiPekerjaanNotIn(List<String>)
+ Criteria andSandiPekerjaanBetween(String,String)
+ Criteria andSandiPekerjaanNotBetween(String,String)
+ Criteria andNamaGadisIbuKandungIsNull()
+ Criteria andNamaGadisIbuKandungIsNotNull()
+ Criteria andNamaGadisIbuKandungEqualTo(String)
+ Criteria andNamaGadisIbuKandungNotEqualTo(String)
+ Criteria andNamaGadisIbuKandungGreaterThan(String)
+ Criteria andNamaGadisIbuKandungGreaterThanOrEqualTo(String)
+ Criteria andNamaGadisIbuKandungLessThan(String)
+ Criteria andNamaGadisIbuKandungLessThanOrEqualTo(String)
+ Criteria andNamaGadisIbuKandungLike(String)
+ Criteria andNamaGadisIbuKandungNotLike(String)
+ Criteria andNamaGadisIbuKandungIn(List<String>)
+ Criteria andNamaGadisIbuKandungNotIn(List<String>)
+ Criteria andNamaGadisIbuKandungBetween(String,String)
+ Criteria andNamaGadisIbuKandungNotBetween(String,String)
+ Criteria andJenisKelaminIsNull()
+ Criteria andJenisKelaminIsNotNull()
+ Criteria andJenisKelaminEqualTo(String)
+ Criteria andJenisKelaminNotEqualTo(String)
+ Criteria andJenisKelaminGreaterThan(String)
+ Criteria andJenisKelaminGreaterThanOrEqualTo(String)
+ Criteria andJenisKelaminLessThan(String)
+ Criteria andJenisKelaminLessThanOrEqualTo(String)
+ Criteria andJenisKelaminLike(String)
+ Criteria andJenisKelaminNotLike(String)
+ Criteria andJenisKelaminIn(List<String>)
+ Criteria andJenisKelaminNotIn(List<String>)
+ Criteria andJenisKelaminBetween(String,String)
+ Criteria andJenisKelaminNotBetween(String,String)
+ Criteria andKodePosIsNull()
+ Criteria andKodePosIsNotNull()
+ Criteria andKodePosEqualTo(String)
+ Criteria andKodePosNotEqualTo(String)
+ Criteria andKodePosGreaterThan(String)
+ Criteria andKodePosGreaterThanOrEqualTo(String)
+ Criteria andKodePosLessThan(String)
+ Criteria andKodePosLessThanOrEqualTo(String)
+ Criteria andKodePosLike(String)
+ Criteria andKodePosNotLike(String)
+ Criteria andKodePosIn(List<String>)
+ Criteria andKodePosNotIn(List<String>)
+ Criteria andKodePosBetween(String,String)
+ Criteria andKodePosNotBetween(String,String)
+ Criteria andKecamatanIsNull()
+ Criteria andKecamatanIsNotNull()
+ Criteria andKecamatanEqualTo(String)
+ Criteria andKecamatanNotEqualTo(String)
+ Criteria andKecamatanGreaterThan(String)
+ Criteria andKecamatanGreaterThanOrEqualTo(String)
+ Criteria andKecamatanLessThan(String)
+ Criteria andKecamatanLessThanOrEqualTo(String)
+ Criteria andKecamatanLike(String)
+ Criteria andKecamatanNotLike(String)
+ Criteria andKecamatanIn(List<String>)
+ Criteria andKecamatanNotIn(List<String>)
+ Criteria andKecamatanBetween(String,String)
+ Criteria andKecamatanNotBetween(String,String)
+ Criteria andKelurahanIsNull()
+ Criteria andKelurahanIsNotNull()
+ Criteria andKelurahanEqualTo(String)
+ Criteria andKelurahanNotEqualTo(String)
+ Criteria andKelurahanGreaterThan(String)
+ Criteria andKelurahanGreaterThanOrEqualTo(String)
+ Criteria andKelurahanLessThan(String)
+ Criteria andKelurahanLessThanOrEqualTo(String)
+ Criteria andKelurahanLike(String)
+ Criteria andKelurahanNotLike(String)
+ Criteria andKelurahanIn(List<String>)
+ Criteria andKelurahanNotIn(List<String>)
+ Criteria andKelurahanBetween(String,String)
+ Criteria andKelurahanNotBetween(String,String)
+ Criteria andNoTeleponIsNull()
+ Criteria andNoTeleponIsNotNull()
+ Criteria andNoTeleponEqualTo(String)
+ Criteria andNoTeleponNotEqualTo(String)
+ Criteria andNoTeleponGreaterThan(String)
+ Criteria andNoTeleponGreaterThanOrEqualTo(String)
+ Criteria andNoTeleponLessThan(String)
+ Criteria andNoTeleponLessThanOrEqualTo(String)
+ Criteria andNoTeleponLike(String)
+ Criteria andNoTeleponNotLike(String)
+ Criteria andNoTeleponIn(List<String>)
+ Criteria andNoTeleponNotIn(List<String>)
+ Criteria andNoTeleponBetween(String,String)
+ Criteria andNoTeleponNotBetween(String,String)
+ Criteria andKodeAreaIsNull()
+ Criteria andKodeAreaIsNotNull()
+ Criteria andKodeAreaEqualTo(String)
+ Criteria andKodeAreaNotEqualTo(String)
+ Criteria andKodeAreaGreaterThan(String)
+ Criteria andKodeAreaGreaterThanOrEqualTo(String)
+ Criteria andKodeAreaLessThan(String)
+ Criteria andKodeAreaLessThanOrEqualTo(String)
+ Criteria andKodeAreaLike(String)
+ Criteria andKodeAreaNotLike(String)
+ Criteria andKodeAreaIn(List<String>)
+ Criteria andKodeAreaNotIn(List<String>)
+ Criteria andKodeAreaBetween(String,String)
+ Criteria andKodeAreaNotBetween(String,String)
+ Criteria andNoPasportIsNull()
+ Criteria andNoPasportIsNotNull()
+ Criteria andNoPasportEqualTo(String)
+ Criteria andNoPasportNotEqualTo(String)
+ Criteria andNoPasportGreaterThan(String)
+ Criteria andNoPasportGreaterThanOrEqualTo(String)
+ Criteria andNoPasportLessThan(String)
+ Criteria andNoPasportLessThanOrEqualTo(String)
+ Criteria andNoPasportLike(String)
+ Criteria andNoPasportNotLike(String)
+ Criteria andNoPasportIn(List<String>)
+ Criteria andNoPasportNotIn(List<String>)
+ Criteria andNoPasportBetween(String,String)
+ Criteria andNoPasportNotBetween(String,String)
+ Criteria andGolonganDebiturIsNull()
+ Criteria andGolonganDebiturIsNotNull()
+ Criteria andGolonganDebiturEqualTo(String)
+ Criteria andGolonganDebiturNotEqualTo(String)
+ Criteria andGolonganDebiturGreaterThan(String)
+ Criteria andGolonganDebiturGreaterThanOrEqualTo(String)
+ Criteria andGolonganDebiturLessThan(String)
+ Criteria andGolonganDebiturLessThanOrEqualTo(String)
+ Criteria andGolonganDebiturLike(String)
+ Criteria andGolonganDebiturNotLike(String)
+ Criteria andGolonganDebiturIn(List<String>)
+ Criteria andGolonganDebiturNotIn(List<String>)
+ Criteria andGolonganDebiturBetween(String,String)
+ Criteria andGolonganDebiturNotBetween(String,String)
+ Criteria andKeteranganStatusIsNull()
+ Criteria andKeteranganStatusIsNotNull()
+ Criteria andKeteranganStatusEqualTo(String)
+ Criteria andKeteranganStatusNotEqualTo(String)
+ Criteria andKeteranganStatusGreaterThan(String)
+ Criteria andKeteranganStatusGreaterThanOrEqualTo(String)
+ Criteria andKeteranganStatusLessThan(String)
+ Criteria andKeteranganStatusLessThanOrEqualTo(String)
+ Criteria andKeteranganStatusLike(String)
+ Criteria andKeteranganStatusNotLike(String)
+ Criteria andKeteranganStatusIn(List<String>)
+ Criteria andKeteranganStatusNotIn(List<String>)
+ Criteria andKeteranganStatusBetween(String,String)
+ Criteria andKeteranganStatusNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(String)
+ Criteria andStatusNotEqualTo(String)
+ Criteria andStatusGreaterThan(String)
+ Criteria andStatusGreaterThanOrEqualTo(String)
+ Criteria andStatusLessThan(String)
+ Criteria andStatusLessThanOrEqualTo(String)
+ Criteria andStatusLike(String)
+ Criteria andStatusNotLike(String)
+ Criteria andStatusIn(List<String>)
+ Criteria andStatusNotIn(List<String>)
+ Criteria andStatusBetween(String,String)
+ Criteria andStatusNotBetween(String,String)
+ Criteria andNamaAliasIsNull()
+ Criteria andNamaAliasIsNotNull()
+ Criteria andNamaAliasEqualTo(String)
+ Criteria andNamaAliasNotEqualTo(String)
+ Criteria andNamaAliasGreaterThan(String)
+ Criteria andNamaAliasGreaterThanOrEqualTo(String)
+ Criteria andNamaAliasLessThan(String)
+ Criteria andNamaAliasLessThanOrEqualTo(String)
+ Criteria andNamaAliasLike(String)
+ Criteria andNamaAliasNotLike(String)
+ Criteria andNamaAliasIn(List<String>)
+ Criteria andNamaAliasNotIn(List<String>)
+ Criteria andNamaAliasBetween(String,String)
+ Criteria andNamaAliasNotBetween(String,String)
+ Criteria andTempatLahirIsNull()
+ Criteria andTempatLahirIsNotNull()
+ Criteria andTempatLahirEqualTo(String)
+ Criteria andTempatLahirNotEqualTo(String)
+ Criteria andTempatLahirGreaterThan(String)
+ Criteria andTempatLahirGreaterThanOrEqualTo(String)
+ Criteria andTempatLahirLessThan(String)
+ Criteria andTempatLahirLessThanOrEqualTo(String)
+ Criteria andTempatLahirLike(String)
+ Criteria andTempatLahirNotLike(String)
+ Criteria andTempatLahirIn(List<String>)
+ Criteria andTempatLahirNotIn(List<String>)
+ Criteria andTempatLahirBetween(String,String)
+ Criteria andTempatLahirNotBetween(String,String)
+ Criteria andTanggalLahirIsNull()
+ Criteria andTanggalLahirIsNotNull()
+ Criteria andTanggalLahirEqualTo(String)
+ Criteria andTanggalLahirNotEqualTo(String)
+ Criteria andTanggalLahirGreaterThan(String)
+ Criteria andTanggalLahirGreaterThanOrEqualTo(String)
+ Criteria andTanggalLahirLessThan(String)
+ Criteria andTanggalLahirLessThanOrEqualTo(String)
+ Criteria andTanggalLahirLike(String)
+ Criteria andTanggalLahirNotLike(String)
+ Criteria andTanggalLahirIn(List<String>)
+ Criteria andTanggalLahirNotIn(List<String>)
+ Criteria andTanggalLahirBetween(String,String)
+ Criteria andTanggalLahirNotBetween(String,String)
+ Criteria andNoKtpIdIsNull()
+ Criteria andNoKtpIdIsNotNull()
+ Criteria andNoKtpIdEqualTo(String)
+ Criteria andNoKtpIdNotEqualTo(String)
+ Criteria andNoKtpIdGreaterThan(String)
+ Criteria andNoKtpIdGreaterThanOrEqualTo(String)
+ Criteria andNoKtpIdLessThan(String)
+ Criteria andNoKtpIdLessThanOrEqualTo(String)
+ Criteria andNoKtpIdLike(String)
+ Criteria andNoKtpIdNotLike(String)
+ Criteria andNoKtpIdIn(List<String>)
+ Criteria andNoKtpIdNotIn(List<String>)
+ Criteria andNoKtpIdBetween(String,String)
+ Criteria andNoKtpIdNotBetween(String,String)
+ Criteria andNoNpwpIsNull()
+ Criteria andNoNpwpIsNotNull()
+ Criteria andNoNpwpEqualTo(String)
+ Criteria andNoNpwpNotEqualTo(String)
+ Criteria andNoNpwpGreaterThan(String)
+ Criteria andNoNpwpGreaterThanOrEqualTo(String)
+ Criteria andNoNpwpLessThan(String)
+ Criteria andNoNpwpLessThanOrEqualTo(String)
+ Criteria andNoNpwpLike(String)
+ Criteria andNoNpwpNotLike(String)
+ Criteria andNoNpwpIn(List<String>)
+ Criteria andNoNpwpNotIn(List<String>)
+ Criteria andNoNpwpBetween(String,String)
+ Criteria andNoNpwpNotBetween(String,String)
+ Criteria andAlamatDebiturIsNull()
+ Criteria andAlamatDebiturIsNotNull()
+ Criteria andAlamatDebiturEqualTo(String)
+ Criteria andAlamatDebiturNotEqualTo(String)
+ Criteria andAlamatDebiturGreaterThan(String)
+ Criteria andAlamatDebiturGreaterThanOrEqualTo(String)
+ Criteria andAlamatDebiturLessThan(String)
+ Criteria andAlamatDebiturLessThanOrEqualTo(String)
+ Criteria andAlamatDebiturLike(String)
+ Criteria andAlamatDebiturNotLike(String)
+ Criteria andAlamatDebiturIn(List<String>)
+ Criteria andAlamatDebiturNotIn(List<String>)
+ Criteria andAlamatDebiturBetween(String,String)
+ Criteria andAlamatDebiturNotBetween(String,String)
+ Criteria andUsahaIsNull()
+ Criteria andUsahaIsNotNull()
+ Criteria andUsahaEqualTo(String)
+ Criteria andUsahaNotEqualTo(String)
+ Criteria andUsahaGreaterThan(String)
+ Criteria andUsahaGreaterThanOrEqualTo(String)
+ Criteria andUsahaLessThan(String)
+ Criteria andUsahaLessThanOrEqualTo(String)
+ Criteria andUsahaLike(String)
+ Criteria andUsahaNotLike(String)
+ Criteria andUsahaIn(List<String>)
+ Criteria andUsahaNotIn(List<String>)
+ Criteria andUsahaBetween(String,String)
+ Criteria andUsahaNotBetween(String,String)
+ Criteria andKotaIsNull()
+ Criteria andKotaIsNotNull()
+ Criteria andKotaEqualTo(String)
+ Criteria andKotaNotEqualTo(String)
+ Criteria andKotaGreaterThan(String)
+ Criteria andKotaGreaterThanOrEqualTo(String)
+ Criteria andKotaLessThan(String)
+ Criteria andKotaLessThanOrEqualTo(String)
+ Criteria andKotaLike(String)
+ Criteria andKotaNotLike(String)
+ Criteria andKotaIn(List<String>)
+ Criteria andKotaNotIn(List<String>)
+ Criteria andKotaBetween(String,String)
+ Criteria andKotaNotBetween(String,String)
+ Criteria andAlamatCabangIsNull()
+ Criteria andAlamatCabangIsNotNull()
+ Criteria andAlamatCabangEqualTo(String)
+ Criteria andAlamatCabangNotEqualTo(String)
+ Criteria andAlamatCabangGreaterThan(String)
+ Criteria andAlamatCabangGreaterThanOrEqualTo(String)
+ Criteria andAlamatCabangLessThan(String)
+ Criteria andAlamatCabangLessThanOrEqualTo(String)
+ Criteria andAlamatCabangLike(String)
+ Criteria andAlamatCabangNotLike(String)
+ Criteria andAlamatCabangIn(List<String>)
+ Criteria andAlamatCabangNotIn(List<String>)
+ Criteria andAlamatCabangBetween(String,String)
+ Criteria andAlamatCabangNotBetween(String,String)
+ Criteria andNamaCabangMultifinanceIsNull()
+ Criteria andNamaCabangMultifinanceIsNotNull()
+ Criteria andNamaCabangMultifinanceEqualTo(String)
+ Criteria andNamaCabangMultifinanceNotEqualTo(String)
+ Criteria andNamaCabangMultifinanceGreaterThan(String)
+ Criteria andNamaCabangMultifinanceGreaterThanOrEqualTo(String)
+ Criteria andNamaCabangMultifinanceLessThan(String)
+ Criteria andNamaCabangMultifinanceLessThanOrEqualTo(String)
+ Criteria andNamaCabangMultifinanceLike(String)
+ Criteria andNamaCabangMultifinanceNotLike(String)
+ Criteria andNamaCabangMultifinanceIn(List<String>)
+ Criteria andNamaCabangMultifinanceNotIn(List<String>)
+ Criteria andNamaCabangMultifinanceBetween(String,String)
+ Criteria andNamaCabangMultifinanceNotBetween(String,String)
+ Criteria andNamaMultiFinanceIsNull()
+ Criteria andNamaMultiFinanceIsNotNull()
+ Criteria andNamaMultiFinanceEqualTo(String)
+ Criteria andNamaMultiFinanceNotEqualTo(String)
+ Criteria andNamaMultiFinanceGreaterThan(String)
+ Criteria andNamaMultiFinanceGreaterThanOrEqualTo(String)
+ Criteria andNamaMultiFinanceLessThan(String)
+ Criteria andNamaMultiFinanceLessThanOrEqualTo(String)
+ Criteria andNamaMultiFinanceLike(String)
+ Criteria andNamaMultiFinanceNotLike(String)
+ Criteria andNamaMultiFinanceIn(List<String>)
+ Criteria andNamaMultiFinanceNotIn(List<String>)
+ Criteria andNamaMultiFinanceBetween(String,String)
+ Criteria andNamaMultiFinanceNotBetween(String,String)
+ Criteria andCifNamaIsNull()
+ Criteria andCifNamaIsNotNull()
+ Criteria andCifNamaEqualTo(String)
+ Criteria andCifNamaNotEqualTo(String)
+ Criteria andCifNamaGreaterThan(String)
+ Criteria andCifNamaGreaterThanOrEqualTo(String)
+ Criteria andCifNamaLessThan(String)
+ Criteria andCifNamaLessThanOrEqualTo(String)
+ Criteria andCifNamaLike(String)
+ Criteria andCifNamaNotLike(String)
+ Criteria andCifNamaIn(List<String>)
+ Criteria andCifNamaNotIn(List<String>)
+ Criteria andCifNamaBetween(String,String)
+ Criteria andCifNamaNotBetween(String,String)
+ Criteria andCilinderIsNull()
+ Criteria andCilinderIsNotNull()
+ Criteria andCilinderEqualTo(String)
+ Criteria andCilinderNotEqualTo(String)
+ Criteria andCilinderGreaterThan(String)
+ Criteria andCilinderGreaterThanOrEqualTo(String)
+ Criteria andCilinderLessThan(String)
+ Criteria andCilinderLessThanOrEqualTo(String)
+ Criteria andCilinderLike(String)
+ Criteria andCilinderNotLike(String)
+ Criteria andCilinderIn(List<String>)
+ Criteria andCilinderNotIn(List<String>)
+ Criteria andCilinderBetween(String,String)
+ Criteria andCilinderNotBetween(String,String)
+ Criteria andThnRakitIsNull()
+ Criteria andThnRakitIsNotNull()
+ Criteria andThnRakitEqualTo(String)
+ Criteria andThnRakitNotEqualTo(String)
+ Criteria andThnRakitGreaterThan(String)
+ Criteria andThnRakitGreaterThanOrEqualTo(String)
+ Criteria andThnRakitLessThan(String)
+ Criteria andThnRakitLessThanOrEqualTo(String)
+ Criteria andThnRakitLike(String)
+ Criteria andThnRakitNotLike(String)
+ Criteria andThnRakitIn(List<String>)
+ Criteria andThnRakitNotIn(List<String>)
+ Criteria andThnRakitBetween(String,String)
+ Criteria andThnRakitNotBetween(String,String)
+ Criteria andThnMotorIsNull()
+ Criteria andThnMotorIsNotNull()
+ Criteria andThnMotorEqualTo(String)
+ Criteria andThnMotorNotEqualTo(String)
+ Criteria andThnMotorGreaterThan(String)
+ Criteria andThnMotorGreaterThanOrEqualTo(String)
+ Criteria andThnMotorLessThan(String)
+ Criteria andThnMotorLessThanOrEqualTo(String)
+ Criteria andThnMotorLike(String)
+ Criteria andThnMotorNotLike(String)
+ Criteria andThnMotorIn(List<String>)
+ Criteria andThnMotorNotIn(List<String>)
+ Criteria andThnMotorBetween(String,String)
+ Criteria andThnMotorNotBetween(String,String)
+ Criteria andWarnaIsNull()
+ Criteria andWarnaIsNotNull()
+ Criteria andWarnaEqualTo(String)
+ Criteria andWarnaNotEqualTo(String)
+ Criteria andWarnaGreaterThan(String)
+ Criteria andWarnaGreaterThanOrEqualTo(String)
+ Criteria andWarnaLessThan(String)
+ Criteria andWarnaLessThanOrEqualTo(String)
+ Criteria andWarnaLike(String)
+ Criteria andWarnaNotLike(String)
+ Criteria andWarnaIn(List<String>)
+ Criteria andWarnaNotIn(List<String>)
+ Criteria andWarnaBetween(String,String)
+ Criteria andWarnaNotBetween(String,String)
+ Criteria andNomesIsNull()
+ Criteria andNomesIsNotNull()
+ Criteria andNomesEqualTo(String)
+ Criteria andNomesNotEqualTo(String)
+ Criteria andNomesGreaterThan(String)
+ Criteria andNomesGreaterThanOrEqualTo(String)
+ Criteria andNomesLessThan(String)
+ Criteria andNomesLessThanOrEqualTo(String)
+ Criteria andNomesLike(String)
+ Criteria andNomesNotLike(String)
+ Criteria andNomesIn(List<String>)
+ Criteria andNomesNotIn(List<String>)
+ Criteria andNomesBetween(String,String)
+ Criteria andNomesNotBetween(String,String)
+ Criteria andNorangIsNull()
+ Criteria andNorangIsNotNull()
+ Criteria andNorangEqualTo(String)
+ Criteria andNorangNotEqualTo(String)
+ Criteria andNorangGreaterThan(String)
+ Criteria andNorangGreaterThanOrEqualTo(String)
+ Criteria andNorangLessThan(String)
+ Criteria andNorangLessThanOrEqualTo(String)
+ Criteria andNorangLike(String)
+ Criteria andNorangNotLike(String)
+ Criteria andNorangIn(List<String>)
+ Criteria andNorangNotIn(List<String>)
+ Criteria andNorangBetween(String,String)
+ Criteria andNorangNotBetween(String,String)
+ Criteria andNopolIsNull()
+ Criteria andNopolIsNotNull()
+ Criteria andNopolEqualTo(String)
+ Criteria andNopolNotEqualTo(String)
+ Criteria andNopolGreaterThan(String)
+ Criteria andNopolGreaterThanOrEqualTo(String)
+ Criteria andNopolLessThan(String)
+ Criteria andNopolLessThanOrEqualTo(String)
+ Criteria andNopolLike(String)
+ Criteria andNopolNotLike(String)
+ Criteria andNopolIn(List<String>)
+ Criteria andNopolNotIn(List<String>)
+ Criteria andNopolBetween(String,String)
+ Criteria andNopolNotBetween(String,String)
+ Criteria andKetModelIsNull()
+ Criteria andKetModelIsNotNull()
+ Criteria andKetModelEqualTo(String)
+ Criteria andKetModelNotEqualTo(String)
+ Criteria andKetModelGreaterThan(String)
+ Criteria andKetModelGreaterThanOrEqualTo(String)
+ Criteria andKetModelLessThan(String)
+ Criteria andKetModelLessThanOrEqualTo(String)
+ Criteria andKetModelLike(String)
+ Criteria andKetModelNotLike(String)
+ Criteria andKetModelIn(List<String>)
+ Criteria andKetModelNotIn(List<String>)
+ Criteria andKetModelBetween(String,String)
+ Criteria andKetModelNotBetween(String,String)
+ Criteria andKdJenisIsNull()
+ Criteria andKdJenisIsNotNull()
+ Criteria andKdJenisEqualTo(String)
+ Criteria andKdJenisNotEqualTo(String)
+ Criteria andKdJenisGreaterThan(String)
+ Criteria andKdJenisGreaterThanOrEqualTo(String)
+ Criteria andKdJenisLessThan(String)
+ Criteria andKdJenisLessThanOrEqualTo(String)
+ Criteria andKdJenisLike(String)
+ Criteria andKdJenisNotLike(String)
+ Criteria andKdJenisIn(List<String>)
+ Criteria andKdJenisNotIn(List<String>)
+ Criteria andKdJenisBetween(String,String)
+ Criteria andKdJenisNotBetween(String,String)
+ Criteria andKdMerkIsNull()
+ Criteria andKdMerkIsNotNull()
+ Criteria andKdMerkEqualTo(String)
+ Criteria andKdMerkNotEqualTo(String)
+ Criteria andKdMerkGreaterThan(String)
+ Criteria andKdMerkGreaterThanOrEqualTo(String)
+ Criteria andKdMerkLessThan(String)
+ Criteria andKdMerkLessThanOrEqualTo(String)
+ Criteria andKdMerkLike(String)
+ Criteria andKdMerkNotLike(String)
+ Criteria andKdMerkIn(List<String>)
+ Criteria andKdMerkNotIn(List<String>)
+ Criteria andKdMerkBetween(String,String)
+ Criteria andKdMerkNotBetween(String,String)
+ Criteria andNomorPinjamanIsNull()
+ Criteria andNomorPinjamanIsNotNull()
+ Criteria andNomorPinjamanEqualTo(String)
+ Criteria andNomorPinjamanNotEqualTo(String)
+ Criteria andNomorPinjamanGreaterThan(String)
+ Criteria andNomorPinjamanGreaterThanOrEqualTo(String)
+ Criteria andNomorPinjamanLessThan(String)
+ Criteria andNomorPinjamanLessThanOrEqualTo(String)
+ Criteria andNomorPinjamanLike(String)
+ Criteria andNomorPinjamanNotLike(String)
+ Criteria andNomorPinjamanIn(List<String>)
+ Criteria andNomorPinjamanNotIn(List<String>)
+ Criteria andNomorPinjamanBetween(String,String)
+ Criteria andNomorPinjamanNotBetween(String,String)
}
class com.welab.loan.finance.model.UvfFileLoanExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.UvfFileLoanExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.app.service.flow.repaymentback.LoanStateBackCompont {
- RepaymentGoBackManager repaymentGoBackManager
+ FlowTaskNodeEnum flowTaskNode()
# void process(RepaymentBackFlowContext)
}
class com.welab.loan.finance.app.command.tb.dues.costreq.CostReqBuilderServiceProvider {
}
class com.welab.loan.finance.model.ext.RecentDueDate {
- Long userId
- Date dueDate
}
class com.welab.loan.finance.core.dto.DelayChangeType {
- Boolean isChange
- Integer type
- TypeEnum typeEnum
+ <<Create>> DelayChangeType(Boolean,Integer,TypeEnum)
+ Boolean getChange()
+ Integer getType()
+ TypeEnum getTypeEnum()
}
class com.welab.loan.finance.dto.CreditUserTagConfigDTO {
- {static} long serialVersionUID
- String accountType
- String userTag
- String remark
- Integer status
- Long minAmount
- Long maxAmount
- String config
}
class com.welab.loan.finance.app.service.flow.repaymentback.tb.TbLoanStateBackCompont {
- RepaymentGoBackManager repaymentGoBackManager
+ FlowTaskNodeEnum flowTaskNode()
# void process(RepaymentBackFlowContext)
}
interface com.welab.loan.finance.core.loan.user.ILoanUserRepay {
~ List<String> findLoanByUser(Long)
~ List<String> findDefaultLoanByUser(Long)
~ LoanRepayDTO saveUserRepay(Long,List<String>)
~ LoanUserRepay findLoanUserRepayByUserId(Long)
~ List<String> findLoanUserRepayDetail(Long)
~ LoanUserRepay findLoanUserRepay(Long)
~ int deleteLoanUserRepay(Long)
~ LoanUserDTO findLoanByUserByVa(Long)
~ List<String> findGateWayExtend(Long,String)
}
class com.welab.loan.finance.dto.TbImportResDTO {
- List<String> errorMsgList
- List<String> specialMsgList
- Integer successCount
}
class com.welab.loan.finance.app.service.flow.repaymentback.UserRepaymentConfigBackCompont {
- BaseLoanUserRepayService baseLoanUserRepayService
+ FlowTaskNodeEnum flowTaskNode()
+ void process(RepaymentBackFlowContext)
}
class com.welab.loan.finance.response.CustomerInfoVo {
- Long id
- Long userId
- String name
- String nik
- String educationLevel
- String mobile
- String email
- String birthplace
- String birthday
- String residence
- Integer gender
- String preferredContactTime
- String maritalStatus
- AddressVO homeAddress
- AddressVO ktpAddress
- String rt
- String rw
- String momSurname
- Boolean faceidStatus
- String faceidResult
- String fifContractNumber
- String residencePhone
- boolean homeKtpAddrSame
- Long num
- Long totalAmount
- Long serviceFee
- Long fundInterest
- Long adminFee
- Long lateFee
- Long overAmount
- Long liteFundInterest
- Date approvedAt
- Long sumMoney
- Long ableUseMoney
- Long usedMondy
- String creditUserStatus
- String userTag
- Integer mob
}
class com.welab.loan.finance.model.mongo.HsoTbLoanDoc {
- String partner
- String defaultValue1
- String emptySpace1
- String orderNo
- String loanNumber
- String emptySpace2
- String invoiceDate
- String emptySpace3
- String invoiceDateTOP
- String invoiceDate2
- String customerNumber
- String creditControlArea
- String customerName
- String customerAddress
- String defaultValue2
- String emptySpace4
- String currency
- String invoiceAmount
- List<BillingAndNettVatVO> billingAndNettVatVOList
}
class com.welab.loan.finance.utils.BigDecimalUtils {
+ {static} Long negate(Long)
+ {static} Long add(Long,Long)
+ {static} BigDecimal add(BigDecimal,BigDecimal)
+ {static} BigDecimal mul(BigDecimal,BigDecimal)
+ {static} BigDecimal add(BigDecimal,Long)
+ {static} Long add(Long)
+ {static} BigDecimal add(BigDecimal)
+ {static} Long sub(Long,Long)
+ {static} BigDecimal sub(BigDecimal,BigDecimal)
+ {static} BigDecimal sub2(BigDecimal,BigDecimal)
+ {static} BigDecimal sub(BigDecimal,Long)
+ {static} BigDecimal subAndMax(BigDecimal,BigDecimal,BigDecimal)
+ {static} Long max(Long,Long)
+ {static} BigDecimal max(BigDecimal,BigDecimal)
+ {static} Long min(Long,Long)
+ {static} BigDecimal min(BigDecimal,BigDecimal)
+ {static} long toLong(Long,long)
+ {static} long toLong(Long)
+ {static} long div(Long,Long)
+ {static} BigDecimal div(BigDecimal,BigDecimal)
+ {static} BigDecimal div(BigDecimal,BigDecimal,int,int)
+ {static} long mul(Long,Long)
+ {static} BigDecimal valueOf(BigDecimal,String)
+ {static} BigDecimal toBigDecimal(Long)
+ {static} long multiplyAndRoundDown(BigDecimal,BigDecimal)
}
class com.welab.loan.finance.service.business.PlanEmailBusiService {
- LoanDetailMapper loanDetailMapper
- FundService fundService
- ApplicationService applicationService
- FinanceRepaymentTrackMapper financeRepaymentTrackMapper
- FinanceLendMapper financeLendMapper
- LoanPlansLogMapper loanPlansLogMapper
- DuesExtMapper duesExtMapper
- MaucashRepaymentServiceImpl maucashLendService
- BaseDuesService baseDuesService
# String appId
- String RP
- BaseLoanPlansContractService baseLoanPlansContractService
- DocumentService documentService
- BaseLoanApplyPlansService baseLoanApplyPlansService
- LoanDetailExtendMapper loanDetailExtendMapper
- BaseMerchantService baseMerchantService
+ void buildEmailByTransId(String)
+ void buildEmailByLoanDetail(LoanDetail,String)
# void buildEmail(LoanDetail,FinanceRepaymentTrack)
# FinanceRepaymentTrack findTrackByTransId(String)
# FinanceRepaymentTrack findTrackByTransId(String,String)
# long countTrackById(String,Long)
# LoanDetail findLoanDetail(String)
# FinanceLend findLend(String)
# List<LoanPlansLog> findLoanPlansLog(String,Integer)
+ byte[] tryC1PlanContract(CreateC1PlanContractVo,LoanPlansContract)
- LoanDetailExtend findLoanDetailExtend(String)
- void addConcatDues(LinkedHashMap<Integer,ConcatDueInfo>,Dues)
- ConcatDueInfo apply(ConcatDueInfo)
}
class com.welab.loan.finance.service.business.PlanEmailBusiService$ConcatDueInfo {
- String dueDateStr
- Long totalDuesAmount
- String totalDuesAmountStr
}
class com.welab.loan.finance.service.mq.BaseRabbitTemplate {
- RabbitTemplate rabbitTemplate
- AmqpAdmin amqpAdmin
+ void sendMigrateMsg(long)
+ void sendExpiredActivityCode(List<String>,Boolean)
+ void sendInvalidAdvLetterList(List<InvalidAdvLetterDTO>)
+ void sendInvalidAdvLetter()
+ void sendVirtualAccount(List<SynAccountDTO>)
+ void sendSynDues(List<SynDuesDTO>)
+ void sendSynCoupon(List<SynCouponDTO>)
+ void send(String,String)
+ void sendExchange(String,String,String)
+ void sendDelayMessage(SynDelayDTO)
}
class com.welab.loan.finance.test.LoanServiceTest {
- LoanServiceImpl loanService
+ void updateLabel()
+ void updateLoanListClose()
}
class com.welab.loan.finance.model.FundAccount {
- Long id
- Long fundId
- String accountNo
- Byte fundType
- String fundCode
- Long amount
- Byte accountType
- Date createAt
- String remark
- String bankCode
+ Long getId()
+ void setId(Long)
+ Long getFundId()
+ void setFundId(Long)
+ String getAccountNo()
+ void setAccountNo(String)
+ Byte getFundType()
+ void setFundType(Byte)
+ String getFundCode()
+ void setFundCode(String)
+ Long getAmount()
+ void setAmount(Long)
+ Byte getAccountType()
+ void setAccountType(Byte)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ String getRemark()
+ void setRemark(String)
+ String getBankCode()
+ void setBankCode(String)
}
class com.welab.loan.finance.app.command.coupon.CouponMultipleDecreaseExe {
- ILoanUserRepay iLoanUserRepay
- LoanCouponMapper loanCouponMapper
- MaucashRepaymentServiceImpl maucashRepaymentService
+ LoanCoupon excute(LoanCoupon)
+ void synLoanCoupon(List<String>)
+ LoanCouponCalDto excuteForTryCouponInfo(List<String>,LoanCouponCalDto,Map<String,String>)
+ BigDecimal calculator(String,BigDecimal,List<Dues>,DueTypeEnum)
+ List<Dues> findRepaymentDues(List<Dues>)
- LoanCoupon findLoanCoupon(String)
}
class com.welab.loan.finance.app.command.credit.CreditEplanServiceCmdExe {
- BaseCreditUserLoanService baseCreditUserLoanService
+ void oldLoanNumberConverNew(List<LoanPlansRelationDTO>)
}
class com.welab.loan.finance.app.command.tb.order.notify.TbOverdueNotifyService {
- BaseRabbitTemplate baseRabbitTemplate
+ void doNotify(TbOverdueNotifyDTO)
}
class com.welab.loan.finance.app.command.coupon.LoanCouponQryExe {
- LoanCouponMapper loanCouponMapper
- BaseLoanCouponDetailService baseLoanCouponDetailService
+ Response<List<LoanCouponDTO>> listCoupon(LoanCouponQry)
+ Response<Long> getTotalCouponInfo(List<String>)
}
class com.welab.loan.finance.tools.JsonParseTest {
+ void upfrontFee()
+ void dues()
- {static} void printTitle(String[])
- {static} void printContext(String[],Object,boolean)
- {static} StringBuilder getFormat(String[])
- {static} String[] getValues(Object,String[],boolean)
- {static} String sum(List<String>)
}
class com.welab.loan.finance.vo.PageVO {
- {static} long serialVersionUID
- int pageNum
- int pageSize
- long total
- int pages
- List<T> data
+ int getStart()
}
class com.welab.loan.finance.app.command.tb.lend.lend.TbFinanceLendBuilderProvider {
}
abstract class com.welab.loan.finance.service.business.loaninfo.AbstractLoanInfoService {
# ICallbackEvent ICallbackEvent
+ void before(Map<String,Object>)
+ void after(Map<String,Object>)
+ AbstractLoanInfoService getThis()
+ boolean process(Map<String,Object>)
+ {abstract}Long getOrgId()
+ {abstract}boolean loanInfo(Map<String,Object>)
}
class com.welab.loan.finance.rabbitmq.RechargeConsumer {
- IAccountService accountService
- ICallbackEvent ICallbackEvent
- JedisCluster jedisCluster
- TravelokaPaylaterVaSyncCmdExe travelokaPaylaterVaSyncCmdExe
- BaseAbnormalRepaymentRecordService abnormalRepaymentRecordService
+ void onMessage(Message)
- void trigger(String)
+ int findExternalIdType(String)
+ {static} void main(String[])
}
interface com.welab.loan.finance.core.overdue.ICalLateFee {
~ LoanLateRspDTO findLateFee(LoanLateReqDTO)
~ List<LoanLateRspDTO> findBatchLateFee(List<LoanLateReqDTO>)
~ List<LoanLateRspDTO> updateBatchLateFee(List<LoanLateReqDTO>)
~ String findKey()
}
class com.welab.loan.finance.core.dues.impl.EplanCostService {
- boolean isDiscount
+ CostDetailDTO findCostDetail(CostReqDTO)
+ String costKey()
}
class com.welab.loan.finance.service.business.event.CallbackEventImpl {
- LoanDetailMapper loanDetailMapper
- LoanDetailExtendMapper loanDetailExtendMapper
- LoanDetailExtMapper loanDetailExtMapper
- FinanceLendMapper financeLendMapper
- BaseFifUvfService baseFifUvfService
- BaseDuesService baseDuesService
- DuesServiceImpl duesService
- BaseFinanceTrading baseFinanceTrading
- LoansService applicationLoansService
- ITaskService iTaskService
- EPlanService ePlanService
- BaseRabbitTemplate rabbitTemplate
- BaseLoanDetailExtendService loanDetailExtendService
- RebookOldOrderCloseService rebookOldOrderCloseServicel
- LendManager lendManager
- BaseUserBankCardService baseUserBankCardService
- BaseFundAccountService fundAccountService
+ void trigger(Long,Object,EventEnum)
+ void trigger(Long,Object,EventEnum,Object)
+ void afterLoanInfo(Long,Object)
+ void afterTransfer(Long,Object,Object)
+ void afterLend(Long,Object)
- Byte getLendStatus(LoanDetail)
+ void updateDuesLendByDdm(FinanceLend,LoanDetail,Date)
+ void updateShortTenorByDdm(String)
+ void refundFee(String)
# boolean updateOldRechargeRecord(String,String)
# void restSign(String)
+ void delayRefundFee(String)
+ LoanDetail getLoanDetail(String)
+ FinanceLend getFinanceLend(String)
+ LoanDetailExtend getLoanDetailExtend(String)
+ FinanceLend getFinanceLendByLoanNumber(String)
}
class com.welab.loan.finance.app.manager.plan.FPlanManager {
- CPlanExtMapper cPlanExtMapper
- FPlanExtMapper fPlanExtMapper
+ Response checkCmd(ApplyFPlanCmd)
+ Response checkCmd(TryApplyFPlanCmd)
+ Response isAllowApply(long)
}
interface com.welab.loan.finance.service.loan.ILoanService {
~ Response<Boolean> createLoan(String)
~ Response<LoanDetailDto> findLoanDetailByLoanNumber(String)
~ Response<List<LoanDetailDto>> findLoanDetailByLoanNumbers(List<String>)
~ Response<LoanDetailExtendDto> findLoanDetailExtendByLoanNumber(String)
~ Response<LoanDetailDto> findLoanDetailAndExtendByLoanNumber(String)
~ Response<Boolean> saveLoanMq(LoanMqDto)
~ Response<List<String>> findWaitingRepayLoansByUserId(Long)
~ Response<Long> getWaitingPayAmount(List<String>)
~ Response<Boolean> updateLendStatus(String,Byte)
~ Response<Boolean> gatewayLoanCancelDoCheck(List<String>)
~ Response<Byte> gatewayLoanCancelDoCancel(String)
~ Response<Integer> closeLoanHand(String)
~ Response<Integer> timeoutLoanHand(String)
~ Response<Map<Long,Integer>> getUserMaxDpd(UserMaxDpdQry)
~ Response<List<LoanOverdueInfoDTO>> findLoanOverDueInfoByLoanNumber(List<String>)
~ Boolean isNormalUserAndRepaying(Long)
~ Boolean isPartionRepayment(String)
~ Response<List<LoanDetailExtendDto>> findLoanDetailExtendByLoanNumbers(List<String>)
}
class com.welab.loan.finance.model.ToBAgreementDoc {
- Long id
- String partner
- String tbLoanNumber
- String mobile
- Boolean enabled
- Long adminId
- Date createdAt
- Date updatedAt
- Byte signingStatus
- Byte signingMethod
- Date expiredAt
+ Long getId()
+ void setId(Long)
+ String getPartner()
+ void setPartner(String)
+ String getTbLoanNumber()
+ void setTbLoanNumber(String)
+ String getMobile()
+ void setMobile(String)
+ Boolean getEnabled()
+ void setEnabled(Boolean)
+ Long getAdminId()
+ void setAdminId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Byte getSigningStatus()
+ void setSigningStatus(Byte)
+ Byte getSigningMethod()
+ void setSigningMethod(Byte)
+ Date getExpiredAt()
+ void setExpiredAt(Date)
}
class com.welab.loan.finance.core.dues.CostConfiguration {
- {static} Map<String,ICostService> costServiceHashMap
- {static} CostServiceWrapper costServiceWrapper
- List<ICostService> costServiceList
- ApplicationContext applicationContext
+ void init()
+ {static} ICostService getCostService(String)
+ {static} CostDetailDTO findCostServiceByDues(CostReqDTO)
}
class com.welab.loan.finance.config.MqMetaInfoRegistryImpl {
+ List<BaseQueueEnum> registryMetaInfo()
}
class com.welab.loan.finance.model.CreditUserAccountExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditUserAccountExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditUserAccountExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andProductCodeIsNull()
+ Criteria andProductCodeIsNotNull()
+ Criteria andProductCodeEqualTo(String)
+ Criteria andProductCodeNotEqualTo(String)
+ Criteria andProductCodeGreaterThan(String)
+ Criteria andProductCodeGreaterThanOrEqualTo(String)
+ Criteria andProductCodeLessThan(String)
+ Criteria andProductCodeLessThanOrEqualTo(String)
+ Criteria andProductCodeLike(String)
+ Criteria andProductCodeNotLike(String)
+ Criteria andProductCodeIn(List<String>)
+ Criteria andProductCodeNotIn(List<String>)
+ Criteria andProductCodeBetween(String,String)
+ Criteria andProductCodeNotBetween(String,String)
+ Criteria andAccountTypeIsNull()
+ Criteria andAccountTypeIsNotNull()
+ Criteria andAccountTypeEqualTo(String)
+ Criteria andAccountTypeNotEqualTo(String)
+ Criteria andAccountTypeGreaterThan(String)
+ Criteria andAccountTypeGreaterThanOrEqualTo(String)
+ Criteria andAccountTypeLessThan(String)
+ Criteria andAccountTypeLessThanOrEqualTo(String)
+ Criteria andAccountTypeLike(String)
+ Criteria andAccountTypeNotLike(String)
+ Criteria andAccountTypeIn(List<String>)
+ Criteria andAccountTypeNotIn(List<String>)
+ Criteria andAccountTypeBetween(String,String)
+ Criteria andAccountTypeNotBetween(String,String)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andUseMoneyIsNull()
+ Criteria andUseMoneyIsNotNull()
+ Criteria andUseMoneyEqualTo(Long)
+ Criteria andUseMoneyNotEqualTo(Long)
+ Criteria andUseMoneyGreaterThan(Long)
+ Criteria andUseMoneyGreaterThanOrEqualTo(Long)
+ Criteria andUseMoneyLessThan(Long)
+ Criteria andUseMoneyLessThanOrEqualTo(Long)
+ Criteria andUseMoneyIn(List<Long>)
+ Criteria andUseMoneyNotIn(List<Long>)
+ Criteria andUseMoneyBetween(Long,Long)
+ Criteria andUseMoneyNotBetween(Long,Long)
+ Criteria andSumMoneyIsNull()
+ Criteria andSumMoneyIsNotNull()
+ Criteria andSumMoneyEqualTo(Long)
+ Criteria andSumMoneyNotEqualTo(Long)
+ Criteria andSumMoneyGreaterThan(Long)
+ Criteria andSumMoneyGreaterThanOrEqualTo(Long)
+ Criteria andSumMoneyLessThan(Long)
+ Criteria andSumMoneyLessThanOrEqualTo(Long)
+ Criteria andSumMoneyIn(List<Long>)
+ Criteria andSumMoneyNotIn(List<Long>)
+ Criteria andSumMoneyBetween(Long,Long)
+ Criteria andSumMoneyNotBetween(Long,Long)
+ Criteria andFreezeMoneyIsNull()
+ Criteria andFreezeMoneyIsNotNull()
+ Criteria andFreezeMoneyEqualTo(Long)
+ Criteria andFreezeMoneyNotEqualTo(Long)
+ Criteria andFreezeMoneyGreaterThan(Long)
+ Criteria andFreezeMoneyGreaterThanOrEqualTo(Long)
+ Criteria andFreezeMoneyLessThan(Long)
+ Criteria andFreezeMoneyLessThanOrEqualTo(Long)
+ Criteria andFreezeMoneyIn(List<Long>)
+ Criteria andFreezeMoneyNotIn(List<Long>)
+ Criteria andFreezeMoneyBetween(Long,Long)
+ Criteria andFreezeMoneyNotBetween(Long,Long)
+ Criteria andCreditStatusIsNull()
+ Criteria andCreditStatusIsNotNull()
+ Criteria andCreditStatusEqualTo(String)
+ Criteria andCreditStatusNotEqualTo(String)
+ Criteria andCreditStatusGreaterThan(String)
+ Criteria andCreditStatusGreaterThanOrEqualTo(String)
+ Criteria andCreditStatusLessThan(String)
+ Criteria andCreditStatusLessThanOrEqualTo(String)
+ Criteria andCreditStatusLike(String)
+ Criteria andCreditStatusNotLike(String)
+ Criteria andCreditStatusIn(List<String>)
+ Criteria andCreditStatusNotIn(List<String>)
+ Criteria andCreditStatusBetween(String,String)
+ Criteria andCreditStatusNotBetween(String,String)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.CreditUserAccountExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.CreditUserAccountExample$Criteria {
# <<Create>> Criteria()
}
interface com.welab.loan.finance.mapper.CreditAbtestExportMapper {
~ long countByExample(CreditAbtestExportExample)
~ int deleteByExample(CreditAbtestExportExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditAbtestExport)
~ int insertSelective(CreditAbtestExport)
~ List<CreditAbtestExport> selectByExample(CreditAbtestExportExample)
~ CreditAbtestExport selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditAbtestExport,CreditAbtestExportExample)
~ int updateByExample(CreditAbtestExport,CreditAbtestExportExample)
~ int updateByPrimaryKeySelective(CreditAbtestExport)
~ int updateByPrimaryKey(CreditAbtestExport)
}
class com.welab.loan.finance.rabbitmq.VirtualAccountConsumer {
- BaseUserThirdPartyAccountService accountService
+ void onMessage(Message)
}
enum com.welab.loan.finance.enums.ProductCodeEnum {
+  MaucashShort
+  MaucashLong
+  OldMaucashShort
+  OldMaucashLong
+  astra_maucash_short
+  astra_maucash_long
+  old_astra_maucash_short
+  old_astra_maucash_long
+  sigap_maucash
+  lite_maucash_short
+  PAY_LATER
+  PAY_LATER_MAUCASH_SHORT
+  PAY_LATER_MAUCASH_LONG
+  MAUCASH_SHORT_V2
+  MAUCASH_LONG_V2
+  OLD_MAUCASH_SHORT_V2
+  OLD_MAUCASH_LONG_V2
+  ASTRA_MAUCASH_SHORT_V2
+  ASTRA_MAUCASH_LONG_V2
+  OLD_ASTRA_MAUCASH_SHORT_V2
+  OLD_ASTRA_MAUCASH_LONG_V2
+  LITE_MAUCASH_SHORT_V2
+  BIMA_MAUCASH_SHORT
+  RESTRUCTURE
+  RESTRUCTURE_CL
+  RESTRUCTURE_PL
+  TRAVELOKA
+  MAUMODAL_LONG_V1
- String name
- boolean isShort
- String numerator
- String denominator
- String displayName
- {static} List<String> allMaucashV2List
- <<Create>> ProductCodeEnum(String,boolean,String,String,String)
+ boolean isShort()
+ String getName()
+ Long getNumerator()
+ Long getDenominator()
+ String getDisplayName()
+ {static} ProductCodeEnum getProductCode(String)
+ {static} List getSecondProdCodeList()
+ {static} String getDisplayName(String)
+ {static} String getDisplayName(String,Boolean)
- {static} List<String> allMaucashV2()
+ {static} boolean isMaucashV2(String)
+ {static} boolean isMaucashEplan(String)
+ {static} boolean isOldProduct(String)
+ {static} boolean isCashPayLater(String)
+ {static} boolean isConsumePayLater(String)
+ {static} boolean isCashOrPayLater(String)
+ {static} boolean isPayLater(String)
+ {static} boolean isOldProductShortByDdm(String)
}
class com.welab.loan.finance.dto.PlanDuesAmountDTO {
- Integer remainPeriod
- Long settledPrincipalAmount
}
enum com.welab.loan.finance.enums.FlowTaskNameEnum {
+  REPAYMENT_BACK_FLOW
+  TB_REPAYMENT_BACK_FLOW
- String code
- String desc
- Class<? extends BaseFlowContext> contextClass
+ {static} FlowTaskNameEnum getFlowTaskNameEnumByCode(String)
}
class com.welab.loan.finance.app.base.tb.BaseTbLoanService {
- TbLoanMapper tbLoanMapper
- TbLoanExtMapper tbLoanExtMapper
+ void save(TbLoan)
+ TbLoan findOne(String)
+ long countByOrderNo(String,String)
+ List<TbLoanVO> list(TravelokaLoanQry)
+ Long count(TravelokaLoanQry)
+ List<HsoLoanVO> hsoLoanList(HsoLoanQry)
+ List<TbLoan> list(TbLoanExample)
+ List<String> loanNumbersFoTbUpdateDues(String)
+ TbLoan findById(Long)
+ void updateBatchNo(TbLoan)
+ List<TbLoan> synContractNoToBillingNo()
+ void updateBillingNo(TbLoan)
}
class com.welab.loan.finance.model.PayBills {
- Long id
- String channel
- Date transactionDate
- BigDecimal transactionAmount
- String trxIdOrVa
- String orderNo
- BigDecimal receivedAmount
- String status
- Date createdAt
- Date updatedAt
- Long bigFieldId
+ Long getId()
+ void setId(Long)
+ String getChannel()
+ void setChannel(String)
+ Date getTransactionDate()
+ void setTransactionDate(Date)
+ BigDecimal getTransactionAmount()
+ void setTransactionAmount(BigDecimal)
+ String getTrxIdOrVa()
+ void setTrxIdOrVa(String)
+ String getOrderNo()
+ void setOrderNo(String)
+ BigDecimal getReceivedAmount()
+ void setReceivedAmount(BigDecimal)
+ String getStatus()
+ void setStatus(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Long getBigFieldId()
+ void setBigFieldId(Long)
}
class com.welab.loan.finance.dto.qry.CollectionUserListQry {
- {static} long serialVersionUID
- Long userId
- String mobile
}
class com.welab.loan.finance.app.command.plan.TryRepayCPlanCmdExe {
- CPlanManager cPlanManager
- CheckCPlanCustomAmountCmdExe checkCPlanCustomAmountCmdExe
- IRepaymentService repaymentService
- BaseLoanDetailService baseLoanDetailService
- BaseLoanDetailExtendService baseLoanDetailExtendService
- BaseMerchantService baseMerchantService
- LoanOverdueInfoManager loanOverdueInfoManager
+ Response<TryRepayCPlanDTO> excute(TryRepayCPlanCmd)
- String findMerchantProductName(String,String)
}
class com.welab.loan.finance.test.report.LoanOverdueInfoServiceImplTest {
- LoanOverdueInfoServiceImpl loanOverdueInfoService
+ void reportOverdueInfo()
}
class com.welab.loan.finance.app.command.repayment.CouponSyncVACmdExe {
- LoanUserRepayImpl loanUserRepayImpl
- BaseLoanCouponService baseLoanCouponService
- ActivityDubboService activityDubboService
- Boolean isOpen
+ List<String> getBankCodeList(SynAccountDTO)
- List<String> getPromotionCodeList(List<String>)
- List<String> getLoanNumberList(SynAccountDTO)
}
class com.welab.loan.finance.job.LoanTransactionJob {
- int PAGESIZE
- LoanTransactionMapper loanTransactionMapper
- PayService payService
+ void execute(ShardingContext)
# Boolean isExistTask(String)
# boolean synTask(LoanTransaction)
+ Date getDateHour()
}
class com.welab.loan.finance.model.CreditAccountTrackHistoryExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditAccountTrackHistoryExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditAccountTrackHistoryExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andSumAvailabeAmountIsNull()
+ Criteria andSumAvailabeAmountIsNotNull()
+ Criteria andSumAvailabeAmountEqualTo(Long)
+ Criteria andSumAvailabeAmountNotEqualTo(Long)
+ Criteria andSumAvailabeAmountGreaterThan(Long)
+ Criteria andSumAvailabeAmountGreaterThanOrEqualTo(Long)
+ Criteria andSumAvailabeAmountLessThan(Long)
+ Criteria andSumAvailabeAmountLessThanOrEqualTo(Long)
+ Criteria andSumAvailabeAmountIn(List<Long>)
+ Criteria andSumAvailabeAmountNotIn(List<Long>)
+ Criteria andSumAvailabeAmountBetween(Long,Long)
+ Criteria andSumAvailabeAmountNotBetween(Long,Long)
+ Criteria andAvailabeAmountIsNull()
+ Criteria andAvailabeAmountIsNotNull()
+ Criteria andAvailabeAmountEqualTo(Long)
+ Criteria andAvailabeAmountNotEqualTo(Long)
+ Criteria andAvailabeAmountGreaterThan(Long)
+ Criteria andAvailabeAmountGreaterThanOrEqualTo(Long)
+ Criteria andAvailabeAmountLessThan(Long)
+ Criteria andAvailabeAmountLessThanOrEqualTo(Long)
+ Criteria andAvailabeAmountIn(List<Long>)
+ Criteria andAvailabeAmountNotIn(List<Long>)
+ Criteria andAvailabeAmountBetween(Long,Long)
+ Criteria andAvailabeAmountNotBetween(Long,Long)
+ Criteria andInferIncomeIsNull()
+ Criteria andInferIncomeIsNotNull()
+ Criteria andInferIncomeEqualTo(Long)
+ Criteria andInferIncomeNotEqualTo(Long)
+ Criteria andInferIncomeGreaterThan(Long)
+ Criteria andInferIncomeGreaterThanOrEqualTo(Long)
+ Criteria andInferIncomeLessThan(Long)
+ Criteria andInferIncomeLessThanOrEqualTo(Long)
+ Criteria andInferIncomeIn(List<Long>)
+ Criteria andInferIncomeNotIn(List<Long>)
+ Criteria andInferIncomeBetween(Long,Long)
+ Criteria andInferIncomeNotBetween(Long,Long)
+ Criteria andTagIsNull()
+ Criteria andTagIsNotNull()
+ Criteria andTagEqualTo(String)
+ Criteria andTagNotEqualTo(String)
+ Criteria andTagGreaterThan(String)
+ Criteria andTagGreaterThanOrEqualTo(String)
+ Criteria andTagLessThan(String)
+ Criteria andTagLessThanOrEqualTo(String)
+ Criteria andTagLike(String)
+ Criteria andTagNotLike(String)
+ Criteria andTagIn(List<String>)
+ Criteria andTagNotIn(List<String>)
+ Criteria andTagBetween(String,String)
+ Criteria andTagNotBetween(String,String)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andGroupIdIsNull()
+ Criteria andGroupIdIsNotNull()
+ Criteria andGroupIdEqualTo(String)
+ Criteria andGroupIdNotEqualTo(String)
+ Criteria andGroupIdGreaterThan(String)
+ Criteria andGroupIdGreaterThanOrEqualTo(String)
+ Criteria andGroupIdLessThan(String)
+ Criteria andGroupIdLessThanOrEqualTo(String)
+ Criteria andGroupIdLike(String)
+ Criteria andGroupIdNotLike(String)
+ Criteria andGroupIdIn(List<String>)
+ Criteria andGroupIdNotIn(List<String>)
+ Criteria andGroupIdBetween(String,String)
+ Criteria andGroupIdNotBetween(String,String)
+ Criteria andCreditTypeIsNull()
+ Criteria andCreditTypeIsNotNull()
+ Criteria andCreditTypeEqualTo(String)
+ Criteria andCreditTypeNotEqualTo(String)
+ Criteria andCreditTypeGreaterThan(String)
+ Criteria andCreditTypeGreaterThanOrEqualTo(String)
+ Criteria andCreditTypeLessThan(String)
+ Criteria andCreditTypeLessThanOrEqualTo(String)
+ Criteria andCreditTypeLike(String)
+ Criteria andCreditTypeNotLike(String)
+ Criteria andCreditTypeIn(List<String>)
+ Criteria andCreditTypeNotIn(List<String>)
+ Criteria andCreditTypeBetween(String,String)
+ Criteria andCreditTypeNotBetween(String,String)
+ Criteria andX1IsNull()
+ Criteria andX1IsNotNull()
+ Criteria andX1EqualTo(Long)
+ Criteria andX1NotEqualTo(Long)
+ Criteria andX1GreaterThan(Long)
+ Criteria andX1GreaterThanOrEqualTo(Long)
+ Criteria andX1LessThan(Long)
+ Criteria andX1LessThanOrEqualTo(Long)
+ Criteria andX1In(List<Long>)
+ Criteria andX1NotIn(List<Long>)
+ Criteria andX1Between(Long,Long)
+ Criteria andX1NotBetween(Long,Long)
+ Criteria andX2IsNull()
+ Criteria andX2IsNotNull()
+ Criteria andX2EqualTo(Long)
+ Criteria andX2NotEqualTo(Long)
+ Criteria andX2GreaterThan(Long)
+ Criteria andX2GreaterThanOrEqualTo(Long)
+ Criteria andX2LessThan(Long)
+ Criteria andX2LessThanOrEqualTo(Long)
+ Criteria andX2In(List<Long>)
+ Criteria andX2NotIn(List<Long>)
+ Criteria andX2Between(Long,Long)
+ Criteria andX2NotBetween(Long,Long)
+ Criteria andX3IsNull()
+ Criteria andX3IsNotNull()
+ Criteria andX3EqualTo(Long)
+ Criteria andX3NotEqualTo(Long)
+ Criteria andX3GreaterThan(Long)
+ Criteria andX3GreaterThanOrEqualTo(Long)
+ Criteria andX3LessThan(Long)
+ Criteria andX3LessThanOrEqualTo(Long)
+ Criteria andX3In(List<Long>)
+ Criteria andX3NotIn(List<Long>)
+ Criteria andX3Between(Long,Long)
+ Criteria andX3NotBetween(Long,Long)
+ Criteria andX4IsNull()
+ Criteria andX4IsNotNull()
+ Criteria andX4EqualTo(Long)
+ Criteria andX4NotEqualTo(Long)
+ Criteria andX4GreaterThan(Long)
+ Criteria andX4GreaterThanOrEqualTo(Long)
+ Criteria andX4LessThan(Long)
+ Criteria andX4LessThanOrEqualTo(Long)
+ Criteria andX4In(List<Long>)
+ Criteria andX4NotIn(List<Long>)
+ Criteria andX4Between(Long,Long)
+ Criteria andX4NotBetween(Long,Long)
+ Criteria andX6IsNull()
+ Criteria andX6IsNotNull()
+ Criteria andX6EqualTo(Long)
+ Criteria andX6NotEqualTo(Long)
+ Criteria andX6GreaterThan(Long)
+ Criteria andX6GreaterThanOrEqualTo(Long)
+ Criteria andX6LessThan(Long)
+ Criteria andX6LessThanOrEqualTo(Long)
+ Criteria andX6In(List<Long>)
+ Criteria andX6NotIn(List<Long>)
+ Criteria andX6Between(Long,Long)
+ Criteria andX6NotBetween(Long,Long)
+ Criteria andX12IsNull()
+ Criteria andX12IsNotNull()
+ Criteria andX12EqualTo(Long)
+ Criteria andX12NotEqualTo(Long)
+ Criteria andX12GreaterThan(Long)
+ Criteria andX12GreaterThanOrEqualTo(Long)
+ Criteria andX12LessThan(Long)
+ Criteria andX12LessThanOrEqualTo(Long)
+ Criteria andX12In(List<Long>)
+ Criteria andX12NotIn(List<Long>)
+ Criteria andX12Between(Long,Long)
+ Criteria andX12NotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.CreditAccountTrackHistoryExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.CreditAccountTrackHistoryExample$Criteria {
# <<Create>> Criteria()
}
abstract class com.welab.loan.finance.provider.ServiceProvider {
- Map<String,T> serviceMap
- ApplicationContext applicationContext
+ T getService(long)
+ T getService(String)
+ void initServiceMap()
- Class<T> getGenericType()
}
class com.welab.loan.finance.dto.CustomRangeDTO {
- {static} long serialVersionUID
- Long minAmount
- Long maxAmount
- Long defaultAmount
- Long totalActualRepayAmount
- LinkedHashMap<String,BigDecimal> loanNumberRateMap
- Map<String,BigDecimal> loanNumberAmountMap
- Map<String,Boolean> cPlanNeedJoinMap
}
class com.welab.loan.finance.model.CreditUserTagLogExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditUserTagLogExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditUserTagLogExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andOriginalTagIsNull()
+ Criteria andOriginalTagIsNotNull()
+ Criteria andOriginalTagEqualTo(String)
+ Criteria andOriginalTagNotEqualTo(String)
+ Criteria andOriginalTagGreaterThan(String)
+ Criteria andOriginalTagGreaterThanOrEqualTo(String)
+ Criteria andOriginalTagLessThan(String)
+ Criteria andOriginalTagLessThanOrEqualTo(String)
+ Criteria andOriginalTagLike(String)
+ Criteria andOriginalTagNotLike(String)
+ Criteria andOriginalTagIn(List<String>)
+ Criteria andOriginalTagNotIn(List<String>)
+ Criteria andOriginalTagBetween(String,String)
+ Criteria andOriginalTagNotBetween(String,String)
+ Criteria andUpdateTagIsNull()
+ Criteria andUpdateTagIsNotNull()
+ Criteria andUpdateTagEqualTo(String)
+ Criteria andUpdateTagNotEqualTo(String)
+ Criteria andUpdateTagGreaterThan(String)
+ Criteria andUpdateTagGreaterThanOrEqualTo(String)
+ Criteria andUpdateTagLessThan(String)
+ Criteria andUpdateTagLessThanOrEqualTo(String)
+ Criteria andUpdateTagLike(String)
+ Criteria andUpdateTagNotLike(String)
+ Criteria andUpdateTagIn(List<String>)
+ Criteria andUpdateTagNotIn(List<String>)
+ Criteria andUpdateTagBetween(String,String)
+ Criteria andUpdateTagNotBetween(String,String)
+ Criteria andOriginalSecondTagIsNull()
+ Criteria andOriginalSecondTagIsNotNull()
+ Criteria andOriginalSecondTagEqualTo(String)
+ Criteria andOriginalSecondTagNotEqualTo(String)
+ Criteria andOriginalSecondTagGreaterThan(String)
+ Criteria andOriginalSecondTagGreaterThanOrEqualTo(String)
+ Criteria andOriginalSecondTagLessThan(String)
+ Criteria andOriginalSecondTagLessThanOrEqualTo(String)
+ Criteria andOriginalSecondTagLike(String)
+ Criteria andOriginalSecondTagNotLike(String)
+ Criteria andOriginalSecondTagIn(List<String>)
+ Criteria andOriginalSecondTagNotIn(List<String>)
+ Criteria andOriginalSecondTagBetween(String,String)
+ Criteria andOriginalSecondTagNotBetween(String,String)
+ Criteria andUpdateSecondTagIsNull()
+ Criteria andUpdateSecondTagIsNotNull()
+ Criteria andUpdateSecondTagEqualTo(String)
+ Criteria andUpdateSecondTagNotEqualTo(String)
+ Criteria andUpdateSecondTagGreaterThan(String)
+ Criteria andUpdateSecondTagGreaterThanOrEqualTo(String)
+ Criteria andUpdateSecondTagLessThan(String)
+ Criteria andUpdateSecondTagLessThanOrEqualTo(String)
+ Criteria andUpdateSecondTagLike(String)
+ Criteria andUpdateSecondTagNotLike(String)
+ Criteria andUpdateSecondTagIn(List<String>)
+ Criteria andUpdateSecondTagNotIn(List<String>)
+ Criteria andUpdateSecondTagBetween(String,String)
+ Criteria andUpdateSecondTagNotBetween(String,String)
+ Criteria andTriggerMethodIsNull()
+ Criteria andTriggerMethodIsNotNull()
+ Criteria andTriggerMethodEqualTo(String)
+ Criteria andTriggerMethodNotEqualTo(String)
+ Criteria andTriggerMethodGreaterThan(String)
+ Criteria andTriggerMethodGreaterThanOrEqualTo(String)
+ Criteria andTriggerMethodLessThan(String)
+ Criteria andTriggerMethodLessThanOrEqualTo(String)
+ Criteria andTriggerMethodLike(String)
+ Criteria andTriggerMethodNotLike(String)
+ Criteria andTriggerMethodIn(List<String>)
+ Criteria andTriggerMethodNotIn(List<String>)
+ Criteria andTriggerMethodBetween(String,String)
+ Criteria andTriggerMethodNotBetween(String,String)
+ Criteria andTransIdIsNull()
+ Criteria andTransIdIsNotNull()
+ Criteria andTransIdEqualTo(String)
+ Criteria andTransIdNotEqualTo(String)
+ Criteria andTransIdGreaterThan(String)
+ Criteria andTransIdGreaterThanOrEqualTo(String)
+ Criteria andTransIdLessThan(String)
+ Criteria andTransIdLessThanOrEqualTo(String)
+ Criteria andTransIdLike(String)
+ Criteria andTransIdNotLike(String)
+ Criteria andTransIdIn(List<String>)
+ Criteria andTransIdNotIn(List<String>)
+ Criteria andTransIdBetween(String,String)
+ Criteria andTransIdNotBetween(String,String)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.CreditUserTagLogExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.CreditUserTagLogExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
interface com.welab.loan.finance.service.business.lend.IRecoveryService {
~ void repairTransfer(String,TradingTypeEnum)
~ void repairLend(String,LendModeEnum)
}
class com.welab.loan.finance.dto.cmd.tb.TbAgreementSignReq {
- String signUpKey
- SmsCodeDTO smsCodeDTO
- boolean needSmsCode
}
interface com.welab.loan.finance.mapper.CreditLoanCancelMapper {
~ long countByExample(CreditLoanCancelExample)
~ int deleteByExample(CreditLoanCancelExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditLoanCancel)
~ int insertSelective(CreditLoanCancel)
~ List<CreditLoanCancel> selectByExample(CreditLoanCancelExample)
~ CreditLoanCancel selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditLoanCancel,CreditLoanCancelExample)
~ int updateByExample(CreditLoanCancel,CreditLoanCancelExample)
~ int updateByPrimaryKeySelective(CreditLoanCancel)
~ int updateByPrimaryKey(CreditLoanCancel)
}
class com.welab.loan.finance.model.LevenshteinScore {
- Long id
- Long userId
- String type
- String value1
- String value2
- Integer score
- Date createdAt
+ <<Create>> LevenshteinScore()
+ <<Create>> LevenshteinScore(Long,String,String,String)
+ <<Create>> LevenshteinScore(Long,String,String,String,Integer)
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ String getType()
+ void setType(String)
+ String getValue1()
+ void setValue1(String)
+ String getValue2()
+ void setValue2(String)
+ Integer getScore()
+ void setScore(Integer)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
}
enum com.welab.loan.finance.model.TypeEnum {
+  NAME
+  OCR_NAME
- String key
- Integer value
~ <<Create>> TypeEnum(String,Integer)
+ String getKey()
+ Integer getValue()
+ {static} Integer getValue(String)
}
interface com.welab.loan.finance.service.TbLoanQueryDubboService {
~ List<TbPendRepayVO> findPendRepayList(List<String>)
~ PageInfo<TbRepaymentVO> listRepayment(TbRepaymentQry)
}
class com.welab.loan.finance.model.LoanDetailExtend {
- Long id
- String loanNumber
- Byte productType
- Byte adminType
- Boolean isHeadFee
- Boolean isQuery
- Integer fixAdminFee
- String fixFundInterest
- String provisionRate
- BigDecimal fundProvisionRate
- Byte fundInterestType
- BigDecimal astraRate
- BigDecimal mdrRate
- BigDecimal taxRate
- Byte preferentialType
- String disInterestFee
- String disAdminFee
- String disLateFee
- String disUpfrontFee
- String salaryDay
- String payDay
- String payCycle
- String transType
- String merchantProductCode
- String merchantCode
- String merchantOrderNo
- String buyerName
- String buyerCode
- String extend
- String ext
- Long fundInterest
- Long upfrontCarryFee
- Date createdAt
- String disProvisionFee
- String disFundInterestFee
- Byte flag
- String flagReason
- String rateExtend
- String tenorMin
- String tenorMax
- Byte isPremium
- Long premiumFee
- String repayDueIndex
- Byte cashFlowStatus
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Byte getProductType()
+ void setProductType(Byte)
+ Byte getAdminType()
+ void setAdminType(Byte)
+ Boolean getIsHeadFee()
+ void setIsHeadFee(Boolean)
+ Boolean getIsQuery()
+ void setIsQuery(Boolean)
+ Integer getFixAdminFee()
+ void setFixAdminFee(Integer)
+ String getFixFundInterest()
+ void setFixFundInterest(String)
+ String getProvisionRate()
+ void setProvisionRate(String)
+ BigDecimal getFundProvisionRate()
+ void setFundProvisionRate(BigDecimal)
+ Byte getFundInterestType()
+ void setFundInterestType(Byte)
+ BigDecimal getAstraRate()
+ void setAstraRate(BigDecimal)
+ BigDecimal getMdrRate()
+ void setMdrRate(BigDecimal)
+ BigDecimal getTaxRate()
+ void setTaxRate(BigDecimal)
+ Byte getPreferentialType()
+ void setPreferentialType(Byte)
+ String getDisInterestFee()
+ void setDisInterestFee(String)
+ String getDisAdminFee()
+ void setDisAdminFee(String)
+ String getDisLateFee()
+ void setDisLateFee(String)
+ String getDisUpfrontFee()
+ void setDisUpfrontFee(String)
+ String getSalaryDay()
+ void setSalaryDay(String)
+ String getPayDay()
+ void setPayDay(String)
+ String getPayCycle()
+ void setPayCycle(String)
+ String getTransType()
+ void setTransType(String)
+ String getMerchantProductCode()
+ void setMerchantProductCode(String)
+ String getMerchantCode()
+ void setMerchantCode(String)
+ String getMerchantOrderNo()
+ void setMerchantOrderNo(String)
+ String getBuyerName()
+ void setBuyerName(String)
+ String getBuyerCode()
+ void setBuyerCode(String)
+ String getExtend()
+ void setExtend(String)
+ String getExt()
+ void setExt(String)
+ Long getFundInterest()
+ void setFundInterest(Long)
+ Long getUpfrontCarryFee()
+ void setUpfrontCarryFee(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ String getDisProvisionFee()
+ void setDisProvisionFee(String)
+ String getDisFundInterestFee()
+ void setDisFundInterestFee(String)
+ Byte getFlag()
+ void setFlag(Byte)
+ String getFlagReason()
+ void setFlagReason(String)
+ String getRateExtend()
+ void setRateExtend(String)
+ String getTenorMin()
+ void setTenorMin(String)
+ String getTenorMax()
+ void setTenorMax(String)
+ Byte getIsPremium()
+ void setIsPremium(Byte)
+ Long getPremiumFee()
+ void setPremiumFee(Long)
+ String getRepayDueIndex()
+ void setRepayDueIndex(String)
+ Byte getCashFlowStatus()
+ void setCashFlowStatus(Byte)
}
class com.welab.loan.finance.facade.paygateway.VirtualAccountServiceFacade {
- VirtualAccountService virtualAccountService
+ Response<PageInfo<VirtualAccountDto>> list(VirtualAccountQry)
+ Response<String> createVANumber(CreateVANumberCmd)
+ Response<Boolean> virtualAccountUpdate(VirtualAccountUpdateCmd)
+ Response<Boolean> virtualAccountAdd(VirtualAccountAddCmd)
+ VirtualAccountVO getAccount(String,FundEnum)
+ String getBcaAccount(Long)
}
class com.welab.loan.finance.model.UvfFileTaskExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> UvfFileTaskExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.UvfFileTaskExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateTimeIsNull()
+ Criteria andCreateTimeIsNotNull()
+ Criteria andCreateTimeEqualTo(Date)
+ Criteria andCreateTimeNotEqualTo(Date)
+ Criteria andCreateTimeGreaterThan(Date)
+ Criteria andCreateTimeGreaterThanOrEqualTo(Date)
+ Criteria andCreateTimeLessThan(Date)
+ Criteria andCreateTimeLessThanOrEqualTo(Date)
+ Criteria andCreateTimeIn(List<Date>)
+ Criteria andCreateTimeNotIn(List<Date>)
+ Criteria andCreateTimeBetween(Date,Date)
+ Criteria andCreateTimeNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andFileNameIsNull()
+ Criteria andFileNameIsNotNull()
+ Criteria andFileNameEqualTo(String)
+ Criteria andFileNameNotEqualTo(String)
+ Criteria andFileNameGreaterThan(String)
+ Criteria andFileNameGreaterThanOrEqualTo(String)
+ Criteria andFileNameLessThan(String)
+ Criteria andFileNameLessThanOrEqualTo(String)
+ Criteria andFileNameLike(String)
+ Criteria andFileNameNotLike(String)
+ Criteria andFileNameIn(List<String>)
+ Criteria andFileNameNotIn(List<String>)
+ Criteria andFileNameBetween(String,String)
+ Criteria andFileNameNotBetween(String,String)
+ Criteria andTaskIdIsNull()
+ Criteria andTaskIdIsNotNull()
+ Criteria andTaskIdEqualTo(String)
+ Criteria andTaskIdNotEqualTo(String)
+ Criteria andTaskIdGreaterThan(String)
+ Criteria andTaskIdGreaterThanOrEqualTo(String)
+ Criteria andTaskIdLessThan(String)
+ Criteria andTaskIdLessThanOrEqualTo(String)
+ Criteria andTaskIdLike(String)
+ Criteria andTaskIdNotLike(String)
+ Criteria andTaskIdIn(List<String>)
+ Criteria andTaskIdNotIn(List<String>)
+ Criteria andTaskIdBetween(String,String)
+ Criteria andTaskIdNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Integer)
+ Criteria andStatusNotEqualTo(Integer)
+ Criteria andStatusGreaterThan(Integer)
+ Criteria andStatusGreaterThanOrEqualTo(Integer)
+ Criteria andStatusLessThan(Integer)
+ Criteria andStatusLessThanOrEqualTo(Integer)
+ Criteria andStatusIn(List<Integer>)
+ Criteria andStatusNotIn(List<Integer>)
+ Criteria andStatusBetween(Integer,Integer)
+ Criteria andStatusNotBetween(Integer,Integer)
}
class com.welab.loan.finance.model.UvfFileTaskExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.UvfFileTaskExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.job.PtpNotifyJob {
- BaseLoanApplyPlansService baseLoanApplyPlansService
+ void execute(ShardingContext)
}
enum com.welab.loan.finance.enums.CreditUserTagTriggerMethodEnum {
+  REPAYMENT
+  OVERDUE_JOB
+  USER_APPLICATION
+  COLLECTION_PLAN
+  WHITELIST_IMPORT
+  CREDIT_INIT
+  MIGRATE_USER_INIT
+  INCREASE_REJECTED
+  OLD_USER_CHANGE
- String triggerMethod
- String desc
+ boolean isRepaymentTrigger()
+ {static} Map<String,CreditUserTagTriggerMethodEnum> getTriggerMethodMap()
}
class com.welab.loan.finance.model.RechargeLog {
- Long id
- String loanNumber
- String rechargeType
- Long amount
- String remark
- Long operatorUserId
- Date createdAt
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getRechargeType()
+ void setRechargeType(String)
+ Long getAmount()
+ void setAmount(Long)
+ String getRemark()
+ void setRemark(String)
+ Long getOperatorUserId()
+ void setOperatorUserId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
}
class com.welab.loan.finance.dto.loan.LoanMqDto {
- Integer id
- Date createdAt
- String content
}
class com.welab.loan.finance.app.base.BaseLoanRepaymentService {
- LoanRepaymentMapper loanRepaymentMapper
+ void inserts(List<LoanRepayment>)
+ List<LoanRepayment> listByTransId(String)
+ String getUserLatestTrans(String)
+ void deleteByTransId(String)
+ LoanRepayment getLast(String,Integer)
+ LoanRepayment getLastByLoanNumber(String)
+ List<LoanRepayment> listByTransId(List<String>)
}
class com.welab.loan.finance.vo.FifUvfExcelVo {
- String applyNo
- String contractId
- String contractDay
- String contractAt
- String ptName
- String branchAddr
- String userName
- String sex
- String occupation
- String fullAddr
- String nik
- String lawType
- String lawCity
- String product
- String purposeDesc
- String fundName
- String objectName
- String surveyFee
- String insuranceFee
- String guaranteeFee
- String fiduciaryFee
- String provisionFee
- String notaryFee
- String adminFee
- String roadPrices
- String fundAmount
- String serviceAmount
- String allAmount
- String tenor
- String repaymentTime
- String repaymentPeriod
- String repaymentAmount
- String lastRepayment
- String repaymentDate
- String lateRate
- String collectionFee
- String agentFee
- String approvedBy
- String signAt
- String borrowerPayAt
- String lendAmount
- String agentName
- String agentBankAccountNo
- String agentBankName
- String email
- String birthday
- String marital
- String education
- String religion
- String mobile
- String houseTel
- String ktpCode
- String ktpProvince
- String ktpCity
- String ktpArea
- String ktpVillage
- String ktpFullAddr
- String rtKtp
- String rwKtp
- String isSame
- String domicileCode
- String domicileProvince
- String domicileCity
- String domicileArea
- String domicileVillage
- String rtDomicile
- String rwDomicile
- String domicileStatus
- String workStatus
- String companyName
- String salary
- String incomeSource
- String industry
- String workLength
- String officeTel
- String officeCode
- String officeProvince
- String officeCity
- String officeArea
- String officeVillage
- String officeFullAddr
- String sendAt
- String otherExpense
- String mobile2
- String mobile3
- String mobile4
- String error
}
class com.welab.loan.finance.rabbitmq.syn.SynTbLoanContractNoToBillingNo {
- BaseTbLoanService baseTbLoanService
+ void onMessage(Message)
}
class com.welab.loan.finance.core.dto.dues.ActivityRateRspDTO {
- Byte preferentialType
- BigDecimal fundRate
- BigDecimal serviceRate
- BigDecimal adminRate
- BigDecimal provisionRate
- BigDecimal lateRate
- BigDecimal upfrontRate
- BigDecimal principalRate
- long disAdmin
- long disFund
- long disService
- long disLate
- long disUpfront
- long disPrincipal
- long disProvision
- long disFundInterest
}
class com.welab.loan.finance.model.ext.AmountExt {
- String loanNumber
- Long amount
- Long receivedAmount
- Date transTime
- String transId
}
class com.welab.loan.finance.service.core.BaseFinanceUserAccountBalanceBakService {
- FinanceUserAccountBalanceBakMapper financeUserAccountBalanceBakMapper
+ void save(FinanceUserAccountBalanceBak)
+ void update(FinanceUserAccountBalanceBak)
+ FinanceUserAccountBalanceBak findById(Long)
+ FinanceUserAccountBalanceBak findByUserId(Long)
}
interface com.welab.loan.finance.mapper.RebookTimeLimitMapper {
~ long countByExample(RebookTimeLimitExample)
~ int deleteByPrimaryKey(Long)
~ int insert(RebookTimeLimit)
~ int insertSelective(RebookTimeLimit)
~ List<RebookTimeLimit> selectByExample(RebookTimeLimitExample)
~ RebookTimeLimit selectByPrimaryKey(Long)
~ int updateByExampleSelective(RebookTimeLimit,RebookTimeLimitExample)
~ int updateByExample(RebookTimeLimit,RebookTimeLimitExample)
~ int updateByPrimaryKeySelective(RebookTimeLimit)
~ int updateByPrimaryKey(RebookTimeLimit)
}
class com.welab.loan.finance.vo.CancelApplyCreditVO {
- String loanNumber
}
class com.welab.loan.finance.service.business.rebook.RebookAmountService {
- BaseDuesService baseDuesService
+ RebookReceivedAmountVo calcReceivedAmount(String,Long)
+ Long calcAmount(String,Long)
- Long getOldPrincipal(String)
}
class com.welab.loan.finance.service.business.rebook.RebookAmountService$RebookReceivedAmountVo {
~ Long ReceivedAmount
~ Long OldPrincipal
+ <<Create>> RebookReceivedAmountVo(Long,Long)
}
interface com.welab.loan.finance.mapper.LoanDuesLogMapper {
~ long countByExample(LoanDuesLogExample)
~ int deleteByExample(LoanDuesLogExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanDuesLog)
~ int insertSelective(LoanDuesLog)
~ List<LoanDuesLog> selectByExample(LoanDuesLogExample)
~ LoanDuesLog selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanDuesLog,LoanDuesLogExample)
~ int updateByExample(LoanDuesLog,LoanDuesLogExample)
~ int updateByPrimaryKeySelective(LoanDuesLog)
~ int updateByPrimaryKey(LoanDuesLog)
}
class com.welab.loan.finance.vo.InsuranceDetailImportVO {
- String loanNumber
- String policyNumber
- Long insuranceCoverage
- Date startDate
- Date endDate
- String claimStatus
- String insurancePaymentStatus
- Long paymentAmount
- String relation
}
class com.welab.loan.finance.app.command.plan.FPlanOpenNotifyCmdExe {
- MessageAppFacade messageAppFacade
- UserProfilesServiceFacade userProfilesServiceFacade
+ void notify(JSONObject)
}
class com.welab.loan.finance.dto.DuesReqDto {
- Long maxId
- String loanNumber
- String userId
- List<Long> orgIds
- String startTime
- String endTime
- String dueStartTime
- String dueEndTime
- String isAdminFee
- String isFundInterest
- String isCarryingFee
- String isServiceFee
- String isPrincipal
- Long fundId
- Long adminId
- Boolean warrantyFalg
- String secondProdCode
- Byte productType
- List<Integer> productTypes
- List<Integer> fundIds
- List<String> secondProdCodes
- String loanStatus
- String merchantOrderNo
- String claimedStartTime
- String claimedEndTime
}
class com.welab.loan.finance.dto.cmd.tb.HsoLoanImportCmd {
- {static} long serialVersionUID
- String partner
- String defaultValue1
- String emptySpace1
- String invoiceNo
- String emptySpace2
- String invoiceDate
- String emptySpace3
- String invoiceDateTOP
- String invoiceDate2
- String customerNumber
- String creditControlArea
- String customerName
- String customerAddress
- String defaultValue2
- String emptySpace4
- String currency
- Long invoiceAmount
- String mobile
- Long userId
- String loanNumber
- String billingNo
- String emptySpace0
}
class com.welab.loan.finance.model.ext.CreditUserAccountChildExt {
- Long userId
- Long operateFreezeMoney
- Long operateSumMoney
- Long operateUseMoney
- Integer operateType
}
enum com.welab.loan.finance.enums.CreditAccountTrackTypeEnum {
+  APPLY_LIMIT
+  INCREASE_LIMIT
+  DISBURSED
+  REPAYMENT
+  REPAYMENT_TAG_RULE
+  REPAYMENT_CLOSE
+  BLACK_LIST
+  TAG_RULE
+  RETRACEMENT_CLOSE
- Byte value
- String desc
}
class com.welab.loan.finance.core.dues.UpfrontFeeService {
- {static} VatCostProvider vatCostProvider
- {static} WhtCostProvider whtCostProvider
- {static} FlexifitRepaymentConfigFacade flexifitRepaymentConfigFacade
- {static} BaseLoanDetailExtendService baseLoanDetailExtendService
- {static} CreditActivityAbTestManager creditActivityAbTestManager
- {static} BaseCreditActivityAbTestGroupLoanRelationService baseCreditActivityAbTestGroupLoanRelationService
- {static} BaseCreditUserLoanService baseCreditUserLoanService
- {static} InsuranceAbTestDubboServiceFacade insuranceAbTestDubboServiceFacade
- {static} ApolloUtils apolloUtils
- ApplicationContext applicationContext
- {static} InSuranceDubboServiceFacade insuranceDubboServiceFacade
+ void init()
+ {static} FeeTypeExtDTO calcUpfrontFee(CalculatorReq)
+ {static} FeeTypeExtDTO calcUpfrontFee(LoanDetail,LoanDetailExtend,Date,Boolean)
+ {static} FeeTypeExtDTO calcUpfrontFee(CostReqDTO,Boolean)
- {static} FeeTypeExtDTO calcUpfrontFeeForV1(RepaymentCalculatorReq,ActivityRuleResponseDTO,Date,Boolean,Boolean)
- {static} FeeTypeExtDTO doCalcUpfrontFeeV1(RepaymentCalculatorReq,ActivityRuleResponseDTO,Boolean,String,boolean,int)
- {static} FeeTypeExtDTO calcUpfrontFeeForV2(RepaymentCalculatorReq,String,ActivityRuleResponseDTO,Date,Boolean,boolean)
- {static} FeeTypeExtDTO calcUpfrontFeeForFlexi(RepaymentCalculatorReq,String,ActivityRuleResponseDTO,Date,Boolean)
- {static} FeeTypeExtDTO doCalcUpfrontFeeV2(RepaymentCalculatorReq,String,ActivityRuleResponseDTO,Date,Boolean,String,boolean,int)
- {static} InsuranceConfigDTO getInsurancePremium(RepaymentCalculatorReq,String)
- {static} FeeDdmDTO getFeeDdmDTO(String,RepaymentCalculatorReq,boolean,Date,RateTypeDTO)
- {static} BigDecimal calcUpfrontFee(String,BigDecimal,BigDecimal,boolean,int,ActivityRuleResponseDTO)
- {static} long calcProvisionFeeV1(String,BigDecimal,BigDecimal)
- {static} long calcProvisionFeeV2(String,BigDecimal,BigDecimal)
- {static} long calcFundInterestFee(String,BigDecimal,BigDecimal,long,FeeDdmDTO)
- {static} long calcServiceFee(String,BigDecimal,BigDecimal,BigDecimal,int,ActivityRuleResponseDTO,FeeDdmDTO)
- {static} long calcAdminFeeV1(String,BigDecimal,String,ActivityRuleResponseDTO)
- {static} long calcAdminFeeV2(String,BigDecimal,FeeTypeDTO,ActivityRuleResponseDTO)
- {static} long calcCarryFee(String,Boolean,BigDecimal)
- {static} FeeTypeDTO builDefaultFeeTypeDTO()
- {static} void updateFee(String,FeeTypeDTO)
- {static} RepaymentCalculatorReq buildRepaymentCalculatorReq(Long,String,BigDecimal,String,String,Date,Long,BigDecimal,BigDecimal,BigDecimal,String,Boolean,int,Byte,String,Byte,Integer,ActivityRuleResponseDTO)
- {static} ActivityRuleResponseDTO buildActivityRule(LoanDetailExtend)
- {static} int getDays(RepaymentCalculatorReq,String,boolean,boolean)
- {static} boolean isV2Short(String)
}
class com.welab.loan.finance.vo.tb.LoanStateCountVO {
- Long pendLendCount
- Long notCloseCount
- Long overdueCount
}
class com.welab.loan.finance.app.service.LoanCessieInfoService {
- BaseLoanCessieInfoService baseLoanCessieInfoService
- BaseDuesService baseDuesService
- BaseLoanDetailExtendService baseLoanDetailExtendService
+ void asyncInitLoanCessieInfo(List<String>)
+ void asyncRepaymentByDues(Set<String>)
+ void repaymentByAmount(String,Long)
- void updateCessie(String)
- void initLoanCessieInfo(String)
- void initLoanCessieInfo(String,Date)
- List<LoanCessieInfo> initLoanCessieInfos(String,Date)
- List<TransItemDTO> getTransItemDTOs(String)
- Map<Integer,TransItemDTO> getTransItemDTOMap(String)
+ boolean isCessie(String)
}
class com.welab.loan.finance.dto.cmd.tb.TravelokaLoanImportCmd {
- String partner
- String orderNo
- String loanNumber
- String mobile
- Long principal
- Long upfrontAD
- Long upfrontPV
- Long upfrontIF
- Long upfrontPF
- Long repayAD
- Long repayPV
- Long repayIF
- Long repayPF
- Double lfDayPercent
- Long amountDisbursed
- String tenor
- Long commercialFee
- String accountNo
- String bankName
- String to
- String disbursementTime
- String by
- String productCode
- String funder
- String disbursementCommand
- Long DPD
- Date actualDisbursementTime
- Date uploadDate
- Long outstandingAmount
- Long userId
- String userName
+ boolean isEmpty()
}
class com.welab.loan.finance.service.core.BaseUserBankCardService {
- FinanceUserBankcardMapper financeUserBankcardMapper
- FinanceUserBankcardExtMapper financeUserBankcardExtMapper
- MaumodalService maumodalService
+ Response<FinanceUserBankcard> getUserBankcards(Long,Long)
+ UserBankcardVO getUserBankcardsForMaumodal(Long,Long,Byte)
+ Response saveUserBankCard(FinanceUserBankcard)
+ void saveUserBankCardSim(FinanceUserBankcard)
+ List<FinanceUserBankcard> findAllcards(Long,Long)
+ FinanceUserBankcard findUsercard(Long,Long)
+ List<FinanceUserBankcard> findUsercardList(Long)
+ long countUserCard(Long,Long)
+ FinanceUserBankcard getNewCard(Long,Long)
+ List<FinanceUserBankcard> getNewCardList(Long,Long)
+ List<FinanceUserBankcard> getNewCardAvailableList(Long,Long)
+ void updateBankCardById(FinanceUserBankcard)
+ List<FinanceUserBankcard> getCardByNumber(Long,String,String,Long,BankCardStatusEnum)
+ long countCardByNumber(Long,String,String,Long,BankCardStatusEnum)
+ long countCardByNumberAvailable(Long,String,String,Long)
+ Page queryUserBankCardPage(UserBankCardDto)
+ Integer deleteById(Long)
+ Integer getCount(Long,Date,Date,List<Long>)
+ FinanceUserBankcard findAvailableUsercard(Long)
+ FinanceUserBankcard findLastUserBankCard(String)
+ List<FinanceUserBankcard> findAvailableByOrgIdAndBankAccountNumber(Long,String)
+ long getOneMonthBindCardRecordCount(Long,Long)
+ List<FinanceUserBankcard> findByAccountNumber(List<String>,Long)
}
class com.welab.loan.finance.model.LendReversalRepaymentExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LendReversalRepaymentExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LendReversalRepaymentExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
# void addCriterionForJDBCDate(String,Date,String)
# void addCriterionForJDBCDate(String,List<Date>,String)
# void addCriterionForJDBCDate(String,Date,Date,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andRemainingAmountIsNull()
+ Criteria andRemainingAmountIsNotNull()
+ Criteria andRemainingAmountEqualTo(Long)
+ Criteria andRemainingAmountNotEqualTo(Long)
+ Criteria andRemainingAmountGreaterThan(Long)
+ Criteria andRemainingAmountGreaterThanOrEqualTo(Long)
+ Criteria andRemainingAmountLessThan(Long)
+ Criteria andRemainingAmountLessThanOrEqualTo(Long)
+ Criteria andRemainingAmountIn(List<Long>)
+ Criteria andRemainingAmountNotIn(List<Long>)
+ Criteria andRemainingAmountBetween(Long,Long)
+ Criteria andRemainingAmountNotBetween(Long,Long)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Long)
+ Criteria andFundIdNotEqualTo(Long)
+ Criteria andFundIdGreaterThan(Long)
+ Criteria andFundIdGreaterThanOrEqualTo(Long)
+ Criteria andFundIdLessThan(Long)
+ Criteria andFundIdLessThanOrEqualTo(Long)
+ Criteria andFundIdIn(List<Long>)
+ Criteria andFundIdNotIn(List<Long>)
+ Criteria andFundIdBetween(Long,Long)
+ Criteria andFundIdNotBetween(Long,Long)
+ Criteria andMerchantCodeIsNull()
+ Criteria andMerchantCodeIsNotNull()
+ Criteria andMerchantCodeEqualTo(String)
+ Criteria andMerchantCodeNotEqualTo(String)
+ Criteria andMerchantCodeGreaterThan(String)
+ Criteria andMerchantCodeGreaterThanOrEqualTo(String)
+ Criteria andMerchantCodeLessThan(String)
+ Criteria andMerchantCodeLessThanOrEqualTo(String)
+ Criteria andMerchantCodeLike(String)
+ Criteria andMerchantCodeNotLike(String)
+ Criteria andMerchantCodeIn(List<String>)
+ Criteria andMerchantCodeNotIn(List<String>)
+ Criteria andMerchantCodeBetween(String,String)
+ Criteria andMerchantCodeNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andBatchNoIsNull()
+ Criteria andBatchNoIsNotNull()
+ Criteria andBatchNoEqualTo(String)
+ Criteria andBatchNoNotEqualTo(String)
+ Criteria andBatchNoGreaterThan(String)
+ Criteria andBatchNoGreaterThanOrEqualTo(String)
+ Criteria andBatchNoLessThan(String)
+ Criteria andBatchNoLessThanOrEqualTo(String)
+ Criteria andBatchNoLike(String)
+ Criteria andBatchNoNotLike(String)
+ Criteria andBatchNoIn(List<String>)
+ Criteria andBatchNoNotIn(List<String>)
+ Criteria andBatchNoBetween(String,String)
+ Criteria andBatchNoNotBetween(String,String)
+ Criteria andLendDateIsNull()
+ Criteria andLendDateIsNotNull()
+ Criteria andLendDateEqualTo(Date)
+ Criteria andLendDateNotEqualTo(Date)
+ Criteria andLendDateGreaterThan(Date)
+ Criteria andLendDateGreaterThanOrEqualTo(Date)
+ Criteria andLendDateLessThan(Date)
+ Criteria andLendDateLessThanOrEqualTo(Date)
+ Criteria andLendDateIn(List<Date>)
+ Criteria andLendDateNotIn(List<Date>)
+ Criteria andLendDateBetween(Date,Date)
+ Criteria andLendDateNotBetween(Date,Date)
+ Criteria andDueDateIsNull()
+ Criteria andDueDateIsNotNull()
+ Criteria andDueDateEqualTo(Date)
+ Criteria andDueDateNotEqualTo(Date)
+ Criteria andDueDateGreaterThan(Date)
+ Criteria andDueDateGreaterThanOrEqualTo(Date)
+ Criteria andDueDateLessThan(Date)
+ Criteria andDueDateLessThanOrEqualTo(Date)
+ Criteria andDueDateIn(List<Date>)
+ Criteria andDueDateNotIn(List<Date>)
+ Criteria andDueDateBetween(Date,Date)
+ Criteria andDueDateNotBetween(Date,Date)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.LendReversalRepaymentExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LendReversalRepaymentExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
enum com.welab.loan.finance.enums.LoanDetailBizTypeEnum {
+  REBOOK
+  TB
- Byte value
- String Description
}
class com.welab.loan.finance.app.impl.repayment.RepaymentTrackServiceImpl {
- BaseRepaymentTrack baseRepaymentTrack
+ TrackVo findLastRepaymentTrack(Long)
+ TrackVo findOneCLRepaymentTrack(Long)
}
class com.welab.loan.finance.app.manager.credit.OprateAccountManager {
- BaseCreditUserAccountService baseCreditUserAccountService
- BaseCreditUserAccountChildService baseCreditUserAccountChildService
- BaseCreditUserAccountDetailService baseCreditUserAccountDetailService
+ boolean oprateAccount(CreditUserAccountExt,CreditUserAccountDetailExt)
}
class com.welab.loan.finance.model.FinanceUserAccountDetailExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FinanceUserAccountDetailExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FinanceUserAccountDetailExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(String)
+ Criteria andTypeNotEqualTo(String)
+ Criteria andTypeGreaterThan(String)
+ Criteria andTypeGreaterThanOrEqualTo(String)
+ Criteria andTypeLessThan(String)
+ Criteria andTypeLessThanOrEqualTo(String)
+ Criteria andTypeLike(String)
+ Criteria andTypeNotLike(String)
+ Criteria andTypeIn(List<String>)
+ Criteria andTypeNotIn(List<String>)
+ Criteria andTypeBetween(String,String)
+ Criteria andTypeNotBetween(String,String)
+ Criteria andAccountIdIsNull()
+ Criteria andAccountIdIsNotNull()
+ Criteria andAccountIdEqualTo(Long)
+ Criteria andAccountIdNotEqualTo(Long)
+ Criteria andAccountIdGreaterThan(Long)
+ Criteria andAccountIdGreaterThanOrEqualTo(Long)
+ Criteria andAccountIdLessThan(Long)
+ Criteria andAccountIdLessThanOrEqualTo(Long)
+ Criteria andAccountIdIn(List<Long>)
+ Criteria andAccountIdNotIn(List<Long>)
+ Criteria andAccountIdBetween(Long,Long)
+ Criteria andAccountIdNotBetween(Long,Long)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andOperationAmountIsNull()
+ Criteria andOperationAmountIsNotNull()
+ Criteria andOperationAmountEqualTo(Long)
+ Criteria andOperationAmountNotEqualTo(Long)
+ Criteria andOperationAmountGreaterThan(Long)
+ Criteria andOperationAmountGreaterThanOrEqualTo(Long)
+ Criteria andOperationAmountLessThan(Long)
+ Criteria andOperationAmountLessThanOrEqualTo(Long)
+ Criteria andOperationAmountIn(List<Long>)
+ Criteria andOperationAmountNotIn(List<Long>)
+ Criteria andOperationAmountBetween(Long,Long)
+ Criteria andOperationAmountNotBetween(Long,Long)
+ Criteria andTransIdIsNull()
+ Criteria andTransIdIsNotNull()
+ Criteria andTransIdEqualTo(String)
+ Criteria andTransIdNotEqualTo(String)
+ Criteria andTransIdGreaterThan(String)
+ Criteria andTransIdGreaterThanOrEqualTo(String)
+ Criteria andTransIdLessThan(String)
+ Criteria andTransIdLessThanOrEqualTo(String)
+ Criteria andTransIdLike(String)
+ Criteria andTransIdNotLike(String)
+ Criteria andTransIdIn(List<String>)
+ Criteria andTransIdNotIn(List<String>)
+ Criteria andTransIdBetween(String,String)
+ Criteria andTransIdNotBetween(String,String)
+ Criteria andLoanNumIsNull()
+ Criteria andLoanNumIsNotNull()
+ Criteria andLoanNumEqualTo(String)
+ Criteria andLoanNumNotEqualTo(String)
+ Criteria andLoanNumGreaterThan(String)
+ Criteria andLoanNumGreaterThanOrEqualTo(String)
+ Criteria andLoanNumLessThan(String)
+ Criteria andLoanNumLessThanOrEqualTo(String)
+ Criteria andLoanNumLike(String)
+ Criteria andLoanNumNotLike(String)
+ Criteria andLoanNumIn(List<String>)
+ Criteria andLoanNumNotIn(List<String>)
+ Criteria andLoanNumBetween(String,String)
+ Criteria andLoanNumNotBetween(String,String)
+ Criteria andOriginIsNull()
+ Criteria andOriginIsNotNull()
+ Criteria andOriginEqualTo(Byte)
+ Criteria andOriginNotEqualTo(Byte)
+ Criteria andOriginGreaterThan(Byte)
+ Criteria andOriginGreaterThanOrEqualTo(Byte)
+ Criteria andOriginLessThan(Byte)
+ Criteria andOriginLessThanOrEqualTo(Byte)
+ Criteria andOriginIn(List<Byte>)
+ Criteria andOriginNotIn(List<Byte>)
+ Criteria andOriginBetween(Byte,Byte)
+ Criteria andOriginNotBetween(Byte,Byte)
}
class com.welab.loan.finance.model.FinanceUserAccountDetailExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FinanceUserAccountDetailExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
interface com.welab.loan.finance.mapper.FundAccountMapper {
~ long countByExample(FundAccountExample)
~ int deleteByExample(FundAccountExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FundAccount)
~ int insertSelective(FundAccount)
~ List<FundAccount> selectByExample(FundAccountExample)
~ FundAccount selectByPrimaryKey(Long)
~ int updateByExampleSelective(FundAccount,FundAccountExample)
~ int updateByExample(FundAccount,FundAccountExample)
~ int updateByPrimaryKeySelective(FundAccount)
~ int updateByPrimaryKey(FundAccount)
}
class com.welab.loan.finance.app.base.BaseAdvanceMsgListService {
- AdvanceMsgListMapper advanceMsgListMapper
+ boolean addRecord(AdvanceMsgList)
+ boolean AdvanceMsgList(AdvanceMsgList)
+ AdvanceMsgList getAdvanceRepaymentInfo(Long)
+ AdvanceMsgList getAdvanceRepaymentInfo(AdvanceMsgListExt)
+ boolean invalidationRecordByLoanNumber(String)
+ boolean invalidationRecordByLoanNumberList(List<String>)
+ boolean repaymentedRecordByLoanNumber(String)
+ List<AdvanceMsgList> getAdvanceMsgIds(AdvanceRepaymentQry)
+ boolean updateRecord(AdvanceMsgList)
+ void invalidNoEnableAdvLetter()
+ List<AdvanceMsgList> getInvalidNoEnableAdvLetter()
+ AdvanceMsgList lastRecordByLoanNumber(String)
}
class com.welab.loan.finance.model.LendReversalRepaymentDetail {
- Long id
- String loanNumber
- String repayLoanNumber
- Long amount
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getRepayLoanNumber()
+ void setRepayLoanNumber(String)
+ Long getAmount()
+ void setAmount(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.service.core.BaseLoanPlansRelationService {
- LoanPlansRelationMapper loanPlansRelationMapper
+ Boolean findOldLoanNumberIsShort(String)
+ LoanPlansRelation getOneByOldLoanNumber(String)
+ List<LoanPlansRelation> findLoanPlansRelationList(List<String>)
+ int batchUpdate(LoanPlansRelation,List<Long>)
+ LoanPlansRelation getOneByLoanNumber(String)
+ void save(LoanPlansRelation)
}
class com.welab.loan.finance.model.ext.LoanUvfRepaymentExt {
+ {static} LinkedHashMap getExportMap(String)
}
class com.welab.loan.finance.vo.OverdueAmountDetailVO {
+ {static} String OVERDUE_AMOUNT_OUTSTANDING
+ {static} String OVERDUE_AMOUNT_LATE
+ {static} String OVERDUE_AMOUNT_DUE
- Integer dueIndex
- Long amount
}
class com.welab.loan.finance.facade.application.UserProfilesServiceFacade {
- UserProfilesService userProfilesService
+ UserProfileVO getUserProfileVO(String)
+ UserProfileVO getUserProfileVO(Long)
}
interface com.welab.loan.finance.service.TbService {
~ Response doImport(List<TbInvoice>)
~ Response doBatchLend(TbBatch)
~ Response cancelLoan(List<String>)
~ Response doRepayment(List<TbRepaymentDTO>)
~ Response<TbLoanDetailRate> getRate(String)
}
class com.welab.loan.finance.model.UvfFileRepaymentDetail {
- Long id
- Date createTime
- Date updatedAt
- Boolean deleted
- String taskId
- String noKontrak
- String effBu
- String tglTransaksi
- String pokok
- String bunga
- String denda
- String adminPreterm
- String penaltyFifBu
- String total
+ Long getId()
+ void setId(Long)
+ Date getCreateTime()
+ void setCreateTime(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ String getTaskId()
+ void setTaskId(String)
+ String getNoKontrak()
+ void setNoKontrak(String)
+ String getEffBu()
+ void setEffBu(String)
+ String getTglTransaksi()
+ void setTglTransaksi(String)
+ String getPokok()
+ void setPokok(String)
+ String getBunga()
+ void setBunga(String)
+ String getDenda()
+ void setDenda(String)
+ String getAdminPreterm()
+ void setAdminPreterm(String)
+ String getPenaltyFifBu()
+ void setPenaltyFifBu(String)
+ String getTotal()
+ void setTotal(String)
}
enum com.welab.loan.finance.enums.credit.TbCreditStatusEnum {
+  ACTIVE
+  FREEZE
+  BLACK
- Byte status
- String enStatusName
- String statusName
+ {static} TbCreditStatusEnum getByStatus(Byte)
}
class com.welab.loan.finance.test.ns.NsQueryServiceTest {
- NsQueryServcie nsQueryServcie
+ void loanList()
+ void repaymentList()
+ void dueList()
}
class com.welab.loan.finance.dto.RepayInfoDto {
- String loanNumber
- Long userId
- Long amount
- String tenor
- String productCode
- String secondProdCode
- String promotionCode
- Integer planType
- Integer fundId
- Date loanDate
- Boolean insuranceSelect
}
class com.welab.loan.finance.test.repay.RepayTest {
- IUserRepayAmount userRepayAmount
- IQueryDuesService queryDuesService
- ITransformDues transformDues
- IModLateService modLateService
- IVirtualAccount virtualAccount
- ILendRepayDuesCoupon repayDuesCoupon
- IRepaymentService repaymentService
- CustomRepayCmdExe customRepayCmdExe
- RepaymentService iRepaymentService
- LoanCouponService loanCouponService
- DuesService duesService
+ void findUserRepayCustomAmountByUser()
+ void findUserRepayAmountByUser()
+ void findUserRepayAmountByLoans()
+ void findUserRepayAmountByVa()
+ void findUserRepayAmountRangeByLoan()
+ void findFilterDefaultLoanByUser()
+ void findFilterDefaultLoanByUser1()
+ void testAllDues()
+ void findDefaultLoanAmountByLoans()
+ void testA()
+ void testCFilter()
+ void testC()
+ void testP()
+ void testL()
+ void testK()
+ void testM()
+ void testN()
+ void testCM()
+ void testCD()
+ void testKD()
+ void tesgm()
+ void repay()
+ void tryCouponInfo()
+ void findListRepayInfoBycode()
+ void confirmRepayment()
+ void getRepayConfig()
}
class com.welab.loan.finance.test.credit.BlackList {
+ {static} void main(String[])
}
class com.welab.loan.finance.utils.StringUtils {
- {static} String _PRODUCT_TENOR_PATTERN
- {static} String _PRODUCT_PROVISIONRATE_PATTERN
- {static} ReentrantLock _lock
- {static} AtomicInteger _id
- {static} String _NUMSTR
- {static} String _CAHRSTR
- {static} Random random
+ {static} String getUuidNm()
- {static} String getDateStr()
- {static} String increasedId()
+ {static} String getUniqueId(int,FlowTypeEnum)
+ {static} String getTransId(FlowTypeEnum)
+ {static} String getLoanCode()
+ {static} boolean productTenor(String)
+ {static} boolean productProvisionRate(String)
+ {static} boolean isNumeric(String)
+ {static} String[] splitProvisionRate(String)
+ {static} Long getFixFundInterest(String,Long)
- {static} long getConfigAmount(String)
+ {static} boolean checkFixFundInterest(String)
+ {static} boolean checkBriBank(String)
+ {static} String getPlanKey(PlansTypeEnum,DueTypeEnum)
+ {static} String getPlanTypeKey(Byte,String)
+ {static} void getPlanDiscountMap(PlansTypeEnum,Map<String,BigDecimal>,CalPlanAmountDTO)
+ {static} LoanApplyPlans getPlanDiscountMapByType(PlansTypeEnum,Boolean)
+ {static} boolean getMatchesPlan(OverdueDayDTO,PlansTypeEnum)
+ {static} Map<String,BigDecimal> getTransformPlanMap(LoanApplyPlans)
+ {static} String getNewDuesPlanRate(String,DueTypeEnum)
+ {static} Integer getNoPlanRealPeriod(Integer,List<Integer>)
+ {static} String handleRp(Long)
+ {static} String handleRp(Long,String)
+ {static} String handleTenor(String)
+ {static} Map<String,String> getFileAttachmentMap(File)
+ {static} int getEplanKey(Integer,Integer)
+ {static} String autoGenerCode(long,int)
+ {static} int findMinPayDay(String)
+ {static} boolean findSameList(List<String>,List<String>)
}
class com.welab.loan.finance.app.base.BasePayBillsService {
- PayBillsExtMapper payBillsExtMapper
- PayBillsMapper payBillsMapper
+ int inserts(List<PayBills>)
+ PayBills queryTotalTransactionAmount(String)
+ PageInfo<PayBills> query(BillsQry)
+ List<PayBills> selectPayBills(String,List<PayBills>)
+ PayBills selectById(Long)
+ int updateByPrimaryKeySelective(PayBills)
+ PayBills selectByTrxIdOrVa(String,Date)
}
class com.welab.loan.finance.model.FinanceFund {
- Long id
- String fundName
- String fundCode
- String phone
- String address
- String licenseNum
- Byte status
- String orgType
- String fundType
- String legalType
- String legalName
- String legalNum
- Date loanStart
- Date loanEnd
- String loanMode
- Date repaymentStart
- Date repaymentEnd
- String repaymentMode
- String isApprove
- String paymentMethod
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getFundName()
+ void setFundName(String)
+ String getFundCode()
+ void setFundCode(String)
+ String getPhone()
+ void setPhone(String)
+ String getAddress()
+ void setAddress(String)
+ String getLicenseNum()
+ void setLicenseNum(String)
+ Byte getStatus()
+ void setStatus(Byte)
+ String getOrgType()
+ void setOrgType(String)
+ String getFundType()
+ void setFundType(String)
+ String getLegalType()
+ void setLegalType(String)
+ String getLegalName()
+ void setLegalName(String)
+ String getLegalNum()
+ void setLegalNum(String)
+ Date getLoanStart()
+ void setLoanStart(Date)
+ Date getLoanEnd()
+ void setLoanEnd(Date)
+ String getLoanMode()
+ void setLoanMode(String)
+ Date getRepaymentStart()
+ void setRepaymentStart(Date)
+ Date getRepaymentEnd()
+ void setRepaymentEnd(Date)
+ String getRepaymentMode()
+ void setRepaymentMode(String)
+ String getIsApprove()
+ void setIsApprove(String)
+ String getPaymentMethod()
+ void setPaymentMethod(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
interface com.welab.loan.finance.service.FinanceConfigService {
~ Response<FinanceConfigVO> getSignOneByKey(String)
~ Response<String> getUserNamePrefix()
~ Response<Integer> UpdateUserNamePrefix(String)
}
class com.welab.loan.finance.service.core.BaseUserThirdPartyAccountService {
- FinanceUserThirdpartyAccountMapper mapper
+ void saveThirdPartyAccount(FinanceUserThirdpartyAccount)
+ FinanceUserThirdpartyAccount findOne(Long,String,StatusEnum)
+ void updateStatus(Long,String,String,Byte)
+ List<FinanceUserThirdpartyAccount> findListByUserId(Long,StatusEnum)
}
class com.welab.loan.finance.app.base.credit.BaseCreditProxyIncomeLogService {
- CreditProxyIncomeLogMapper creditProxyIncomeLogMapper
+ int insertSelective(CreditProxyIncomeLog)
+ CreditProxyIncomeLog selectLastOneByUserId(Long)
+ CreditProxyIncomeLog selectLastOneByUserId(Long,int)
}
class com.welab.loan.finance.app.base.BaseLoanCessieInfoService {
- LoanCessieInfoMapper loanCessieInfoMapper
+ void add(LoanCessieInfo)
+ void add(List<LoanCessieInfo>)
+ int countByLoanNumber(String)
+ List<LoanCessieInfo> selectByLoanNumber(String)
+ void updateCessieFeeByPrimaryKey(LoanCessieInfo)
+ List<LoanCessieInfo> listByLoanNumbers(Set<String>)
}
class com.welab.loan.finance.app.impl.TbLoanCountQueryServiceImpl {
- BaseTbLoanQueryService baseTbLoanQueryService
+ Response<Long> countTbLoanQry(TbLoanQry)
}
class com.welab.loan.finance.app.base.BaseLoanDetailService {
- LoanDetailMapper loanDetailMapper
- LoanDetailExtendExtMapper loanDetailExtendExtMapper
- LoanDetailExtendMapper loanDetailExtendMapper
- LoanDetailExtMapper loanDetailExtMapper
+ int save(LoanDetail)
+ List<TbLoanVO> queryTbOrderList(TravelokaLoanQry)
+ long queryTbOrderCount(TravelokaLoanQry)
+ List<TbDisbursementVO> queryTbDisbursementOrderList(TbDisbursementQry)
+ long queryTbDisbursementOrderCount(TbDisbursementQry)
+ List<String> getSecondProductCode(List<String>)
+ int updateStatusByLoanNumberList(List<LoanDetailUpdateParam>)
+ LoanDetail findOne(String)
+ long countNotClosed(Long)
+ List<LoanDetailExtend> selectByExample(LoanDetailExtendExample)
+ List<LoanDetail> findLoanDetailByLoanNumbers(List<String>)
+ List<LoanDetail> findCloseLoanDetailByLoanNumbers(List<String>)
+ LoanDetailExtend findLoanNumber(String)
+ long findMcFunderInterestByLoanNumber(String)
+ long findMcFunderInterestByUserId(Long)
+ List<Map<String,Object>> queryOutstandingAmount(List<String>)
+ void updateLendStatus(String,Byte)
+ PageInfo<LoanDetail> findPage(LoanQry)
+ long countLoanQry(LoanQry)
+ long countTbLoanQry(TbLoanCountQry)
- LoanDetailExample bulidExample(LoanQry)
+ Long selectUnFinishAmount(UnFinishLoanAmountQry)
+ LoanDetailExtend findLoanDetailExt(String)
+ List<LoanDetail> selectUnCloseByAop()
+ Long countNotCloseLoans(Long)
+ List<Long> getLendSuccessAndNotCloseUserIdList(List<Long>,Date,Date)
+ int updateLendStatusAndRepayStatusById(Byte,Byte,Long)
+ List<LoanDetail> getNotClosClLoan(Long)
+ List<LoanDetail> getNotCloseLoan(Long,Long)
+ LoanDetail getLastLoan(String)
+ List<LoanDetail> getOverDueCreditLoan(Long)
+ LoanDetail getFirstOverDueLoan(Long)
+ List<LoanDetail> getInitRebookLoan(Long)
+ List<LoanDetail> findLoanByUserId(Long)
+ LoanDetail findLastLoanByUserId(Long)
+ Long countClMc(Long,Date,Date,Integer)
+ List<LoanDetail> findLoanDetailByLoanNumbers(List<String>,Byte)
+ List<LoanDetail> findTbLoanDetail(Long,int,List<Long>)
+ int updatePeriodById(String,Long)
+ int updateBatchNoById(String,Long)
+ List<LoanDetail> findByBatchNo(String)
+ List<LoanDetail> listCollectionQueryConditionLoanDetail(OverdueQueryDto)
+ LoanDetail getLastRecord()
+ Integer findIsDisLoanCountByUserId(Long)
+ void cleanCustomAmount(List<String>)
+ List<LoanDetailExtend> findLoanDetailExtendByLoanNumbers(List<String>)
}
class com.welab.loan.finance.model.LoanDetailExtendExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanDetailExtendExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanDetailExtendExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andProductTypeIsNull()
+ Criteria andProductTypeIsNotNull()
+ Criteria andProductTypeEqualTo(Byte)
+ Criteria andProductTypeNotEqualTo(Byte)
+ Criteria andProductTypeGreaterThan(Byte)
+ Criteria andProductTypeGreaterThanOrEqualTo(Byte)
+ Criteria andProductTypeLessThan(Byte)
+ Criteria andProductTypeLessThanOrEqualTo(Byte)
+ Criteria andProductTypeIn(List<Byte>)
+ Criteria andProductTypeNotIn(List<Byte>)
+ Criteria andProductTypeBetween(Byte,Byte)
+ Criteria andProductTypeNotBetween(Byte,Byte)
+ Criteria andAdminTypeIsNull()
+ Criteria andAdminTypeIsNotNull()
+ Criteria andAdminTypeEqualTo(Byte)
+ Criteria andAdminTypeNotEqualTo(Byte)
+ Criteria andAdminTypeGreaterThan(Byte)
+ Criteria andAdminTypeGreaterThanOrEqualTo(Byte)
+ Criteria andAdminTypeLessThan(Byte)
+ Criteria andAdminTypeLessThanOrEqualTo(Byte)
+ Criteria andAdminTypeIn(List<Byte>)
+ Criteria andAdminTypeNotIn(List<Byte>)
+ Criteria andAdminTypeBetween(Byte,Byte)
+ Criteria andAdminTypeNotBetween(Byte,Byte)
+ Criteria andIsHeadFeeIsNull()
+ Criteria andIsHeadFeeIsNotNull()
+ Criteria andIsHeadFeeEqualTo(Boolean)
+ Criteria andIsHeadFeeNotEqualTo(Boolean)
+ Criteria andIsHeadFeeGreaterThan(Boolean)
+ Criteria andIsHeadFeeGreaterThanOrEqualTo(Boolean)
+ Criteria andIsHeadFeeLessThan(Boolean)
+ Criteria andIsHeadFeeLessThanOrEqualTo(Boolean)
+ Criteria andIsHeadFeeIn(List<Boolean>)
+ Criteria andIsHeadFeeNotIn(List<Boolean>)
+ Criteria andIsHeadFeeBetween(Boolean,Boolean)
+ Criteria andIsHeadFeeNotBetween(Boolean,Boolean)
+ Criteria andIsQueryIsNull()
+ Criteria andIsQueryIsNotNull()
+ Criteria andIsQueryEqualTo(Boolean)
+ Criteria andIsQueryNotEqualTo(Boolean)
+ Criteria andIsQueryGreaterThan(Boolean)
+ Criteria andIsQueryGreaterThanOrEqualTo(Boolean)
+ Criteria andIsQueryLessThan(Boolean)
+ Criteria andIsQueryLessThanOrEqualTo(Boolean)
+ Criteria andIsQueryIn(List<Boolean>)
+ Criteria andIsQueryNotIn(List<Boolean>)
+ Criteria andIsQueryBetween(Boolean,Boolean)
+ Criteria andIsQueryNotBetween(Boolean,Boolean)
+ Criteria andFixAdminFeeIsNull()
+ Criteria andFixAdminFeeIsNotNull()
+ Criteria andFixAdminFeeEqualTo(Integer)
+ Criteria andFixAdminFeeNotEqualTo(Integer)
+ Criteria andFixAdminFeeGreaterThan(Integer)
+ Criteria andFixAdminFeeGreaterThanOrEqualTo(Integer)
+ Criteria andFixAdminFeeLessThan(Integer)
+ Criteria andFixAdminFeeLessThanOrEqualTo(Integer)
+ Criteria andFixAdminFeeIn(List<Integer>)
+ Criteria andFixAdminFeeNotIn(List<Integer>)
+ Criteria andFixAdminFeeBetween(Integer,Integer)
+ Criteria andFixAdminFeeNotBetween(Integer,Integer)
+ Criteria andFixFundInterestIsNull()
+ Criteria andFixFundInterestIsNotNull()
+ Criteria andFixFundInterestEqualTo(String)
+ Criteria andFixFundInterestNotEqualTo(String)
+ Criteria andFixFundInterestGreaterThan(String)
+ Criteria andFixFundInterestGreaterThanOrEqualTo(String)
+ Criteria andFixFundInterestLessThan(String)
+ Criteria andFixFundInterestLessThanOrEqualTo(String)
+ Criteria andFixFundInterestLike(String)
+ Criteria andFixFundInterestNotLike(String)
+ Criteria andFixFundInterestIn(List<String>)
+ Criteria andFixFundInterestNotIn(List<String>)
+ Criteria andFixFundInterestBetween(String,String)
+ Criteria andFixFundInterestNotBetween(String,String)
+ Criteria andProvisionRateIsNull()
+ Criteria andProvisionRateIsNotNull()
+ Criteria andProvisionRateEqualTo(String)
+ Criteria andProvisionRateNotEqualTo(String)
+ Criteria andProvisionRateGreaterThan(String)
+ Criteria andProvisionRateGreaterThanOrEqualTo(String)
+ Criteria andProvisionRateLessThan(String)
+ Criteria andProvisionRateLessThanOrEqualTo(String)
+ Criteria andProvisionRateLike(String)
+ Criteria andProvisionRateNotLike(String)
+ Criteria andProvisionRateIn(List<String>)
+ Criteria andProvisionRateNotIn(List<String>)
+ Criteria andProvisionRateBetween(String,String)
+ Criteria andProvisionRateNotBetween(String,String)
+ Criteria andFundProvisionRateIsNull()
+ Criteria andFundProvisionRateIsNotNull()
+ Criteria andFundProvisionRateEqualTo(BigDecimal)
+ Criteria andFundProvisionRateNotEqualTo(BigDecimal)
+ Criteria andFundProvisionRateGreaterThan(BigDecimal)
+ Criteria andFundProvisionRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andFundProvisionRateLessThan(BigDecimal)
+ Criteria andFundProvisionRateLessThanOrEqualTo(BigDecimal)
+ Criteria andFundProvisionRateIn(List<BigDecimal>)
+ Criteria andFundProvisionRateNotIn(List<BigDecimal>)
+ Criteria andFundProvisionRateBetween(BigDecimal,BigDecimal)
+ Criteria andFundProvisionRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andFundInterestTypeIsNull()
+ Criteria andFundInterestTypeIsNotNull()
+ Criteria andFundInterestTypeEqualTo(Byte)
+ Criteria andFundInterestTypeNotEqualTo(Byte)
+ Criteria andFundInterestTypeGreaterThan(Byte)
+ Criteria andFundInterestTypeGreaterThanOrEqualTo(Byte)
+ Criteria andFundInterestTypeLessThan(Byte)
+ Criteria andFundInterestTypeLessThanOrEqualTo(Byte)
+ Criteria andFundInterestTypeIn(List<Byte>)
+ Criteria andFundInterestTypeNotIn(List<Byte>)
+ Criteria andFundInterestTypeBetween(Byte,Byte)
+ Criteria andFundInterestTypeNotBetween(Byte,Byte)
+ Criteria andAstraRateIsNull()
+ Criteria andAstraRateIsNotNull()
+ Criteria andAstraRateEqualTo(BigDecimal)
+ Criteria andAstraRateNotEqualTo(BigDecimal)
+ Criteria andAstraRateGreaterThan(BigDecimal)
+ Criteria andAstraRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andAstraRateLessThan(BigDecimal)
+ Criteria andAstraRateLessThanOrEqualTo(BigDecimal)
+ Criteria andAstraRateIn(List<BigDecimal>)
+ Criteria andAstraRateNotIn(List<BigDecimal>)
+ Criteria andAstraRateBetween(BigDecimal,BigDecimal)
+ Criteria andAstraRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andMdrRateIsNull()
+ Criteria andMdrRateIsNotNull()
+ Criteria andMdrRateEqualTo(BigDecimal)
+ Criteria andMdrRateNotEqualTo(BigDecimal)
+ Criteria andMdrRateGreaterThan(BigDecimal)
+ Criteria andMdrRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andMdrRateLessThan(BigDecimal)
+ Criteria andMdrRateLessThanOrEqualTo(BigDecimal)
+ Criteria andMdrRateIn(List<BigDecimal>)
+ Criteria andMdrRateNotIn(List<BigDecimal>)
+ Criteria andMdrRateBetween(BigDecimal,BigDecimal)
+ Criteria andMdrRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andTaxRateIsNull()
+ Criteria andTaxRateIsNotNull()
+ Criteria andTaxRateEqualTo(BigDecimal)
+ Criteria andTaxRateNotEqualTo(BigDecimal)
+ Criteria andTaxRateGreaterThan(BigDecimal)
+ Criteria andTaxRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andTaxRateLessThan(BigDecimal)
+ Criteria andTaxRateLessThanOrEqualTo(BigDecimal)
+ Criteria andTaxRateIn(List<BigDecimal>)
+ Criteria andTaxRateNotIn(List<BigDecimal>)
+ Criteria andTaxRateBetween(BigDecimal,BigDecimal)
+ Criteria andTaxRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andPreferentialTypeIsNull()
+ Criteria andPreferentialTypeIsNotNull()
+ Criteria andPreferentialTypeEqualTo(Byte)
+ Criteria andPreferentialTypeNotEqualTo(Byte)
+ Criteria andPreferentialTypeGreaterThan(Byte)
+ Criteria andPreferentialTypeGreaterThanOrEqualTo(Byte)
+ Criteria andPreferentialTypeLessThan(Byte)
+ Criteria andPreferentialTypeLessThanOrEqualTo(Byte)
+ Criteria andPreferentialTypeIn(List<Byte>)
+ Criteria andPreferentialTypeNotIn(List<Byte>)
+ Criteria andPreferentialTypeBetween(Byte,Byte)
+ Criteria andPreferentialTypeNotBetween(Byte,Byte)
+ Criteria andDisInterestFeeIsNull()
+ Criteria andDisInterestFeeIsNotNull()
+ Criteria andDisInterestFeeEqualTo(String)
+ Criteria andDisInterestFeeNotEqualTo(String)
+ Criteria andDisInterestFeeGreaterThan(String)
+ Criteria andDisInterestFeeGreaterThanOrEqualTo(String)
+ Criteria andDisInterestFeeLessThan(String)
+ Criteria andDisInterestFeeLessThanOrEqualTo(String)
+ Criteria andDisInterestFeeLike(String)
+ Criteria andDisInterestFeeNotLike(String)
+ Criteria andDisInterestFeeIn(List<String>)
+ Criteria andDisInterestFeeNotIn(List<String>)
+ Criteria andDisInterestFeeBetween(String,String)
+ Criteria andDisInterestFeeNotBetween(String,String)
+ Criteria andDisAdminFeeIsNull()
+ Criteria andDisAdminFeeIsNotNull()
+ Criteria andDisAdminFeeEqualTo(String)
+ Criteria andDisAdminFeeNotEqualTo(String)
+ Criteria andDisAdminFeeGreaterThan(String)
+ Criteria andDisAdminFeeGreaterThanOrEqualTo(String)
+ Criteria andDisAdminFeeLessThan(String)
+ Criteria andDisAdminFeeLessThanOrEqualTo(String)
+ Criteria andDisAdminFeeLike(String)
+ Criteria andDisAdminFeeNotLike(String)
+ Criteria andDisAdminFeeIn(List<String>)
+ Criteria andDisAdminFeeNotIn(List<String>)
+ Criteria andDisAdminFeeBetween(String,String)
+ Criteria andDisAdminFeeNotBetween(String,String)
+ Criteria andDisLateFeeIsNull()
+ Criteria andDisLateFeeIsNotNull()
+ Criteria andDisLateFeeEqualTo(String)
+ Criteria andDisLateFeeNotEqualTo(String)
+ Criteria andDisLateFeeGreaterThan(String)
+ Criteria andDisLateFeeGreaterThanOrEqualTo(String)
+ Criteria andDisLateFeeLessThan(String)
+ Criteria andDisLateFeeLessThanOrEqualTo(String)
+ Criteria andDisLateFeeLike(String)
+ Criteria andDisLateFeeNotLike(String)
+ Criteria andDisLateFeeIn(List<String>)
+ Criteria andDisLateFeeNotIn(List<String>)
+ Criteria andDisLateFeeBetween(String,String)
+ Criteria andDisLateFeeNotBetween(String,String)
+ Criteria andDisUpfrontFeeIsNull()
+ Criteria andDisUpfrontFeeIsNotNull()
+ Criteria andDisUpfrontFeeEqualTo(String)
+ Criteria andDisUpfrontFeeNotEqualTo(String)
+ Criteria andDisUpfrontFeeGreaterThan(String)
+ Criteria andDisUpfrontFeeGreaterThanOrEqualTo(String)
+ Criteria andDisUpfrontFeeLessThan(String)
+ Criteria andDisUpfrontFeeLessThanOrEqualTo(String)
+ Criteria andDisUpfrontFeeLike(String)
+ Criteria andDisUpfrontFeeNotLike(String)
+ Criteria andDisUpfrontFeeIn(List<String>)
+ Criteria andDisUpfrontFeeNotIn(List<String>)
+ Criteria andDisUpfrontFeeBetween(String,String)
+ Criteria andDisUpfrontFeeNotBetween(String,String)
+ Criteria andSalaryDayIsNull()
+ Criteria andSalaryDayIsNotNull()
+ Criteria andSalaryDayEqualTo(String)
+ Criteria andSalaryDayNotEqualTo(String)
+ Criteria andSalaryDayGreaterThan(String)
+ Criteria andSalaryDayGreaterThanOrEqualTo(String)
+ Criteria andSalaryDayLessThan(String)
+ Criteria andSalaryDayLessThanOrEqualTo(String)
+ Criteria andSalaryDayLike(String)
+ Criteria andSalaryDayNotLike(String)
+ Criteria andSalaryDayIn(List<String>)
+ Criteria andSalaryDayNotIn(List<String>)
+ Criteria andSalaryDayBetween(String,String)
+ Criteria andSalaryDayNotBetween(String,String)
+ Criteria andPayDayIsNull()
+ Criteria andPayDayIsNotNull()
+ Criteria andPayDayEqualTo(String)
+ Criteria andPayDayNotEqualTo(String)
+ Criteria andPayDayGreaterThan(String)
+ Criteria andPayDayGreaterThanOrEqualTo(String)
+ Criteria andPayDayLessThan(String)
+ Criteria andPayDayLessThanOrEqualTo(String)
+ Criteria andPayDayLike(String)
+ Criteria andPayDayNotLike(String)
+ Criteria andPayDayIn(List<String>)
+ Criteria andPayDayNotIn(List<String>)
+ Criteria andPayDayBetween(String,String)
+ Criteria andPayDayNotBetween(String,String)
+ Criteria andPayCycleIsNull()
+ Criteria andPayCycleIsNotNull()
+ Criteria andPayCycleEqualTo(String)
+ Criteria andPayCycleNotEqualTo(String)
+ Criteria andPayCycleGreaterThan(String)
+ Criteria andPayCycleGreaterThanOrEqualTo(String)
+ Criteria andPayCycleLessThan(String)
+ Criteria andPayCycleLessThanOrEqualTo(String)
+ Criteria andPayCycleLike(String)
+ Criteria andPayCycleNotLike(String)
+ Criteria andPayCycleIn(List<String>)
+ Criteria andPayCycleNotIn(List<String>)
+ Criteria andPayCycleBetween(String,String)
+ Criteria andPayCycleNotBetween(String,String)
+ Criteria andTransTypeIsNull()
+ Criteria andTransTypeIsNotNull()
+ Criteria andTransTypeEqualTo(String)
+ Criteria andTransTypeNotEqualTo(String)
+ Criteria andTransTypeGreaterThan(String)
+ Criteria andTransTypeGreaterThanOrEqualTo(String)
+ Criteria andTransTypeLessThan(String)
+ Criteria andTransTypeLessThanOrEqualTo(String)
+ Criteria andTransTypeLike(String)
+ Criteria andTransTypeNotLike(String)
+ Criteria andTransTypeIn(List<String>)
+ Criteria andTransTypeNotIn(List<String>)
+ Criteria andTransTypeBetween(String,String)
+ Criteria andTransTypeNotBetween(String,String)
+ Criteria andMerchantProductCodeIsNull()
+ Criteria andMerchantProductCodeIsNotNull()
+ Criteria andMerchantProductCodeEqualTo(String)
+ Criteria andMerchantProductCodeNotEqualTo(String)
+ Criteria andMerchantProductCodeGreaterThan(String)
+ Criteria andMerchantProductCodeGreaterThanOrEqualTo(String)
+ Criteria andMerchantProductCodeLessThan(String)
+ Criteria andMerchantProductCodeLessThanOrEqualTo(String)
+ Criteria andMerchantProductCodeLike(String)
+ Criteria andMerchantProductCodeNotLike(String)
+ Criteria andMerchantProductCodeIn(List<String>)
+ Criteria andMerchantProductCodeNotIn(List<String>)
+ Criteria andMerchantProductCodeBetween(String,String)
+ Criteria andMerchantProductCodeNotBetween(String,String)
+ Criteria andMerchantCodeIsNull()
+ Criteria andMerchantCodeIsNotNull()
+ Criteria andMerchantCodeEqualTo(String)
+ Criteria andMerchantCodeNotEqualTo(String)
+ Criteria andMerchantCodeGreaterThan(String)
+ Criteria andMerchantCodeGreaterThanOrEqualTo(String)
+ Criteria andMerchantCodeLessThan(String)
+ Criteria andMerchantCodeLessThanOrEqualTo(String)
+ Criteria andMerchantCodeLike(String)
+ Criteria andMerchantCodeNotLike(String)
+ Criteria andMerchantCodeIn(List<String>)
+ Criteria andMerchantCodeNotIn(List<String>)
+ Criteria andMerchantCodeBetween(String,String)
+ Criteria andMerchantCodeNotBetween(String,String)
+ Criteria andMerchantOrderNoIsNull()
+ Criteria andMerchantOrderNoIsNotNull()
+ Criteria andMerchantOrderNoEqualTo(String)
+ Criteria andMerchantOrderNoNotEqualTo(String)
+ Criteria andMerchantOrderNoGreaterThan(String)
+ Criteria andMerchantOrderNoGreaterThanOrEqualTo(String)
+ Criteria andMerchantOrderNoLessThan(String)
+ Criteria andMerchantOrderNoLessThanOrEqualTo(String)
+ Criteria andMerchantOrderNoLike(String)
+ Criteria andMerchantOrderNoNotLike(String)
+ Criteria andMerchantOrderNoIn(List<String>)
+ Criteria andMerchantOrderNoNotIn(List<String>)
+ Criteria andMerchantOrderNoBetween(String,String)
+ Criteria andMerchantOrderNoNotBetween(String,String)
+ Criteria andBuyerNameIsNull()
+ Criteria andBuyerNameIsNotNull()
+ Criteria andBuyerNameEqualTo(String)
+ Criteria andBuyerNameNotEqualTo(String)
+ Criteria andBuyerNameGreaterThan(String)
+ Criteria andBuyerNameGreaterThanOrEqualTo(String)
+ Criteria andBuyerNameLessThan(String)
+ Criteria andBuyerNameLessThanOrEqualTo(String)
+ Criteria andBuyerNameLike(String)
+ Criteria andBuyerNameNotLike(String)
+ Criteria andBuyerNameIn(List<String>)
+ Criteria andBuyerNameNotIn(List<String>)
+ Criteria andBuyerNameBetween(String,String)
+ Criteria andBuyerNameNotBetween(String,String)
+ Criteria andBuyerCodeIsNull()
+ Criteria andBuyerCodeIsNotNull()
+ Criteria andBuyerCodeEqualTo(String)
+ Criteria andBuyerCodeNotEqualTo(String)
+ Criteria andBuyerCodeGreaterThan(String)
+ Criteria andBuyerCodeGreaterThanOrEqualTo(String)
+ Criteria andBuyerCodeLessThan(String)
+ Criteria andBuyerCodeLessThanOrEqualTo(String)
+ Criteria andBuyerCodeLike(String)
+ Criteria andBuyerCodeNotLike(String)
+ Criteria andBuyerCodeIn(List<String>)
+ Criteria andBuyerCodeNotIn(List<String>)
+ Criteria andBuyerCodeBetween(String,String)
+ Criteria andBuyerCodeNotBetween(String,String)
+ Criteria andExtendIsNull()
+ Criteria andExtendIsNotNull()
+ Criteria andExtendEqualTo(String)
+ Criteria andExtendNotEqualTo(String)
+ Criteria andExtendGreaterThan(String)
+ Criteria andExtendGreaterThanOrEqualTo(String)
+ Criteria andExtendLessThan(String)
+ Criteria andExtendLessThanOrEqualTo(String)
+ Criteria andExtendLike(String)
+ Criteria andExtendNotLike(String)
+ Criteria andExtendIn(List<String>)
+ Criteria andExtendNotIn(List<String>)
+ Criteria andExtendBetween(String,String)
+ Criteria andExtendNotBetween(String,String)
+ Criteria andExtIsNull()
+ Criteria andExtIsNotNull()
+ Criteria andExtEqualTo(String)
+ Criteria andExtNotEqualTo(String)
+ Criteria andExtGreaterThan(String)
+ Criteria andExtGreaterThanOrEqualTo(String)
+ Criteria andExtLessThan(String)
+ Criteria andExtLessThanOrEqualTo(String)
+ Criteria andExtLike(String)
+ Criteria andExtNotLike(String)
+ Criteria andExtIn(List<String>)
+ Criteria andExtNotIn(List<String>)
+ Criteria andExtBetween(String,String)
+ Criteria andExtNotBetween(String,String)
+ Criteria andFundInterestIsNull()
+ Criteria andFundInterestIsNotNull()
+ Criteria andFundInterestEqualTo(Long)
+ Criteria andFundInterestNotEqualTo(Long)
+ Criteria andFundInterestGreaterThan(Long)
+ Criteria andFundInterestGreaterThanOrEqualTo(Long)
+ Criteria andFundInterestLessThan(Long)
+ Criteria andFundInterestLessThanOrEqualTo(Long)
+ Criteria andFundInterestIn(List<Long>)
+ Criteria andFundInterestNotIn(List<Long>)
+ Criteria andFundInterestBetween(Long,Long)
+ Criteria andFundInterestNotBetween(Long,Long)
+ Criteria andUpfrontCarryFeeIsNull()
+ Criteria andUpfrontCarryFeeIsNotNull()
+ Criteria andUpfrontCarryFeeEqualTo(Long)
+ Criteria andUpfrontCarryFeeNotEqualTo(Long)
+ Criteria andUpfrontCarryFeeGreaterThan(Long)
+ Criteria andUpfrontCarryFeeGreaterThanOrEqualTo(Long)
+ Criteria andUpfrontCarryFeeLessThan(Long)
+ Criteria andUpfrontCarryFeeLessThanOrEqualTo(Long)
+ Criteria andUpfrontCarryFeeIn(List<Long>)
+ Criteria andUpfrontCarryFeeNotIn(List<Long>)
+ Criteria andUpfrontCarryFeeBetween(Long,Long)
+ Criteria andUpfrontCarryFeeNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andDisProvisionFeeIsNull()
+ Criteria andDisProvisionFeeIsNotNull()
+ Criteria andDisProvisionFeeEqualTo(String)
+ Criteria andDisProvisionFeeNotEqualTo(String)
+ Criteria andDisProvisionFeeGreaterThan(String)
+ Criteria andDisProvisionFeeGreaterThanOrEqualTo(String)
+ Criteria andDisProvisionFeeLessThan(String)
+ Criteria andDisProvisionFeeLessThanOrEqualTo(String)
+ Criteria andDisProvisionFeeLike(String)
+ Criteria andDisProvisionFeeNotLike(String)
+ Criteria andDisProvisionFeeIn(List<String>)
+ Criteria andDisProvisionFeeNotIn(List<String>)
+ Criteria andDisProvisionFeeBetween(String,String)
+ Criteria andDisProvisionFeeNotBetween(String,String)
+ Criteria andDisFundInterestFeeIsNull()
+ Criteria andDisFundInterestFeeIsNotNull()
+ Criteria andDisFundInterestFeeEqualTo(String)
+ Criteria andDisFundInterestFeeNotEqualTo(String)
+ Criteria andDisFundInterestFeeGreaterThan(String)
+ Criteria andDisFundInterestFeeGreaterThanOrEqualTo(String)
+ Criteria andDisFundInterestFeeLessThan(String)
+ Criteria andDisFundInterestFeeLessThanOrEqualTo(String)
+ Criteria andDisFundInterestFeeLike(String)
+ Criteria andDisFundInterestFeeNotLike(String)
+ Criteria andDisFundInterestFeeIn(List<String>)
+ Criteria andDisFundInterestFeeNotIn(List<String>)
+ Criteria andDisFundInterestFeeBetween(String,String)
+ Criteria andDisFundInterestFeeNotBetween(String,String)
+ Criteria andFlagIsNull()
+ Criteria andFlagIsNotNull()
+ Criteria andFlagEqualTo(Byte)
+ Criteria andFlagNotEqualTo(Byte)
+ Criteria andFlagGreaterThan(Byte)
+ Criteria andFlagGreaterThanOrEqualTo(Byte)
+ Criteria andFlagLessThan(Byte)
+ Criteria andFlagLessThanOrEqualTo(Byte)
+ Criteria andFlagIn(List<Byte>)
+ Criteria andFlagNotIn(List<Byte>)
+ Criteria andFlagBetween(Byte,Byte)
+ Criteria andFlagNotBetween(Byte,Byte)
+ Criteria andFlagReasonIsNull()
+ Criteria andFlagReasonIsNotNull()
+ Criteria andFlagReasonEqualTo(String)
+ Criteria andFlagReasonNotEqualTo(String)
+ Criteria andFlagReasonGreaterThan(String)
+ Criteria andFlagReasonGreaterThanOrEqualTo(String)
+ Criteria andFlagReasonLessThan(String)
+ Criteria andFlagReasonLessThanOrEqualTo(String)
+ Criteria andFlagReasonLike(String)
+ Criteria andFlagReasonNotLike(String)
+ Criteria andFlagReasonIn(List<String>)
+ Criteria andFlagReasonNotIn(List<String>)
+ Criteria andFlagReasonBetween(String,String)
+ Criteria andFlagReasonNotBetween(String,String)
+ Criteria andRateExtendIsNull()
+ Criteria andRateExtendIsNotNull()
+ Criteria andRateExtendEqualTo(String)
+ Criteria andRateExtendNotEqualTo(String)
+ Criteria andRateExtendGreaterThan(String)
+ Criteria andRateExtendGreaterThanOrEqualTo(String)
+ Criteria andRateExtendLessThan(String)
+ Criteria andRateExtendLessThanOrEqualTo(String)
+ Criteria andRateExtendLike(String)
+ Criteria andRateExtendNotLike(String)
+ Criteria andRateExtendIn(List<String>)
+ Criteria andRateExtendNotIn(List<String>)
+ Criteria andRateExtendBetween(String,String)
+ Criteria andRateExtendNotBetween(String,String)
+ Criteria andTenorMinIsNull()
+ Criteria andTenorMinIsNotNull()
+ Criteria andTenorMinEqualTo(String)
+ Criteria andTenorMinNotEqualTo(String)
+ Criteria andTenorMinGreaterThan(String)
+ Criteria andTenorMinGreaterThanOrEqualTo(String)
+ Criteria andTenorMinLessThan(String)
+ Criteria andTenorMinLessThanOrEqualTo(String)
+ Criteria andTenorMinLike(String)
+ Criteria andTenorMinNotLike(String)
+ Criteria andTenorMinIn(List<String>)
+ Criteria andTenorMinNotIn(List<String>)
+ Criteria andTenorMinBetween(String,String)
+ Criteria andTenorMinNotBetween(String,String)
+ Criteria andTenorMaxIsNull()
+ Criteria andTenorMaxIsNotNull()
+ Criteria andTenorMaxEqualTo(String)
+ Criteria andTenorMaxNotEqualTo(String)
+ Criteria andTenorMaxGreaterThan(String)
+ Criteria andTenorMaxGreaterThanOrEqualTo(String)
+ Criteria andTenorMaxLessThan(String)
+ Criteria andTenorMaxLessThanOrEqualTo(String)
+ Criteria andTenorMaxLike(String)
+ Criteria andTenorMaxNotLike(String)
+ Criteria andTenorMaxIn(List<String>)
+ Criteria andTenorMaxNotIn(List<String>)
+ Criteria andTenorMaxBetween(String,String)
+ Criteria andTenorMaxNotBetween(String,String)
+ Criteria andIsPremiumIsNull()
+ Criteria andIsPremiumIsNotNull()
+ Criteria andIsPremiumEqualTo(Byte)
+ Criteria andIsPremiumNotEqualTo(Byte)
+ Criteria andIsPremiumGreaterThan(Byte)
+ Criteria andIsPremiumGreaterThanOrEqualTo(Byte)
+ Criteria andIsPremiumLessThan(Byte)
+ Criteria andIsPremiumLessThanOrEqualTo(Byte)
+ Criteria andIsPremiumIn(List<Byte>)
+ Criteria andIsPremiumNotIn(List<Byte>)
+ Criteria andIsPremiumBetween(Byte,Byte)
+ Criteria andIsPremiumNotBetween(Byte,Byte)
+ Criteria andPremiumFeeIsNull()
+ Criteria andPremiumFeeIsNotNull()
+ Criteria andPremiumFeeEqualTo(Long)
+ Criteria andPremiumFeeNotEqualTo(Long)
+ Criteria andPremiumFeeGreaterThan(Long)
+ Criteria andPremiumFeeGreaterThanOrEqualTo(Long)
+ Criteria andPremiumFeeLessThan(Long)
+ Criteria andPremiumFeeLessThanOrEqualTo(Long)
+ Criteria andPremiumFeeIn(List<Long>)
+ Criteria andPremiumFeeNotIn(List<Long>)
+ Criteria andPremiumFeeBetween(Long,Long)
+ Criteria andPremiumFeeNotBetween(Long,Long)
+ Criteria andRepayDueIndexIsNull()
+ Criteria andRepayDueIndexIsNotNull()
+ Criteria andRepayDueIndexEqualTo(String)
+ Criteria andRepayDueIndexNotEqualTo(String)
+ Criteria andRepayDueIndexGreaterThan(String)
+ Criteria andRepayDueIndexGreaterThanOrEqualTo(String)
+ Criteria andRepayDueIndexLessThan(String)
+ Criteria andRepayDueIndexLessThanOrEqualTo(String)
+ Criteria andRepayDueIndexLike(String)
+ Criteria andRepayDueIndexNotLike(String)
+ Criteria andRepayDueIndexIn(List<String>)
+ Criteria andRepayDueIndexNotIn(List<String>)
+ Criteria andRepayDueIndexBetween(String,String)
+ Criteria andRepayDueIndexNotBetween(String,String)
+ Criteria andCashFlowStatusIsNull()
+ Criteria andCashFlowStatusIsNotNull()
+ Criteria andCashFlowStatusEqualTo(Byte)
+ Criteria andCashFlowStatusNotEqualTo(Byte)
+ Criteria andCashFlowStatusGreaterThan(Byte)
+ Criteria andCashFlowStatusGreaterThanOrEqualTo(Byte)
+ Criteria andCashFlowStatusLessThan(Byte)
+ Criteria andCashFlowStatusLessThanOrEqualTo(Byte)
+ Criteria andCashFlowStatusIn(List<Byte>)
+ Criteria andCashFlowStatusNotIn(List<Byte>)
+ Criteria andCashFlowStatusBetween(Byte,Byte)
+ Criteria andCashFlowStatusNotBetween(Byte,Byte)
}
class com.welab.loan.finance.model.LoanDetailExtendExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanDetailExtendExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.test.credit.CreditUpdateTest {
- CreditUpdateForTagRule creditUpdateForTagRule
+ void start()
}
class com.welab.loan.finance.model.UVFRepossessRepayment {
- Long id
- Date createdAt
- Date updatedAt
- String applyNo
- String customerName
- Date sellingDate
- Long sellingPrice
- Long processingFee
- Long bankPortion
- String flagInc
- String ket
- String createBy
- String batchNo
- String contractId
- String loanNumber
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getApplyNo()
+ void setApplyNo(String)
+ String getCustomerName()
+ void setCustomerName(String)
+ Date getSellingDate()
+ void setSellingDate(Date)
+ Long getSellingPrice()
+ void setSellingPrice(Long)
+ Long getProcessingFee()
+ void setProcessingFee(Long)
+ Long getBankPortion()
+ void setBankPortion(Long)
+ String getFlagInc()
+ void setFlagInc(String)
+ String getKet()
+ void setKet(String)
+ String getCreateBy()
+ void setCreateBy(String)
+ String getBatchNo()
+ void setBatchNo(String)
+ String getContractId()
+ void setContractId(String)
+ String getLoanNumber()
+ void setLoanNumber(String)
}
class com.welab.loan.finance.model.LendReversalExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LendReversalExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LendReversalExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andReasonIsNull()
+ Criteria andReasonIsNotNull()
+ Criteria andReasonEqualTo(String)
+ Criteria andReasonNotEqualTo(String)
+ Criteria andReasonGreaterThan(String)
+ Criteria andReasonGreaterThanOrEqualTo(String)
+ Criteria andReasonLessThan(String)
+ Criteria andReasonLessThanOrEqualTo(String)
+ Criteria andReasonLike(String)
+ Criteria andReasonNotLike(String)
+ Criteria andReasonIn(List<String>)
+ Criteria andReasonNotIn(List<String>)
+ Criteria andReasonBetween(String,String)
+ Criteria andReasonNotBetween(String,String)
+ Criteria andBatchNoIsNull()
+ Criteria andBatchNoIsNotNull()
+ Criteria andBatchNoEqualTo(String)
+ Criteria andBatchNoNotEqualTo(String)
+ Criteria andBatchNoGreaterThan(String)
+ Criteria andBatchNoGreaterThanOrEqualTo(String)
+ Criteria andBatchNoLessThan(String)
+ Criteria andBatchNoLessThanOrEqualTo(String)
+ Criteria andBatchNoLike(String)
+ Criteria andBatchNoNotLike(String)
+ Criteria andBatchNoIn(List<String>)
+ Criteria andBatchNoNotIn(List<String>)
+ Criteria andBatchNoBetween(String,String)
+ Criteria andBatchNoNotBetween(String,String)
+ Criteria andOrderPrefixIsNull()
+ Criteria andOrderPrefixIsNotNull()
+ Criteria andOrderPrefixEqualTo(String)
+ Criteria andOrderPrefixNotEqualTo(String)
+ Criteria andOrderPrefixGreaterThan(String)
+ Criteria andOrderPrefixGreaterThanOrEqualTo(String)
+ Criteria andOrderPrefixLessThan(String)
+ Criteria andOrderPrefixLessThanOrEqualTo(String)
+ Criteria andOrderPrefixLike(String)
+ Criteria andOrderPrefixNotLike(String)
+ Criteria andOrderPrefixIn(List<String>)
+ Criteria andOrderPrefixNotIn(List<String>)
+ Criteria andOrderPrefixBetween(String,String)
+ Criteria andOrderPrefixNotBetween(String,String)
+ Criteria andAdminIdIsNull()
+ Criteria andAdminIdIsNotNull()
+ Criteria andAdminIdEqualTo(Long)
+ Criteria andAdminIdNotEqualTo(Long)
+ Criteria andAdminIdGreaterThan(Long)
+ Criteria andAdminIdGreaterThanOrEqualTo(Long)
+ Criteria andAdminIdLessThan(Long)
+ Criteria andAdminIdLessThanOrEqualTo(Long)
+ Criteria andAdminIdIn(List<Long>)
+ Criteria andAdminIdNotIn(List<Long>)
+ Criteria andAdminIdBetween(Long,Long)
+ Criteria andAdminIdNotBetween(Long,Long)
+ Criteria andReversalLoanNumberIsNull()
+ Criteria andReversalLoanNumberIsNotNull()
+ Criteria andReversalLoanNumberEqualTo(String)
+ Criteria andReversalLoanNumberNotEqualTo(String)
+ Criteria andReversalLoanNumberGreaterThan(String)
+ Criteria andReversalLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andReversalLoanNumberLessThan(String)
+ Criteria andReversalLoanNumberLessThanOrEqualTo(String)
+ Criteria andReversalLoanNumberLike(String)
+ Criteria andReversalLoanNumberNotLike(String)
+ Criteria andReversalLoanNumberIn(List<String>)
+ Criteria andReversalLoanNumberNotIn(List<String>)
+ Criteria andReversalLoanNumberBetween(String,String)
+ Criteria andReversalLoanNumberNotBetween(String,String)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Long)
+ Criteria andFundIdNotEqualTo(Long)
+ Criteria andFundIdGreaterThan(Long)
+ Criteria andFundIdGreaterThanOrEqualTo(Long)
+ Criteria andFundIdLessThan(Long)
+ Criteria andFundIdLessThanOrEqualTo(Long)
+ Criteria andFundIdIn(List<Long>)
+ Criteria andFundIdNotIn(List<Long>)
+ Criteria andFundIdBetween(Long,Long)
+ Criteria andFundIdNotBetween(Long,Long)
+ Criteria andReversalStatusIsNull()
+ Criteria andReversalStatusIsNotNull()
+ Criteria andReversalStatusEqualTo(Byte)
+ Criteria andReversalStatusNotEqualTo(Byte)
+ Criteria andReversalStatusGreaterThan(Byte)
+ Criteria andReversalStatusGreaterThanOrEqualTo(Byte)
+ Criteria andReversalStatusLessThan(Byte)
+ Criteria andReversalStatusLessThanOrEqualTo(Byte)
+ Criteria andReversalStatusIn(List<Byte>)
+ Criteria andReversalStatusNotIn(List<Byte>)
+ Criteria andReversalStatusBetween(Byte,Byte)
+ Criteria andReversalStatusNotBetween(Byte,Byte)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
}
class com.welab.loan.finance.model.LendReversalExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LendReversalExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.UvfFileContractExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> UvfFileContractExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.UvfFileContractExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateTimeIsNull()
+ Criteria andCreateTimeIsNotNull()
+ Criteria andCreateTimeEqualTo(Date)
+ Criteria andCreateTimeNotEqualTo(Date)
+ Criteria andCreateTimeGreaterThan(Date)
+ Criteria andCreateTimeGreaterThanOrEqualTo(Date)
+ Criteria andCreateTimeLessThan(Date)
+ Criteria andCreateTimeLessThanOrEqualTo(Date)
+ Criteria andCreateTimeIn(List<Date>)
+ Criteria andCreateTimeNotIn(List<Date>)
+ Criteria andCreateTimeBetween(Date,Date)
+ Criteria andCreateTimeNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andContractNoIsNull()
+ Criteria andContractNoIsNotNull()
+ Criteria andContractNoEqualTo(String)
+ Criteria andContractNoNotEqualTo(String)
+ Criteria andContractNoGreaterThan(String)
+ Criteria andContractNoGreaterThanOrEqualTo(String)
+ Criteria andContractNoLessThan(String)
+ Criteria andContractNoLessThanOrEqualTo(String)
+ Criteria andContractNoLike(String)
+ Criteria andContractNoNotLike(String)
+ Criteria andContractNoIn(List<String>)
+ Criteria andContractNoNotIn(List<String>)
+ Criteria andContractNoBetween(String,String)
+ Criteria andContractNoNotBetween(String,String)
+ Criteria andTaskIdIsNull()
+ Criteria andTaskIdIsNotNull()
+ Criteria andTaskIdEqualTo(String)
+ Criteria andTaskIdNotEqualTo(String)
+ Criteria andTaskIdGreaterThan(String)
+ Criteria andTaskIdGreaterThanOrEqualTo(String)
+ Criteria andTaskIdLessThan(String)
+ Criteria andTaskIdLessThanOrEqualTo(String)
+ Criteria andTaskIdLike(String)
+ Criteria andTaskIdNotLike(String)
+ Criteria andTaskIdIn(List<String>)
+ Criteria andTaskIdNotIn(List<String>)
+ Criteria andTaskIdBetween(String,String)
+ Criteria andTaskIdNotBetween(String,String)
}
class com.welab.loan.finance.model.UvfFileContractExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.UvfFileContractExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.core.mq.RabbitMqConfig {
+ Queue buildLoanInfoQueue()
+ Queue buildLoanRejectQueue()
+ Queue buildLoanWaitStatusQueue()
+ Queue buildPaymentQueue()
+ Queue buildAdvancePaymentQueue()
+ Queue buildTransferQueue()
+ Queue buildRechargeQueue()
+ Queue buildRecoveryQueue()
+ Queue buildCouponExpiredQueue()
+ Queue bankcardChange()
+ Queue buildUserTagChangeQueue()
+ Queue buildUserTagChangeTempQueue()
+ Queue buildUserTagChangeForDpdQueue()
+ Queue buildUserTagChangeForDpdTempQueue()
+ Queue buildTbCreditChangeForDpdQueue()
+ Queue buildSynAccountQueue()
+ Queue buildSynDuesQueue()
+ Queue buildSynCouponQueue()
+ Queue buildLateFeeModifyQueue()
+ Queue welcomeCalLoansFinance()
+ Queue welcomeCalLoansApproval()
+ Queue buildCreditFreezeQueue()
+ Queue buildCreditFreezeTempQueue()
+ Queue buildCreditFreezeQueueList()
+ Queue buildCreditFreezeQueueListTemp()
+ Queue buildCreditUserReCheckQueue()
+ Queue buildCreditUserReCheckTempQueue()
+ Queue buildCreditOldUserChangeQueue()
+ Queue buildCreditOldUserChangeTempQueue()
+ Queue buildCreateOrUpdateVaQueue()
+ Queue buildApplicationDataFixedQueue()
+ Queue buildSynDelay()
+ Queue buildMigrateUser()
+ Queue buildMigrateUserTemp()
+ Queue buildCreditApplayMq()
+ Queue buildCreditApplayTempMq()
+ Queue buildCreditUseMq()
+ Queue buildCreditUseTempMq()
+ Queue buildCreditRestoreMq()
+ Queue buildCreditRestoreTempMq()
+ Queue buildCreditCancelMq()
+ Queue buildCreditCancelTempMq()
+ Queue welabSeaFinanceCreditAccountTrackMq()
+ Queue welabSeaFinanceCreditAccountTrackTempMq()
+ Queue buildInvalidAdvLetterQueue()
+ Queue buildFPlanCloseQueue()
+ Queue ahassRepaymentQueue()
+ Queue buildFPlanOpenQueue()
+ Queue buildInvalidNoEnableAdvLetterQueue()
+ Queue buildAhassRepaymentQueue()
+ Queue buildAhassLoanSuccessQueue()
+ Queue buildAopLoanSuccessQueue()
+ Queue buildAopRepaymentSuccessQueue()
+ Queue buildSynContractNo2BillingNoQueue()
+ Queue buildSynUserBalanceQueue()
+ Queue userTagChangeSuccessNotifyQueue()
+ FanoutExchange buildRechargeExchange()
+ FanoutExchange buildTransferExchange()
+ FanoutExchange buildPaymentExchange()
+ FanoutExchange buildAdvancePaymentExchange()
+ FanoutExchange buildLoanRejectExchange()
+ FanoutExchange buildOverDayExchange()
+ FanoutExchange buildTbLendNotifyExchange()
+ FanoutExchange buildTbRepaymentNotifyExchange()
+ FanoutExchange buildTbOverdueNotifyExchange()
+ FanoutExchange buildSynDelayExchange()
+ FanoutExchange buildOverdueTaskCompletedExchange()
+ Binding rechargeBinding()
+ Binding transferBinding()
+ Binding paymentBinding()
+ Binding advancePaymentBinding()
+ Binding loanRejectBinding()
+ Binding synDelayBinding()
+ Binding overdueTaskCompletedBinding()
}
class com.welab.loan.finance.vo.response.FundAccountInfoVO {
- {static} long serialVersionUID
- Long balance
- String message
}
class com.welab.loan.finance.model.LoanUvfDetailExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanUvfDetailExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanUvfDetailExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andOrgIdIsNull()
+ Criteria andOrgIdIsNotNull()
+ Criteria andOrgIdEqualTo(Long)
+ Criteria andOrgIdNotEqualTo(Long)
+ Criteria andOrgIdGreaterThan(Long)
+ Criteria andOrgIdGreaterThanOrEqualTo(Long)
+ Criteria andOrgIdLessThan(Long)
+ Criteria andOrgIdLessThanOrEqualTo(Long)
+ Criteria andOrgIdIn(List<Long>)
+ Criteria andOrgIdNotIn(List<Long>)
+ Criteria andOrgIdBetween(Long,Long)
+ Criteria andOrgIdNotBetween(Long,Long)
+ Criteria andApplyNoIsNull()
+ Criteria andApplyNoIsNotNull()
+ Criteria andApplyNoEqualTo(String)
+ Criteria andApplyNoNotEqualTo(String)
+ Criteria andApplyNoGreaterThan(String)
+ Criteria andApplyNoGreaterThanOrEqualTo(String)
+ Criteria andApplyNoLessThan(String)
+ Criteria andApplyNoLessThanOrEqualTo(String)
+ Criteria andApplyNoLike(String)
+ Criteria andApplyNoNotLike(String)
+ Criteria andApplyNoIn(List<String>)
+ Criteria andApplyNoNotIn(List<String>)
+ Criteria andApplyNoBetween(String,String)
+ Criteria andApplyNoNotBetween(String,String)
+ Criteria andContractIdIsNull()
+ Criteria andContractIdIsNotNull()
+ Criteria andContractIdEqualTo(String)
+ Criteria andContractIdNotEqualTo(String)
+ Criteria andContractIdGreaterThan(String)
+ Criteria andContractIdGreaterThanOrEqualTo(String)
+ Criteria andContractIdLessThan(String)
+ Criteria andContractIdLessThanOrEqualTo(String)
+ Criteria andContractIdLike(String)
+ Criteria andContractIdNotLike(String)
+ Criteria andContractIdIn(List<String>)
+ Criteria andContractIdNotIn(List<String>)
+ Criteria andContractIdBetween(String,String)
+ Criteria andContractIdNotBetween(String,String)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andPeriodIsNull()
+ Criteria andPeriodIsNotNull()
+ Criteria andPeriodEqualTo(String)
+ Criteria andPeriodNotEqualTo(String)
+ Criteria andPeriodGreaterThan(String)
+ Criteria andPeriodGreaterThanOrEqualTo(String)
+ Criteria andPeriodLessThan(String)
+ Criteria andPeriodLessThanOrEqualTo(String)
+ Criteria andPeriodLike(String)
+ Criteria andPeriodNotLike(String)
+ Criteria andPeriodIn(List<String>)
+ Criteria andPeriodNotIn(List<String>)
+ Criteria andPeriodBetween(String,String)
+ Criteria andPeriodNotBetween(String,String)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andUserNameIsNull()
+ Criteria andUserNameIsNotNull()
+ Criteria andUserNameEqualTo(String)
+ Criteria andUserNameNotEqualTo(String)
+ Criteria andUserNameGreaterThan(String)
+ Criteria andUserNameGreaterThanOrEqualTo(String)
+ Criteria andUserNameLessThan(String)
+ Criteria andUserNameLessThanOrEqualTo(String)
+ Criteria andUserNameLike(String)
+ Criteria andUserNameNotLike(String)
+ Criteria andUserNameIn(List<String>)
+ Criteria andUserNameNotIn(List<String>)
+ Criteria andUserNameBetween(String,String)
+ Criteria andUserNameNotBetween(String,String)
+ Criteria andMobileIsNull()
+ Criteria andMobileIsNotNull()
+ Criteria andMobileEqualTo(String)
+ Criteria andMobileNotEqualTo(String)
+ Criteria andMobileGreaterThan(String)
+ Criteria andMobileGreaterThanOrEqualTo(String)
+ Criteria andMobileLessThan(String)
+ Criteria andMobileLessThanOrEqualTo(String)
+ Criteria andMobileLike(String)
+ Criteria andMobileNotLike(String)
+ Criteria andMobileIn(List<String>)
+ Criteria andMobileNotIn(List<String>)
+ Criteria andMobileBetween(String,String)
+ Criteria andMobileNotBetween(String,String)
+ Criteria andNikIsNull()
+ Criteria andNikIsNotNull()
+ Criteria andNikEqualTo(String)
+ Criteria andNikNotEqualTo(String)
+ Criteria andNikGreaterThan(String)
+ Criteria andNikGreaterThanOrEqualTo(String)
+ Criteria andNikLessThan(String)
+ Criteria andNikLessThanOrEqualTo(String)
+ Criteria andNikLike(String)
+ Criteria andNikNotLike(String)
+ Criteria andNikIn(List<String>)
+ Criteria andNikNotIn(List<String>)
+ Criteria andNikBetween(String,String)
+ Criteria andNikNotBetween(String,String)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Long)
+ Criteria andFundIdNotEqualTo(Long)
+ Criteria andFundIdGreaterThan(Long)
+ Criteria andFundIdGreaterThanOrEqualTo(Long)
+ Criteria andFundIdLessThan(Long)
+ Criteria andFundIdLessThanOrEqualTo(Long)
+ Criteria andFundIdIn(List<Long>)
+ Criteria andFundIdNotIn(List<Long>)
+ Criteria andFundIdBetween(Long,Long)
+ Criteria andFundIdNotBetween(Long,Long)
+ Criteria andAdminFeeIsNull()
+ Criteria andAdminFeeIsNotNull()
+ Criteria andAdminFeeEqualTo(Long)
+ Criteria andAdminFeeNotEqualTo(Long)
+ Criteria andAdminFeeGreaterThan(Long)
+ Criteria andAdminFeeGreaterThanOrEqualTo(Long)
+ Criteria andAdminFeeLessThan(Long)
+ Criteria andAdminFeeLessThanOrEqualTo(Long)
+ Criteria andAdminFeeIn(List<Long>)
+ Criteria andAdminFeeNotIn(List<Long>)
+ Criteria andAdminFeeBetween(Long,Long)
+ Criteria andAdminFeeNotBetween(Long,Long)
+ Criteria andInsuranceFeeIsNull()
+ Criteria andInsuranceFeeIsNotNull()
+ Criteria andInsuranceFeeEqualTo(Long)
+ Criteria andInsuranceFeeNotEqualTo(Long)
+ Criteria andInsuranceFeeGreaterThan(Long)
+ Criteria andInsuranceFeeGreaterThanOrEqualTo(Long)
+ Criteria andInsuranceFeeLessThan(Long)
+ Criteria andInsuranceFeeLessThanOrEqualTo(Long)
+ Criteria andInsuranceFeeIn(List<Long>)
+ Criteria andInsuranceFeeNotIn(List<Long>)
+ Criteria andInsuranceFeeBetween(Long,Long)
+ Criteria andInsuranceFeeNotBetween(Long,Long)
+ Criteria andOtherFeeIsNull()
+ Criteria andOtherFeeIsNotNull()
+ Criteria andOtherFeeEqualTo(Long)
+ Criteria andOtherFeeNotEqualTo(Long)
+ Criteria andOtherFeeGreaterThan(Long)
+ Criteria andOtherFeeGreaterThanOrEqualTo(Long)
+ Criteria andOtherFeeLessThan(Long)
+ Criteria andOtherFeeLessThanOrEqualTo(Long)
+ Criteria andOtherFeeIn(List<Long>)
+ Criteria andOtherFeeNotIn(List<Long>)
+ Criteria andOtherFeeBetween(Long,Long)
+ Criteria andOtherFeeNotBetween(Long,Long)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andInterestFeeIsNull()
+ Criteria andInterestFeeIsNotNull()
+ Criteria andInterestFeeEqualTo(Long)
+ Criteria andInterestFeeNotEqualTo(Long)
+ Criteria andInterestFeeGreaterThan(Long)
+ Criteria andInterestFeeGreaterThanOrEqualTo(Long)
+ Criteria andInterestFeeLessThan(Long)
+ Criteria andInterestFeeLessThanOrEqualTo(Long)
+ Criteria andInterestFeeIn(List<Long>)
+ Criteria andInterestFeeNotIn(List<Long>)
+ Criteria andInterestFeeBetween(Long,Long)
+ Criteria andInterestFeeNotBetween(Long,Long)
+ Criteria andAgentFeeIsNull()
+ Criteria andAgentFeeIsNotNull()
+ Criteria andAgentFeeEqualTo(Long)
+ Criteria andAgentFeeNotEqualTo(Long)
+ Criteria andAgentFeeGreaterThan(Long)
+ Criteria andAgentFeeGreaterThanOrEqualTo(Long)
+ Criteria andAgentFeeLessThan(Long)
+ Criteria andAgentFeeLessThanOrEqualTo(Long)
+ Criteria andAgentFeeIn(List<Long>)
+ Criteria andAgentFeeNotIn(List<Long>)
+ Criteria andAgentFeeBetween(Long,Long)
+ Criteria andAgentFeeNotBetween(Long,Long)
+ Criteria andReceivedAmountIsNull()
+ Criteria andReceivedAmountIsNotNull()
+ Criteria andReceivedAmountEqualTo(Long)
+ Criteria andReceivedAmountNotEqualTo(Long)
+ Criteria andReceivedAmountGreaterThan(Long)
+ Criteria andReceivedAmountGreaterThanOrEqualTo(Long)
+ Criteria andReceivedAmountLessThan(Long)
+ Criteria andReceivedAmountLessThanOrEqualTo(Long)
+ Criteria andReceivedAmountIn(List<Long>)
+ Criteria andReceivedAmountNotIn(List<Long>)
+ Criteria andReceivedAmountBetween(Long,Long)
+ Criteria andReceivedAmountNotBetween(Long,Long)
+ Criteria andSignAtIsNull()
+ Criteria andSignAtIsNotNull()
+ Criteria andSignAtEqualTo(Date)
+ Criteria andSignAtNotEqualTo(Date)
+ Criteria andSignAtGreaterThan(Date)
+ Criteria andSignAtGreaterThanOrEqualTo(Date)
+ Criteria andSignAtLessThan(Date)
+ Criteria andSignAtLessThanOrEqualTo(Date)
+ Criteria andSignAtIn(List<Date>)
+ Criteria andSignAtNotIn(List<Date>)
+ Criteria andSignAtBetween(Date,Date)
+ Criteria andSignAtNotBetween(Date,Date)
+ Criteria andLendAtIsNull()
+ Criteria andLendAtIsNotNull()
+ Criteria andLendAtEqualTo(Date)
+ Criteria andLendAtNotEqualTo(Date)
+ Criteria andLendAtGreaterThan(Date)
+ Criteria andLendAtGreaterThanOrEqualTo(Date)
+ Criteria andLendAtLessThan(Date)
+ Criteria andLendAtLessThanOrEqualTo(Date)
+ Criteria andLendAtIn(List<Date>)
+ Criteria andLendAtNotIn(List<Date>)
+ Criteria andLendAtBetween(Date,Date)
+ Criteria andLendAtNotBetween(Date,Date)
+ Criteria andApplyAtIsNull()
+ Criteria andApplyAtIsNotNull()
+ Criteria andApplyAtEqualTo(Date)
+ Criteria andApplyAtNotEqualTo(Date)
+ Criteria andApplyAtGreaterThan(Date)
+ Criteria andApplyAtGreaterThanOrEqualTo(Date)
+ Criteria andApplyAtLessThan(Date)
+ Criteria andApplyAtLessThanOrEqualTo(Date)
+ Criteria andApplyAtIn(List<Date>)
+ Criteria andApplyAtNotIn(List<Date>)
+ Criteria andApplyAtBetween(Date,Date)
+ Criteria andApplyAtNotBetween(Date,Date)
+ Criteria andOutstandingAmountIsNull()
+ Criteria andOutstandingAmountIsNotNull()
+ Criteria andOutstandingAmountEqualTo(Long)
+ Criteria andOutstandingAmountNotEqualTo(Long)
+ Criteria andOutstandingAmountGreaterThan(Long)
+ Criteria andOutstandingAmountGreaterThanOrEqualTo(Long)
+ Criteria andOutstandingAmountLessThan(Long)
+ Criteria andOutstandingAmountLessThanOrEqualTo(Long)
+ Criteria andOutstandingAmountIn(List<Long>)
+ Criteria andOutstandingAmountNotIn(List<Long>)
+ Criteria andOutstandingAmountBetween(Long,Long)
+ Criteria andOutstandingAmountNotBetween(Long,Long)
+ Criteria andStoreNameIsNull()
+ Criteria andStoreNameIsNotNull()
+ Criteria andStoreNameEqualTo(String)
+ Criteria andStoreNameNotEqualTo(String)
+ Criteria andStoreNameGreaterThan(String)
+ Criteria andStoreNameGreaterThanOrEqualTo(String)
+ Criteria andStoreNameLessThan(String)
+ Criteria andStoreNameLessThanOrEqualTo(String)
+ Criteria andStoreNameLike(String)
+ Criteria andStoreNameNotLike(String)
+ Criteria andStoreNameIn(List<String>)
+ Criteria andStoreNameNotIn(List<String>)
+ Criteria andStoreNameBetween(String,String)
+ Criteria andStoreNameNotBetween(String,String)
+ Criteria andAgentNameIsNull()
+ Criteria andAgentNameIsNotNull()
+ Criteria andAgentNameEqualTo(String)
+ Criteria andAgentNameNotEqualTo(String)
+ Criteria andAgentNameGreaterThan(String)
+ Criteria andAgentNameGreaterThanOrEqualTo(String)
+ Criteria andAgentNameLessThan(String)
+ Criteria andAgentNameLessThanOrEqualTo(String)
+ Criteria andAgentNameLike(String)
+ Criteria andAgentNameNotLike(String)
+ Criteria andAgentNameIn(List<String>)
+ Criteria andAgentNameNotIn(List<String>)
+ Criteria andAgentNameBetween(String,String)
+ Criteria andAgentNameNotBetween(String,String)
+ Criteria andAgentBankNoIsNull()
+ Criteria andAgentBankNoIsNotNull()
+ Criteria andAgentBankNoEqualTo(String)
+ Criteria andAgentBankNoNotEqualTo(String)
+ Criteria andAgentBankNoGreaterThan(String)
+ Criteria andAgentBankNoGreaterThanOrEqualTo(String)
+ Criteria andAgentBankNoLessThan(String)
+ Criteria andAgentBankNoLessThanOrEqualTo(String)
+ Criteria andAgentBankNoLike(String)
+ Criteria andAgentBankNoNotLike(String)
+ Criteria andAgentBankNoIn(List<String>)
+ Criteria andAgentBankNoNotIn(List<String>)
+ Criteria andAgentBankNoBetween(String,String)
+ Criteria andAgentBankNoNotBetween(String,String)
+ Criteria andAgentBankCodeIsNull()
+ Criteria andAgentBankCodeIsNotNull()
+ Criteria andAgentBankCodeEqualTo(String)
+ Criteria andAgentBankCodeNotEqualTo(String)
+ Criteria andAgentBankCodeGreaterThan(String)
+ Criteria andAgentBankCodeGreaterThanOrEqualTo(String)
+ Criteria andAgentBankCodeLessThan(String)
+ Criteria andAgentBankCodeLessThanOrEqualTo(String)
+ Criteria andAgentBankCodeLike(String)
+ Criteria andAgentBankCodeNotLike(String)
+ Criteria andAgentBankCodeIn(List<String>)
+ Criteria andAgentBankCodeNotIn(List<String>)
+ Criteria andAgentBankCodeBetween(String,String)
+ Criteria andAgentBankCodeNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andOtherExpenseIsNull()
+ Criteria andOtherExpenseIsNotNull()
+ Criteria andOtherExpenseEqualTo(Long)
+ Criteria andOtherExpenseNotEqualTo(Long)
+ Criteria andOtherExpenseGreaterThan(Long)
+ Criteria andOtherExpenseGreaterThanOrEqualTo(Long)
+ Criteria andOtherExpenseLessThan(Long)
+ Criteria andOtherExpenseLessThanOrEqualTo(Long)
+ Criteria andOtherExpenseIn(List<Long>)
+ Criteria andOtherExpenseNotIn(List<Long>)
+ Criteria andOtherExpenseBetween(Long,Long)
+ Criteria andOtherExpenseNotBetween(Long,Long)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andSecondProductCodeIsNull()
+ Criteria andSecondProductCodeIsNotNull()
+ Criteria andSecondProductCodeEqualTo(String)
+ Criteria andSecondProductCodeNotEqualTo(String)
+ Criteria andSecondProductCodeGreaterThan(String)
+ Criteria andSecondProductCodeGreaterThanOrEqualTo(String)
+ Criteria andSecondProductCodeLessThan(String)
+ Criteria andSecondProductCodeLessThanOrEqualTo(String)
+ Criteria andSecondProductCodeLike(String)
+ Criteria andSecondProductCodeNotLike(String)
+ Criteria andSecondProductCodeIn(List<String>)
+ Criteria andSecondProductCodeNotIn(List<String>)
+ Criteria andSecondProductCodeBetween(String,String)
+ Criteria andSecondProductCodeNotBetween(String,String)
+ Criteria andTotalInterestAwdaIsNull()
+ Criteria andTotalInterestAwdaIsNotNull()
+ Criteria andTotalInterestAwdaEqualTo(Long)
+ Criteria andTotalInterestAwdaNotEqualTo(Long)
+ Criteria andTotalInterestAwdaGreaterThan(Long)
+ Criteria andTotalInterestAwdaGreaterThanOrEqualTo(Long)
+ Criteria andTotalInterestAwdaLessThan(Long)
+ Criteria andTotalInterestAwdaLessThanOrEqualTo(Long)
+ Criteria andTotalInterestAwdaIn(List<Long>)
+ Criteria andTotalInterestAwdaNotIn(List<Long>)
+ Criteria andTotalInterestAwdaBetween(Long,Long)
+ Criteria andTotalInterestAwdaNotBetween(Long,Long)
+ Criteria andTotalActualInterestIsNull()
+ Criteria andTotalActualInterestIsNotNull()
+ Criteria andTotalActualInterestEqualTo(Long)
+ Criteria andTotalActualInterestNotEqualTo(Long)
+ Criteria andTotalActualInterestGreaterThan(Long)
+ Criteria andTotalActualInterestGreaterThanOrEqualTo(Long)
+ Criteria andTotalActualInterestLessThan(Long)
+ Criteria andTotalActualInterestLessThanOrEqualTo(Long)
+ Criteria andTotalActualInterestIn(List<Long>)
+ Criteria andTotalActualInterestNotIn(List<Long>)
+ Criteria andTotalActualInterestBetween(Long,Long)
+ Criteria andTotalActualInterestNotBetween(Long,Long)
+ Criteria andCustomerBeforeInstallmentIsNull()
+ Criteria andCustomerBeforeInstallmentIsNotNull()
+ Criteria andCustomerBeforeInstallmentEqualTo(Long)
+ Criteria andCustomerBeforeInstallmentNotEqualTo(Long)
+ Criteria andCustomerBeforeInstallmentGreaterThan(Long)
+ Criteria andCustomerBeforeInstallmentGreaterThanOrEqualTo(Long)
+ Criteria andCustomerBeforeInstallmentLessThan(Long)
+ Criteria andCustomerBeforeInstallmentLessThanOrEqualTo(Long)
+ Criteria andCustomerBeforeInstallmentIn(List<Long>)
+ Criteria andCustomerBeforeInstallmentNotIn(List<Long>)
+ Criteria andCustomerBeforeInstallmentBetween(Long,Long)
+ Criteria andCustomerBeforeInstallmentNotBetween(Long,Long)
+ Criteria andCustomerAfterInstallmentIsNull()
+ Criteria andCustomerAfterInstallmentIsNotNull()
+ Criteria andCustomerAfterInstallmentEqualTo(Long)
+ Criteria andCustomerAfterInstallmentNotEqualTo(Long)
+ Criteria andCustomerAfterInstallmentGreaterThan(Long)
+ Criteria andCustomerAfterInstallmentGreaterThanOrEqualTo(Long)
+ Criteria andCustomerAfterInstallmentLessThan(Long)
+ Criteria andCustomerAfterInstallmentLessThanOrEqualTo(Long)
+ Criteria andCustomerAfterInstallmentIn(List<Long>)
+ Criteria andCustomerAfterInstallmentNotIn(List<Long>)
+ Criteria andCustomerAfterInstallmentBetween(Long,Long)
+ Criteria andCustomerAfterInstallmentNotBetween(Long,Long)
+ Criteria andCompanyIdIsNull()
+ Criteria andCompanyIdIsNotNull()
+ Criteria andCompanyIdEqualTo(String)
+ Criteria andCompanyIdNotEqualTo(String)
+ Criteria andCompanyIdGreaterThan(String)
+ Criteria andCompanyIdGreaterThanOrEqualTo(String)
+ Criteria andCompanyIdLessThan(String)
+ Criteria andCompanyIdLessThanOrEqualTo(String)
+ Criteria andCompanyIdLike(String)
+ Criteria andCompanyIdNotLike(String)
+ Criteria andCompanyIdIn(List<String>)
+ Criteria andCompanyIdNotIn(List<String>)
+ Criteria andCompanyIdBetween(String,String)
+ Criteria andCompanyIdNotBetween(String,String)
+ Criteria andApprovedByIsNull()
+ Criteria andApprovedByIsNotNull()
+ Criteria andApprovedByEqualTo(String)
+ Criteria andApprovedByNotEqualTo(String)
+ Criteria andApprovedByGreaterThan(String)
+ Criteria andApprovedByGreaterThanOrEqualTo(String)
+ Criteria andApprovedByLessThan(String)
+ Criteria andApprovedByLessThanOrEqualTo(String)
+ Criteria andApprovedByLike(String)
+ Criteria andApprovedByNotLike(String)
+ Criteria andApprovedByIn(List<String>)
+ Criteria andApprovedByNotIn(List<String>)
+ Criteria andApprovedByBetween(String,String)
+ Criteria andApprovedByNotBetween(String,String)
+ Criteria andJfPartnerIsNull()
+ Criteria andJfPartnerIsNotNull()
+ Criteria andJfPartnerEqualTo(String)
+ Criteria andJfPartnerNotEqualTo(String)
+ Criteria andJfPartnerGreaterThan(String)
+ Criteria andJfPartnerGreaterThanOrEqualTo(String)
+ Criteria andJfPartnerLessThan(String)
+ Criteria andJfPartnerLessThanOrEqualTo(String)
+ Criteria andJfPartnerLike(String)
+ Criteria andJfPartnerNotLike(String)
+ Criteria andJfPartnerIn(List<String>)
+ Criteria andJfPartnerNotIn(List<String>)
+ Criteria andJfPartnerBetween(String,String)
+ Criteria andJfPartnerNotBetween(String,String)
}
class com.welab.loan.finance.model.LoanUvfDetailExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanUvfDetailExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.vo.RepaymentVO {
~ List<DuesVO> duesVOList
~ Long principal
~ Long accountAmount
~ Long overAmount
~ Long repaymentAmount
~ Long actualAmount
~ Integer day
~ Byte status
~ Boolean isAdvance
~ Long customAmount
~ Long totalPaidAmount
~ Long actualTotalDueAmount
~ Long realAmount
~ Long adminFee
~ List<OverDuesVO> overDuesVOList
~ List<DuesExtVo> duesList
- String loanNumber
- Long repayDueAmount
- Long headFee
- Long receivedAmount
- Long channelFee
- Long totalFundInterest
- Long totalServiceFee
- Long totalPrincipalFee
- Long totalCarryingFee
- Integer planType
- Date expireDate
- Integer applyType
- Integer planStatus
- EPlanTryDueVO ePlanTryDueVO
- String realPeriod
- RateTypeDetailDTO rateTypeDetail
- Long premiumAmount
}
class com.welab.loan.finance.test.LoanWarrantyTest {
- LoanWarrantyController loanWarrantyController
+ void testImport()
}
class com.welab.loan.finance.dto.UserBankCardDto {
~ String userName
~ String bankNumber
~ String bankCode
~ String mobile
~ Date beginTime
~ Date endTime
}
class com.welab.loan.finance.service.credit.CreditUserAccountInfoService {
- CreditUserAccountInfoExtMapper creditUserAccountInfoExtMapper
+ List<CreditUserAccountInfo> getAccountInfoList(Map<String,Object>)
+ CreditUserAccountInfo getCreditUserAccountInfo(Long)
+ List<CreditUserAccountInfo> getAccountInfoList(CreditUserAccountInfoExt)
}
class com.welab.loan.finance.app.command.plan.BatchApplyPlanCmdExe {
- ApplyCPlanCmdExe applyCPlanCmdExe
- ITransformDues transformDues
- UserProfilesServiceFacade userProfilesServiceFacade
- FPlanDuesQryExcute fPlanDuesQryExcute
- ApplyFPlanCmdExcute applyFPlanCmdExcute
+ Response applyCPlanByNik(BatchApplyCPlanCmd)
+ Response<Void> applyFPlanByNik(BatchApplyFPlanCmd)
}
class com.welab.loan.finance.test.credit.InitCreditTest {
+ {static} void main(String[])
}
class com.welab.loan.finance.model.CreditUserAccountDetail {
- Long id
- Date createdAt
- Date updatedAt
- Boolean deleted
- String accountType
- Long userId
- Long operateUseMoney
- Long operateSumMoney
- Long operateFreezeMoney
- String orderNum
- Long operateUserId
- Integer operateType
- Long accountId
- Long userMoney
- Long sumMoney
- Long freezeMoney
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ String getAccountType()
+ void setAccountType(String)
+ Long getUserId()
+ void setUserId(Long)
+ Long getOperateUseMoney()
+ void setOperateUseMoney(Long)
+ Long getOperateSumMoney()
+ void setOperateSumMoney(Long)
+ Long getOperateFreezeMoney()
+ void setOperateFreezeMoney(Long)
+ String getOrderNum()
+ void setOrderNum(String)
+ Long getOperateUserId()
+ void setOperateUserId(Long)
+ Integer getOperateType()
+ void setOperateType(Integer)
+ Long getAccountId()
+ void setAccountId(Long)
+ Long getUserMoney()
+ void setUserMoney(Long)
+ Long getSumMoney()
+ void setSumMoney(Long)
+ Long getFreezeMoney()
+ void setFreezeMoney(Long)
}
class com.welab.loan.finance.core.dto.dues.CostDTO {
- Long amount
- String costType
}
enum com.welab.loan.finance.enums.TypeEnum {
+  ONLINE
+  OFFLINE
+  ALFAMART
+  ASTRAPAY
- Byte value
- String name
- String enName
- Long fundId
- <<Create>> TypeEnum(int,String,String,Long)
+ Byte getValue()
+ String getName()
+ String getEnName()
+ Long getFundId()
+ {static} TypeEnum getTypeEnum(Byte)
+ {static} String getTypeEnumStr(Byte)
+ {static} TypeEnum getTypeEnumByEnName(String)
+ {static} Map getStatusMap(boolean)
+ {static} List getStatusList(boolean)
}
class com.welab.loan.finance.app.command.repayment.UserAdvancePaymentCmdExe {
- {static} List<String> FASPAY_BANK_CODE_LIST
- BaseUserAdvancePaymentService userAdvancePaymentService
- VACacheCmdExe vACacheCmdExe
+ void matchPayment(UserAdvancePaymentDTO)
}
class com.welab.loan.finance.vo.request.RepaymentCalculatorReq {
- BigDecimal amount
- String tenor
- BigDecimal interestRate
- BigDecimal serviceFeeRate
- String secondProdCode
- Integer fundId
- FundInterestTypeEnum fundInterestType
- BigDecimal fundInterestRate
- String fixFundInterest
- boolean adminFeeZero
- boolean isRestructure
- AdminTypeEnum adminTypeEnum
- Integer fixAdminFee
- BigDecimal adminRate
- BigDecimal totalFeeRate
- String loanDate
- Boolean isApprovedAt
- Boolean handlingFee
- Integer payDay
- ProductRateConfigVO productRateConfigVO
- ActivityRuleResponseDTO ActivityRuleResponseDTO
- String loanNumber
- String loanNumberForInsurancePremium
- Date approvedAt
- String provisionRate
- Long userId
- Boolean insuranceSelect
- String controlGroupSecondProdCode
}
class com.welab.loan.finance.model.BcaTransferExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> BcaTransferExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.BcaTransferExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andOrgIdIsNull()
+ Criteria andOrgIdIsNotNull()
+ Criteria andOrgIdEqualTo(Long)
+ Criteria andOrgIdNotEqualTo(Long)
+ Criteria andOrgIdGreaterThan(Long)
+ Criteria andOrgIdGreaterThanOrEqualTo(Long)
+ Criteria andOrgIdLessThan(Long)
+ Criteria andOrgIdLessThanOrEqualTo(Long)
+ Criteria andOrgIdIn(List<Long>)
+ Criteria andOrgIdNotIn(List<Long>)
+ Criteria andOrgIdBetween(Long,Long)
+ Criteria andOrgIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andBatchNoIsNull()
+ Criteria andBatchNoIsNotNull()
+ Criteria andBatchNoEqualTo(String)
+ Criteria andBatchNoNotEqualTo(String)
+ Criteria andBatchNoGreaterThan(String)
+ Criteria andBatchNoGreaterThanOrEqualTo(String)
+ Criteria andBatchNoLessThan(String)
+ Criteria andBatchNoLessThanOrEqualTo(String)
+ Criteria andBatchNoLike(String)
+ Criteria andBatchNoNotLike(String)
+ Criteria andBatchNoIn(List<String>)
+ Criteria andBatchNoNotIn(List<String>)
+ Criteria andBatchNoBetween(String,String)
+ Criteria andBatchNoNotBetween(String,String)
+ Criteria andSourceIsNull()
+ Criteria andSourceIsNotNull()
+ Criteria andSourceEqualTo(Byte)
+ Criteria andSourceNotEqualTo(Byte)
+ Criteria andSourceGreaterThan(Byte)
+ Criteria andSourceGreaterThanOrEqualTo(Byte)
+ Criteria andSourceLessThan(Byte)
+ Criteria andSourceLessThanOrEqualTo(Byte)
+ Criteria andSourceIn(List<Byte>)
+ Criteria andSourceNotIn(List<Byte>)
+ Criteria andSourceBetween(Byte,Byte)
+ Criteria andSourceNotBetween(Byte,Byte)
+ Criteria andRelationIdIsNull()
+ Criteria andRelationIdIsNotNull()
+ Criteria andRelationIdEqualTo(Long)
+ Criteria andRelationIdNotEqualTo(Long)
+ Criteria andRelationIdGreaterThan(Long)
+ Criteria andRelationIdGreaterThanOrEqualTo(Long)
+ Criteria andRelationIdLessThan(Long)
+ Criteria andRelationIdLessThanOrEqualTo(Long)
+ Criteria andRelationIdIn(List<Long>)
+ Criteria andRelationIdNotIn(List<Long>)
+ Criteria andRelationIdBetween(Long,Long)
+ Criteria andRelationIdNotBetween(Long,Long)
+ Criteria andTransferDateIsNull()
+ Criteria andTransferDateIsNotNull()
+ Criteria andTransferDateEqualTo(Date)
+ Criteria andTransferDateNotEqualTo(Date)
+ Criteria andTransferDateGreaterThan(Date)
+ Criteria andTransferDateGreaterThanOrEqualTo(Date)
+ Criteria andTransferDateLessThan(Date)
+ Criteria andTransferDateLessThanOrEqualTo(Date)
+ Criteria andTransferDateIn(List<Date>)
+ Criteria andTransferDateNotIn(List<Date>)
+ Criteria andTransferDateBetween(Date,Date)
+ Criteria andTransferDateNotBetween(Date,Date)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andOrderIdIsNull()
+ Criteria andOrderIdIsNotNull()
+ Criteria andOrderIdEqualTo(String)
+ Criteria andOrderIdNotEqualTo(String)
+ Criteria andOrderIdGreaterThan(String)
+ Criteria andOrderIdGreaterThanOrEqualTo(String)
+ Criteria andOrderIdLessThan(String)
+ Criteria andOrderIdLessThanOrEqualTo(String)
+ Criteria andOrderIdLike(String)
+ Criteria andOrderIdNotLike(String)
+ Criteria andOrderIdIn(List<String>)
+ Criteria andOrderIdNotIn(List<String>)
+ Criteria andOrderIdBetween(String,String)
+ Criteria andOrderIdNotBetween(String,String)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.BcaTransferExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.BcaTransferExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.response.FinanceRepaymentTrackVo {
- String loanNumber
- Integer dueIndex
- Date repaymentAt
- Byte type
- String transId
- Long repaymentAmount
- Long fundInterestFee
- Long serviceFee
- Long operatorId
- Date createdAt
- Date updateAt
- Boolean isAdvance
- String channel
- Boolean isCustom
- String promotionCode
- Date actualRepaymentAt
}
class com.welab.loan.finance.dto.cmd.TryRepayCPlanCmd {
- Long userId
- List<String> loanNumbers
- Long amount
}
class com.welab.loan.finance.app.manager.credit.CreditNotifyManager {
- BaseRabbitTemplate baseRabbitTemplate
- BaseCreditUserAccountService baseCreditUserAccountService
- UserProfilesServiceFacade userProfilesServiceFacade
+ void tagAndTotalcreditChanged(Long)
+ void approvedChange(Long,AtomicLong)
+ void notifyApplication(Long,String)
}
class com.welab.loan.finance.dto.loan.BaseDto {
- {static} long serialVersionUID
}
interface com.welab.loan.finance.mapper.LendReversalRepaymentDetailMapper {
~ long countByExample(LendReversalRepaymentDetailExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LendReversalRepaymentDetail)
~ int insertSelective(LendReversalRepaymentDetail)
~ List<LendReversalRepaymentDetail> selectByExample(LendReversalRepaymentDetailExample)
~ LendReversalRepaymentDetail selectByPrimaryKey(Long)
~ int updateByExampleSelective(LendReversalRepaymentDetail,LendReversalRepaymentDetailExample)
~ int updateByExample(LendReversalRepaymentDetail,LendReversalRepaymentDetailExample)
~ int updateByPrimaryKeySelective(LendReversalRepaymentDetail)
~ int updateByPrimaryKey(LendReversalRepaymentDetail)
}
class com.welab.loan.finance.core.dues.impl.MostCostService {
- boolean isDiscount
+ CostDetailDTO findCostDetail(CostReqDTO)
+ String costKey()
}
class com.welab.loan.finance.facade.marketing.UfiWhiteListDubboServiceFacade {
- UfiWhiteListDubboService ufiWhiteListDubboService
+ Boolean existsUfiWhiteList(Long)
+ Boolean existsUfiWhiteList(Long,String)
+ UfiWhiteListDTO getByUserId(Long)
}
interface com.welab.loan.finance.mapper.ext.CreditActivityAbTestGroupUserRelationExtMapper {
~ int batchInsert(List<CreditActivityAbTestGroupUserRelation>)
}
interface com.welab.loan.finance.mapper.LoanApplyPlansMapper {
~ long countByExample(LoanApplyPlansExample)
~ int deleteByExample(LoanApplyPlansExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanApplyPlans)
~ int insertSelective(LoanApplyPlans)
~ List<LoanApplyPlans> selectByExample(LoanApplyPlansExample)
~ LoanApplyPlans selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanApplyPlans,LoanApplyPlansExample)
~ int updateByExample(LoanApplyPlans,LoanApplyPlansExample)
~ int updateByPrimaryKeySelective(LoanApplyPlans)
~ int updateByPrimaryKey(LoanApplyPlans)
}
class com.welab.loan.finance.core.dues.impl.DueDateHelper {
+ {static} int NS_DDM
+ {static} int PL_DDM
+ {static} List<Integer> diffPayDays(LocalDate,Integer,Integer)
+ {static} List<Integer> diffPayDays(LocalDate,LocalDate,Integer,Integer)
+ {static} int plPayDayForShort(LocalDate,int)
+ {static} int nsPayDayForShort(int)
+ {static} int nsPayDayForShort(LocalDate,LocalDate,int)
+ {static} Date plusDay(Date,int)
+ {static} Date plusMonths(Date,int)
- {static} int findDueDateByPayDay(LocalDate,LocalDate,int,int)
+ {static} Date fristDueDateForFlexifit(Date,boolean,int,int,int)
+ {static} int flexDDMType(Date,int,int,int)
+ {static} DateTime nextDayOfMonth(DateTime,int,int)
+ {static} int diffDayForNSSigap(Date)
+ {static} Date fristDueDateForNSSigap(Date)
+ {static} void main(String[])
- {static} void print(Date)
}
class com.welab.loan.finance.vo.LoanDetailExtVO {
- String merchantProductCode
- String merchantCode
- String merchantOrderNo
- Byte isPremium
- Long premiumFee
}
class com.welab.loan.finance.dto.cmd.TryCouponInfoCmd {
- List<String> loanNumbers
- Map<String,String> repayDueIndexMap
- String promotionCode
- Byte preferentialType
- BigDecimal disInterestFee
- BigDecimal disAdminFee
- BigDecimal disLateFee
- BigDecimal disPrincipal
- Boolean isCustom
- Long customAmount
}
class com.welab.loan.finance.app.base.tb.BaseTbLoanQueryService {
- TbLoanQueryMapper tbLoanQueryMapper
+ long countTbLoanQry(TbLoanQry)
}
interface com.welab.loan.finance.mapper.CreditActivityAbTestMapper {
~ long countByExample(CreditActivityAbTestExample)
~ int deleteByExample(CreditActivityAbTestExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditActivityAbTest)
~ int insertSelective(CreditActivityAbTest)
~ List<CreditActivityAbTest> selectByExample(CreditActivityAbTestExample)
~ CreditActivityAbTest selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditActivityAbTest,CreditActivityAbTestExample)
~ int updateByExample(CreditActivityAbTest,CreditActivityAbTestExample)
~ int updateByPrimaryKeySelective(CreditActivityAbTest)
~ int updateByPrimaryKey(CreditActivityAbTest)
}
class com.welab.loan.finance.app.service.flow.repaymentback.DuesBackCompont {
- RepaymentGoBackManager repaymentGoBackManager
+ FlowTaskNodeEnum flowTaskNode()
# void process(RepaymentBackFlowContext)
}
class com.welab.loan.finance.app.command.tb.lend.lend.TbFinanceLendCreateService {
- BaseFinanceLendNewService baseFinanceLendNewService
- TbFinanceLendBuilderProvider freanceLendBuilderProvider
- BaseFinanceLendService baseFinanceLendService
+ void doCreate(LoanDetail)
- Long getReceivedAmount(LoanDetail)
}
enum com.welab.loan.finance.enums.credit.CreditConfigOperateEnums {
+  ADD_TAG
+  DELETE_TAG
+  ADD_TENOR
+  DELETE_TENOR
}
class com.welab.loan.finance.dto.CouponLoansAbleDTO {
- String loanNumber
- Boolean able
- Integer maxOverDay
- Long remainingAmount
}
class com.welab.loan.finance.job.MaumodalOverduePushJob {
- FinanceDuesExtMapper duesExtMapper
- UserProfilesServiceFacade profilesServiceFacade
- MessageAppFacade messageAppFacade
- BaseLoanDetailService baseLoanDetailService
- {static} Map<Integer,String> getDiffDayTemplateMap()
+ void execute(ShardingContext)
+ void setEmailUser()
+ MailDTO buildMail(String)
+ void doPush(String)
- void sendPush(List<FinanceDues>,String,Date)
- void pushAppMsg(Long,String,Date,int)
}
class com.welab.loan.finance.app.base.va_sync.BaseSyncVaCacheInfoService {
+ {static} Byte success
- SyncVaCacheInfoMapper syncVaCacheInfoMapper
- SyncVaCacheInfoExtMapper syncVaCacheInfoExtMapper
+ Long saveVaData(SyncVaCacheInfo)
+ void expiredLastRecord(Long)
+ void setExpire(Long,Date)
+ SyncVaCacheInfo getValidRecord(Long)
+ SyncVaCacheInfo matchRecord(Long,Long)
+ void updateStatus(Long)
+ void cleanNoSuccess(Long)
+ List<SyncVaCacheInfo> findInvalidData()
+ void cleanInvalidData(List<SyncVaCacheInfo>)
+ SyncVaCacheInfo getById(Long)
}
interface com.welab.loan.finance.service.PlanService {
~ Response applyPlan(ApplyPlanDTO)
~ Response checkApplyPlan(ApplyPlanDTO)
~ Response reliefProgram(ReliefProgramDTO)
~ Response<CalPlanAmountDto> tryApplyPlan(ApplyPlanDTO)
~ Response<LoanPlanTypeCountVo> loanPlanTypeCount(String)
~ Response<LoanPlanTypeCountVo> loanPlanTypeCount(List<String>,List<PlansStatusEnum>)
~ Response<List<CollectionProgramVO>> tryLoanPlan(List<String>)
~ Response<Map<String,Integer>> getLoanPlanCount(List<String>,PlansTypeEnum)
~ Response<FPlansContractDTO> getFPlanContract(String)
~ Response<TryApplyFPlanDTO> tryApplyFPlan(TryApplyFPlanCmd)
~ Response<Void> applyFPlan(ApplyFPlanCmd)
~ Response<List<String>> findDuePlan(Long)
~ Response<Void> applyFPlanByNik(BatchApplyFPlanCmd)
~ Response<List<EPlanApplyDTO>> getEPlanList(Long)
~ Response<UserPlanInfoDto> listUserPlanInfo(Long,String)
~ Response<PageInfo<UserUnsettledLoanDto>> listUserUnsettledLoan(Long,Integer,Integer)
~ Response cancelPlanStatus(List<String>)
~ Response<Boolean> collectionCplanUserVerify(Long)
~ Response<List<String>> collectionCplanLoanVerify(List<String>,boolean)
}
interface com.welab.loan.finance.mapper.ext.OverdueExtMapper {
~ int insert(OverdueDTO,String)
~ int insertSelective(OverdueDTO,String)
}
enum com.welab.loan.finance.enums.EventEnum {
+  loanInfo_Before
+  loanInfo_After
+  FundRecharge_Before
+  FundRecharge_After
+  Lend_Before
+  Lend_After
+  Recharge_Before
+  Recharge_After
+  Repayment_Before
+  Repayment_After
- String desc
}
class com.welab.loan.finance.model.ext.CreditActivityAbTestGroupUserRelationExt {
- Integer userGroupRuleType
- Integer userPhoneLastNum
}
enum com.welab.loan.finance.enums.LendModeEnum {
+  To_USER
+  To_Business
+  TO_PAYLATER
+  TO_TAPP
+  TO_TRAVELOKA
+  TO_HSO
+  TO_RESTOCK
+  TO_AOP
+  TO_TRIO
+  To_TB_USER
- byte val
- String enDesc
- String desc
+ {static} String getLendModeEnumStr(Byte)
+ {static} List getStatusList(boolean)
}
class com.welab.loan.finance.utils.excel.ExcelLogs {
- Boolean hasError
- List<ExcelLog> logList
+ <<Create>> ExcelLogs()
+ Boolean getHasError()
+ void setHasError(Boolean)
+ List<ExcelLog> getLogList()
+ List<ExcelLog> getErrorLogList()
+ void setLogList(List<ExcelLog>)
}
interface com.welab.loan.finance.service.business.lend.ILendService {
~ TransferAmountDto getTransferAmount(String,TradingTypeEnum)
~ FinanceLend buildLend(String,TypeEnum,LendModeEnum)
~ FinanceLend buildLend(String,TypeEnum,LendModeEnum,boolean)
~ Response<Map> sendLend(String,TypeEnum,LendModeEnum)
~ PayingVO payLend(PayingDto)
~ Response<Map> payLend(FinanceLend)
~ PayingVO getWithdrawalCode(String,Long,Long)
}
interface com.welab.loan.finance.service.IMerchantTradingService {
~ Response<MerchantTradingDTO> queryMerchantTradingInfor(MerchantTradingQry)
~ Response<PageInfo<MerchantLoanDTO>> queryMerchantLoans(MerchantLoanQry)
~ Response<Boolean> asynExportMerchantLoans(ExportMerchantLoanCmd)
~ Response<PageInfo<MerchantRepaymentLoanDTO>> queryMerchantRepaymentLoans(MerchantRepaymentQry)
~ Response<Boolean> asynExportMerchantRepaymentLoans(MerchantRepaymentQry)
}
class com.welab.loan.finance.response.AstraPayInfoDueVo {
- {static} long serialVersionUID
- String loanNumber
- Date dueDate
- Integer indexDue
- Long lateFee
- Long principalAmount
}
interface com.welab.loan.finance.core.loan.transform.ITransformDues {
~ List<CouponDues> findDuesByCoupon(String)
~ LoanDataDTO findDuesByCredit(Long,boolean)
~ LoanTransDetailDTO findTransDetailByCredit(String)
~ Response saveMultipleRepayment(MulRepaymentDTO)
~ Response saveMultipleRepaymentV2(MulRepaymentDTO)
}
class com.welab.loan.finance.service.other.AcitivityDueCalculator {
- <<Create>> AcitivityDueCalculator()
+ {static} BigDecimal getDerateAdminFeeAmount(RepaymentCalculatorReq)
+ {static} BigDecimal getDerateInterestAmount(RepaymentCalculatorReq)
+ {static} BigDecimal calculateAdminRate(RepaymentCalculatorReq)
+ {static} BigDecimal calculateLateRate(RepaymentCalculatorReq)
+ {static} ActivityRateRspDTO findActivityRateByAll(ActivityRateReqDTO,ActivityRuleResponseDTO)
+ {static} BigDecimal calculateInterestRate(RepaymentCalculatorReq)
+ {static} BigDecimal calculatorRate(Byte,BigDecimal,BigDecimal,BigDecimal)
+ {static} BigDecimal calculatorRate(Byte,BigDecimal,BigDecimal)
+ {static} BigDecimal getReduceFee(Byte,BigDecimal)
+ {static} BigDecimal calculatorIgnoreAppointRate(Byte,BigDecimal,BigDecimal)
}
class com.welab.loan.finance.job.TappJob {
- FinanceTradingExtMapper financeTradingExtMapper
- FinanceTradingMapper financeTradingMapper
# FundAccountInfoService fundAccountInfoService
- LendBusiService lendBusiService
- PayService payService
+ void execute(ShardingContext)
}
class com.welab.loan.finance.facade.marketing.FlexifitRepaymentConfigFacade {
- FlexifitRepaymentConfigDubboService flexifitRepaymentConfigDubboService
- ApplicationService applicationService
+ FlexifitRepaymentConfigDTO getConfigByCompany(String)
+ FlexifitRepaymentConfigDTO getConfigByUserId(Long)
}
enum com.welab.loan.finance.enums.RedisKeyEnum {
+  CHANGE_CREDIT_USER_TAG
- String key
- String desc
- Integer failureTime
+ String getCacheKey(String)
}
class com.welab.loan.finance.dto.OverdueQueryDto {
- {static} long serialVersionUID
- Integer startOverDay
- Integer endOverDay
- List<String> loanNumbers
- List<String> productCodeList
- List<String> excludeSecondProdCodeList
}
class com.welab.loan.finance.service.other.EmailService {
- MessageEmailService messageEmailService
+ void sendEmail(MailDTO)
}
class com.welab.loan.finance.model.DuesRepayUpdateRecordExt {
- Long id
- Long recordId
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getRecordId()
+ void setRecordId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.model.RebookTimeLimit {
- Long id
- Long userId
- String loanNumber
- Integer dueIndex
- Date startTime
- Date endTime
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Integer getDueIndex()
+ void setDueIndex(Integer)
+ Date getStartTime()
+ void setStartTime(Date)
+ Date getEndTime()
+ void setEndTime(Date)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.app.command.tb.order.process.TbInvoicePostProcessServiceProvider {
}
class com.welab.loan.finance.model.ext.LoanApplyPlansExt {
- Long orgId
- Long userId
- String mobile
- String userName
}
class com.welab.loan.finance.response.SeaDues {
- List<Due> dues
- Long repayDueAmount
- Long adminFee
- Long totalAmount
- Long orgAdminFee
- String realPeriod
- Long upfrontCarryFee
}
class com.welab.loan.finance.response.FinanceRepaymentTrackRsp {
- String loanNumber
- Integer dueIndex
- String repaymentAt
- String type
- String transId
- Long repaymentAmount
- Long operatorId
- String createdAt
- String updateAt
- String isAdvance
+ {static} Map getExcelHead()
}
class com.welab.loan.finance.rabbitmq.CouponExpiredConsumer {
- CouponBusiService couponBusiService
+ void onMessage(Message)
}
interface com.welab.loan.finance.service.TrackService {
~ Response<TrackVo> findTrackByTime(TrackDto)
~ Response<List<TrackVo>> findTrackDetailByTime(TrackDto)
~ Response<List<LendVo>> findPendingLendByFund(LendDto)
~ Long sumFendingAmount(Long)
~ Response<PageVO<RepayTrackVo>> findTracksByTime(RepayTrackDto)
~ List<TrackVo> findFastPayTrackByTime(List<String>)
~ List<TrackVo> findFastPayTrackByTime(Integer,List<String>)
~ List<TrackVo> findFastPayTrackByTime(Integer,List<String>,MarkTypeEnum)
~ List<TrackVo> findFastPayTrackDetailByTime(Integer,List<String>,MarkTypeEnum,Long)
~ List<TrackVo> findFastPayTrackDetailByTime(TackDetailForRefundQry)
~ List<TrackVo> findPayTrackByTime(List<String>,List<String>)
~ List<TrackVo> findPayTrackForFaspayFeeBankByTime(List<String>)
~ Response<LendVo> countPendingLendByFund(LendDto)
~ Response<TrackVo> findTrackForBCA(TrackDto)
~ List<TrackVo> findPayTrackByTimeAndGateType(List<String>,Byte)
~ Response<List<TrackVo>> findTrackByTimeForSold(TrackDto)
}
class com.welab.loan.finance.controller.LoanWarrantyController {
- BaseLoanWarrantyService baseLoanWarrantyService
- ProductService productService
+ Response importLoanWarranty(Long,MultipartFile)
+ Response query(Long,HttpServletRequest)
+ Response export(Long,HttpServletRequest)
+ Response repaymentTrackList(Long,String,HttpServletRequest)
+ Response repaymentExport(Long,String,HttpServletRequest,HttpServletResponse)
}
interface com.welab.loan.finance.enums.CreditActivityAbTestEnum {
}
enum com.welab.loan.finance.enums.AbtestDataSortBy {
+  DEFAULT
+  LATEST_SCENARIO
+  MOST_MATRIX
+  LATEST_START_DATE
- Integer value
- String desc
+ {static} AbtestDataSortBy getByValue(Integer)
}
enum com.welab.loan.finance.enums.ActivitySortBy {
+  DEFAULT
+  LATEST_SCENARIO
+  MOST_MATRIX
+  LATEST_START_DATE
- Integer value
- String desc
~ <<Create>> ActivitySortBy(Integer,String)
+ Integer getValue()
+ String getDesc()
}
enum com.welab.loan.finance.enums.GroupSortBy {
+  DEFAULT
+  LATEST_SCENARIO
+  MOST_MATRIX
- Integer value
- String desc
~ <<Create>> GroupSortBy(Integer,String)
+ Integer getValue()
+ String getDesc()
}
enum com.welab.loan.finance.enums.AbTestStatusEnum {
+  RUNNING
+  SCHEDULED
+  DRAFTS
+  FINISHED
+  TERMINATED
- String value
- String desc
~ <<Create>> AbTestStatusEnum(String,String)
+ String getValue()
+ String getDesc()
}
enum com.welab.loan.finance.enums.MatrixType {
+  NEW
+  RO
- String value
- String desc
~ <<Create>> MatrixType(String,String)
+ String getValue()
+ String getDesc()
}
enum com.welab.loan.finance.enums.UserGroupRuleType {
+  LAST_PHONE_NUM
+  USER_ID
- Integer value
- String desc
~ <<Create>> UserGroupRuleType(Integer,String)
+ Integer getValue()
+ String getDesc()
+ {static} boolean contains(Integer)
}
enum com.welab.loan.finance.enums.GroupType {
+  TEST_GROUP
+  CONTROL_GROUP
- Integer value
- String desc
~ <<Create>> GroupType(Integer,String)
+ Integer getValue()
+ String getDesc()
}
enum com.welab.loan.finance.enums.ActionType {
+  LAUNCH
+  TERMINATED
- String value
- String desc
~ <<Create>> ActionType(String,String)
+ String getValue()
+ String getDesc()
}
class com.welab.loan.finance.test.repair.RepairTest {
- RecoveryDataConsumer recoveryDataConsumer
+ void test1()
}
class com.welab.loan.finance.model.BankConfigExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> BankConfigExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.BankConfigExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Integer)
+ Criteria andIdNotEqualTo(Integer)
+ Criteria andIdGreaterThan(Integer)
+ Criteria andIdGreaterThanOrEqualTo(Integer)
+ Criteria andIdLessThan(Integer)
+ Criteria andIdLessThanOrEqualTo(Integer)
+ Criteria andIdIn(List<Integer>)
+ Criteria andIdNotIn(List<Integer>)
+ Criteria andIdBetween(Integer,Integer)
+ Criteria andIdNotBetween(Integer,Integer)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andKeynIsNull()
+ Criteria andKeynIsNotNull()
+ Criteria andKeynEqualTo(String)
+ Criteria andKeynNotEqualTo(String)
+ Criteria andKeynGreaterThan(String)
+ Criteria andKeynGreaterThanOrEqualTo(String)
+ Criteria andKeynLessThan(String)
+ Criteria andKeynLessThanOrEqualTo(String)
+ Criteria andKeynLike(String)
+ Criteria andKeynNotLike(String)
+ Criteria andKeynIn(List<String>)
+ Criteria andKeynNotIn(List<String>)
+ Criteria andKeynBetween(String,String)
+ Criteria andKeynNotBetween(String,String)
+ Criteria andValueIsNull()
+ Criteria andValueIsNotNull()
+ Criteria andValueEqualTo(String)
+ Criteria andValueNotEqualTo(String)
+ Criteria andValueGreaterThan(String)
+ Criteria andValueGreaterThanOrEqualTo(String)
+ Criteria andValueLessThan(String)
+ Criteria andValueLessThanOrEqualTo(String)
+ Criteria andValueLike(String)
+ Criteria andValueNotLike(String)
+ Criteria andValueIn(List<String>)
+ Criteria andValueNotIn(List<String>)
+ Criteria andValueBetween(String,String)
+ Criteria andValueNotBetween(String,String)
+ Criteria andIsEnableIsNull()
+ Criteria andIsEnableIsNotNull()
+ Criteria andIsEnableEqualTo(Boolean)
+ Criteria andIsEnableNotEqualTo(Boolean)
+ Criteria andIsEnableGreaterThan(Boolean)
+ Criteria andIsEnableGreaterThanOrEqualTo(Boolean)
+ Criteria andIsEnableLessThan(Boolean)
+ Criteria andIsEnableLessThanOrEqualTo(Boolean)
+ Criteria andIsEnableIn(List<Boolean>)
+ Criteria andIsEnableNotIn(List<Boolean>)
+ Criteria andIsEnableBetween(Boolean,Boolean)
+ Criteria andIsEnableNotBetween(Boolean,Boolean)
+ Criteria andSortIsNull()
+ Criteria andSortIsNotNull()
+ Criteria andSortEqualTo(Integer)
+ Criteria andSortNotEqualTo(Integer)
+ Criteria andSortGreaterThan(Integer)
+ Criteria andSortGreaterThanOrEqualTo(Integer)
+ Criteria andSortLessThan(Integer)
+ Criteria andSortLessThanOrEqualTo(Integer)
+ Criteria andSortIn(List<Integer>)
+ Criteria andSortNotIn(List<Integer>)
+ Criteria andSortBetween(Integer,Integer)
+ Criteria andSortNotBetween(Integer,Integer)
}
class com.welab.loan.finance.model.BankConfigExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.BankConfigExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.job.AlfamartJob {
- FinanceTradingExtMapper financeTradingExtMapper
- FinanceTradingMapper financeTradingMapper
# FundAccountInfoService fundAccountInfoService
- LendBusiService lendBusiService
- PayService payService
+ void execute(ShardingContext)
}
enum com.welab.loan.finance.enums.CouponStatusEnum {
+  DEL
+  INIT
+  USERING
+  USERED
+  EXPIRY
- byte value
- String name
- String enName
- <<Create>> CouponStatusEnum(byte,String,String)
}
enum com.welab.loan.finance.enums.ReversalStatusEnum {
+  REVERSAL_INIT
+  REVERSAL_CLOSE
- byte code
- String desc
~ <<Create>> ReversalStatusEnum(byte,String)
+ byte getCode()
+ void setCode(byte)
+ String getDesc()
+ void setDesc(String)
}
class com.welab.loan.finance.vo.OverdueVO {
- {static} long serialVersionUID
- String loanNumber
- String label
- String riskLevel
- Long repaymentAmount
- Long overdueAmount
- Long overdueFeeAmount
- Long overduePrincipalAmount
- Long overdueAdminAmount
- Long overdueInterestAmount
- Long overdueCarryingAmount
- Long unRepaymentAmount
- Integer overdueDay
- String productCode
- String secondProdCode
- Integer fristLetePeriod
- Integer lastLetePeriod
- Long repayDueAmount
- Long userId
- String nasScoreV3
- String nik
- Date labelUpdateAt
- Date labelExpiredAt
- Date fristDueDate
- Date lastDueDate
- String periodStr
- Integer period
- Long monthRepaymentAmount
- Long unRepanymentUnOverdueAmount
- Integer currentPeriod
- Boolean isFif
- Long sumAmount
- Long amount
- Date lendAt
- Long unRepanyment
- String receiptAccount
- String bankCode
- Long receivedAmount
- Long originalRepanymentAmount
- String specialPromotion
- Integer maxPlanType
- Long orgId
- String merchantCode
- String merchantProductCode
- Integer maxDueIndex
- String sourceId
- Long disbursementDateTime
- String iziScore
- Date recentlyUncloseDueDate
- Integer minUnpaidDueIndex
}
class com.welab.loan.finance.app.manager.credit.CreditUserTagLogManager {
- BaseCreditUserTagLogService baseCreditUserTagLogService
- BaseRabbitTemplate baseRabbitTemplate
+ int saveLogAndNotify(CreditUserTagLog)
}
class com.welab.loan.finance.app.base.BaseBigFieldParamService {
- BigFieldParamMapper bigFieldParamMapper
+ Long insertBigFieldParamReturnPk(String)
+ BigFieldParam selectOne(Long)
+ Map<Long,String> selectMap(List<Long>)
+ String buildParam(String,int)
+ boolean isBigParamData(String)
}
class com.welab.loan.finance.dto.InsuranceDetailDTO {
- {static} long serialVersionUID
- Long insuranceRecordId
- Byte type
- String loanNumber
- String policyNumber
- Long insuranceCoverage
- Date startDate
- Date endDate
- String claimStatus
- String insurancePaymentStatus
- Long paymentAmount
- String relation
}
interface com.welab.loan.finance.mapper.TbLoanMapper {
~ long countByExample(TbLoanExample)
~ int deleteByPrimaryKey(Long)
~ int insert(TbLoan)
~ int insertSelective(TbLoan)
~ List<TbLoan> selectByExample(TbLoanExample)
~ TbLoan selectByPrimaryKey(Long)
~ int updateByExampleSelective(TbLoan,TbLoanExample)
~ int updateByExample(TbLoan,TbLoanExample)
~ int updateByPrimaryKeySelective(TbLoan)
~ int updateByPrimaryKey(TbLoan)
}
class com.welab.loan.finance.dto.UpdateLabelDto {
- {static} long serialVersionUID
- String loanNumber
- String label
- Date expiredAt
}
interface com.welab.loan.finance.service.CreditUserTagService {
+ List<TagProductVO> getTagProductVOList(CreditUserAccountDTO)
~ Response<CalculationTagAmountVO> calcculationTagAmount(CalculationTagAmountDTO)
+ List<CreditUserTagConfigDTO> getTagProductConfig(String)
+ List<CreditUserTagConfigDTO> getTagProductConfigForCustomer(CreditUserAccountDTO)
+ List<CreditUserTagConfigDTO> getTagProductConfig(UpdateCreditUserAccountVO)
+ Response<Long> getUFIcount()
~ Response<Long> getUFIcountByTag(CreditUserTagListEnum)
}
class com.welab.loan.finance.service.business.LoanDelayBusiService {
- LoanDelayMapper loanDelayMapper
- LoanDetailMapper loanDetailMapper
- BaseUserBankCardService baseUserBankCardService
- BaseFinanceTrading baseFinanceTrading
+ void handleJob(LoanDelay)
+ void handleBank(Long)
+ void handleRechargeFail(String)
+ void handleOnline(String)
+ DelayChangeType checkOnLineOrBriBank(String)
- void hander(LoanDelay,int)
+ List<LoanDelay> selectByExample(LoanDelayExample)
+ long countByExample(LoanDelayExample)
- List<LoanDetail> findLoanDetail(LoanDetailExample)
}
class com.welab.loan.finance.dto.RepayDuesRspDTO {
- List<DuesVO> list
- String period
}
class com.welab.loan.finance.response.CalculatorItemVo {
- Long amount
- Integer index
- Date dueDate
- Long principal
- Long interest
- Long admin
- Long carry
}
class com.welab.loan.finance.test.excel.ExcelTest {
- String str
+ {static} void main(String[])
+ {static} long getDistanceDays(String,String)
}
class com.welab.loan.finance.core.dto.va.RepayAmountDTO {
- Long amount
- Long orgAmount
}
class com.welab.loan.finance.rabbitmq.syn.SynVirtualAccountConsumer {
- IVirtualAccount virtualAccount
- FlexifitWhiteDubboService flexifitWhiteDubboService
+ void onMessage(Message)
- void handleFlexifitUserAmount(List<SynAccountDTO>)
}
interface com.welab.loan.finance.mapper.CreditUserAccountMapper {
~ long countByExample(CreditUserAccountExample)
~ int deleteByExample(CreditUserAccountExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditUserAccount)
~ int insertSelective(CreditUserAccount)
~ List<CreditUserAccount> selectByExample(CreditUserAccountExample)
~ CreditUserAccount selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditUserAccount,CreditUserAccountExample)
~ int updateByExample(CreditUserAccount,CreditUserAccountExample)
~ int updateByPrimaryKeySelective(CreditUserAccount)
~ int updateByPrimaryKey(CreditUserAccount)
}
class com.welab.loan.finance.dto.LoanInfoDTO {
- String loanNumber
- String productName
- Date dueDate
- Long amount
- Long creditAmount
- String period
- Integer type
- boolean display
- Integer curDueIndex
- Integer totalDueIndex
- String secondProdCode
- Long lateFee
- Long dueAmount
- String activityCode
- String discountsDesc
- Long orgAmount
- Boolean isOver
- Integer overdueDays
- Byte planType
- Long planExpiredTime
- Byte applyType
- String customRepayStatus
- String partnerLogoUrl
- String partnerName
- RebookCheckVO rebookCheckVO
- Integer countdownDueDay
- List<TransItemDTO> transItems
}
interface com.welab.loan.finance.core.loan.coupon.ILendRepayDuesCoupon {
~ LoanCouponDetail findLendCouponByLoan(String,Date)
~ void saveLendCouponByLoan(String,Date)
~ List<LoanCouponDetail> findRepayCouponByLoan(String)
~ void saveRepayCouponByLoan(String)
}
interface com.welab.loan.finance.mapper.LoanCouponMapper {
~ int countByExample(LoanCouponExample)
~ int deleteByExample(LoanCouponExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanCoupon)
~ int insertSelective(LoanCoupon)
~ List<LoanCoupon> selectByExample(LoanCouponExample)
~ LoanCoupon selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanCoupon,LoanCouponExample)
~ int updateByExample(LoanCoupon,LoanCouponExample)
~ int updateByPrimaryKeySelective(LoanCoupon)
~ int updateByPrimaryKey(LoanCoupon)
}
class com.welab.loan.finance.dto.SignDTO {
- String loanNumber
- List<String> loanNumberList
- Date signDate
- Long userId
}
class com.welab.loan.finance.model.CreditUserTagRuleDelayTriggerExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditUserTagRuleDelayTriggerExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditUserTagRuleDelayTriggerExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andTriggerMethodIsNull()
+ Criteria andTriggerMethodIsNotNull()
+ Criteria andTriggerMethodEqualTo(String)
+ Criteria andTriggerMethodNotEqualTo(String)
+ Criteria andTriggerMethodGreaterThan(String)
+ Criteria andTriggerMethodGreaterThanOrEqualTo(String)
+ Criteria andTriggerMethodLessThan(String)
+ Criteria andTriggerMethodLessThanOrEqualTo(String)
+ Criteria andTriggerMethodLike(String)
+ Criteria andTriggerMethodNotLike(String)
+ Criteria andTriggerMethodIn(List<String>)
+ Criteria andTriggerMethodNotIn(List<String>)
+ Criteria andTriggerMethodBetween(String,String)
+ Criteria andTriggerMethodNotBetween(String,String)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andTriggerTimeIsNull()
+ Criteria andTriggerTimeIsNotNull()
+ Criteria andTriggerTimeEqualTo(Date)
+ Criteria andTriggerTimeNotEqualTo(Date)
+ Criteria andTriggerTimeGreaterThan(Date)
+ Criteria andTriggerTimeGreaterThanOrEqualTo(Date)
+ Criteria andTriggerTimeLessThan(Date)
+ Criteria andTriggerTimeLessThanOrEqualTo(Date)
+ Criteria andTriggerTimeIn(List<Date>)
+ Criteria andTriggerTimeNotIn(List<Date>)
+ Criteria andTriggerTimeBetween(Date,Date)
+ Criteria andTriggerTimeNotBetween(Date,Date)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.CreditUserTagRuleDelayTriggerExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.CreditUserTagRuleDelayTriggerExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.app.base.BaseLoanReversalService {
- LoanReversalMapper loanReversalMapper
+ List<ReversalVo> listByTransDate(Date,Date)
+ int newLoanReversal(LoanReversal)
+ int hasData(String)
+ LoanReversal getDataByTransId(String)
+ List<LoanReversal> getDataByTransIdList(List<String>)
}
class com.welab.loan.finance.job.bca.BcaTransferJob {
- MarketingService marketingService
- BaseBcaTransferService bcaTransferService
- LendBusiService lendBusiService
- IFundMatchService iFundMatchService
- BaseFinanceTrading baseFinanceTrading
- PayService payService
+ void execute(ShardingContext)
- void transferByFund(Long,DisbursementsFundAccountDTO,Long,String)
}
class com.welab.loan.finance.vo.LendStaticExtVo {
- String state
- Long num
}
interface com.welab.loan.finance.service.PayService {
}
class com.welab.loan.finance.service.business.LendReversalService {
+ {static} String LOCK_KEY
- LendReversalMapper lendReversalMapper
- LendReversalRepaymentMapper lendReversalRepaymentMapper
- LendReversalRepaymentDetailMapper lendReversalRepaymentDetailMapper
- BaseFinanceLendService baseLendService
- LendBusiService lendBusiService
# PayService payService
- JedisCluster jedisCluster
+ void asyncTransfer(FinanceTrading,Byte)
- TransferDto buildTransferDto(FinanceTrading,Byte)
+ void updateCashLoanOrBimaLendStatus(String)
- void updateFinanceLendStatus(Byte,List<String>)
- List<LendReversal> findLendReversalList(String)
+ Long deduct(String,Long,String,Long)
- Long doDeduct(String,Long,String,Long)
- LendReversalRepayment conpyFrom(LendReversalRepayment)
- void insertLendReversalRepaymentDetail(String,String,Long)
- List<LendReversalRepayment> findLendReversalRepaymentList(Long,String)
}
interface com.welab.loan.finance.mapper.ext.TbRepaymentMapper {
~ List<TbRepaymentVO> list(TbRepaymentQry)
~ List<TbRepaymentVO> findRepaymentTrackList(TbRepaymentQry)
~ List<TbPendRepayVO> findPendRepayList(List<String>)
~ Long count(TbRepaymentQry)
}
class com.welab.loan.finance.model.InsuranceRecord {
- Long id
- String groupName
- Byte type
- String policyFileId
- String claimFileId
- String creator
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getGroupName()
+ void setGroupName(String)
+ Byte getType()
+ void setType(Byte)
+ String getPolicyFileId()
+ void setPolicyFileId(String)
+ String getClaimFileId()
+ void setClaimFileId(String)
+ String getCreator()
+ void setCreator(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.model.mongo.tbuser.TbUserDoc {
- String partner
- String mobile
- String name
- String email
- String nik
}
interface com.welab.loan.finance.mapper.ext.CreditLoanCancelExtMapper {
~ int batchInsert(List<CreditLoanCancel>)
}
class com.welab.loan.finance.test.BaseFinanceLendServiceTest {
- BaseFinanceLendService baseFinanceLendService
- LendService lendService
+ void findFinanceLendExtByPage()
+ void signTest()
}
class com.welab.loan.finance.vo.repayment.UploadDuesExcelVO {
- Long userId
- String loanId
- String secondProdCode
- Integer dueIndex
- String dueDate
- String fundName
- String period
- String planType
- String promotionCode
- String lendStatusStr
- String productType
- Long adminFeeAmount
- Long adminFeePay
- Long discountAdminFee
- Long adminFeeUnPay
- Long fundInterestAmount
- Long fundInterestPay
- Long discountFundInterest
- Long fundInterestUnPay
- Long serviceFeeAmount
- Long serviceFeePay
- Long discountServiceFee
- Long serviceFeeUnPay
- Long provisionFee
- Long provisionPay
- Long provisionDiscount
- Long provisionUnpay
- Long principalAmount
- Long principalPay
- Long discountPrincipal
- Long principalUnPay
- Long lateFeeAmount
- Long lateFeePay
- Long discountLateFee
- Long lateFeeUnPay
- Long carryingFeeAmount
- Long carryingFeePay
- Long carryingFeeUnPay
- Long cessieDiscount
- Long cessiePay
- String programCollection
- String startExpireDate
- String endExpireDate
- String loanStatus
- String partner
- Integer dpd
}
class com.welab.loan.finance.job.LendReversalPaymentUpdateJob {
- LendReversalRepaymentMapper lendReversalRepaymentMapper
+ void execute(ShardingContext)
}
class com.welab.loan.finance.dto.AdvanceRepaymentDTO {
- {static} long serialVersionUID
- Long advanceRepaymentId
- String loanNumber
- Long appMessageId
- Long advanceAmount
- Boolean valid
- Byte status
}
class com.welab.loan.finance.core.dto.repayment.SingleRepayDTO {
- Long orgId
- Long userId
- Long amount
- String transId
- String orderNo
- String bankCode
- String accountNumber
- FundEnum fundEnum
- Date actualRepaymentAt
- String loanNumber
- TypeEnum typeEnum
- String repayCode
- Long storeId
- RepayOriginEnum repayTypeEnum
- Long fastPayFee
- JSONObject vaCacheData
- Long principal
- Long serviceFee
- Long lateFee
- Integer dueIndex
}
class com.welab.loan.finance.vo.ListDueRepayImportUpdateRecordVO {
- Long id
- String loanNumber
- String operatorAdminEmail
- Integer status
- Date startUpdateTime
- String excelDownloadUrl
}
interface com.welab.loan.finance.mapper.ext.CPlanExtMapper {
~ int currentMaxDpd(long)
~ int countForApplying(long)
~ int countForCustom(long)
~ int countForAdvance(long)
~ int countForAdvance2(long)
~ int countCoupon(long)
~ int getMaxDpdByLoanNumber(String)
~ int countEplanNewLoanNumber(String,Integer)
~ int countForCustomByLoanNumber(String,Integer)
}
class com.welab.loan.finance.model.FinanceRefundDetailExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FinanceRefundDetailExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FinanceRefundDetailExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andDateStrIsNull()
+ Criteria andDateStrIsNotNull()
+ Criteria andDateStrEqualTo(String)
+ Criteria andDateStrNotEqualTo(String)
+ Criteria andDateStrGreaterThan(String)
+ Criteria andDateStrGreaterThanOrEqualTo(String)
+ Criteria andDateStrLessThan(String)
+ Criteria andDateStrLessThanOrEqualTo(String)
+ Criteria andDateStrLike(String)
+ Criteria andDateStrNotLike(String)
+ Criteria andDateStrIn(List<String>)
+ Criteria andDateStrNotIn(List<String>)
+ Criteria andDateStrBetween(String,String)
+ Criteria andDateStrNotBetween(String,String)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andMarkTypeIsNull()
+ Criteria andMarkTypeIsNotNull()
+ Criteria andMarkTypeEqualTo(Byte)
+ Criteria andMarkTypeNotEqualTo(Byte)
+ Criteria andMarkTypeGreaterThan(Byte)
+ Criteria andMarkTypeGreaterThanOrEqualTo(Byte)
+ Criteria andMarkTypeLessThan(Byte)
+ Criteria andMarkTypeLessThanOrEqualTo(Byte)
+ Criteria andMarkTypeIn(List<Byte>)
+ Criteria andMarkTypeNotIn(List<Byte>)
+ Criteria andMarkTypeBetween(Byte,Byte)
+ Criteria andMarkTypeNotBetween(Byte,Byte)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andOrderNoIsNull()
+ Criteria andOrderNoIsNotNull()
+ Criteria andOrderNoEqualTo(String)
+ Criteria andOrderNoNotEqualTo(String)
+ Criteria andOrderNoGreaterThan(String)
+ Criteria andOrderNoGreaterThanOrEqualTo(String)
+ Criteria andOrderNoLessThan(String)
+ Criteria andOrderNoLessThanOrEqualTo(String)
+ Criteria andOrderNoLike(String)
+ Criteria andOrderNoNotLike(String)
+ Criteria andOrderNoIn(List<String>)
+ Criteria andOrderNoNotIn(List<String>)
+ Criteria andOrderNoBetween(String,String)
+ Criteria andOrderNoNotBetween(String,String)
+ Criteria andTransIdIsNull()
+ Criteria andTransIdIsNotNull()
+ Criteria andTransIdEqualTo(String)
+ Criteria andTransIdNotEqualTo(String)
+ Criteria andTransIdGreaterThan(String)
+ Criteria andTransIdGreaterThanOrEqualTo(String)
+ Criteria andTransIdLessThan(String)
+ Criteria andTransIdLessThanOrEqualTo(String)
+ Criteria andTransIdLike(String)
+ Criteria andTransIdNotLike(String)
+ Criteria andTransIdIn(List<String>)
+ Criteria andTransIdNotIn(List<String>)
+ Criteria andTransIdBetween(String,String)
+ Criteria andTransIdNotBetween(String,String)
+ Criteria andDueIndexIsNull()
+ Criteria andDueIndexIsNotNull()
+ Criteria andDueIndexEqualTo(Integer)
+ Criteria andDueIndexNotEqualTo(Integer)
+ Criteria andDueIndexGreaterThan(Integer)
+ Criteria andDueIndexGreaterThanOrEqualTo(Integer)
+ Criteria andDueIndexLessThan(Integer)
+ Criteria andDueIndexLessThanOrEqualTo(Integer)
+ Criteria andDueIndexIn(List<Integer>)
+ Criteria andDueIndexNotIn(List<Integer>)
+ Criteria andDueIndexBetween(Integer,Integer)
+ Criteria andDueIndexNotBetween(Integer,Integer)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Long)
+ Criteria andFundIdNotEqualTo(Long)
+ Criteria andFundIdGreaterThan(Long)
+ Criteria andFundIdGreaterThanOrEqualTo(Long)
+ Criteria andFundIdLessThan(Long)
+ Criteria andFundIdLessThanOrEqualTo(Long)
+ Criteria andFundIdIn(List<Long>)
+ Criteria andFundIdNotIn(List<Long>)
+ Criteria andFundIdBetween(Long,Long)
+ Criteria andFundIdNotBetween(Long,Long)
+ Criteria andFundTypeIsNull()
+ Criteria andFundTypeIsNotNull()
+ Criteria andFundTypeEqualTo(Byte)
+ Criteria andFundTypeNotEqualTo(Byte)
+ Criteria andFundTypeGreaterThan(Byte)
+ Criteria andFundTypeGreaterThanOrEqualTo(Byte)
+ Criteria andFundTypeLessThan(Byte)
+ Criteria andFundTypeLessThanOrEqualTo(Byte)
+ Criteria andFundTypeIn(List<Byte>)
+ Criteria andFundTypeNotIn(List<Byte>)
+ Criteria andFundTypeBetween(Byte,Byte)
+ Criteria andFundTypeNotBetween(Byte,Byte)
+ Criteria andBankCodeIsNull()
+ Criteria andBankCodeIsNotNull()
+ Criteria andBankCodeEqualTo(String)
+ Criteria andBankCodeNotEqualTo(String)
+ Criteria andBankCodeGreaterThan(String)
+ Criteria andBankCodeGreaterThanOrEqualTo(String)
+ Criteria andBankCodeLessThan(String)
+ Criteria andBankCodeLessThanOrEqualTo(String)
+ Criteria andBankCodeLike(String)
+ Criteria andBankCodeNotLike(String)
+ Criteria andBankCodeIn(List<String>)
+ Criteria andBankCodeNotIn(List<String>)
+ Criteria andBankCodeBetween(String,String)
+ Criteria andBankCodeNotBetween(String,String)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andPrincipalFeeIsNull()
+ Criteria andPrincipalFeeIsNotNull()
+ Criteria andPrincipalFeeEqualTo(Long)
+ Criteria andPrincipalFeeNotEqualTo(Long)
+ Criteria andPrincipalFeeGreaterThan(Long)
+ Criteria andPrincipalFeeGreaterThanOrEqualTo(Long)
+ Criteria andPrincipalFeeLessThan(Long)
+ Criteria andPrincipalFeeLessThanOrEqualTo(Long)
+ Criteria andPrincipalFeeIn(List<Long>)
+ Criteria andPrincipalFeeNotIn(List<Long>)
+ Criteria andPrincipalFeeBetween(Long,Long)
+ Criteria andPrincipalFeeNotBetween(Long,Long)
+ Criteria andAdminFeeIsNull()
+ Criteria andAdminFeeIsNotNull()
+ Criteria andAdminFeeEqualTo(Long)
+ Criteria andAdminFeeNotEqualTo(Long)
+ Criteria andAdminFeeGreaterThan(Long)
+ Criteria andAdminFeeGreaterThanOrEqualTo(Long)
+ Criteria andAdminFeeLessThan(Long)
+ Criteria andAdminFeeLessThanOrEqualTo(Long)
+ Criteria andAdminFeeIn(List<Long>)
+ Criteria andAdminFeeNotIn(List<Long>)
+ Criteria andAdminFeeBetween(Long,Long)
+ Criteria andAdminFeeNotBetween(Long,Long)
+ Criteria andFundInterestFeeIsNull()
+ Criteria andFundInterestFeeIsNotNull()
+ Criteria andFundInterestFeeEqualTo(Long)
+ Criteria andFundInterestFeeNotEqualTo(Long)
+ Criteria andFundInterestFeeGreaterThan(Long)
+ Criteria andFundInterestFeeGreaterThanOrEqualTo(Long)
+ Criteria andFundInterestFeeLessThan(Long)
+ Criteria andFundInterestFeeLessThanOrEqualTo(Long)
+ Criteria andFundInterestFeeIn(List<Long>)
+ Criteria andFundInterestFeeNotIn(List<Long>)
+ Criteria andFundInterestFeeBetween(Long,Long)
+ Criteria andFundInterestFeeNotBetween(Long,Long)
+ Criteria andServiceFeeIsNull()
+ Criteria andServiceFeeIsNotNull()
+ Criteria andServiceFeeEqualTo(Long)
+ Criteria andServiceFeeNotEqualTo(Long)
+ Criteria andServiceFeeGreaterThan(Long)
+ Criteria andServiceFeeGreaterThanOrEqualTo(Long)
+ Criteria andServiceFeeLessThan(Long)
+ Criteria andServiceFeeLessThanOrEqualTo(Long)
+ Criteria andServiceFeeIn(List<Long>)
+ Criteria andServiceFeeNotIn(List<Long>)
+ Criteria andServiceFeeBetween(Long,Long)
+ Criteria andServiceFeeNotBetween(Long,Long)
+ Criteria andProvisionFeeIsNull()
+ Criteria andProvisionFeeIsNotNull()
+ Criteria andProvisionFeeEqualTo(Long)
+ Criteria andProvisionFeeNotEqualTo(Long)
+ Criteria andProvisionFeeGreaterThan(Long)
+ Criteria andProvisionFeeGreaterThanOrEqualTo(Long)
+ Criteria andProvisionFeeLessThan(Long)
+ Criteria andProvisionFeeLessThanOrEqualTo(Long)
+ Criteria andProvisionFeeIn(List<Long>)
+ Criteria andProvisionFeeNotIn(List<Long>)
+ Criteria andProvisionFeeBetween(Long,Long)
+ Criteria andProvisionFeeNotBetween(Long,Long)
+ Criteria andLateFeeIsNull()
+ Criteria andLateFeeIsNotNull()
+ Criteria andLateFeeEqualTo(Long)
+ Criteria andLateFeeNotEqualTo(Long)
+ Criteria andLateFeeGreaterThan(Long)
+ Criteria andLateFeeGreaterThanOrEqualTo(Long)
+ Criteria andLateFeeLessThan(Long)
+ Criteria andLateFeeLessThanOrEqualTo(Long)
+ Criteria andLateFeeIn(List<Long>)
+ Criteria andLateFeeNotIn(List<Long>)
+ Criteria andLateFeeBetween(Long,Long)
+ Criteria andLateFeeNotBetween(Long,Long)
+ Criteria andCarryingFeeIsNull()
+ Criteria andCarryingFeeIsNotNull()
+ Criteria andCarryingFeeEqualTo(Long)
+ Criteria andCarryingFeeNotEqualTo(Long)
+ Criteria andCarryingFeeGreaterThan(Long)
+ Criteria andCarryingFeeGreaterThanOrEqualTo(Long)
+ Criteria andCarryingFeeLessThan(Long)
+ Criteria andCarryingFeeLessThanOrEqualTo(Long)
+ Criteria andCarryingFeeIn(List<Long>)
+ Criteria andCarryingFeeNotIn(List<Long>)
+ Criteria andCarryingFeeBetween(Long,Long)
+ Criteria andCarryingFeeNotBetween(Long,Long)
+ Criteria andFastPayFeeIsNull()
+ Criteria andFastPayFeeIsNotNull()
+ Criteria andFastPayFeeEqualTo(Long)
+ Criteria andFastPayFeeNotEqualTo(Long)
+ Criteria andFastPayFeeGreaterThan(Long)
+ Criteria andFastPayFeeGreaterThanOrEqualTo(Long)
+ Criteria andFastPayFeeLessThan(Long)
+ Criteria andFastPayFeeLessThanOrEqualTo(Long)
+ Criteria andFastPayFeeIn(List<Long>)
+ Criteria andFastPayFeeNotIn(List<Long>)
+ Criteria andFastPayFeeBetween(Long,Long)
+ Criteria andFastPayFeeNotBetween(Long,Long)
+ Criteria andVatFeeIsNull()
+ Criteria andVatFeeIsNotNull()
+ Criteria andVatFeeEqualTo(Long)
+ Criteria andVatFeeNotEqualTo(Long)
+ Criteria andVatFeeGreaterThan(Long)
+ Criteria andVatFeeGreaterThanOrEqualTo(Long)
+ Criteria andVatFeeLessThan(Long)
+ Criteria andVatFeeLessThanOrEqualTo(Long)
+ Criteria andVatFeeIn(List<Long>)
+ Criteria andVatFeeNotIn(List<Long>)
+ Criteria andVatFeeBetween(Long,Long)
+ Criteria andVatFeeNotBetween(Long,Long)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.FinanceRefundDetailExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FinanceRefundDetailExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.vo.AhassLimitVO {
- String region
- String customerId
- String customerName
- String agentPic
- String mobile
- String email
- Long useMoney
- Long residueMoney
- Long sumMoney
}
class com.welab.loan.finance.app.service.credit.CreditProductListService {
+ List<TagProductVO> matchProduct(CreditUserAccountExt)
}
class com.welab.loan.finance.app.command.credit.CreditReLoanImportCmdExe {
- BaseLoanDetailService baseLoanDetailService
- CreditUserAccountServiceImpl creditUserAccountService
- BaseCreditUserLoanService baseCreditUserLoanService
- BaseFinanceLendService baseFinanceLendService
- BaseRabbitTemplate baseRabbitTemplate
- BaseCreditReLoanService baseCreditReLoanService
+ ImportResVO excute(CreditReLoanImportVO)
- ImportResVO doImport(CreditReLoanImportVO,List<CreditReLoan>)
- int closeLoanHand(CreditReLoan,LoanDetail)
- int timeoutLoanHand(CreditReLoan,LoanDetail)
- boolean handCreditLoan(CreditReLoan,boolean)
}
class com.welab.loan.finance.vo.rebook.RebookCheckVO {
- {static} long serialVersionUID
- Boolean result
- Date latestTime
- Boolean enableAbTest
}
class com.welab.loan.finance.test.template.RepaymentTest {
+ void repay()
}
class com.welab.loan.finance.core.dto.transform.MulLoanDTO {
- String loanNumber
- String promotionCode
}
class com.welab.loan.finance.job.LoanDuesSynJob {
- int PAGESIZE
- LoanDetailMapper loanDetailMapper
- BaseFinanceDuesService baseFinanceDuesService
- LoanDetailExtMapper detailExtMapper
+ void execute(ShardingContext)
+ void synLoanDetail(LoanDetail)
}
class com.welab.loan.finance.rabbitmq.LoanWaitFundConsumer {
- BaseLoanService baseLoanService
- CreditUserAccountServiceImpl creditUserAccountServiceImpl
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- ApolloUtils apolloUtils
+ void onMessage(Message)
+ void waitFund(String)
}
class com.welab.loan.finance.dto.UfiByTagDTO {
- String tag
- Long count
}
class com.welab.loan.finance.dto.plan.TryEPlanDTO {
- {static} long serialVersionUID
- Integer reason
- String otpName
- List<TryEPlanDetailDTO> tryEPlanDetailList
}
interface com.welab.loan.finance.mapper.ext.TagExpressInternalFunctionMapper {
~ Long disbursedCount(Map<String,Object>)
~ Long closeDueCount(Map<String,Object>)
~ Long closeLoanCount(Map<String,Object>)
~ Long repaymentAmount(Map<String,Object>)
~ Long repaymentCount(Map<String,Object>)
~ Long repaymentLoanNumberCount(Map<String,Object>)
~ Long getDpd(Map<String,Object>)
~ Long getFirstMaxDpd(Map<String,Object>)
~ String getLastSalaryDay(Long)
~ List<Date> getDueDateList(Map<String,Object>)
~ Long repaymentAfterApprovalCount(Map<String,Object>)
~ Long repaymentAfterApprovalCountNew(Map<String,Object>)
~ Long collectionPlanCount(Map<String,Object>)
~ Long tagUpdateTrackCount(Map<String,Object>)
~ List<String> getRepaymentLoanNumbers(Map<String,Object>)
~ Long getEplanLoanCount(Map<String,Object>)
~ Date getLastEplanCloseDate(Map<String,Object>)
}
class com.welab.loan.finance.model.BigFieldParamExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> BigFieldParamExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.BigFieldParamExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.BigFieldParamExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.BigFieldParamExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
interface com.welab.loan.finance.enums.InsuranceRecordEnum {
}
enum com.welab.loan.finance.enums.TypeEnum {
+  POLICY
+  CLAIM
+  POLICY_CLAIM
- byte value
- String name
- String desc
+ {static} InsuranceRecordEnum.TypeEnum getByValue(byte)
}
class com.welab.loan.finance.vo.RestoreCreditVO {
- String loanNumber
- Long amount
- String remark
+ <<Create>> RestoreCreditVO()
+ <<Create>> RestoreCreditVO(String)
}
class com.welab.loan.finance.test.DueTest {
- DuesExtMapper duesExtMapper
~ DuesService duesService
~ BaseDuesService baseDuesService
~ DuesCalculationMapper duesCalculationMapper
- LoanInfoConsumer loanInfoConsumer
- LoanDetailExtMapper loanDetailExtMapper
- IQueryDuesService iQueryDuesService
- DuesQueryService duesQueryService
- CalculatorOverdueJob calculatorOverdueJob
- BaseLoanDetailService baseLoanDetailService
- BaseLoanDetailExtendService baseLoanDetailExtendService
- NSCostService newCostService
+ void lfDPD()
+ void duesTest2()
+ void createDues()
+ void calculation()
+ void getDues()
+ void chargeback()
+ void dues()
+ void tryPaymentScheduleByLater()
+ void confirmRepayment()
+ void findRepayInfo()
+ void findDues()
+ void findNowDues()
+ void getActualAmount()
+ void queryTotalReainingAmountByLoanId()
+ void testDues()
+ void getAdminFee()
+ void advanceSchedule()
+ void duesTest()
+ void duest()
+ void test()
+ void test1()
}
class com.welab.loan.finance.app.manager.SignMethodManager {
- BaseFinanceConfigService baseFinanceConfigService
- BaseSignMethodOperateHistoryService baseSignMethodOperateHistoryService
- UserServiceFacade userServiceFacade
+ Response saveSignMethodConfig(Long,List<SignMethodConfigVO>)
+ Response<List<SignHistoryVO>> getSignHistory(String)
+ List<FinanceConfigVO> getSignConfig(String)
- Response checkConfig(List<SignMethodConfigVO>)
}
class com.welab.loan.finance.model.CreditActivityAbTestGroupLoanRelationExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditActivityAbTestGroupLoanRelationExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditActivityAbTestGroupLoanRelationExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andAbTestIdIsNull()
+ Criteria andAbTestIdIsNotNull()
+ Criteria andAbTestIdEqualTo(Long)
+ Criteria andAbTestIdNotEqualTo(Long)
+ Criteria andAbTestIdGreaterThan(Long)
+ Criteria andAbTestIdGreaterThanOrEqualTo(Long)
+ Criteria andAbTestIdLessThan(Long)
+ Criteria andAbTestIdLessThanOrEqualTo(Long)
+ Criteria andAbTestIdIn(List<Long>)
+ Criteria andAbTestIdNotIn(List<Long>)
+ Criteria andAbTestIdBetween(Long,Long)
+ Criteria andAbTestIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andGroupTypeIsNull()
+ Criteria andGroupTypeIsNotNull()
+ Criteria andGroupTypeEqualTo(Byte)
+ Criteria andGroupTypeNotEqualTo(Byte)
+ Criteria andGroupTypeGreaterThan(Byte)
+ Criteria andGroupTypeGreaterThanOrEqualTo(Byte)
+ Criteria andGroupTypeLessThan(Byte)
+ Criteria andGroupTypeLessThanOrEqualTo(Byte)
+ Criteria andGroupTypeIn(List<Byte>)
+ Criteria andGroupTypeNotIn(List<Byte>)
+ Criteria andGroupTypeBetween(Byte,Byte)
+ Criteria andGroupTypeNotBetween(Byte,Byte)
}
class com.welab.loan.finance.model.CreditActivityAbTestGroupLoanRelationExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.CreditActivityAbTestGroupLoanRelationExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.service.core.BaseBusinessCalendarService {
- BusinessCalendarsMapper businessMapper
+ boolean isBusinessDay(LocalDate)
}
class com.welab.loan.finance.vo.CreditReLoanQryVO {
- String loanNumber
}
enum com.welab.loan.finance.enums.FundTypeEnum {
+  SIMULATE
+  BNI
+  FASPAY
+  PERMATA
- Byte fundType
- String fundTypeName
~ <<Create>> FundTypeEnum(Byte,String)
+ Byte getFundType()
+ String getFundTypeName()
}
interface com.welab.loan.finance.service.ILoanQueryService {
~ Response<PageInfo<RepaymentLoanDTO>> findRepaymentLoans(LoanQry)
~ Response<Long> countLoanQry(LoanQry)
~ Response<Long> sumUnFinishLoanAmount(UnFinishLoanAmountQry)
~ Response<Map<String,Boolean>> isDisbursed(List<String>)
~ Long countClMc(Long,Date,Date,Integer)
}
interface com.welab.loan.finance.mapper.UVFRepossessRepaymentMapper {
~ int countByExample(UVFRepossessRepaymentExample)
~ int deleteByExample(UVFRepossessRepaymentExample)
~ int deleteByPrimaryKey(Long)
~ int insert(UVFRepossessRepayment)
~ int insertSelective(UVFRepossessRepayment)
~ List<UVFRepossessRepayment> selectByExample(UVFRepossessRepaymentExample)
~ UVFRepossessRepayment selectByPrimaryKey(Long)
~ int updateByExampleSelective(UVFRepossessRepayment,UVFRepossessRepaymentExample)
~ int updateByExample(UVFRepossessRepayment,UVFRepossessRepaymentExample)
~ int updateByPrimaryKeySelective(UVFRepossessRepayment)
~ int updateByPrimaryKey(UVFRepossessRepayment)
}
class com.welab.loan.finance.vo.CollectionProgramVO {
- String loanNumber
- String lastProgramCode
- String canProgramCodes
- Long cPlanAmountDue
- String cPlanLateFeeDiscount
- Long cPlanServiceFeeProgram
- Long cPlanRestAmount
- Long cPlanCarryingFee
- Long cPlanMinPaymentAmount
- Long cPlanNextRepaymentAmount
- Date cPlanNextDueDate
- Long fPlanTotalRepaymentAmount
- Long fPlanOriginalPrincipalAmount
- String fPlanPrincipalDiscount
- String fPlanLateFeeDiscount
- String fPlanPlatformFeeDiscount
- Long fPlanInterestFunder
- Long fPlanCarryingFee
- Long fPlanActualRepaymentAmount
- Long ePlanAmountDue
- String ePlanMinLateFeeDiscount
- Long ePlanMinPaymentAmount
- Long ePlanNewAmountDue
- Long ePlanMinMonthlyRepaymentAmount
- String ePlanMinTenor
- Long ePlanMinServiceFee
- Long ePlanMinPrincipal
- Long ePlanMinCarryingFee
- Long ePlanMaxMonthlyRepaymentAmount
- String ePlanMaxTenor
- Long ePlanMaxServiceFee
- Long ePlanMaxPrincipal
- Long ePlanMaxCarryingFee
- Date ePlanNextDueDate
}
class com.welab.loan.finance.model.ReportDetailContractExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> ReportDetailContractExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.ReportDetailContractExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andApplNoIsNull()
+ Criteria andApplNoIsNotNull()
+ Criteria andApplNoEqualTo(String)
+ Criteria andApplNoNotEqualTo(String)
+ Criteria andApplNoGreaterThan(String)
+ Criteria andApplNoGreaterThanOrEqualTo(String)
+ Criteria andApplNoLessThan(String)
+ Criteria andApplNoLessThanOrEqualTo(String)
+ Criteria andApplNoLike(String)
+ Criteria andApplNoNotLike(String)
+ Criteria andApplNoIn(List<String>)
+ Criteria andApplNoNotIn(List<String>)
+ Criteria andApplNoBetween(String,String)
+ Criteria andApplNoNotBetween(String,String)
+ Criteria andApplDateIsNull()
+ Criteria andApplDateIsNotNull()
+ Criteria andApplDateEqualTo(String)
+ Criteria andApplDateNotEqualTo(String)
+ Criteria andApplDateGreaterThan(String)
+ Criteria andApplDateGreaterThanOrEqualTo(String)
+ Criteria andApplDateLessThan(String)
+ Criteria andApplDateLessThanOrEqualTo(String)
+ Criteria andApplDateLike(String)
+ Criteria andApplDateNotLike(String)
+ Criteria andApplDateIn(List<String>)
+ Criteria andApplDateNotIn(List<String>)
+ Criteria andApplDateBetween(String,String)
+ Criteria andApplDateNotBetween(String,String)
+ Criteria andContractNoIsNull()
+ Criteria andContractNoIsNotNull()
+ Criteria andContractNoEqualTo(String)
+ Criteria andContractNoNotEqualTo(String)
+ Criteria andContractNoGreaterThan(String)
+ Criteria andContractNoGreaterThanOrEqualTo(String)
+ Criteria andContractNoLessThan(String)
+ Criteria andContractNoLessThanOrEqualTo(String)
+ Criteria andContractNoLike(String)
+ Criteria andContractNoNotLike(String)
+ Criteria andContractNoIn(List<String>)
+ Criteria andContractNoNotIn(List<String>)
+ Criteria andContractNoBetween(String,String)
+ Criteria andContractNoNotBetween(String,String)
+ Criteria andContractActiveDateIsNull()
+ Criteria andContractActiveDateIsNotNull()
+ Criteria andContractActiveDateEqualTo(String)
+ Criteria andContractActiveDateNotEqualTo(String)
+ Criteria andContractActiveDateGreaterThan(String)
+ Criteria andContractActiveDateGreaterThanOrEqualTo(String)
+ Criteria andContractActiveDateLessThan(String)
+ Criteria andContractActiveDateLessThanOrEqualTo(String)
+ Criteria andContractActiveDateLike(String)
+ Criteria andContractActiveDateNotLike(String)
+ Criteria andContractActiveDateIn(List<String>)
+ Criteria andContractActiveDateNotIn(List<String>)
+ Criteria andContractActiveDateBetween(String,String)
+ Criteria andContractActiveDateNotBetween(String,String)
+ Criteria andCustNoIsNull()
+ Criteria andCustNoIsNotNull()
+ Criteria andCustNoEqualTo(String)
+ Criteria andCustNoNotEqualTo(String)
+ Criteria andCustNoGreaterThan(String)
+ Criteria andCustNoGreaterThanOrEqualTo(String)
+ Criteria andCustNoLessThan(String)
+ Criteria andCustNoLessThanOrEqualTo(String)
+ Criteria andCustNoLike(String)
+ Criteria andCustNoNotLike(String)
+ Criteria andCustNoIn(List<String>)
+ Criteria andCustNoNotIn(List<String>)
+ Criteria andCustNoBetween(String,String)
+ Criteria andCustNoNotBetween(String,String)
+ Criteria andCustNameIsNull()
+ Criteria andCustNameIsNotNull()
+ Criteria andCustNameEqualTo(String)
+ Criteria andCustNameNotEqualTo(String)
+ Criteria andCustNameGreaterThan(String)
+ Criteria andCustNameGreaterThanOrEqualTo(String)
+ Criteria andCustNameLessThan(String)
+ Criteria andCustNameLessThanOrEqualTo(String)
+ Criteria andCustNameLike(String)
+ Criteria andCustNameNotLike(String)
+ Criteria andCustNameIn(List<String>)
+ Criteria andCustNameNotIn(List<String>)
+ Criteria andCustNameBetween(String,String)
+ Criteria andCustNameNotBetween(String,String)
+ Criteria andBussUnitIsNull()
+ Criteria andBussUnitIsNotNull()
+ Criteria andBussUnitEqualTo(String)
+ Criteria andBussUnitNotEqualTo(String)
+ Criteria andBussUnitGreaterThan(String)
+ Criteria andBussUnitGreaterThanOrEqualTo(String)
+ Criteria andBussUnitLessThan(String)
+ Criteria andBussUnitLessThanOrEqualTo(String)
+ Criteria andBussUnitLike(String)
+ Criteria andBussUnitNotLike(String)
+ Criteria andBussUnitIn(List<String>)
+ Criteria andBussUnitNotIn(List<String>)
+ Criteria andBussUnitBetween(String,String)
+ Criteria andBussUnitNotBetween(String,String)
+ Criteria andSipGradeIsNull()
+ Criteria andSipGradeIsNotNull()
+ Criteria andSipGradeEqualTo(String)
+ Criteria andSipGradeNotEqualTo(String)
+ Criteria andSipGradeGreaterThan(String)
+ Criteria andSipGradeGreaterThanOrEqualTo(String)
+ Criteria andSipGradeLessThan(String)
+ Criteria andSipGradeLessThanOrEqualTo(String)
+ Criteria andSipGradeLike(String)
+ Criteria andSipGradeNotLike(String)
+ Criteria andSipGradeIn(List<String>)
+ Criteria andSipGradeNotIn(List<String>)
+ Criteria andSipGradeBetween(String,String)
+ Criteria andSipGradeNotBetween(String,String)
+ Criteria andCoriGradeIsNull()
+ Criteria andCoriGradeIsNotNull()
+ Criteria andCoriGradeEqualTo(String)
+ Criteria andCoriGradeNotEqualTo(String)
+ Criteria andCoriGradeGreaterThan(String)
+ Criteria andCoriGradeGreaterThanOrEqualTo(String)
+ Criteria andCoriGradeLessThan(String)
+ Criteria andCoriGradeLessThanOrEqualTo(String)
+ Criteria andCoriGradeLike(String)
+ Criteria andCoriGradeNotLike(String)
+ Criteria andCoriGradeIn(List<String>)
+ Criteria andCoriGradeNotIn(List<String>)
+ Criteria andCoriGradeBetween(String,String)
+ Criteria andCoriGradeNotBetween(String,String)
+ Criteria andObjBrandIsNull()
+ Criteria andObjBrandIsNotNull()
+ Criteria andObjBrandEqualTo(String)
+ Criteria andObjBrandNotEqualTo(String)
+ Criteria andObjBrandGreaterThan(String)
+ Criteria andObjBrandGreaterThanOrEqualTo(String)
+ Criteria andObjBrandLessThan(String)
+ Criteria andObjBrandLessThanOrEqualTo(String)
+ Criteria andObjBrandLike(String)
+ Criteria andObjBrandNotLike(String)
+ Criteria andObjBrandIn(List<String>)
+ Criteria andObjBrandNotIn(List<String>)
+ Criteria andObjBrandBetween(String,String)
+ Criteria andObjBrandNotBetween(String,String)
+ Criteria andIntrTypeIsNull()
+ Criteria andIntrTypeIsNotNull()
+ Criteria andIntrTypeEqualTo(String)
+ Criteria andIntrTypeNotEqualTo(String)
+ Criteria andIntrTypeGreaterThan(String)
+ Criteria andIntrTypeGreaterThanOrEqualTo(String)
+ Criteria andIntrTypeLessThan(String)
+ Criteria andIntrTypeLessThanOrEqualTo(String)
+ Criteria andIntrTypeLike(String)
+ Criteria andIntrTypeNotLike(String)
+ Criteria andIntrTypeIn(List<String>)
+ Criteria andIntrTypeNotIn(List<String>)
+ Criteria andIntrTypeBetween(String,String)
+ Criteria andIntrTypeNotBetween(String,String)
+ Criteria andPctEffIsNull()
+ Criteria andPctEffIsNotNull()
+ Criteria andPctEffEqualTo(String)
+ Criteria andPctEffNotEqualTo(String)
+ Criteria andPctEffGreaterThan(String)
+ Criteria andPctEffGreaterThanOrEqualTo(String)
+ Criteria andPctEffLessThan(String)
+ Criteria andPctEffLessThanOrEqualTo(String)
+ Criteria andPctEffLike(String)
+ Criteria andPctEffNotLike(String)
+ Criteria andPctEffIn(List<String>)
+ Criteria andPctEffNotIn(List<String>)
+ Criteria andPctEffBetween(String,String)
+ Criteria andPctEffNotBetween(String,String)
+ Criteria andAdvArrearIsNull()
+ Criteria andAdvArrearIsNotNull()
+ Criteria andAdvArrearEqualTo(String)
+ Criteria andAdvArrearNotEqualTo(String)
+ Criteria andAdvArrearGreaterThan(String)
+ Criteria andAdvArrearGreaterThanOrEqualTo(String)
+ Criteria andAdvArrearLessThan(String)
+ Criteria andAdvArrearLessThanOrEqualTo(String)
+ Criteria andAdvArrearLike(String)
+ Criteria andAdvArrearNotLike(String)
+ Criteria andAdvArrearIn(List<String>)
+ Criteria andAdvArrearNotIn(List<String>)
+ Criteria andAdvArrearBetween(String,String)
+ Criteria andAdvArrearNotBetween(String,String)
+ Criteria andRoTypeIsNull()
+ Criteria andRoTypeIsNotNull()
+ Criteria andRoTypeEqualTo(String)
+ Criteria andRoTypeNotEqualTo(String)
+ Criteria andRoTypeGreaterThan(String)
+ Criteria andRoTypeGreaterThanOrEqualTo(String)
+ Criteria andRoTypeLessThan(String)
+ Criteria andRoTypeLessThanOrEqualTo(String)
+ Criteria andRoTypeLike(String)
+ Criteria andRoTypeNotLike(String)
+ Criteria andRoTypeIn(List<String>)
+ Criteria andRoTypeNotIn(List<String>)
+ Criteria andRoTypeBetween(String,String)
+ Criteria andRoTypeNotBetween(String,String)
+ Criteria andObjDescIsNull()
+ Criteria andObjDescIsNotNull()
+ Criteria andObjDescEqualTo(String)
+ Criteria andObjDescNotEqualTo(String)
+ Criteria andObjDescGreaterThan(String)
+ Criteria andObjDescGreaterThanOrEqualTo(String)
+ Criteria andObjDescLessThan(String)
+ Criteria andObjDescLessThanOrEqualTo(String)
+ Criteria andObjDescLike(String)
+ Criteria andObjDescNotLike(String)
+ Criteria andObjDescIn(List<String>)
+ Criteria andObjDescNotIn(List<String>)
+ Criteria andObjDescBetween(String,String)
+ Criteria andObjDescNotBetween(String,String)
+ Criteria andPromoDtlIdIsNull()
+ Criteria andPromoDtlIdIsNotNull()
+ Criteria andPromoDtlIdEqualTo(String)
+ Criteria andPromoDtlIdNotEqualTo(String)
+ Criteria andPromoDtlIdGreaterThan(String)
+ Criteria andPromoDtlIdGreaterThanOrEqualTo(String)
+ Criteria andPromoDtlIdLessThan(String)
+ Criteria andPromoDtlIdLessThanOrEqualTo(String)
+ Criteria andPromoDtlIdLike(String)
+ Criteria andPromoDtlIdNotLike(String)
+ Criteria andPromoDtlIdIn(List<String>)
+ Criteria andPromoDtlIdNotIn(List<String>)
+ Criteria andPromoDtlIdBetween(String,String)
+ Criteria andPromoDtlIdNotBetween(String,String)
+ Criteria andPeriodeIsNull()
+ Criteria andPeriodeIsNotNull()
+ Criteria andPeriodeEqualTo(String)
+ Criteria andPeriodeNotEqualTo(String)
+ Criteria andPeriodeGreaterThan(String)
+ Criteria andPeriodeGreaterThanOrEqualTo(String)
+ Criteria andPeriodeLessThan(String)
+ Criteria andPeriodeLessThanOrEqualTo(String)
+ Criteria andPeriodeLike(String)
+ Criteria andPeriodeNotLike(String)
+ Criteria andPeriodeIn(List<String>)
+ Criteria andPeriodeNotIn(List<String>)
+ Criteria andPeriodeBetween(String,String)
+ Criteria andPeriodeNotBetween(String,String)
+ Criteria andLtvIsNull()
+ Criteria andLtvIsNotNull()
+ Criteria andLtvEqualTo(String)
+ Criteria andLtvNotEqualTo(String)
+ Criteria andLtvGreaterThan(String)
+ Criteria andLtvGreaterThanOrEqualTo(String)
+ Criteria andLtvLessThan(String)
+ Criteria andLtvLessThanOrEqualTo(String)
+ Criteria andLtvLike(String)
+ Criteria andLtvNotLike(String)
+ Criteria andLtvIn(List<String>)
+ Criteria andLtvNotIn(List<String>)
+ Criteria andLtvBetween(String,String)
+ Criteria andLtvNotBetween(String,String)
+ Criteria andBpkbSameNameIsNull()
+ Criteria andBpkbSameNameIsNotNull()
+ Criteria andBpkbSameNameEqualTo(String)
+ Criteria andBpkbSameNameNotEqualTo(String)
+ Criteria andBpkbSameNameGreaterThan(String)
+ Criteria andBpkbSameNameGreaterThanOrEqualTo(String)
+ Criteria andBpkbSameNameLessThan(String)
+ Criteria andBpkbSameNameLessThanOrEqualTo(String)
+ Criteria andBpkbSameNameLike(String)
+ Criteria andBpkbSameNameNotLike(String)
+ Criteria andBpkbSameNameIn(List<String>)
+ Criteria andBpkbSameNameNotIn(List<String>)
+ Criteria andBpkbSameNameBetween(String,String)
+ Criteria andBpkbSameNameNotBetween(String,String)
+ Criteria andFlagAwdaIsNull()
+ Criteria andFlagAwdaIsNotNull()
+ Criteria andFlagAwdaEqualTo(String)
+ Criteria andFlagAwdaNotEqualTo(String)
+ Criteria andFlagAwdaGreaterThan(String)
+ Criteria andFlagAwdaGreaterThanOrEqualTo(String)
+ Criteria andFlagAwdaLessThan(String)
+ Criteria andFlagAwdaLessThanOrEqualTo(String)
+ Criteria andFlagAwdaLike(String)
+ Criteria andFlagAwdaNotLike(String)
+ Criteria andFlagAwdaIn(List<String>)
+ Criteria andFlagAwdaNotIn(List<String>)
+ Criteria andFlagAwdaBetween(String,String)
+ Criteria andFlagAwdaNotBetween(String,String)
}
class com.welab.loan.finance.model.ReportDetailContractExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.ReportDetailContractExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.app.command.vat.VatDuesInitCmdExe {
- BaseDuesService baseDuesService
- VatCostProvider vatCostProvider
- JdbcTemplate jdbcTemplate
- BaseRabbitTemplate baseRabbitTemplate
- ConcurrentHashMap<Long,Long> userIdMap
- String tablePrefix
- boolean enableSync
- int batchSize
- int INITIAL_CAPACITY
- int CORE_POOL_SIZE
- BigDecimal VAT_RATE
- {static} Set<Long> EXCLUDE_CARRYING_FEE_ORG_ID
+ void excute(JSONObject)
- void initVat(Date,List<String>)
- List<String> loadAllInitLoanNumbers(Date)
- void calVatAmount(Dues,Map<DueTypeEnum,Long>)
- void buildNewDues(List<Dues>,Map<DueTypeEnum,Long>,Dues)
- void deleteVatDues(List<String>,Date)
+ void batchUpdateRepayIndex(List<Map<String,Object>>)
+ void batchUpdateCarryingFee(List<Map<String,Object>>)
+ void batchInsertDues(List<Dues>)
+ void synDues(List<SynDuesDTO>)
+ void synVa(ConcurrentHashMap<Long,Long>)
}
class com.welab.loan.finance.dto.cmd.ApplyCPlanCmd {
- List<String> loanNumbers
- Long userId
- Long customAmount
- Integer reason
- Integer ptpDay
- String optName
- Date expireDate
- BigDecimal disLateFeeRatio
}
class com.welab.loan.finance.test.dues.DuesTest {
- IModLateService modLateService
- LendBusiService lendBusiService
- DuesService duesService
- LoanOverdueInfoExtMapper loanOverdueInfoExtMapper
- BaseFinanceDuesService baseFinanceDuesService
- LoanTimeoutConfigService loanTimeoutConfigService
- LoanInfoConsumer loanInfoConsumer
- BaseLoanDetailService loanDetailService
- BaseLoanDetailExtendService loanDetailExtendService
- BaseDuesService baseDuesService
- LateFeeUpdateService lateFeeUpdateService
+ void testCessie()
+ void testDues()
+ void testGetTimeOutConfig()
+ void findListRepayInfoBycode()
+ void testDuesList()
+ void findUserRepayAmount()
+ void duesForLong()
+ void duesForNs()
+ void findTravelokaDues()
+ void findMergeDues()
+ void findUserRepayAmountByUser()
+ void findSave()
+ void testK()
+ void testAn()
+ void ePlanDuesTest()
+ void ePlanDuesTest2()
+ void paymentSchedule()
+ void newOrder()
+ void testAstrapayDues()
+ void updateLateFee()
+ void updateTbDuesAndLateFee()
}
class com.welab.loan.finance.model.UvfFileRepayment {
- Long id
- Date createTime
- Date updatedAt
- Boolean deleted
- String taskId
- String field1
- String field2
- String field3
- String field4
- String field5
- String field6
+ Long getId()
+ void setId(Long)
+ Date getCreateTime()
+ void setCreateTime(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ String getTaskId()
+ void setTaskId(String)
+ String getField1()
+ void setField1(String)
+ String getField2()
+ void setField2(String)
+ String getField3()
+ void setField3(String)
+ String getField4()
+ void setField4(String)
+ String getField5()
+ void setField5(String)
+ String getField6()
+ void setField6(String)
}
class com.welab.loan.finance.model.FinanceUserAccountDetail {
- Long id
- Date createAt
- Date updateAt
- String type
- Long accountId
- Long amount
- Long operationAmount
- String transId
- String loanNum
- Byte origin
+ Long getId()
+ void setId(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ String getType()
+ void setType(String)
+ Long getAccountId()
+ void setAccountId(Long)
+ Long getAmount()
+ void setAmount(Long)
+ Long getOperationAmount()
+ void setOperationAmount(Long)
+ String getTransId()
+ void setTransId(String)
+ String getLoanNum()
+ void setLoanNum(String)
+ Byte getOrigin()
+ void setOrigin(Byte)
}
class com.welab.loan.finance.job.CashLoanLendReversalJob {
+ {static} String ORDER_PREFIX
+ {static} int[] FUND_TO_LOAN
+ {static} int[] VAT_TO_LOAN
+ {static} int[] AWDA_TO_LOAN
+ {static} int[] LOAN_TO_FUND
# String getOrderPrefix()
# ReversalBill buildReversalBill(ReversalGroup)
}
class com.welab.loan.finance.service.core.BaseLoanCodeService {
- LoanCodeMapper mapper
- LoanCodeExtMapper extMapper
- ILoanUserRepay loanUserRepay
+ void batchInsert(int)
+ LoanCode selectByType(String,TransTypeEnum)
+ LoanCode selectByType(String,Long,TransTypeEnum)
+ LoanCode selectLoanCode(String)
+ LoanCode selectOne()
+ int updateLoanCode(LoanCode)
+ int updateInvalidCode(String)
+ String updateLoan(String,Long,TransTypeEnum)
+ String updateLoanByList(Long,Long,TransTypeEnum)
+ String selectOrUpdateLoanByType(String,Long,TransTypeEnum)
+ String updateListByType(Long,List<String>,TransTypeEnum)
- void createLoanCode()
}
class com.welab.loan.finance.job.DelayLendJob {
- int PAGE_SIZE
- LoanDelayBusiService loanDelayBusiSevice
+ void execute(ShardingContext)
# void handerList(List<LoanDelay>)
}
class com.welab.loan.finance.core.dto.va.SynAccountDTO {
- Long userId
- Long amount
- String loanNumber
- String name
- String mobile
- String email
- String key
- String externalId
- boolean isCreate
- int num
- Boolean del
- Long userAdvancePaymentId
}
class com.welab.loan.finance.vo.repayment.DuesAndRepaymentOperateVO {
- {static} long serialVersionUID
- String recordData
- String operateData
- String loanNumber
- String docId
}
class com.welab.loan.finance.app.command.tb.lend.transfer.impl.TbDefaultTransferService {
- TbPayService tbPayService
+ void doCreateTransferTrading(TbBatch,Long)
- void toCompany(TbBatch,Long)
+ String getKey()
}
class com.welab.loan.finance.dto.DueSimpleDTO {
- Long id
- String loanNumber
- Integer dueIndex
}
class com.welab.loan.finance.app.base.credit.BaseCreditActivityAbTestGroupUserTagRelationService {
- CreditActivityAbTestGroupUserTagRelationExtMapper creditActivityAbTestGroupUserTagRelationExtMapper
+ int insertSelective(CreditActivityAbTestGroupUserTagRelation)
+ List<CreditActivityAbTestGroupUserTagRelation> selectByTestGroupId(Long)
+ List<CreditActivityAbTestGroupUserTagRelation> selectByTestGroupIdAndTag(Long,String)
+ int batchInsert(List<CreditActivityAbTestGroupUserTagRelation>)
+ int updateByPrimaryKeySelective(CreditActivityAbTestGroupUserTagRelation)
+ List<CreditActivityAbTestGroupUserTagRelation> findTagUser(Long,List<String>)
}
class com.welab.loan.finance.dto.FPlansContractDTO {
- {static} long serialVersionUID
- String loanNumber
- Integer dueIndex
- String url
}
class com.welab.loan.finance.app.base.BaseLoanOverdueInfoService {
- LoanOverdueInfoExtMapper loanOverdueInfoExtMapper
- LoanOverdueInfoMapper loanOverdueInfoMapper
+ List<LoanOverdueInfo> listOverDueInfoByUserAndDpd(List<Long>,Integer)
+ List<ReportOverdueInfoVO> selectReportOverdueDays(ReportOverdueInfoDTO)
+ List<Map<String,Object>> queryMaxOverdueDay(List<String>)
+ void updateCloseByLoanNumbers(List<String>)
+ int findMaxOverdueDay(LoanOverdueQry)
+ List<MaxOverDueDto> findMaxOverdueData(Long)
+ List<MaxOverDueDto> findMaxOverdueData(Long,String)
+ Integer getMaxOverdueDayByUserId(Long)
+ List<LoanOverdueInfo> getByLoanNumber(String,Boolean)
+ LoanOverdueInfo getByLoanNumberAndDueIndex(String,Integer)
+ void updateOverDueInfoByLoanNumberAndDueIndex(LoanOverdueInfo)
+ Map<String,Integer> queryLoanMaxOverdueDayMap(List<String>)
+ List<LoanMaxOverDueDayDTO> queryLoanMaxOverdueDay(List<String>)
+ boolean isItOverDue(Long)
+ boolean isItOverDue(Long,int)
+ void cleanNoClose(Long)
+ List<LoanOverdueInfo> getVatInitList(Long,int)
+ int countVatInit()
+ Map<Long,Integer> getUserMaxDpd(UserMaxDpdQry)
+ List<Long> listAll()
+ List<MaxOverDueDto> listLoanOverDueInfoByLoanNums(List<String>)
+ void deleteByLoanNumber(String)
+ boolean isOverDue(Long)
+ boolean isOverDueThreeMonth(Long,Date)
+ int resetIsOverDueFull(String)
}
interface com.welab.loan.finance.mapper.ext.PayBillsExtMapper {
~ int inserts(List<PayBills>)
~ PayBills queryTotalTransactionAmount(String)
~ List<PayBills> selectPayBills(String,List<PayBills>)
}
class com.welab.loan.finance.dto.cmd.tb.RestoreTbUserAccountCmd {
- Long restoreMoney
- TBEnum tbEnum
}
class com.welab.loan.finance.model.LoanDetailUpdateParam {
- String loanNumber
- Byte repayStatus
- Boolean isAdvance
- Long advanceAmount
- Date updateTime
}
interface com.welab.loan.finance.mapper.BcaTransferMapper {
~ long countByExample(BcaTransferExample)
~ int deleteByPrimaryKey(Long)
~ int insert(BcaTransfer)
~ int insertSelective(BcaTransfer)
~ List<BcaTransfer> selectByExample(BcaTransferExample)
~ BcaTransfer selectByPrimaryKey(Long)
~ int updateByExampleSelective(BcaTransfer,BcaTransferExample)
~ int updateByExample(BcaTransfer,BcaTransferExample)
~ int updateByPrimaryKeySelective(BcaTransfer)
~ int updateByPrimaryKey(BcaTransfer)
}
class com.welab.loan.finance.test.credit.Test001 {
+ {static} void main(String[])
}
class com.welab.loan.finance.app.command.repayment.VACacheCmdExe {
- BaseSyncVaCacheInfoService baseSyncVaCacheInfoService
- BaseVACacheRepaymentDataService baseVACacheRepaymentDataService
- LoanUserRepayImpl loanUserRepayImpl
- LoanDetailManager loanDetailManager
- IQueryDuesService queryDuesService
- UserRepayAmountImpl userRepayAmountImpl
- BaseLoanCouponService baseLoanCouponService
- BaseLoanApplyPlansService baseLoanApplyPlansService
- UserServiceFacade userServiceFacade
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
- BaseLoanDetailExtendService baseLoanDetailExtendService
- BaseUserAdvancePaymentService baseUserAdvancePaymentService
- Set<Long> syncOrgIds
+ void aSyncCacheCmd(SynAccountDTO)
- void syncCache(SynAccountDTO)
}
class com.welab.loan.finance.uvf.UvfFileParse {
+ {static} List<UvfFileLoan> convertUvfFileLoan(List<String>,LinkedHashMap<String,Integer>)
+ {static} List<UvfFileRepayment> convertUvfRepayment(List<String>)
+ {static} List<UvfFileRepaymentDetail> convertUvfRepaymentDetail(List<String>)
+ {static} List<UvfFileRepaymentPkkfrekap> convertUvfRepaymentPkk(List<String>)
+ {static} List<ReportDetailContract> convertReportDetailContract(List<String>)
}
class com.welab.loan.finance.service.core.BaseLoanTimeoutConfig {
- LoanTimeoutConfigMapper mapper
- ProductService productService
+ PageInfo<ProductExtVO> findByPage(ProductDto)
+ List<LoanTimeoutConfig> findConfigAll()
+ LoanTimeoutConfig findConfigByCode(String)
+ LoanTimeoutConfig findConfigByCode(String,String)
+ Response updateConfig(LoanTimeoutConfig)
}
class com.welab.loan.finance.app.command.tb.lend.transfer.impl.RestockTransferService {
- TbPayService tbPayService
- IFundMatchService iFundMatchService
- ITbLoanDubboService iTbLoanDubboService
+ void doCreateTransferTrading(TbBatch,Long)
- void toCompany(TbBatch,Long,FundAccountInfoDTO)
- void toAwda(TbBatch,long)
- void toFund(TbBatch,long,FundAccountInfoDTO)
+ String getKey()
}
class com.welab.loan.finance.core.dues.impl.MaumodalCostService {
+ CostDetailDTO findCostDetail(CostReqDTO)
+ String costKey()
}
class com.welab.loan.finance.dto.qry.MerchantTradingQry {
- String sourceId
- String merchantCodes
}
class com.welab.loan.finance.response.CPlanTryCalculationListVO {
- {static} long serialVersionUID
- Long totalMinRepaymentAmount
- MinPayAmountDetailDto minPayAmountDetailDto
- Long minRepayAmount
- Long maxRepayAmount
- List<CPlanTryCalculationVO> cPlanTryCalculationList
}
class com.welab.loan.finance.app.service.tb.AgreementCmdExe {
- BaseToBLoanAgreementService baseToBLoanAgreementService
- DocumentService documentService
- TbUserService tbUserService
- JedisCluster jedisCluster
- {static} String OPT_CONFIG_KEY
+ TbUserService.TbUserDetail<BaseUserDoc> generateContract(TbLoan,Long,TBEnum,String)
+ String downloadAgreement(String,Date)
+ String downloadAgreement(Long,Date)
}
enum com.welab.loan.finance.enums.TravelokaLendTypeEnum {
+  SINGLE
+  BULK
- String code
- String name
}
class com.welab.loan.finance.response.dues.CalDuesFeeVO {
- {static} long serialVersionUID
- Integer dueIndex
- Long repayAmount
- Date dueDate
}
interface com.welab.loan.finance.mapper.FinanceDuesExtMapper {
~ Long countLoanByTime(Map)
~ List<DuesAmountExt> selectLoanByTime(Map)
~ List<DuesAmountExt> selectLoanListByTime(Map)
~ Long countLoanTbByTime(Map)
~ List<DuesAmountExt> selectLoanTbByTime(Map)
~ void batchInsert(List<FinanceDues>)
~ List<LoanPlanCount> findPlanCountLoanNumber(List<String>)
~ List<LoanPlanCount> findPlanCountUserId(Long)
~ List<TrackVo> selectTrackVo(Integer,List<String>)
~ List<FinanceDues> selectByDueDate(Map)
~ int countByDueDate(Map)
}
class com.welab.loan.finance.model.ToBAgreementDocExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> ToBAgreementDocExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.ToBAgreementDocExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andPartnerIsNull()
+ Criteria andPartnerIsNotNull()
+ Criteria andPartnerEqualTo(String)
+ Criteria andPartnerNotEqualTo(String)
+ Criteria andPartnerGreaterThan(String)
+ Criteria andPartnerGreaterThanOrEqualTo(String)
+ Criteria andPartnerLessThan(String)
+ Criteria andPartnerLessThanOrEqualTo(String)
+ Criteria andPartnerLike(String)
+ Criteria andPartnerNotLike(String)
+ Criteria andPartnerIn(List<String>)
+ Criteria andPartnerNotIn(List<String>)
+ Criteria andPartnerBetween(String,String)
+ Criteria andPartnerNotBetween(String,String)
+ Criteria andTbLoanNumberIsNull()
+ Criteria andTbLoanNumberIsNotNull()
+ Criteria andTbLoanNumberEqualTo(String)
+ Criteria andTbLoanNumberNotEqualTo(String)
+ Criteria andTbLoanNumberGreaterThan(String)
+ Criteria andTbLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andTbLoanNumberLessThan(String)
+ Criteria andTbLoanNumberLessThanOrEqualTo(String)
+ Criteria andTbLoanNumberLike(String)
+ Criteria andTbLoanNumberNotLike(String)
+ Criteria andTbLoanNumberIn(List<String>)
+ Criteria andTbLoanNumberNotIn(List<String>)
+ Criteria andTbLoanNumberBetween(String,String)
+ Criteria andTbLoanNumberNotBetween(String,String)
+ Criteria andMobileIsNull()
+ Criteria andMobileIsNotNull()
+ Criteria andMobileEqualTo(String)
+ Criteria andMobileNotEqualTo(String)
+ Criteria andMobileGreaterThan(String)
+ Criteria andMobileGreaterThanOrEqualTo(String)
+ Criteria andMobileLessThan(String)
+ Criteria andMobileLessThanOrEqualTo(String)
+ Criteria andMobileLike(String)
+ Criteria andMobileNotLike(String)
+ Criteria andMobileIn(List<String>)
+ Criteria andMobileNotIn(List<String>)
+ Criteria andMobileBetween(String,String)
+ Criteria andMobileNotBetween(String,String)
+ Criteria andEnabledIsNull()
+ Criteria andEnabledIsNotNull()
+ Criteria andEnabledEqualTo(Boolean)
+ Criteria andEnabledNotEqualTo(Boolean)
+ Criteria andEnabledGreaterThan(Boolean)
+ Criteria andEnabledGreaterThanOrEqualTo(Boolean)
+ Criteria andEnabledLessThan(Boolean)
+ Criteria andEnabledLessThanOrEqualTo(Boolean)
+ Criteria andEnabledIn(List<Boolean>)
+ Criteria andEnabledNotIn(List<Boolean>)
+ Criteria andEnabledBetween(Boolean,Boolean)
+ Criteria andEnabledNotBetween(Boolean,Boolean)
+ Criteria andAdminIdIsNull()
+ Criteria andAdminIdIsNotNull()
+ Criteria andAdminIdEqualTo(Long)
+ Criteria andAdminIdNotEqualTo(Long)
+ Criteria andAdminIdGreaterThan(Long)
+ Criteria andAdminIdGreaterThanOrEqualTo(Long)
+ Criteria andAdminIdLessThan(Long)
+ Criteria andAdminIdLessThanOrEqualTo(Long)
+ Criteria andAdminIdIn(List<Long>)
+ Criteria andAdminIdNotIn(List<Long>)
+ Criteria andAdminIdBetween(Long,Long)
+ Criteria andAdminIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andSigningStatusIsNull()
+ Criteria andSigningStatusIsNotNull()
+ Criteria andSigningStatusEqualTo(Byte)
+ Criteria andSigningStatusNotEqualTo(Byte)
+ Criteria andSigningStatusGreaterThan(Byte)
+ Criteria andSigningStatusGreaterThanOrEqualTo(Byte)
+ Criteria andSigningStatusLessThan(Byte)
+ Criteria andSigningStatusLessThanOrEqualTo(Byte)
+ Criteria andSigningStatusIn(List<Byte>)
+ Criteria andSigningStatusNotIn(List<Byte>)
+ Criteria andSigningStatusBetween(Byte,Byte)
+ Criteria andSigningStatusNotBetween(Byte,Byte)
+ Criteria andSigningMethodIsNull()
+ Criteria andSigningMethodIsNotNull()
+ Criteria andSigningMethodEqualTo(Byte)
+ Criteria andSigningMethodNotEqualTo(Byte)
+ Criteria andSigningMethodGreaterThan(Byte)
+ Criteria andSigningMethodGreaterThanOrEqualTo(Byte)
+ Criteria andSigningMethodLessThan(Byte)
+ Criteria andSigningMethodLessThanOrEqualTo(Byte)
+ Criteria andSigningMethodIn(List<Byte>)
+ Criteria andSigningMethodNotIn(List<Byte>)
+ Criteria andSigningMethodBetween(Byte,Byte)
+ Criteria andSigningMethodNotBetween(Byte,Byte)
+ Criteria andExpiredAtIsNull()
+ Criteria andExpiredAtIsNotNull()
+ Criteria andExpiredAtEqualTo(Date)
+ Criteria andExpiredAtNotEqualTo(Date)
+ Criteria andExpiredAtGreaterThan(Date)
+ Criteria andExpiredAtGreaterThanOrEqualTo(Date)
+ Criteria andExpiredAtLessThan(Date)
+ Criteria andExpiredAtLessThanOrEqualTo(Date)
+ Criteria andExpiredAtIn(List<Date>)
+ Criteria andExpiredAtNotIn(List<Date>)
+ Criteria andExpiredAtBetween(Date,Date)
+ Criteria andExpiredAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.ToBAgreementDocExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.ToBAgreementDocExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.app.command.repayment.DuesAndRepayImportUpdateExe {
- BaseDuesAndRepayImportUpdateService baseDuesAndRepayImportUpdateService
- UserService userService
- GridFsTemplateExt gridFsTemplate
- BaseLoanDetailService baseLoanDetailService
- DuesAndRepayImportCheckCmdExe checkCmdExe
- BaseDuesAndRepayImportUpdateService recordService
- String downloadUrl
+ {static} String EXCEL_TEMP_PATH
+ {static} List<String> CAN_UPLOAD_FILES_TYPE
+ {static} String[] DUES_EXCEL_FILED
+ {static} String[] REPAYMENT_EXCEL_FILED
+ {static} String[] DUES_FILED
+ {static} String[] REPAYMENT_FILED
~ {static} Map<String,String> DUES_DIFFER_NAME_MAP
~ {static} Map<String,String> REPAYMENT_DIFFER_NAME_MAP
+ {static} List<String> NOT_SUPPORT_PROGRAM_COLLECTION
+ PageInfo<ListDueRepayImportUpdateRecordVO> listImportRecordPageByLoanNumber(String,Integer,Integer)
+ void downloadImportTemplate(HttpServletResponse)
+ Response view(Long)
+ String uploadFile(MultipartFile)
- String getContentType(File)
+ Response<Object> importDuesAndRepayment(MultipartFile)
- Map<String,Map<String,Map<String,Object>>> getDifferRepayment(List<Map>,String)
- Map<String,Map<String,Map<String,Object>>> getDifferDues(List<Map>,String)
+ {static} Map<String,Map<String,Object>> compareFields(Object,Object)
}
abstract class com.welab.loan.finance.core.config.AbstractConfig {
# {static} Map<String,Object> services
# ApplicationContext applicationContext
+ void init()
+ {abstract}void doAnnotation()
+ {static} T getService(OrgIdEnum,ServiceTypeEnum)
# {static} String generateKey(OrgIdEnum,ServiceTypeEnum)
}
class com.welab.loan.finance.facade.marketing.FlexifitWhiteFacade {
- FlexifitWhiteDubboService flexifitWhiteDubboService
+ List<FlexifitWhiteResignDTO> getResignedInfo(List<Long>,Date,Date)
+ List<FlexifitWhiteResignDTO> getFlexifitInfo(List<Long>,Date,Date)
}
class com.welab.loan.finance.rabbitmq.BankCardValidatorConsumer {
- MessagePushService messagePushService
- BaseUserBankCardService baseUserBankCardService
+ void onMessage(Message)
+ void checkAccount(BankAccountVO,FinanceUserBankcard)
}
interface com.welab.loan.finance.mapper.LoanDetailExtMapper {
~ List<LoanRepayExt> selectByExample(Map)
~ List<LoanDetailExt> selectLoanByExample(Map)
~ List<LoanDetailExt> selectLoanByExampleForExcel(Map)
~ long countLoanByExampleForExcel(Map)
~ List<LoanDetailExt> selectFinanceDues(List<String>)
~ long countLoanByExample(Map)
~ List<LoanDetail> selectAdvanceLoan(long)
~ List<LoanDetail> selectLoanTimeOut(String,int,int,Integer,Integer,Boolean,String)
~ long countLoanTimeOut(String,int,int,Boolean,String)
~ List<LoanDetail> selectLoanOffTimeOut(String,int,int,Integer,Integer,Boolean,String)
~ long countLoanOffTimeOut(String,int,int,Boolean,String)
~ long countNoSignMc(int)
~ List<LoanDetail> selectNoSignMc(int,Integer,Integer)
~ List<LoanSign> selectOffLineSign(Date,Date)
~ List<LoanSign> selectOffLineLend(Date,Date,List<Byte>)
~ List<PendingLendExt> selectOnLinePendLendByFund(Map)
~ List<PendingLendExt> selectPlPendLendByFund(Map)
~ Long countOnLinePendLendByFund(Long)
~ Long countPlPendLendByFund(Long)
~ List<PendingLendExt> selectOffLinePendLendByFund(Map)
~ Long countOffLinePendLendByFund(Long)
~ LoanDayExt selectLoanDay(String)
~ LoanDayExt selectLoanDayByUserId(Long,Byte)
~ long selectLoanByUserIdDay(Long,Date)
~ List<LoanDayExt> selectUserDay(Long)
~ List<String> selectSecondProductCode(List<String>)
~ List<LoanDetail> selectRecharge()
~ int restSign(Map)
~ Long sumFendingAmount(Long)
~ int updateLabels(String,List<UpdateLabelDto>)
~ List<Long> findUserByLoans(List<String>)
~ List<CreditHistoryLoanExt> findCreditHistoryLoanByUserId(Long,List<Integer>)
~ PendingLendExt countPendLendByFund(Long)
~ List<Map<String,Object>> queryOutstandingAmount(List<String>)
~ int updateLendStatus(String,byte)
~ List<String> listFPlanLoanNumber(Long,List<String>)
~ Long selectUnFinishAmount(UnFinishLoanAmountQry)
~ int updateStatusByLoanNumber(List<LoanDetailUpdateParam>)
~ List<LoanDetail> selectUnCloseByAop(Long)
~ Long countNotCloseLoans(Long)
~ List<MaxOverDueDto> findNewestDatas(List<Long>)
~ List<MaxOverDueDto> findNewestDataById(Long,String)
~ List<Long> getLendSuccessAndNotCloseUserIdList(List<Long>,Date,Date)
~ Long countClMc(Long,Date,Date,Integer)
~ List<LoanDetail> getAll(Map)
~ int countAll(Map)
~ List<UserUnsettledLoanDto> listUserNotCloseLoanNumber(Long)
~ List<DisburseTax> selectDisburseTax(Date,Date,Long,Byte)
~ List<TbLoanVO> queryTbOrderList(TravelokaLoanQry)
~ long queryTbOrderCount(TravelokaLoanQry)
~ List<TbDisbursementVO> queryTbDisbursementOrderList(TbDisbursementQry)
~ long queryTbDisbursementOrderCount(TbDisbursementQry)
~ List<LoanDetail> listCollectionQueryConditionLoanDetail(Integer,Integer,List<String>,List<String>)
~ LoanDetail getLastRecord()
~ List<WelCallLoansDTO> findWelcomeCallLoans(WelcomeCallLoansCmdExe.WelCallQry)
~ Integer findWelcomeCallLoansRO(Long)
~ long countMaumodalLoanTimeOut(String,int,int,Boolean)
~ List<LoanDetail> selectMaumodalLoanTimeOut(String,int,int,Integer,Integer,Boolean)
}
enum com.welab.loan.finance.enums.CreditUserSecondTagEnum {
+  SPECIAL
+  REGULAR
- String secondTag
}
class com.welab.loan.finance.core.dto.syn.SynDelayDTO {
- String queue
- String content
- long delay
}
class com.welab.loan.finance.service.core.BaseLoanCouponDetailService {
- LoanCouponDetailMapper loanCouponDetailMapper
+ List<LoanCouponDetail> listAdvanceByLoanNmuberAndDueIndex(String,List<Integer>)
+ LoanCouponDetail getCouponByLoanNmuberAndDueIndex(String,Integer)
+ void updateLoanCouponDel(String,Integer)
+ Long sumCouponAmount(List<String>)
+ Long getValue(Long)
}
class com.welab.loan.finance.app.service.credit.CreditAbTestExportService {
- UserServiceFacade userServiceFacade
- CreditAbTestHitDataQryExe creditAbTestHitDataQryExe
- BaseCreditActivityAbTestService baseCreditActivityAbTestService
- CreditAbTestUserCalculationManager creditAbTestUserCalculationManager
- BaseFinanceExport baseFinanceExport
- BaseCreditAbtestExportService baseCreditAbtestExportService
- BaseCreditActivityAbTestGroupService baseCreditActivityAbTestGroupService
+ Object createExport(Long,Long)
+ List<CreditAbtestExport> findExportList(Long)
+ void downLoadTestGroupList(Long,HttpServletResponse)
}
class com.welab.loan.finance.dto.CheckCustomDto {
- String loanNumber
- Boolean custom
}
class com.welab.loan.finance.dto.ProductDtoExt {
- String productName
}
class com.welab.loan.finance.app.service.tb.TbUserService {
- MongoManager mongoManager
- BaseTbUserService baseTbUserService
- TbServiceFacade tbServiceFacade
+ PageInfo<TbUserDocVO> query(TbUserQryDTO)
+ TbUserDetail<BaseUserDoc> getUserDetail(Long)
+ TbUserDetail<T> getUserDetail(Long,Class<T>)
+ void export(TbUserQryDTO,String)
}
class com.welab.loan.finance.app.service.tb.TbUserService$TbUserDetail {
- T detail
}
class com.welab.loan.finance.vo.LoanPlanTypeCountVo {
- {static} long serialVersionUID
- long planC
- long planE
- long planF
- List<String> loanNumberList
}
class com.welab.loan.finance.response.AdminFeeResp {
- BigDecimal orgAdminFeeAmount
- BigDecimal adminFeeAmount
- BigDecimal loanAdminFee
- BigDecimal carryFeeAmount
}
class com.welab.loan.finance.model.LoanUvfTradeExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanUvfTradeExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanUvfTradeExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andDebitIsNull()
+ Criteria andDebitIsNotNull()
+ Criteria andDebitEqualTo(String)
+ Criteria andDebitNotEqualTo(String)
+ Criteria andDebitGreaterThan(String)
+ Criteria andDebitGreaterThanOrEqualTo(String)
+ Criteria andDebitLessThan(String)
+ Criteria andDebitLessThanOrEqualTo(String)
+ Criteria andDebitLike(String)
+ Criteria andDebitNotLike(String)
+ Criteria andDebitIn(List<String>)
+ Criteria andDebitNotIn(List<String>)
+ Criteria andDebitBetween(String,String)
+ Criteria andDebitNotBetween(String,String)
+ Criteria andCreditIsNull()
+ Criteria andCreditIsNotNull()
+ Criteria andCreditEqualTo(String)
+ Criteria andCreditNotEqualTo(String)
+ Criteria andCreditGreaterThan(String)
+ Criteria andCreditGreaterThanOrEqualTo(String)
+ Criteria andCreditLessThan(String)
+ Criteria andCreditLessThanOrEqualTo(String)
+ Criteria andCreditLike(String)
+ Criteria andCreditNotLike(String)
+ Criteria andCreditIn(List<String>)
+ Criteria andCreditNotIn(List<String>)
+ Criteria andCreditBetween(String,String)
+ Criteria andCreditNotBetween(String,String)
+ Criteria andTradeAtIsNull()
+ Criteria andTradeAtIsNotNull()
+ Criteria andTradeAtEqualTo(Date)
+ Criteria andTradeAtNotEqualTo(Date)
+ Criteria andTradeAtGreaterThan(Date)
+ Criteria andTradeAtGreaterThanOrEqualTo(Date)
+ Criteria andTradeAtLessThan(Date)
+ Criteria andTradeAtLessThanOrEqualTo(Date)
+ Criteria andTradeAtIn(List<Date>)
+ Criteria andTradeAtNotIn(List<Date>)
+ Criteria andTradeAtBetween(Date,Date)
+ Criteria andTradeAtNotBetween(Date,Date)
+ Criteria andOrderNoIsNull()
+ Criteria andOrderNoIsNotNull()
+ Criteria andOrderNoEqualTo(String)
+ Criteria andOrderNoNotEqualTo(String)
+ Criteria andOrderNoGreaterThan(String)
+ Criteria andOrderNoGreaterThanOrEqualTo(String)
+ Criteria andOrderNoLessThan(String)
+ Criteria andOrderNoLessThanOrEqualTo(String)
+ Criteria andOrderNoLike(String)
+ Criteria andOrderNoNotLike(String)
+ Criteria andOrderNoIn(List<String>)
+ Criteria andOrderNoNotIn(List<String>)
+ Criteria andOrderNoBetween(String,String)
+ Criteria andOrderNoNotBetween(String,String)
+ Criteria andDebitCodeIsNull()
+ Criteria andDebitCodeIsNotNull()
+ Criteria andDebitCodeEqualTo(String)
+ Criteria andDebitCodeNotEqualTo(String)
+ Criteria andDebitCodeGreaterThan(String)
+ Criteria andDebitCodeGreaterThanOrEqualTo(String)
+ Criteria andDebitCodeLessThan(String)
+ Criteria andDebitCodeLessThanOrEqualTo(String)
+ Criteria andDebitCodeLike(String)
+ Criteria andDebitCodeNotLike(String)
+ Criteria andDebitCodeIn(List<String>)
+ Criteria andDebitCodeNotIn(List<String>)
+ Criteria andDebitCodeBetween(String,String)
+ Criteria andDebitCodeNotBetween(String,String)
+ Criteria andCreditCodeIsNull()
+ Criteria andCreditCodeIsNotNull()
+ Criteria andCreditCodeEqualTo(String)
+ Criteria andCreditCodeNotEqualTo(String)
+ Criteria andCreditCodeGreaterThan(String)
+ Criteria andCreditCodeGreaterThanOrEqualTo(String)
+ Criteria andCreditCodeLessThan(String)
+ Criteria andCreditCodeLessThanOrEqualTo(String)
+ Criteria andCreditCodeLike(String)
+ Criteria andCreditCodeNotLike(String)
+ Criteria andCreditCodeIn(List<String>)
+ Criteria andCreditCodeNotIn(List<String>)
+ Criteria andCreditCodeBetween(String,String)
+ Criteria andCreditCodeNotBetween(String,String)
+ Criteria andPayTradeIdIsNull()
+ Criteria andPayTradeIdIsNotNull()
+ Criteria andPayTradeIdEqualTo(String)
+ Criteria andPayTradeIdNotEqualTo(String)
+ Criteria andPayTradeIdGreaterThan(String)
+ Criteria andPayTradeIdGreaterThanOrEqualTo(String)
+ Criteria andPayTradeIdLessThan(String)
+ Criteria andPayTradeIdLessThanOrEqualTo(String)
+ Criteria andPayTradeIdLike(String)
+ Criteria andPayTradeIdNotLike(String)
+ Criteria andPayTradeIdIn(List<String>)
+ Criteria andPayTradeIdNotIn(List<String>)
+ Criteria andPayTradeIdBetween(String,String)
+ Criteria andPayTradeIdNotBetween(String,String)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Integer)
+ Criteria andStatusNotEqualTo(Integer)
+ Criteria andStatusGreaterThan(Integer)
+ Criteria andStatusGreaterThanOrEqualTo(Integer)
+ Criteria andStatusLessThan(Integer)
+ Criteria andStatusLessThanOrEqualTo(Integer)
+ Criteria andStatusIn(List<Integer>)
+ Criteria andStatusNotIn(List<Integer>)
+ Criteria andStatusBetween(Integer,Integer)
+ Criteria andStatusNotBetween(Integer,Integer)
+ Criteria andTradeTypeIsNull()
+ Criteria andTradeTypeIsNotNull()
+ Criteria andTradeTypeEqualTo(Integer)
+ Criteria andTradeTypeNotEqualTo(Integer)
+ Criteria andTradeTypeGreaterThan(Integer)
+ Criteria andTradeTypeGreaterThanOrEqualTo(Integer)
+ Criteria andTradeTypeLessThan(Integer)
+ Criteria andTradeTypeLessThanOrEqualTo(Integer)
+ Criteria andTradeTypeIn(List<Integer>)
+ Criteria andTradeTypeNotIn(List<Integer>)
+ Criteria andTradeTypeBetween(Integer,Integer)
+ Criteria andTradeTypeNotBetween(Integer,Integer)
+ Criteria andHandlingFeeIsNull()
+ Criteria andHandlingFeeIsNotNull()
+ Criteria andHandlingFeeEqualTo(Long)
+ Criteria andHandlingFeeNotEqualTo(Long)
+ Criteria andHandlingFeeGreaterThan(Long)
+ Criteria andHandlingFeeGreaterThanOrEqualTo(Long)
+ Criteria andHandlingFeeLessThan(Long)
+ Criteria andHandlingFeeLessThanOrEqualTo(Long)
+ Criteria andHandlingFeeIn(List<Long>)
+ Criteria andHandlingFeeNotIn(List<Long>)
+ Criteria andHandlingFeeBetween(Long,Long)
+ Criteria andHandlingFeeNotBetween(Long,Long)
+ Criteria andTradeMoneyIsNull()
+ Criteria andTradeMoneyIsNotNull()
+ Criteria andTradeMoneyEqualTo(Long)
+ Criteria andTradeMoneyNotEqualTo(Long)
+ Criteria andTradeMoneyGreaterThan(Long)
+ Criteria andTradeMoneyGreaterThanOrEqualTo(Long)
+ Criteria andTradeMoneyLessThan(Long)
+ Criteria andTradeMoneyLessThanOrEqualTo(Long)
+ Criteria andTradeMoneyIn(List<Long>)
+ Criteria andTradeMoneyNotIn(List<Long>)
+ Criteria andTradeMoneyBetween(Long,Long)
+ Criteria andTradeMoneyNotBetween(Long,Long)
+ Criteria andRelationIdIsNull()
+ Criteria andRelationIdIsNotNull()
+ Criteria andRelationIdEqualTo(String)
+ Criteria andRelationIdNotEqualTo(String)
+ Criteria andRelationIdGreaterThan(String)
+ Criteria andRelationIdGreaterThanOrEqualTo(String)
+ Criteria andRelationIdLessThan(String)
+ Criteria andRelationIdLessThanOrEqualTo(String)
+ Criteria andRelationIdLike(String)
+ Criteria andRelationIdNotLike(String)
+ Criteria andRelationIdIn(List<String>)
+ Criteria andRelationIdNotIn(List<String>)
+ Criteria andRelationIdBetween(String,String)
+ Criteria andRelationIdNotBetween(String,String)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
}
class com.welab.loan.finance.model.LoanUvfTradeExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanUvfTradeExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.test.over.OverDues {
- DuesCalculationMapper duesCalculationMapper
- BaseLoanService loanService
+ void testA()
+ {static} void main(String[])
}
class com.welab.loan.finance.dto.paylater.CreditHistoryLoanRspDTO {
- String loanNumber
- Long amount
- Integer overDay
- Date lendDate
- Integer close
}
class com.welab.loan.finance.dto.MultipleRepaymenDTO {
- String loanNumber
- Long amount
}
class com.welab.loan.finance.tools.DuesRecoveryTest {
+ void dues()
- {static} void doCalc(String,int,BigDecimal,HashMap<DueTypeEnum,Long>)
- {static} void printSql(String,int,String,BigDecimal)
}
class com.welab.loan.finance.response.CPlanTryCalculationVO {
- {static} long serialVersionUID
- String loanNumber
- Long minRepaymentAmount
- Long nextPayAmount
- Date nextDueDate
- String secondProdCode
- String partnerName
- String partnerLogoUrl
}
class com.welab.loan.finance.app.manager.DisbursementCapManager {
- ApprovalWhitelistUserServiceFacade approvalWhitelistUserServiceFacade
- UfiWhiteListDubboServiceFacade ufiWhiteListDubboServiceFacade
- BaseLoanDetailService baseLoanDetailService
- PartnerListDubboServiceFacade partnerListDubboServiceFacade
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- BaseMatrixDisbursementCapLogService baseMatrixDisbursementCapLogService
+ void saveLog(Long,String)
+ boolean checkUserDisbursementCap(Long)
- long getUsedDsibursementCapCount(String,String,String)
+ List<String> getMaxCapPartnerList(BigDecimal)
- PartnerListDTO hitPartnerList(String)
- PartnerListDTO hitPartnerList(Long)
- PartnerListDTO hitPartnerList(LoanDetail)
}
class com.welab.loan.finance.core.dto.DeductItemDTO {
- String loanId
- Integer dueIndex
- String dueType
- Long deductAmount
- Byte planType
}
class com.welab.loan.finance.model.CreditActivityAbTestGroupExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditActivityAbTestGroupExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditActivityAbTestGroupExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andGroupIdIsNull()
+ Criteria andGroupIdIsNotNull()
+ Criteria andGroupIdEqualTo(String)
+ Criteria andGroupIdNotEqualTo(String)
+ Criteria andGroupIdGreaterThan(String)
+ Criteria andGroupIdGreaterThanOrEqualTo(String)
+ Criteria andGroupIdLessThan(String)
+ Criteria andGroupIdLessThanOrEqualTo(String)
+ Criteria andGroupIdLike(String)
+ Criteria andGroupIdNotLike(String)
+ Criteria andGroupIdIn(List<String>)
+ Criteria andGroupIdNotIn(List<String>)
+ Criteria andGroupIdBetween(String,String)
+ Criteria andGroupIdNotBetween(String,String)
+ Criteria andMatrixTypeIsNull()
+ Criteria andMatrixTypeIsNotNull()
+ Criteria andMatrixTypeEqualTo(String)
+ Criteria andMatrixTypeNotEqualTo(String)
+ Criteria andMatrixTypeGreaterThan(String)
+ Criteria andMatrixTypeGreaterThanOrEqualTo(String)
+ Criteria andMatrixTypeLessThan(String)
+ Criteria andMatrixTypeLessThanOrEqualTo(String)
+ Criteria andMatrixTypeLike(String)
+ Criteria andMatrixTypeNotLike(String)
+ Criteria andMatrixTypeIn(List<String>)
+ Criteria andMatrixTypeNotIn(List<String>)
+ Criteria andMatrixTypeBetween(String,String)
+ Criteria andMatrixTypeNotBetween(String,String)
+ Criteria andCreatorByIsNull()
+ Criteria andCreatorByIsNotNull()
+ Criteria andCreatorByEqualTo(Long)
+ Criteria andCreatorByNotEqualTo(Long)
+ Criteria andCreatorByGreaterThan(Long)
+ Criteria andCreatorByGreaterThanOrEqualTo(Long)
+ Criteria andCreatorByLessThan(Long)
+ Criteria andCreatorByLessThanOrEqualTo(Long)
+ Criteria andCreatorByIn(List<Long>)
+ Criteria andCreatorByNotIn(List<Long>)
+ Criteria andCreatorByBetween(Long,Long)
+ Criteria andCreatorByNotBetween(Long,Long)
+ Criteria andUserGroupRuleTypeIsNull()
+ Criteria andUserGroupRuleTypeIsNotNull()
+ Criteria andUserGroupRuleTypeEqualTo(Byte)
+ Criteria andUserGroupRuleTypeNotEqualTo(Byte)
+ Criteria andUserGroupRuleTypeGreaterThan(Byte)
+ Criteria andUserGroupRuleTypeGreaterThanOrEqualTo(Byte)
+ Criteria andUserGroupRuleTypeLessThan(Byte)
+ Criteria andUserGroupRuleTypeLessThanOrEqualTo(Byte)
+ Criteria andUserGroupRuleTypeIn(List<Byte>)
+ Criteria andUserGroupRuleTypeNotIn(List<Byte>)
+ Criteria andUserGroupRuleTypeBetween(Byte,Byte)
+ Criteria andUserGroupRuleTypeNotBetween(Byte,Byte)
}
class com.welab.loan.finance.model.CreditActivityAbTestGroupExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.CreditActivityAbTestGroupExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
interface com.welab.loan.finance.mapper.LevenshteinScoreMapper {
~ int deleteByPrimaryKey(Long)
~ int insert(LevenshteinScore)
~ int insertSelective(LevenshteinScore)
~ LevenshteinScore selectByPrimaryKey(Long)
~ int updateByPrimaryKeySelective(LevenshteinScore)
~ int updateByPrimaryKey(LevenshteinScore)
~ LevenshteinScore selectLastByUserId(Long)
}
class com.welab.loan.finance.vo.request.CreditConfigVO {
- CreditConfigOperateEnums operateType
- String[] tags
- String[] tenors
- Long operatorId
}
class com.welab.loan.finance.utils.ScheduleUtil {
+ {static} int TNNOR_COUNT
+ {static} int INDEX_FOR_HANDLING_FEE
+ {static} int SCALE
+ {static} int FEE_OUTPUT_SCALE
+ {static} int FEE_PROCESSING_SCALE
+ {static} int FEE_RATE_SCALE
+ {static} int ROUNDING_MODE
+ {static} Long THOUSAND
+ {static} String ABBR_MONTH
+ {static} String ABBR_DAY
+ {static} BigDecimal YEAR_TO_DAY_COEF
+ {static} BigDecimal YEAR_TO_MONTH_COEF
+ {static} BigDecimal DAY_TO_MONTH_COEF
+ {static} BigDecimal handlingFee
+ {static} Due generateHandlingFeeDue(String)
+ {static} BigDecimal repaymentAmountPerInstallment(String,BigDecimal,BigDecimal,BigDecimal)
+ {static} BigDecimal managementFeePerInstallment(BigDecimal,String,BigDecimal)
+ {static} int getLoanTenor(String)
+ {static} int getLoanDay(String)
+ {static} boolean getLoanLong(String)
+ {static} long findDiffDayByDdm(LocalDate,int)
+ {static} int findShortRealTenorByDdm(long)
+ {static} List<Date> findDueDateListByDdm(String,Date,int)
+ {static} String getLoanTenorUnit(String)
+ {static} BigDecimal setRound(BigDecimal)
+ {static} BigDecimal setRoundDown(BigDecimal)
+ {static} BigDecimal divide(BigDecimal,BigDecimal)
+ {static} BigDecimal getFundsInstallment(int,BigDecimal,BigDecimal)
+ {static} BigDecimal paymentAmountPerV4(String,BigDecimal,BigDecimal)
+ {static} BigDecimal getAmountPerInstallment(int,BigDecimal,BigDecimal)
+ {static} BigDecimal getManagementFeeRate(int,BigDecimal,BigDecimal)
+ {static} BigDecimal convertAnnuallyToDailyFeeRate(BigDecimal)
- {static} BigDecimal convertAnnuallyToMonthlyFeeRate(BigDecimal,int)
- {static} BigDecimal convertMonthlyToDailyFeeRate(BigDecimal)
- {static} BigDecimal calculateCommonPart(BigDecimal,int)
- {static} BigDecimal plusOnePowTenorMinusOne(BigDecimal,int)
- {static} BigDecimal plusOnePowTenor(BigDecimal,int)
+ {static} BigDecimal convertAmount(BigDecimal)
+ {static} Long convertAmount(Long)
+ {static} Long convertCarryingAmount(Long)
+ {static} long calculationCarryFee(Long)
+ {static} long calculationOnlyCarryFee(Long)
+ {static} Long calculationFastPayFee(String)
+ {static} Long calculationSplitAdminFee(Long,String)
+ {static} String handleRate(double)
+ {static} BigDecimal multiply(Long,BigDecimal)
+ {static} Long add(Long)
+ {static} List<BigDecimal> avergae(long,long)
+ {static} void main(String[])
}
class com.welab.loan.finance.model.FinanceRepaymentTrack {
- Long id
- String loanNumber
- Long orgId
- String secondProdCode
- Integer dueIndex
- Date repaymentAt
- Date actualRepaymentAt
- Byte type
- String transId
- Long userId
- Long repaymentAmount
- Long operatorId
- Date createdAt
- Date updateAt
- Boolean isAdvance
- Byte markType
- String buyerCode
- String buyerName
- Long fundInterestFee
- Long serviceFee
- Long provisionFee
- Long interestFee
- Long lateFee
- Long principalFee
- Long adminFee
- Long storeId
- String onlineAddress
- Long overAmount
- Long fundId
- Byte fundType
- Boolean isCustom
- Boolean isOverdue
- String repayCode
- String receiptAccount
- String bankCode
- String orderNo
- Byte origin
- Byte planType
- Long lateFeeDiscountAmount
- Long discountLateFee
- Long couponLateFee
- Long couponAdminFee
- Long couponInterestFee
- Long couponPrincipal
- Long subServiceFee
- Long subFundInterestFee
- String promotionCode
- Long fastPayFee
- Long vatFee
- String creditTag
- Long pfVatFee
- Long afVatFee
- Long cfVatFee
- Long lfVatFee
- Long couponFundFee
- Long couponProvisionFee
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Long getOrgId()
+ void setOrgId(Long)
+ String getSecondProdCode()
+ void setSecondProdCode(String)
+ Integer getDueIndex()
+ void setDueIndex(Integer)
+ Date getRepaymentAt()
+ void setRepaymentAt(Date)
+ Date getActualRepaymentAt()
+ void setActualRepaymentAt(Date)
+ Byte getType()
+ void setType(Byte)
+ String getTransId()
+ void setTransId(String)
+ Long getUserId()
+ void setUserId(Long)
+ Long getRepaymentAmount()
+ void setRepaymentAmount(Long)
+ Long getOperatorId()
+ void setOperatorId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ Boolean getIsAdvance()
+ void setIsAdvance(Boolean)
+ Byte getMarkType()
+ void setMarkType(Byte)
+ String getBuyerCode()
+ void setBuyerCode(String)
+ String getBuyerName()
+ void setBuyerName(String)
+ Long getFundInterestFee()
+ void setFundInterestFee(Long)
+ Long getServiceFee()
+ void setServiceFee(Long)
+ Long getProvisionFee()
+ void setProvisionFee(Long)
+ Long getInterestFee()
+ void setInterestFee(Long)
+ Long getLateFee()
+ void setLateFee(Long)
+ Long getPrincipalFee()
+ void setPrincipalFee(Long)
+ Long getAdminFee()
+ void setAdminFee(Long)
+ Long getStoreId()
+ void setStoreId(Long)
+ String getOnlineAddress()
+ void setOnlineAddress(String)
+ Long getOverAmount()
+ void setOverAmount(Long)
+ Long getFundId()
+ void setFundId(Long)
+ Byte getFundType()
+ void setFundType(Byte)
+ Boolean getIsCustom()
+ void setIsCustom(Boolean)
+ Boolean getIsOverdue()
+ void setIsOverdue(Boolean)
+ String getRepayCode()
+ void setRepayCode(String)
+ String getReceiptAccount()
+ void setReceiptAccount(String)
+ String getBankCode()
+ void setBankCode(String)
+ String getOrderNo()
+ void setOrderNo(String)
+ Byte getOrigin()
+ void setOrigin(Byte)
+ Byte getPlanType()
+ void setPlanType(Byte)
+ Long getLateFeeDiscountAmount()
+ void setLateFeeDiscountAmount(Long)
+ Long getDiscountLateFee()
+ void setDiscountLateFee(Long)
+ Long getCouponLateFee()
+ void setCouponLateFee(Long)
+ Long getCouponAdminFee()
+ void setCouponAdminFee(Long)
+ Long getCouponInterestFee()
+ void setCouponInterestFee(Long)
+ Long getCouponPrincipal()
+ void setCouponPrincipal(Long)
+ Long getSubServiceFee()
+ void setSubServiceFee(Long)
+ Long getSubFundInterestFee()
+ void setSubFundInterestFee(Long)
+ String getPromotionCode()
+ void setPromotionCode(String)
+ Long getFastPayFee()
+ void setFastPayFee(Long)
+ Long getVatFee()
+ void setVatFee(Long)
+ String getCreditTag()
+ void setCreditTag(String)
+ Long getPfVatFee()
+ void setPfVatFee(Long)
+ Long getAfVatFee()
+ void setAfVatFee(Long)
+ Long getCfVatFee()
+ void setCfVatFee(Long)
+ Long getLfVatFee()
+ void setLfVatFee(Long)
+ Long getCouponFundFee()
+ void setCouponFundFee(Long)
+ Long getCouponProvisionFee()
+ void setCouponProvisionFee(Long)
}
class com.welab.loan.finance.model.LoanCouponExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanCouponExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanCouponExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andOrgIdIsNull()
+ Criteria andOrgIdIsNotNull()
+ Criteria andOrgIdEqualTo(Long)
+ Criteria andOrgIdNotEqualTo(Long)
+ Criteria andOrgIdGreaterThan(Long)
+ Criteria andOrgIdGreaterThanOrEqualTo(Long)
+ Criteria andOrgIdLessThan(Long)
+ Criteria andOrgIdLessThanOrEqualTo(Long)
+ Criteria andOrgIdIn(List<Long>)
+ Criteria andOrgIdNotIn(List<Long>)
+ Criteria andOrgIdBetween(Long,Long)
+ Criteria andOrgIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andPromotionCodeIsNull()
+ Criteria andPromotionCodeIsNotNull()
+ Criteria andPromotionCodeEqualTo(String)
+ Criteria andPromotionCodeNotEqualTo(String)
+ Criteria andPromotionCodeGreaterThan(String)
+ Criteria andPromotionCodeGreaterThanOrEqualTo(String)
+ Criteria andPromotionCodeLessThan(String)
+ Criteria andPromotionCodeLessThanOrEqualTo(String)
+ Criteria andPromotionCodeLike(String)
+ Criteria andPromotionCodeNotLike(String)
+ Criteria andPromotionCodeIn(List<String>)
+ Criteria andPromotionCodeNotIn(List<String>)
+ Criteria andPromotionCodeBetween(String,String)
+ Criteria andPromotionCodeNotBetween(String,String)
+ Criteria andPreferentialTypeIsNull()
+ Criteria andPreferentialTypeIsNotNull()
+ Criteria andPreferentialTypeEqualTo(Byte)
+ Criteria andPreferentialTypeNotEqualTo(Byte)
+ Criteria andPreferentialTypeGreaterThan(Byte)
+ Criteria andPreferentialTypeGreaterThanOrEqualTo(Byte)
+ Criteria andPreferentialTypeLessThan(Byte)
+ Criteria andPreferentialTypeLessThanOrEqualTo(Byte)
+ Criteria andPreferentialTypeIn(List<Byte>)
+ Criteria andPreferentialTypeNotIn(List<Byte>)
+ Criteria andPreferentialTypeBetween(Byte,Byte)
+ Criteria andPreferentialTypeNotBetween(Byte,Byte)
+ Criteria andDisInterestFeeIsNull()
+ Criteria andDisInterestFeeIsNotNull()
+ Criteria andDisInterestFeeEqualTo(BigDecimal)
+ Criteria andDisInterestFeeNotEqualTo(BigDecimal)
+ Criteria andDisInterestFeeGreaterThan(BigDecimal)
+ Criteria andDisInterestFeeGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisInterestFeeLessThan(BigDecimal)
+ Criteria andDisInterestFeeLessThanOrEqualTo(BigDecimal)
+ Criteria andDisInterestFeeIn(List<BigDecimal>)
+ Criteria andDisInterestFeeNotIn(List<BigDecimal>)
+ Criteria andDisInterestFeeBetween(BigDecimal,BigDecimal)
+ Criteria andDisInterestFeeNotBetween(BigDecimal,BigDecimal)
+ Criteria andDisAdminFeeIsNull()
+ Criteria andDisAdminFeeIsNotNull()
+ Criteria andDisAdminFeeEqualTo(BigDecimal)
+ Criteria andDisAdminFeeNotEqualTo(BigDecimal)
+ Criteria andDisAdminFeeGreaterThan(BigDecimal)
+ Criteria andDisAdminFeeGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisAdminFeeLessThan(BigDecimal)
+ Criteria andDisAdminFeeLessThanOrEqualTo(BigDecimal)
+ Criteria andDisAdminFeeIn(List<BigDecimal>)
+ Criteria andDisAdminFeeNotIn(List<BigDecimal>)
+ Criteria andDisAdminFeeBetween(BigDecimal,BigDecimal)
+ Criteria andDisAdminFeeNotBetween(BigDecimal,BigDecimal)
+ Criteria andDisLateFeeIsNull()
+ Criteria andDisLateFeeIsNotNull()
+ Criteria andDisLateFeeEqualTo(BigDecimal)
+ Criteria andDisLateFeeNotEqualTo(BigDecimal)
+ Criteria andDisLateFeeGreaterThan(BigDecimal)
+ Criteria andDisLateFeeGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisLateFeeLessThan(BigDecimal)
+ Criteria andDisLateFeeLessThanOrEqualTo(BigDecimal)
+ Criteria andDisLateFeeIn(List<BigDecimal>)
+ Criteria andDisLateFeeNotIn(List<BigDecimal>)
+ Criteria andDisLateFeeBetween(BigDecimal,BigDecimal)
+ Criteria andDisLateFeeNotBetween(BigDecimal,BigDecimal)
+ Criteria andDisPrincipalIsNull()
+ Criteria andDisPrincipalIsNotNull()
+ Criteria andDisPrincipalEqualTo(BigDecimal)
+ Criteria andDisPrincipalNotEqualTo(BigDecimal)
+ Criteria andDisPrincipalGreaterThan(BigDecimal)
+ Criteria andDisPrincipalGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisPrincipalLessThan(BigDecimal)
+ Criteria andDisPrincipalLessThanOrEqualTo(BigDecimal)
+ Criteria andDisPrincipalIn(List<BigDecimal>)
+ Criteria andDisPrincipalNotIn(List<BigDecimal>)
+ Criteria andDisPrincipalBetween(BigDecimal,BigDecimal)
+ Criteria andDisPrincipalNotBetween(BigDecimal,BigDecimal)
+ Criteria andDisFundFeeIsNull()
+ Criteria andDisFundFeeIsNotNull()
+ Criteria andDisFundFeeEqualTo(BigDecimal)
+ Criteria andDisFundFeeNotEqualTo(BigDecimal)
+ Criteria andDisFundFeeGreaterThan(BigDecimal)
+ Criteria andDisFundFeeGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisFundFeeLessThan(BigDecimal)
+ Criteria andDisFundFeeLessThanOrEqualTo(BigDecimal)
+ Criteria andDisFundFeeIn(List<BigDecimal>)
+ Criteria andDisFundFeeNotIn(List<BigDecimal>)
+ Criteria andDisFundFeeBetween(BigDecimal,BigDecimal)
+ Criteria andDisFundFeeNotBetween(BigDecimal,BigDecimal)
+ Criteria andDisProvisionFeeIsNull()
+ Criteria andDisProvisionFeeIsNotNull()
+ Criteria andDisProvisionFeeEqualTo(BigDecimal)
+ Criteria andDisProvisionFeeNotEqualTo(BigDecimal)
+ Criteria andDisProvisionFeeGreaterThan(BigDecimal)
+ Criteria andDisProvisionFeeGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisProvisionFeeLessThan(BigDecimal)
+ Criteria andDisProvisionFeeLessThanOrEqualTo(BigDecimal)
+ Criteria andDisProvisionFeeIn(List<BigDecimal>)
+ Criteria andDisProvisionFeeNotIn(List<BigDecimal>)
+ Criteria andDisProvisionFeeBetween(BigDecimal,BigDecimal)
+ Criteria andDisProvisionFeeNotBetween(BigDecimal,BigDecimal)
+ Criteria andDisLateFeeUnpayIsNull()
+ Criteria andDisLateFeeUnpayIsNotNull()
+ Criteria andDisLateFeeUnpayEqualTo(BigDecimal)
+ Criteria andDisLateFeeUnpayNotEqualTo(BigDecimal)
+ Criteria andDisLateFeeUnpayGreaterThan(BigDecimal)
+ Criteria andDisLateFeeUnpayGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisLateFeeUnpayLessThan(BigDecimal)
+ Criteria andDisLateFeeUnpayLessThanOrEqualTo(BigDecimal)
+ Criteria andDisLateFeeUnpayIn(List<BigDecimal>)
+ Criteria andDisLateFeeUnpayNotIn(List<BigDecimal>)
+ Criteria andDisLateFeeUnpayBetween(BigDecimal,BigDecimal)
+ Criteria andDisLateFeeUnpayNotBetween(BigDecimal,BigDecimal)
+ Criteria andDisAdminFeeUnpayIsNull()
+ Criteria andDisAdminFeeUnpayIsNotNull()
+ Criteria andDisAdminFeeUnpayEqualTo(BigDecimal)
+ Criteria andDisAdminFeeUnpayNotEqualTo(BigDecimal)
+ Criteria andDisAdminFeeUnpayGreaterThan(BigDecimal)
+ Criteria andDisAdminFeeUnpayGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisAdminFeeUnpayLessThan(BigDecimal)
+ Criteria andDisAdminFeeUnpayLessThanOrEqualTo(BigDecimal)
+ Criteria andDisAdminFeeUnpayIn(List<BigDecimal>)
+ Criteria andDisAdminFeeUnpayNotIn(List<BigDecimal>)
+ Criteria andDisAdminFeeUnpayBetween(BigDecimal,BigDecimal)
+ Criteria andDisAdminFeeUnpayNotBetween(BigDecimal,BigDecimal)
+ Criteria andDisInterestFeeUnpayIsNull()
+ Criteria andDisInterestFeeUnpayIsNotNull()
+ Criteria andDisInterestFeeUnpayEqualTo(BigDecimal)
+ Criteria andDisInterestFeeUnpayNotEqualTo(BigDecimal)
+ Criteria andDisInterestFeeUnpayGreaterThan(BigDecimal)
+ Criteria andDisInterestFeeUnpayGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisInterestFeeUnpayLessThan(BigDecimal)
+ Criteria andDisInterestFeeUnpayLessThanOrEqualTo(BigDecimal)
+ Criteria andDisInterestFeeUnpayIn(List<BigDecimal>)
+ Criteria andDisInterestFeeUnpayNotIn(List<BigDecimal>)
+ Criteria andDisInterestFeeUnpayBetween(BigDecimal,BigDecimal)
+ Criteria andDisInterestFeeUnpayNotBetween(BigDecimal,BigDecimal)
+ Criteria andDisPrincipalUnpayIsNull()
+ Criteria andDisPrincipalUnpayIsNotNull()
+ Criteria andDisPrincipalUnpayEqualTo(BigDecimal)
+ Criteria andDisPrincipalUnpayNotEqualTo(BigDecimal)
+ Criteria andDisPrincipalUnpayGreaterThan(BigDecimal)
+ Criteria andDisPrincipalUnpayGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisPrincipalUnpayLessThan(BigDecimal)
+ Criteria andDisPrincipalUnpayLessThanOrEqualTo(BigDecimal)
+ Criteria andDisPrincipalUnpayIn(List<BigDecimal>)
+ Criteria andDisPrincipalUnpayNotIn(List<BigDecimal>)
+ Criteria andDisPrincipalUnpayBetween(BigDecimal,BigDecimal)
+ Criteria andDisPrincipalUnpayNotBetween(BigDecimal,BigDecimal)
+ Criteria andDisFundFeeUnpayIsNull()
+ Criteria andDisFundFeeUnpayIsNotNull()
+ Criteria andDisFundFeeUnpayEqualTo(BigDecimal)
+ Criteria andDisFundFeeUnpayNotEqualTo(BigDecimal)
+ Criteria andDisFundFeeUnpayGreaterThan(BigDecimal)
+ Criteria andDisFundFeeUnpayGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisFundFeeUnpayLessThan(BigDecimal)
+ Criteria andDisFundFeeUnpayLessThanOrEqualTo(BigDecimal)
+ Criteria andDisFundFeeUnpayIn(List<BigDecimal>)
+ Criteria andDisFundFeeUnpayNotIn(List<BigDecimal>)
+ Criteria andDisFundFeeUnpayBetween(BigDecimal,BigDecimal)
+ Criteria andDisFundFeeUnpayNotBetween(BigDecimal,BigDecimal)
+ Criteria andDisProvisionFeeUnpayIsNull()
+ Criteria andDisProvisionFeeUnpayIsNotNull()
+ Criteria andDisProvisionFeeUnpayEqualTo(BigDecimal)
+ Criteria andDisProvisionFeeUnpayNotEqualTo(BigDecimal)
+ Criteria andDisProvisionFeeUnpayGreaterThan(BigDecimal)
+ Criteria andDisProvisionFeeUnpayGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisProvisionFeeUnpayLessThan(BigDecimal)
+ Criteria andDisProvisionFeeUnpayLessThanOrEqualTo(BigDecimal)
+ Criteria andDisProvisionFeeUnpayIn(List<BigDecimal>)
+ Criteria andDisProvisionFeeUnpayNotIn(List<BigDecimal>)
+ Criteria andDisProvisionFeeUnpayBetween(BigDecimal,BigDecimal)
+ Criteria andDisProvisionFeeUnpayNotBetween(BigDecimal,BigDecimal)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.LoanCouponExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanCouponExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.dto.ProductRateConfigExtVO {
- Long adminId
- Long id
- String productCode
- String name
- String secondProdCode
- String riskLevel
- Boolean status
- BigDecimal fundInterestRate
- BigDecimal serviceFeeRate
- Byte fundInterestType
- String extend
- String fixFundInterest
- Boolean isHeadFee
- Byte adminType
- BigDecimal adminRate
- Integer fixAdminFee
- String provisionRate
- Double provisionDecRate
- String matrixs
- BigDecimal fundProvisionRate
- BigDecimal lateRate
- BigDecimal advanceRate
- Date updateAt
- Date createdAt
- String tenorMin
- String tenorMax
- BigDecimal debtRation
- Long fundId
- String fundName
- Long amountMin
- Long amountMax
- Long defTenorSize
- Long defAmountSize
- String extCfg
- Boolean isHighLight
- List<FinanceFundRateConfigVO> fundRateConfigVOList
}
interface com.welab.loan.finance.service.dues.IDuesService {
~ Response<Integer> findMaxOverdueDay(LoanOverdueQry)
~ Response<List<DuesDto>> findAllDues(List<String>,Boolean)
}
class com.welab.loan.finance.rabbitmq.syn.SynUserblanceConsumer {
- FinanceUserAccountMapper financeUserAccountMapper
- FinanceUserAccountBalanceBakMapper financeUserAccountBalanceBakMapper
+ void onMessage(Message)
}
class com.welab.loan.finance.dto.InvoiceImportResultDTO {
- {static} long serialVersionUID
- Map<String,String> successMap
- Map<String,String> failMap
}
interface com.welab.loan.finance.mapper.InsuranceRecordMapper {
~ int countByExample(InsuranceRecordExample)
~ int deleteByExample(InsuranceRecordExample)
~ int deleteByPrimaryKey(Long)
~ int insert(InsuranceRecord)
~ int insertSelective(InsuranceRecord)
~ List<InsuranceRecord> selectByExample(InsuranceRecordExample)
~ InsuranceRecord selectByPrimaryKey(Long)
~ int updateByExampleSelective(InsuranceRecord,InsuranceRecordExample)
~ int updateByExample(InsuranceRecord,InsuranceRecordExample)
~ int updateByPrimaryKeySelective(InsuranceRecord)
~ int updateByPrimaryKey(InsuranceRecord)
}
class com.welab.loan.finance.vo.TravelokaLoanVO {
- Long principal
- Long upfrontAD
- Long upfrontPV
- Long upfrontIF
- Long upfrontPF
- Long repayAD
- Long repayPV
- Long repayIF
- Long repayPF
- Double lfDayPercent
- Long amountDisbursed
- String tenor
- Long commercialFee
- String accountNo
- String bankName
- String to
- String disbursementTime
- String by
- String productCode
- String funder
- String disbursementCommand
- Long dpd
- Date actualDisbursementTime
- Date uploadDate
- Long outstandingAmount
- Date lendAt
+ {static} Map getExportMap(String)
+ {static} Map getExportMapNew(String)
}
class com.welab.loan.finance.facade.paygateway.PayServiceFacade {
- PayService payService
+ Response<TransferVO> transfer(TransferDto)
+ Response<Void> asyncTransfer(TransferDto)
+ Response<Void> asyncPaying(PayingDto)
}
class com.welab.loan.finance.core.dto.RateTypeDTO {
- BigDecimal provisionRate
- BigDecimal fundInterestRate
- BigDecimal serviceFeeRate
- BigDecimal adminFee
}
class com.welab.loan.finance.vo.repayment.DuesAndRepaymentVO {
- String loanNumber
- List<UploadDuesExcelVO> duesExcelList
- List<UploadRepaymentExcelVO> repaymentExcelList
}
interface com.welab.loan.finance.service.AdvanceRepaymentService {
~ Response<Object> advanceConfirm(AdvanceRepaymentInitiateCmd)
~ Response<Object> startAdvanceRepayment(AdvanceRepaymentStartCmd)
~ Response<Map<Long,Long>> getAdvanceMsgIds(AdvanceRepaymentQry)
~ Response<AdvanceRepaymentDTO> queryAdvanceRepaymentInfo(AdvanceRepaymentQry)
~ Response<Boolean> getAdvancedEnableStatus(AdvanceRepaymentQry)
~ Response<AdvanceRepaymentDTO> lastRecordByLoanNumber(AdvanceRepaymentQry)
}
class com.welab.loan.finance.model.CreditUserTagRuleExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditUserTagRuleExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditUserTagRuleExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andOriginalTagsIsNull()
+ Criteria andOriginalTagsIsNotNull()
+ Criteria andOriginalTagsEqualTo(String)
+ Criteria andOriginalTagsNotEqualTo(String)
+ Criteria andOriginalTagsGreaterThan(String)
+ Criteria andOriginalTagsGreaterThanOrEqualTo(String)
+ Criteria andOriginalTagsLessThan(String)
+ Criteria andOriginalTagsLessThanOrEqualTo(String)
+ Criteria andOriginalTagsLike(String)
+ Criteria andOriginalTagsNotLike(String)
+ Criteria andOriginalTagsIn(List<String>)
+ Criteria andOriginalTagsNotIn(List<String>)
+ Criteria andOriginalTagsBetween(String,String)
+ Criteria andOriginalTagsNotBetween(String,String)
+ Criteria andTargetTagIsNull()
+ Criteria andTargetTagIsNotNull()
+ Criteria andTargetTagEqualTo(String)
+ Criteria andTargetTagNotEqualTo(String)
+ Criteria andTargetTagGreaterThan(String)
+ Criteria andTargetTagGreaterThanOrEqualTo(String)
+ Criteria andTargetTagLessThan(String)
+ Criteria andTargetTagLessThanOrEqualTo(String)
+ Criteria andTargetTagLike(String)
+ Criteria andTargetTagNotLike(String)
+ Criteria andTargetTagIn(List<String>)
+ Criteria andTargetTagNotIn(List<String>)
+ Criteria andTargetTagBetween(String,String)
+ Criteria andTargetTagNotBetween(String,String)
+ Criteria andOriginalSecondTagsIsNull()
+ Criteria andOriginalSecondTagsIsNotNull()
+ Criteria andOriginalSecondTagsEqualTo(String)
+ Criteria andOriginalSecondTagsNotEqualTo(String)
+ Criteria andOriginalSecondTagsGreaterThan(String)
+ Criteria andOriginalSecondTagsGreaterThanOrEqualTo(String)
+ Criteria andOriginalSecondTagsLessThan(String)
+ Criteria andOriginalSecondTagsLessThanOrEqualTo(String)
+ Criteria andOriginalSecondTagsLike(String)
+ Criteria andOriginalSecondTagsNotLike(String)
+ Criteria andOriginalSecondTagsIn(List<String>)
+ Criteria andOriginalSecondTagsNotIn(List<String>)
+ Criteria andOriginalSecondTagsBetween(String,String)
+ Criteria andOriginalSecondTagsNotBetween(String,String)
+ Criteria andTargetSecondTagIsNull()
+ Criteria andTargetSecondTagIsNotNull()
+ Criteria andTargetSecondTagEqualTo(String)
+ Criteria andTargetSecondTagNotEqualTo(String)
+ Criteria andTargetSecondTagGreaterThan(String)
+ Criteria andTargetSecondTagGreaterThanOrEqualTo(String)
+ Criteria andTargetSecondTagLessThan(String)
+ Criteria andTargetSecondTagLessThanOrEqualTo(String)
+ Criteria andTargetSecondTagLike(String)
+ Criteria andTargetSecondTagNotLike(String)
+ Criteria andTargetSecondTagIn(List<String>)
+ Criteria andTargetSecondTagNotIn(List<String>)
+ Criteria andTargetSecondTagBetween(String,String)
+ Criteria andTargetSecondTagNotBetween(String,String)
+ Criteria andTriggerMethodIsNull()
+ Criteria andTriggerMethodIsNotNull()
+ Criteria andTriggerMethodEqualTo(String)
+ Criteria andTriggerMethodNotEqualTo(String)
+ Criteria andTriggerMethodGreaterThan(String)
+ Criteria andTriggerMethodGreaterThanOrEqualTo(String)
+ Criteria andTriggerMethodLessThan(String)
+ Criteria andTriggerMethodLessThanOrEqualTo(String)
+ Criteria andTriggerMethodLike(String)
+ Criteria andTriggerMethodNotLike(String)
+ Criteria andTriggerMethodIn(List<String>)
+ Criteria andTriggerMethodNotIn(List<String>)
+ Criteria andTriggerMethodBetween(String,String)
+ Criteria andTriggerMethodNotBetween(String,String)
+ Criteria andFormulaConfigIsNull()
+ Criteria andFormulaConfigIsNotNull()
+ Criteria andFormulaConfigEqualTo(String)
+ Criteria andFormulaConfigNotEqualTo(String)
+ Criteria andFormulaConfigGreaterThan(String)
+ Criteria andFormulaConfigGreaterThanOrEqualTo(String)
+ Criteria andFormulaConfigLessThan(String)
+ Criteria andFormulaConfigLessThanOrEqualTo(String)
+ Criteria andFormulaConfigLike(String)
+ Criteria andFormulaConfigNotLike(String)
+ Criteria andFormulaConfigIn(List<String>)
+ Criteria andFormulaConfigNotIn(List<String>)
+ Criteria andFormulaConfigBetween(String,String)
+ Criteria andFormulaConfigNotBetween(String,String)
+ Criteria andExtConfigIsNull()
+ Criteria andExtConfigIsNotNull()
+ Criteria andExtConfigEqualTo(String)
+ Criteria andExtConfigNotEqualTo(String)
+ Criteria andExtConfigGreaterThan(String)
+ Criteria andExtConfigGreaterThanOrEqualTo(String)
+ Criteria andExtConfigLessThan(String)
+ Criteria andExtConfigLessThanOrEqualTo(String)
+ Criteria andExtConfigLike(String)
+ Criteria andExtConfigNotLike(String)
+ Criteria andExtConfigIn(List<String>)
+ Criteria andExtConfigNotIn(List<String>)
+ Criteria andExtConfigBetween(String,String)
+ Criteria andExtConfigNotBetween(String,String)
+ Criteria andWeightIsNull()
+ Criteria andWeightIsNotNull()
+ Criteria andWeightEqualTo(Integer)
+ Criteria andWeightNotEqualTo(Integer)
+ Criteria andWeightGreaterThan(Integer)
+ Criteria andWeightGreaterThanOrEqualTo(Integer)
+ Criteria andWeightLessThan(Integer)
+ Criteria andWeightLessThanOrEqualTo(Integer)
+ Criteria andWeightIn(List<Integer>)
+ Criteria andWeightNotIn(List<Integer>)
+ Criteria andWeightBetween(Integer,Integer)
+ Criteria andWeightNotBetween(Integer,Integer)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Boolean)
+ Criteria andStatusNotEqualTo(Boolean)
+ Criteria andStatusGreaterThan(Boolean)
+ Criteria andStatusGreaterThanOrEqualTo(Boolean)
+ Criteria andStatusLessThan(Boolean)
+ Criteria andStatusLessThanOrEqualTo(Boolean)
+ Criteria andStatusIn(List<Boolean>)
+ Criteria andStatusNotIn(List<Boolean>)
+ Criteria andStatusBetween(Boolean,Boolean)
+ Criteria andStatusNotBetween(Boolean,Boolean)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.CreditUserTagRuleExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.CreditUserTagRuleExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.job.ClearDownLoadJob {
- String DATE_STR
- Integer day
- BaseFinanceExport financeExport
+ void execute(ShardingContext)
}
class com.welab.loan.finance.calculator.FixedDateCalculatorV1 {
+ List<Due> calculate(Date,BigDecimal,String,BigDecimal,BigDecimal,Map<String,BigDecimal>)
}
class com.welab.loan.finance.vo.RetracementCreditVO {
- String loanNumber
}
interface com.welab.loan.finance.mapper.UserAdvancePaymentExtndMapper {
~ long countByExample(UserAdvancePaymentExtndExample)
~ int deleteByPrimaryKey(Long)
~ int insert(UserAdvancePaymentExtnd)
~ int insertSelective(UserAdvancePaymentExtnd)
~ List<UserAdvancePaymentExtnd> selectByExample(UserAdvancePaymentExtndExample)
~ UserAdvancePaymentExtnd selectByPrimaryKey(Long)
~ int updateByExampleSelective(UserAdvancePaymentExtnd,UserAdvancePaymentExtndExample)
~ int updateByExample(UserAdvancePaymentExtnd,UserAdvancePaymentExtndExample)
~ int updateByPrimaryKeySelective(UserAdvancePaymentExtnd)
~ int updateByPrimaryKey(UserAdvancePaymentExtnd)
}
class com.welab.loan.finance.vo.QuickUseCreditVO {
- Long userId
- String loanNumber
- Long useMoney
- String productCode
- String secondProductCode
- String merchantCode
- String tenor
- boolean mandatoryCheck
- Integer abTestGroupType
- Long abTestId
}
class com.welab.loan.finance.dto.SignConfigDto {
- String key
- String desc
- Integer signType
}
class com.welab.loan.finance.vo.response.paybills.BillAmountReportVO {
- String channel
- BigDecimal transactionAmount
- BigDecimal receivedAmount
}
class com.welab.loan.finance.dto.cmd.ExportMerchantLoanCmd {
- Long userId
}
class com.welab.loan.finance.model.LoanUvfRepayment {
- Long id
- Long orgId
- String loanNumber
- String applyNo
- String branchId
- String contractId
- Date repaymentAt
- String userName
- Long userId
- Integer period
- String seqNo
- Long installmentAmount
- Long totalAmount
- Long repaymentAmount
- Long collectionFee
- Long lateFee
- Long outstandingAmount
- Long fundId
- Long serviceFeePay
- Long fundAmountPay
- Long lateFeeUnpay
- Long outstandingLoan
- Long transferAmount
- Long operatorId
- Date createdAt
- Date updateAt
- String term
- Long actualTotalAmount
- Long actualInterestAmount
- Long actualPrincipalAmount
- Long actualOutstandingLoan
- String secondProdCode
- BigDecimal mgsPortion
- BigDecimal mgsPortionRate
- BigDecimal portion
- BigDecimal portionRate
- Long interestDiscount
- String approvedBy
+ Long getId()
+ void setId(Long)
+ Long getOrgId()
+ void setOrgId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getApplyNo()
+ void setApplyNo(String)
+ String getBranchId()
+ void setBranchId(String)
+ String getContractId()
+ void setContractId(String)
+ Date getRepaymentAt()
+ void setRepaymentAt(Date)
+ String getUserName()
+ void setUserName(String)
+ Long getUserId()
+ void setUserId(Long)
+ Integer getPeriod()
+ void setPeriod(Integer)
+ String getSeqNo()
+ void setSeqNo(String)
+ Long getInstallmentAmount()
+ void setInstallmentAmount(Long)
+ Long getTotalAmount()
+ void setTotalAmount(Long)
+ Long getRepaymentAmount()
+ void setRepaymentAmount(Long)
+ Long getCollectionFee()
+ void setCollectionFee(Long)
+ Long getLateFee()
+ void setLateFee(Long)
+ Long getOutstandingAmount()
+ void setOutstandingAmount(Long)
+ Long getFundId()
+ void setFundId(Long)
+ Long getServiceFeePay()
+ void setServiceFeePay(Long)
+ Long getFundAmountPay()
+ void setFundAmountPay(Long)
+ Long getLateFeeUnpay()
+ void setLateFeeUnpay(Long)
+ Long getOutstandingLoan()
+ void setOutstandingLoan(Long)
+ Long getTransferAmount()
+ void setTransferAmount(Long)
+ Long getOperatorId()
+ void setOperatorId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ String getTerm()
+ void setTerm(String)
+ Long getActualTotalAmount()
+ void setActualTotalAmount(Long)
+ Long getActualInterestAmount()
+ void setActualInterestAmount(Long)
+ Long getActualPrincipalAmount()
+ void setActualPrincipalAmount(Long)
+ Long getActualOutstandingLoan()
+ void setActualOutstandingLoan(Long)
+ String getSecondProdCode()
+ void setSecondProdCode(String)
+ BigDecimal getMgsPortion()
+ void setMgsPortion(BigDecimal)
+ BigDecimal getMgsPortionRate()
+ void setMgsPortionRate(BigDecimal)
+ BigDecimal getPortion()
+ void setPortion(BigDecimal)
+ BigDecimal getPortionRate()
+ void setPortionRate(BigDecimal)
+ Long getInterestDiscount()
+ void setInterestDiscount(Long)
+ String getApprovedBy()
+ void setApprovedBy(String)
}
class com.welab.loan.finance.dto.LoanPlansRelationDTO {
- {static} long serialVersionUID
- Long id
- String loanNumber
- Long amount
- String period
- String oldLoanNumber
- Long applyId
- Byte status
- String secondProductCode
}
class com.welab.loan.finance.common.Urls {
+ {static} String ROOT
+ {static} String ROOT_DESC
+ {static} String V1
+ {static} String V2
+ {static} String V3
+ {static} String NO_AUTH
+ {static} String AUTH
- <<Create>> Urls()
}
interface com.welab.loan.finance.common.Urls$NS {
~ String MODULE
~ String LOAN_LIST
~ String LOAN_LIST_DESC
~ String REPAYMENT_LIST
~ String REPAYMENT_LIST_DESC
~ String DUE_LIST
~ String DUE_LIST_DESC
}
interface com.welab.loan.finance.common.Urls$Flexifit {
~ String MODULE
~ String REPAYMENT_IMPORT
~ String REPAYMENT_IMPORT_DESC
}
class com.welab.loan.finance.common.Urls$Applications {
+ {static} String MODULE
+ {static} String V1_GET_USER_BANKCARD
+ {static} String V1_GET_USER_BANKCARD_DESC
+ {static} String V1_SAVE_USER_BANKCARD
+ {static} String V1_SAVE_USER_BANKCARD_DESC
+ {static} String V1_CHANGE_BIND_CARD
+ {static} String V1_CHANGE_BIND_CARD_DESC
+ {static} String V1_GET_DUES
+ {static} String V1_GET_DUES_DESC
+ {static} String V1_GET_DUES_BY_USER_ID
+ {static} String V1_GET_DUES_BY_USER_ID_DESC
+ {static} String V1_GET_TRANS_DETAIL_BY_LOAN
+ {static} String V1_GET_TRANS_DETAIL_BY_LOAN_DESC
+ {static} String V1_MULTIPLE_REPAYMENT
+ {static} String V1_MULTIPLE_REPAYMENT_DESC
+ {static} String V2_MULTIPLE_REPAYMENT
+ {static} String V2_MULTIPLE_REPAYMENT_DESC
+ {static} String V1_CREATE_DUES
+ {static} String V1_CREATE_DUES_DESC
+ {static} String V1_BANK_STORE_LIST
+ {static} String V1_BANK_STORE_LIST_DESC
+ {static} String V1_TRANSFER_XENDIT
+ {static} String V1_TRANSFER_XENDIT_DESC
+ {static} String V1_BANK_STEP
+ {static} String V1_BANK_STEP_DESC
+ {static} String V1_REPAY_CALCULATE
+ {static} String V1_REPAY_CALCULATE_DESC
+ {static} String V2_REPAY_CALCULATE
+ {static} String V2_REPAY_CALCULATE_DESC
+ {static} String V1_REPAY_AMONUT_CHECK
+ {static} String V1_REPAY_AMONUT_CHECK_DESC
+ {static} String V1_REPAY_AMONUT_CHECK_CPLAN
+ {static} String V1_REPAY_AMONUT_CHECK_CPLAN_DESC
+ {static} String V1_REPAY_CANCEL_COUPON
+ {static} String V1_REPAY_CANCEL_COUPON_DESC
+ {static} String V2_REPAY_CANCEL_COUPON
+ {static} String V2_REPAY_CANCEL_COUPON_DESC
+ {static} String V1_REPAY_APPLY_PLAN
+ {static} String V1_REPAY_APPLY_PLAN_DESC
+ {static} String V1_REPAY_APPLY_CPLAN
+ {static} String V1_REPAY_APPLY_CPLAN_DESC
+ {static} String V1_TRY_REPAY_PLAN
+ {static} String V1_TRY_REPAY_PLAN_DESC
+ {static} String V1_TRY_REPAY_CPLAN
+ {static} String V1_TRY_REPAY_CPLAN_DESC
+ {static} String V1_TRY_REPAY_CPLAN_DETAIL
+ {static} String V1_TRY_REPAY_CPLAN_DETAIL_DESC
+ {static} String V1_TRY_REPAY_PLAN_DETAIL
+ {static} String V1_TRY_REPAY_PLAN_DETAIL_DESC
+ {static} String V1_C1PLAN_CONTRACT
+ {static} String V1_C1PLAN_CONTRACT_DESC
+ {static} String V1_CREATE_CPLAN_CONTRACT
+ {static} String V1_CREATE_CPLAN_CONTRACT_DESC
+ {static} String V1_QUERY_C1PLAN_CONTRACT
+ {static} String V1_QUERY_C1PLAN_CONTRACT_DESC
+ {static} String V1_C1PLAN_PUSH
+ {static} String V1_C1PLAN_PUSH_DESC
+ {static} String V1_QUERY_REPAY_AMOUNT
+ {static} String V1_QUERY_REPAY_AMOUNT_DESC
+ {static} String V1_QUERY_CPLAN_AMOUNT
+ {static} String V1_QUERY_CPLAN_AMOUNT_DESC
+ {static} String V1_QUERY_FPLAN_CONTRACT
+ {static} String V1_QUERY_FPLAN_CONTRACT_DESC
- <<Create>> Applications()
}
class com.welab.loan.finance.common.Urls$Finances {
+ {static} String MODULE
+ {static} String V1_LOAN_LIST
+ {static} String V1_LOAN_LIST_DESC
+ {static} String V1_LOAN_LIST_EXPORT
+ {static} String V1_LOAN_LIST_EXPORT_DESC
+ {static} String V1_LOAN_DETAIL
+ {static} String V1_LOAN_DETAIL_DESC
+ {static} String V1_LOAN_CONFIG
+ {static} String V1_LOAN_CONFIG_DESC
+ {static} String V1_DISBURSEMENT_LIST
+ {static} String V1_DISBURSEMENT_LIST_DESC
+ {static} String V1_DISBURSEMENT_EXPORT
+ {static} String V1_DISBURSEMENT_EXPORT_DESC
+ {static} String V1_DISBURSEMENT_CONFIG
+ {static} String V1_DISBURSEMENT_CONFIG_DESC
+ {static} String V1_REPAYMENT_TRACK_LIST
+ {static} String V1_REPAYMENT_TRACK_LIST_DESC
+ {static} String V1_UPLOAD_REVERSAL
+ {static} String V1_UPLOAD_REVERSAL_DESC
+ {static} String V1_UPLOAD_LEND_REVERSAL
+ {static} String V1_UPLOAD_LEND_REVERSAL_DESC
+ {static} String V1_REPAYMENT_EXPORT
+ {static} String V1_REPAYMENT_EXPORT_DESC
+ {static} String V1_REPAYMENT_LIST
+ {static} String V1_REPAYMENT_LIST_DESC
+ {static} String V1_REPAYMENT_CONFIG
+ {static} String V1_REPAYMENT_CONFIG_DESC
+ {static} String V1_CUSTOMER_LIST
+ {static} String V1_CUSTOMER_LIST_DESC
+ {static} String V1_TB_CUSTOMER_LIST
+ {static} String V1_TB_CUSTOMER_LIST_DESC
+ {static} String V1_TB_PARTNER_LIST
+ {static} String V1_TB_PARTNER_LIST_DESC
+ {static} String V1_CUSTOMER_LOAN_DETAIL
+ {static} String V1_CUSTOMER_LOAN_DETAIL_DESC
+ {static} String V1_CUSTOMER_TRANS_LIST
+ {static} String V1_CUSTOMER_TRANS_LIST_DESC
+ {static} String V1_CHECKBANKCARD
+ {static} String V1_CHECKBANKCARD_DESC
+ {static} String V1_ERROR_LIST
+ {static} String V1_ERROR_LIST_DESC
+ {static} String V1_ERROR_CONFIG
+ {static} String V1_ERROR_CONFIG_DESC
+ {static} String V1_ERROR_HANDIER
+ {static} String V1_ERROR_HANDIER_DESC
+ {static} String V1_GET_USER_BANKCARD
+ {static} String V1_GET_USER_BANKCARD_DESC
+ {static} String V1_DUES_LIST
+ {static} String V1_DUES_LIST_DESC
+ {static} String V1_DUES_EXPORT
+ {static} String V1_DUES_EXPORT_DESC
+ {static} String V1_EXPORT_LIST
+ {static} String V1_EXPORT_LIST_DESC
+ {static} String V1_DownLoad
+ {static} String V1_DownLoad_DESC
+ {static} String V1_UPLOAD_REPAYMENT
+ {static} String V1_UPLOAD_REPAYMENT_DESC
+ {static} String V1_TRANSFER_LIST
+ {static} String V1_TRANSFER_LIST_DESC
+ {static} String V1_TRANSFER_LIST_EXPORT
+ {static} String V1_TRANSFER_LIST_EXPORT_DESC
+ {static} String V1_FINANCE_TRADING_LIST
+ {static} String V1_FINANCE_TRADING_LIST_DESC
+ {static} String V1_SWITCH_SIGN
+ {static} String V1_SWITCH_SIGN_DESC
+ {static} String V1_GET_SIGN_TYPE
+ {static} String V1_GET_SIGN_TYPE_DESC
+ {static} String V1_SIGN_OPERATE_HISTORY
+ {static} String V1_SIGN_OPERATE_HISTORY_DESC
+ {static} String V1_DISBURSE_SUCCESS
+ {static} String V1_DISBURSE_SUCCESS_DESC
+ {static} String VIRTUALACCOUNT_LIST
+ {static} String VIRTUALACCOUNT_LIST_DESC
+ {static} String CREATE_VANUMBER
+ {static} String CREATE_VANUMBER_DESC
+ {static} String VIRTUALACCOUNT_UPDATE
+ {static} String VIRTUALACCOUNT_UPDATE_DESC
+ {static} String VIRTUALACCOUNT_ADD
+ {static} String VIRTUALACCOUNT_ADD_DESC
- <<Create>> Finances()
}
class com.welab.loan.finance.common.Urls$Product {
+ {static} String MODULE
+ {static} String V1_GET_PRODUCT_PAGE
+ {static} String V1_GET_PRODUCT_PAGE_DESC
+ {static} String V1_GET_PRODUCT_RATE_CONFIG
+ {static} String V1_GET_PRODUCT_RATE_CONFIG_DESC
+ {static} String V1_GET_PRODUCT_RATE_CONFIG_BY_ID
+ {static} String V1_GET_PRODUCT_RATE_CONFIG_BY_ID_DESC
+ {static} String V1_SAVE_PRODUCT_RATE_CONFIG
+ {static} String V1_SAVE_PRODUCT_RATE_CONFIG_DESC
+ {static} String V1_UPDATE_FUND_RATE_CONFIG
+ {static} String V1_UPDATE_FUND_RATE_CONFIG_DESC
+ {static} String V1_SAVE_PRODUCT
+ {static} String V1_SAVE_PRODUCT_DESC
+ {static} String V1_GET_PRODUCT_CONFIG
+ {static} String V1_GET_PRODUCT_CONFIG_DESC
+ {static} String V1_LOAN_TIMEOUT_CONFIG_SAVE
+ {static} String V1_LOAN_TIMEOUT_CONFIG_SAVE_DESC
+ {static} String V1_REFRESH_PRODUCT_CONFIG
+ {static} String V1_REFRESH_PRODUCT_CONFIG_DESC
- <<Create>> Product()
}
class com.welab.loan.finance.common.Urls$Overdue {
+ {static} String MODULE
+ {static} String V1_OVERDUE_SCHEDULE
+ {static} String V1_OVERDUE_SCHEDULE_DESC
- <<Create>> Overdue()
}
class com.welab.loan.finance.common.Urls$Fund {
+ {static} String MODULE
+ {static} String V1_FUND_PAGE
+ {static} String V1_FUND_PAGE_DESC
+ {static} String V1_FUND_CONFIG
+ {static} String V1_FUND_CONFIG_DESC
+ {static} String V1_FUND_UPDATE
+ {static} String V1_FUND_UPDATE_DESC
+ {static} String V1_FUND_EXT_PAGE
+ {static} String V1_FUND_EXT_PAGE_DESC
+ {static} String V3_DONWLOAD_PENDING_LEND_LOANS
+ {static} String V3_DONWLOAD_PENDING_LEND_LOANS_DESC
- <<Create>> Fund()
}
class com.welab.loan.finance.common.Urls$GatewayTask {
+ {static} String MODULE
+ {static} String V1_TASK_CONFIG
+ {static} String V1_TASK_CONFIG_DESC
+ {static} String V1_TASK_PAGE
+ {static} String V1_TASK_PAGE_DESC
+ {static} String V1_EXPOR_TASK
+ {static} String V1_EXPOR_TASK_DESC
+ {static} String V1_RETRY_TASK
+ {static} String V1_RETRY_TASK_DESC
+ {static} String V1_TASK_REQUEST_DETAIL
+ {static} String V1_TASK_REQUEST_DETAIL_DESC
+ {static} String V1_RETRY_TASK_STATUS
+ {static} String V1_RETRY_TASK_STATUS_DESC
+ {static} String IMPORT_RETRY_TASKS
+ {static} String IMPORT_RETRY_TASKS_DESC
+ {static} String IMPORT_TASK_STATUS
+ {static} String IMPORT_TASK_STATUS_DESC
- <<Create>> GatewayTask()
}
class com.welab.loan.finance.common.Urls$RepayChannel {
+ {static} String MODULE
+ {static} String V1_GET_REPAY_CONFIG
+ {static} String V1_GET_REPAY_CONFIG_DESC
+ {static} String V1_EDIT_REPAY_CONFIG
+ {static} String V1_EDIT_REPAY_CONFIG_DESC
- <<Create>> RepayChannel()
}
class com.welab.loan.finance.common.Urls$TKB {
+ {static} String MODULE
+ {static} String V1_GET_TKB
+ {static} String V1_GET_TKB_DESC
+ {static} String V1_UPDATE_TKB
+ {static} String V1_UPDATE_TKB_DESC
- <<Create>> TKB()
}
class com.welab.loan.finance.common.Urls$FifUvf {
+ {static} String MODULE
+ {static} String V1_UVF_LOAN_LIST
+ {static} String V1_UVF_LOAN_LIST_DESC
+ {static} String V1_UVF_LOAN_DETAIL
+ {static} String V1_UVF_LOAN_DETAIL_DESC
+ {static} String V1_UPLOAD_UVF_LOAN
+ {static} String V1_UPLOAD_UVF_LOAN_DESC
+ {static} String V1_UPLOAD_UVF_DOC
+ {static} String V1_UPLOAD_UVF_DOC_DESC
+ {static} String V1_UVF_DOC_LIST
+ {static} String V1_UVF_DOC_LIST_DESC
+ {static} String V1_UVF_DOC_DOWNLOAD
+ {static} String V1_UVF_DOC_DOWNLOAD_DESC
+ {static} String V3_UVF_DOC_DOWNLOAD
+ {static} String V3_UVF_DOC_DOWNLOAD_DESC
+ {static} String V1_UPLOAD_UVF_MOTOR_LOAN
+ {static} String V1_UPLOAD_UVF_MOTOR_LOAN_DESC
+ {static} String V1_UPLOAD_UVF_CHANNELLING_LOAN
+ {static} String V1_UPLOAD_UVF_CHANNELLING_LOAN_DESC
+ {static} String V1__UVF_REPOSSESS_REPAYMENT_LIST
+ {static} String V1__UVF_REPOSSESS_REPAYMENT_LIST_DESC
+ {static} String V1_UPLOAD_MOTOR_REPOSSESS_REPAYMENT
+ {static} String V1_UPLOAD_MOTOR_REPOSSESS_REPAYMENT_DESC
+ {static} String V1_UVF_CONFIRM_LOAN
+ {static} String V1_UVF_CONFIRM_LOAN_DESC
+ {static} String V1_UVF_LOAN_CONFIG
+ {static} String V1_UVF_LOAN_CONFIG_DESC
+ {static} String V1_UVF_LOAN_DOWN
+ {static} String V1_UVF_LOAN_DOWN_DESC
+ {static} String V1_UVF_LOAN_REPAYMENT
+ {static} String V1_UVF_LOAN_REPAYMENT_DESC
+ {static} String V1_UVF_MOTO_LOAN_REPAYMENT
+ {static} String V1_UVF_MOTO_LOAN_REPAYMENT_DESC
+ {static} String V1_UVF_LOAN_REPAYMENT_LIST
+ {static} String V1_UVF_LOAN_REPAYMENT_LIST_DESC
+ {static} String V1_UVF_LOAN_REPAYMENT_EXPORT
+ {static} String V1_UVF_LOAN_REPAYMENT_EXPORT_DESC
+ {static} String V1_UVF_LOAN_DUE_LIST_UPLOAD
+ {static} String V1_UVF_LOAN_DUE_LIST_UPLOAD_DESC
+ {static} String V1_UVF_MOTO_LOAN_DUE_LIST_UPLOAD
+ {static} String V1_UVF_MOTO_LOAN_DUE_LIST_UPLOAD_DESC
+ {static} String V1_UVF_LOAN_DUE_LIST
+ {static} String V1_UVF_LOAN_DUE_LIST_DESC
- <<Create>> FifUvf()
}
class com.welab.loan.finance.common.Urls$LoanWarranty {
+ {static} String MODULE
+ {static} String V1_IMPORT
+ {static} String V1_IMPORT_DESC
+ {static} String V1_QUERY
+ {static} String V1_QUERY_DESC
+ {static} String V1_EXPORT
+ {static} String V1_EXPORT_DESC
+ {static} String V1_REPAYMENTTRACKT
+ {static} String V1_REPAYMENTTRACKT_DESC
+ {static} String V1_REPAYMENTTRACKT_EXPORT
+ {static} String V1_REPAYMENTTRACKT_EXPORT_DESC
- <<Create>> LoanWarranty()
}
class com.welab.loan.finance.common.Urls$Recharge {
+ {static} String MODULE
+ {static} String V1_LOAN_COLLECTIONREPAYMENT
+ {static} String V1_LOAN_COLLECTIONREPAYMENT_DESC
+ {static} String V1_LOAN_FINDGOBACK_REPAYMENT
+ {static} String V1_LOAN_FINDGOBACK_REPAYMENT_DESC
+ {static} String V1_UPDATE_DELAY_PAYMENT
+ {static} String V1_UPDATE_DELAY_PAYMENT_DESC
+ {static} String V1_FIND_FASPAY_BANKS
+ {static} String V1_FIND_FASPAY_BANKS_DESC
+ {static} String V1_FIND_CHANNELS
+ {static} String V1_FIND_CHANNELS_DESC
+ {static} String V1_FIND_MULTI_LOAN
+ {static} String V1_FIND_MULTI_LOAN_DESC
+ {static} String V1_FIND_MULTI_GOBACK_AMOUNT
+ {static} String V1_FIND_MULTI_GOBACK_AMOUNT_DESC
+ {static} String V1_MULTI_LOAN_COLLECTIONREPAYMENT
+ {static} String V1_MULTI_LOAN_COLLECTIONREPAYMENT_DESC
- <<Create>> Recharge()
}
class com.welab.loan.finance.common.Urls$Contract {
+ {static} String MODULE
+ {static} String V1_CONTRACT_LIST
+ {static} String V1_CONTRACT_LIST_DESC
+ {static} String V1_CONTRACT_DOWNLOAD
+ {static} String V1_CONTRACT_DOWNLOAD_DESC
- <<Create>> Contract()
}
class com.welab.loan.finance.common.Urls$SkaChannel {
+ {static} String MODULE
+ {static} String V1_SKA_DUE_LIST_UPLOAD
+ {static} String V1_SKA_DUE_LIST_UPLOAD_DESC
+ {static} String V1_SKA_LOAN_DUE_LIST
+ {static} String V1_SKA_LOAN_DUE_LIST_DESC
+ {static} String V1_SKA_REPAYMENT_LIST_UPLOAD
+ {static} String V1_SKA_REPAYMENT_LIST_UPLOAD_DESC
+ {static} String V1_SKA_REPAYMENT_LIST
+ {static} String V1_SKA_REPAYMENT_LIST_DESC
+ {static} String V1_SKA_REPAYMENT_LIST_EXPORT
+ {static} String V1_SKA_REPAYMENT_LIST_EXPORT_DESC
- <<Create>> SkaChannel()
}
class com.welab.loan.finance.common.Urls$TestCenter {
+ {static} String MODULE
+ {static} String V1_REPAYMENT_DUESINDEX
+ {static} String V1_REPAYMENT_DUESINDEX_DESC
+ {static} String V1_REPAYMENT
+ {static} String V1_REPAYMENT_DESC
- <<Create>> TestCenter()
}
class com.welab.loan.finance.common.Urls$PayLater {
+ {static} String MODULE
+ {static} String V1_PAYLATER_LOANS
+ {static} String V1_PAYLATER_LOANS_DESC
+ {static} String V1_PAYLATER_TAGS
+ {static} String V1_PAYLATER_TAGS_DESC
+ {static} String V1_UPDATE_CREDIT_CONFIG
+ {static} String V1_UPDATE_CREDIT_CONFIG_DESC
+ {static} String V1_PAYLATER_UPDATE_TAG
+ {static} String V1_PAYLATER_UPDATE_TAG_DESC
+ {static} String V1_TAG_CONFIG
+ {static} String V1_TAG_CONFIG_DESC
- <<Create>> PayLater()
}
class com.welab.loan.finance.common.Urls$CreditTag {
+ {static} String MODULE
+ {static} String V3_CREDITTAG_LIST
+ {static} String V3_CREDITTAG_LIST_DESC
- <<Create>> CreditTag()
}
class com.welab.loan.finance.common.Urls$Tb {
+ {static} String MODULE
+ {static} String V1_USER
+ {static} String V1_USER_DESC
+ {static} String V1_USER_EXPORT
+ {static} String V1_USER_EXPORT_DESC
+ {static} String V3_USER
+ {static} String V3_USER_DESC
+ {static} String V1_LOANS
+ {static} String V1_LOANS_DESC
+ {static} String V3_LOANS
+ {static} String V3_LOANS_DESC
+ {static} String V3_REPAYMENT_TRACK_LIST
+ {static} String V3_REPAYMENT_TRACK_LIST_DESC
+ {static} String V3_PENDING_REPAYMENT_LIST
+ {static} String V3_PENDING_REPAYMENT_LIST_DESC
+ {static} String V3_MULTIPLE_REPAYMENT
+ {static} String V3_MULTIPLE_REPAYMENT_DESC
+ {static} String V3_AGREEMENT_DOWNLOAD
+ {static} String V3_AGREEMENT_DOWNLOAD_DESC
+ {static} String V3_COUNT_PENDING_LEND
+ {static} String V3_COUNT_PENDING_LEND_DESC
+ {static} String V3_TB_PARTNER_LIST
+ {static} String V3_TB_PARTNER_LIST_DESC
+ {static} String V3_TB_PARTNER_LIST_MAP
+ {static} String V3_TB_PARTNER_LIST_MAP_DESC
+ {static} String V3_DISBURSEMENT_LIST
+ {static} String V3_DISBURSEMENT_LIST_DESC
+ {static} String V3_DISBURSEMENT_LIST_EXPORT
+ {static} String V3_DISBURSEMENT_LIST_EXPORT_DESC
+ {static} String V3_DISBURSEMENT_FUND_LIST
+ {static} String V3_DISBURSEMENT_FUND_LIST_DESC
+ {static} String V3_DISBURSEMENT_STATUS_LIST
+ {static} String V3_DISBURSEMENT_STATUS_LIST_DESC
+ {static} String V3_LOAN_LIST
+ {static} String V3_LOAN_LIST_DESC
+ {static} String V3_LOAN_EXPORT
+ {static} String V3_LOAN_EXPORT_DESC
+ {static} String DUES_LIST
+ {static} String DUES_LIST_DESC
+ {static} String DUES_EXPORT
+ {static} String DUES_EXPORT_DESC
+ {static} String REPAYMENT_LIST
+ {static} String REPAYMENT_LIST_DESC
+ {static} String REPAYMENT_EXPORT
+ {static} String REPAYMENT_EXPORT_DESC
+ {static} String MODULE_AGREEMENT
+ {static} String V1_AGREEMENT_UPLOAD
+ {static} String V1_AGREEMENT_UPLOAD_DESC
+ {static} String V1_AGREEMENT_LOAN_LIST
+ {static} String V1_AGREEMENT_LOAN_LIST_DESC
+ {static} String V1_AGREEMENT_LOAN_DOWNLOAD_URL
+ {static} String V1_AGREEMENT_LOAN_DOWNLOAD_URL_DESC
+ {static} String MODULE_CREDIT
+ {static} String V3_TB_CREDIT_USER_ACCOUNT_URL
+ {static} String V3_TB_CREDIT_USER_ACCOUNT_URL_DESC
+ {static} String V3_TB_CREDIT_SINGING
+ {static} String V3_TB_CREDIT_SINGING_DESC
+ {static} String V3_SELECTED_STATUS
+ {static} String V3_SELECTED_STATUS_DESC
+ {static} String V3_UPDATE_LATE_FEE
+ {static} String V3_UPDATE_LATE_FEE_DESC
- <<Create>> Tb()
}
class com.welab.loan.finance.common.Urls$CreditReLoan {
+ {static} String MODULE
+ {static} String V1_IMPORT
+ {static} String V1_IMPORT_DESC
+ {static} String V1_LIST
+ {static} String V1_LIST_DESC
- <<Create>> CreditReLoan()
}
class com.welab.loan.finance.common.Urls$Hso {
+ {static} String MODULE
+ {static} String V3_HSO_CONFIG
+ {static} String V3_HSO_CONFIG_DESC
+ {static} String V3_HSO_STORE_NAME
+ {static} String V3_HSO_STORE_NAME_DESC
+ {static} String V3_HSO_LOANS
+ {static} String V3_HSO_LOANS_DESC
+ {static} String V3_HSO_LOANS_DOWNLOAD
+ {static} String V3_HSO_LOANS_DOWNLOAD_DESC
+ {static} String V3_HOMEPAGE_LIST
+ {static} String V3_HOMEPAGE_LIST_DESC
+ {static} String V3_HSO_VERIFY_SIGN_UP
+ {static} String V3_HSO_VERIFY_SIGN_UP_DESC
+ {static} String V3_HSO_SELECTED
+ {static} String V3_HSO_SELECTED_DESC
+ {static} String V3_AGREEMENT_VIEW
+ {static} String V3_AGREEMENT_VIEW_DESC
+ {static} String V3_AHASS_LIMIT_LIST
+ {static} String V3_AHASS_LIMIT_LIST_DESC
+ {static} String V3_AHASS_LIMIT_EXPORT
+ {static} String V3_AHASS_LIMIT_EXPORT_DESC
- <<Create>> Hso()
}
class com.welab.loan.finance.common.Urls$Loans_V3 {
+ {static} String MODULE
+ {static} String SVAE_FLAG
+ {static} String SVAE_FLAG_DESC
}
class com.welab.loan.finance.common.Urls$CreditCancel {
+ {static} String MODULE
+ {static} String V3_CREDIT_CANCEL_IMPORT_EXCEL
+ {static} String V3_CREDIT_CANCEL_IMPORT_EXCEL_DESC
+ {static} String V3_CREDIT_CANCEL_LIST
+ {static} String V3_CREDIT_CANCEL_LIST_DESC
- <<Create>> CreditCancel()
}
class com.welab.loan.finance.common.Urls$DuesAndRepayImportUpdate {
+ {static} String MODULE
+ {static} String V3_LIST_IMPORT_RECORD
+ {static} String V3_LIST_IMPORT_RECORD_DESC
+ {static} String V3_DOWNLOAD_IMPORT_TEMPLATE
+ {static} String V3_DOWNLOAD_IMPORT_TEMPLATE_DESC
+ {static} String V3_UPLOAD_TEMPLATE
+ {static} String V3_UPLOAD_TEMPLATE_DESC
+ {static} String V3_IMPORT_TEMPLATE_SAVE
+ {static} String V3_IMPORT_TEMPLATE_SAVE_DESC
+ {static} String V3_IMPORT_TEMPLATE_VIEW
+ {static} String V3_IMPORT_TEMPLATE_VIEW_DESC
}
class com.welab.loan.finance.common.Urls$CreditActivityAbTestURL {
+ {static} String NAME
+ {static} String DESC
+ {static} String MODULE
+ {static} String V3_ABTEST_GET_ACTIVITY_LIST
+ {static} String V3_ABTEST_GET_ACTIVITY_LIST_DESC
+ {static} String V3_ABTEST_COUNT_ACTIVITY_STATUS
+ {static} String V3_ABTEST_COUNT_ACTIVITY_STATUS_DESC
+ {static} String V3_ABTEST_GET_TEST_GROUP_LIST
+ {static} String V3_ABTEST_GET_TEST_GROUP_LIST_DESC
+ {static} String V3_ABTEST_GET_TEST_IMPORT_USER_ID
+ {static} String V3_ABTEST_GET_TEST_IMPORT_USER_ID_DESC
+ {static} String V3_ABTEST_GET_TEST_SAVE_OR_UPDATE_GROUP_AND_ACTIVITY
+ {static} String V3_ABTEST_GET_TEST_SAVE_OR_UPDATE_GROUP_AND_ACTIVITY_DESC
+ {static} String V3_ABTEST_GET_TEST_GET_ACTIVITY_DETAIL_BY_TEST_GROUP_ID
+ {static} String V3_ABTEST_GET_TEST_GET_ACTIVITY_DETAIL_BY_TEST_GROUP_ID_DESC
+ {static} String V3_ABTEST_GET_TEST_GET_FUND_RATE_BY_SECOND_PRODUCT_CODE
+ {static} String V3_ABTEST_GET_TEST_GET_FUND_RATE_BY_SECOND_PRODUCT_CODE_DESC
+ {static} String V3_ABTEST_GET_TEST_CALCULATE_AB_TEST_RATE_VO
+ {static} String V3_ABTEST_GET_TEST_CALCULATE_AB_TEST_RATE_VO_DESC
+ {static} String V3_ABTEST_GET_TEST_GET_TAG_LIST_BY_MATRIX_TYPE
+ {static} String V3_ABTEST_GET_TEST_GET_TAG_LIST_BY_MATRIX_TYPE_DESC
+ {static} String V3_ABTEST_GET_TEST_GET_ACTIVITY_UPDATE_ACTIVITY_STATUS
+ {static} String V3_ABTEST_GET_TEST_GET_ACTIVITY_UPDATE_ACTIVITY_STATUS_DESC
+ {static} String V3_ABTEST_GET_EXPORT_LIST
+ {static} String V3_ABTEST_GET_EXPORT_LIST_DESC
+ {static} String V3_ABTEST_EXPORT
+ {static} String V3_ABTEST_EXPORT_CREATE_DESC
+ {static} String V3_ABTEST_EXPORT_DOWNLOAD_DESC
+ {static} String V3_ABTEST_USER
+ {static} String V3_ABTEST_USER_DESC
+ {static} String V3_TRIAL_CALCULATION_ABTEST_USER
+ {static} String V3_TRIAL_CALCULATION_ABTEST_USER_DESC
+ {static} String V3_ABTEST_DATA
+ {static} String V3_ABTEST_DATA_DESC
+ {static} String V3_ABTEST_TEST_GROUP_LIST_DOWNLOAD
+ {static} String V3_ABTEST_TEST_GROUP_LIST_DOWNLOAD_DESC
- <<Create>> CreditActivityAbTestURL()
}
class com.welab.loan.finance.common.Urls$Traveloka {
+ {static} String MODULE
+ {static} String V1_TRAVELOKA_LOAN_LIST
+ {static} String V1_TRAVELOKA_LOAN_LIST_DESC
+ {static} String V1_TRAVELOKA_DISBURSEMENT_LIST
+ {static} String V1_TRAVELOKA_DISBURSEMENT_LIST_DESC
+ {static} String V1_TRAVELOKA_LOAN_REPAYMENT_LIST
+ {static} String V1_TRAVELOKA_LOAN_REPAYMENT_LIST_DESC
+ {static} String V1_TRAVELOKA_LOAN_DUE_LIST
+ {static} String V1_TRAVELOKA_LOAN_DUE_LIST_DESC
+ {static} String V1_TRAVELOKA_DUES_LIST_EXPORT
+ {static} String V1_TRAVELOKA_DUES_LIST_EXPORT_DESC
+ {static} String V1_TRAVELOKA_LOAN_LIST_EXPORT
+ {static} String V1_TRAVELOKA_LOAN_LIST_EXPORT_DESC
+ {static} String V1_TRAVELOKA_DISBURSEMENT_LIST_EXPORT
+ {static} String V1_TRAVELOKA_DISBURSEMENT_LIST_EXPORT_DESC
+ {static} String V1_REPAYMENT_LIST_EXPORT
+ {static} String V1_REPAYMENT_LIST_EXPORT_DESC
+ {static} String V1_TRAVELOKA_GET_PAGE_QUERY_CONDITION
+ {static} String V1_TRAVELOKA_GET_PAGE_QUERY_CONDITION_DESC
- <<Create>> Traveloka()
}
interface com.welab.loan.finance.common.Urls$InsuranceRecordUrl {
~ String NAME
~ String DESC
~ String MODULE
~ String V3_UPLOAD_INSURANCE_INFO
~ String V3_UPLOAD_INSURANCE_INFO_DESC
~ String V3_INSURANCE_GROUP_LIST
~ String V3_INSURANCE_GROUP_LIST_DESC
~ String V3_DONWLOAD_GROUP_FILE
~ String V3_DONWLOAD_GROUP_FILE_DESC
}
interface com.welab.loan.finance.common.Urls$PayBillsUrl {
~ String NAME
~ String DESC
~ String MODULE
~ String V3_PAY_BILLS_AMOUNT
~ String V3_PAY_BILLS_AMOUNT_DESC
~ String V3_PAY_BILLS_LIST
~ String V3_PAY_BILLS_LIST_DESC
~ String V3_PAY_BILLS_IMPORT
~ String V3_PAY_BILLS_IMPORT_DESC
~ String V3_PAY_BILLS_REFRESH
~ String V3_PAY_BILLS_REFRESH_DESC
~ String V3_PAY_BILLS_RECHARGE_INFO
~ String V3_PAY_BILLS_RECHARGE_INFO_DESC
~ String V3_PAY_BILLS_REVERSE_INFO
~ String V3_PAY_BILLS_REVERSE_INFO_DESC
~ String V3_PAY_BILLS_REVERSE
~ String V3_PAY_BILLS_REVERSE_DESC
}
class com.welab.loan.finance.model.CreditLoanCancel {
- Long id
- Date createdAt
- Date updatedAt
- String loanNumber
- Byte dealStatus
- Long createBy
- String description
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Byte getDealStatus()
+ void setDealStatus(Byte)
+ Long getCreateBy()
+ void setCreateBy(Long)
+ String getDescription()
+ void setDescription(String)
}
class com.welab.loan.finance.test.PayTest {
- PayService payService
# FundAccountInfoService fundAccountInfoService
- PlanService planService
+ void test1()
+ void testDubbo()
}
interface com.welab.loan.finance.mapper.ToBAgreementDocMapper {
~ long countByExample(ToBAgreementDocExample)
~ int deleteByPrimaryKey(Long)
~ int insert(ToBAgreementDoc)
~ int insertSelective(ToBAgreementDoc)
~ List<ToBAgreementDoc> selectByExample(ToBAgreementDocExample)
~ ToBAgreementDoc selectByPrimaryKey(Long)
~ int updateByExampleSelective(ToBAgreementDoc,ToBAgreementDocExample)
~ int updateByExample(ToBAgreementDoc,ToBAgreementDocExample)
~ int updateByPrimaryKeySelective(ToBAgreementDoc)
~ int updateByPrimaryKey(ToBAgreementDoc)
}
interface com.welab.loan.finance.mapper.LoanCessieInfoMapper {
~ int deleteByPrimaryKey(Long)
~ int insert(LoanCessieInfo)
~ int inserts(List<LoanCessieInfo>)
~ int insertSelective(LoanCessieInfo)
~ LoanCessieInfo selectByPrimaryKey(Long)
~ int updateByPrimaryKeySelective(LoanCessieInfo)
~ int updateCessieFeeByPrimaryKey(LoanCessieInfo)
~ int countByLoanNumber(String)
~ List<LoanCessieInfo> selectByLoanNumber(String)
~ List<LoanCessieInfo> listByLoanNumbers(Set<String>)
}
class com.welab.loan.finance.model.AdvanceMsgList {
- Long id
- Long userId
- String loanNumber
- Long appMessageId
- Byte status
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Long getAppMessageId()
+ void setAppMessageId(Long)
+ Byte getStatus()
+ void setStatus(Byte)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.dto.paylater.MerchantLoanDTO {
- String loanNumber
- Date applyAt
- String userName
- String status
- Long amount
- String tenor
- String mobile
- String merchantCode
- String merchantProductCode
- String merchantProductName
- Long serviceFee
}
abstract class com.welab.loan.finance.service.down.AbstractExportService {
- String fileName
- BaseFinanceExport baseFinanceExport
- Long id
- Long userId
- String fsFileId
- Byte status
+ <<Create>> AbstractExportService(Long,String)
+ <<Create>> AbstractExportService(Long,String,Byte)
+ String getFsFileId()
+ {abstract}File exportData()
- BaseFinanceExport getBaseFinanceExport()
- boolean doStart()
- boolean saveFile(File)
- File transformZipFile(File)
- String getZipFileName(String)
+ void download()
+ void synDownLoad()
- void run()
- void doEnd()
}
enum com.welab.loan.finance.enums.BankCardStatusEnum {
+  UNAVAILABLE
+  APPROVAL
+  AVAILABLE
+  PENDING
~ Byte code
~ String value
- <<Create>> BankCardStatusEnum(int,String)
+ Byte getCode()
+ String getValue()
}
class com.welab.loan.finance.dto.DueIndexDTO {
- Integer maxDueIndex
- Integer minDueIndex
}
class com.welab.loan.finance.dto.PageDto {
# Long orgId
# Integer pageNum
# Integer pageSize
}
class com.welab.loan.finance.app.command.tb.lend.notify.TbLendNotifyService {
- BaseRabbitTemplate baseRabbitTemplate
+ void doNotify(TbLendNotifyDTO)
}
class com.welab.loan.finance.app.command.credit.CreditUserQryExe {
- BaseCreditUserAccountService baseCreditUserAccountService
+ List<Long> filterActiveUser(List<Long>)
}
class com.welab.loan.finance.controller.RechargeController {
- RechargeBusiService rechargeBusiService
- BankService bankService
- IUserRepayAmount userRepayAmount
- BackstageConfigFacade backstageConfigFacade
- LoanCessieInfoService loanCessieInfoService
+ Response collectionRepayment(Long,CollectionRepaymentVo)
+ Response updateDelayPayment(Long,CollectionRepaymentVo)
+ Response findGoBackRepayment(Long,String,String)
+ Response findChannels()
+ Response findFasPayBanks(int)
+ Response findMultiLoan(Long,String)
+ Response findMultiGoBackAmount(Long,CollectionRepaymentVo)
+ Response multiCollectionRepayment(Long,CollectionRepaymentVo)
}
class com.welab.loan.finance.vo.request.LendReversalVo {
- String loanNumber
- Long reversedAmount
- String user
- String reason
- Long userId
+ <<Create>> LendReversalVo(String,Long,String,String,Long)
+ <<Create>> LendReversalVo(String,Long,String,Long)
}
class com.welab.loan.finance.model.UserAdvancePayment {
- Long id
- Long userId
- String uuid
- String bankCode
- Long repaymentAmount
- String trxUuid
- Long syncCacheId
- Byte status
- Date createdAt
- Date updateAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ String getUuid()
+ void setUuid(String)
+ String getBankCode()
+ void setBankCode(String)
+ Long getRepaymentAmount()
+ void setRepaymentAmount(Long)
+ String getTrxUuid()
+ void setTrxUuid(String)
+ Long getSyncCacheId()
+ void setSyncCacheId(Long)
+ Byte getStatus()
+ void setStatus(Byte)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
}
class com.welab.loan.finance.app.service.tb.TbLoanService {
- ITransformDues transformDues
- BaseTbDisbursementService baseTbDisbursementService
- TbDisbursementQryExe tbDisbursementQryExe
- TravelokaQueryService travelokaQueryService
- BaseTbLoanService baseTbLoanService
- TbDuesManager tbDuesManager
- FinanceDuesExtMapper financeDuesExtMapper
- BaseLoanDetailService baseLoanDetailService
+ Response saveMultipleRepayment(MulRepaymentDTO)
+ void disbursementExport(TbDisbursementQry,String)
+ void loanExport(TravelokaLoanQry,String)
+ void duesExport(TbDuesQry,String)
+ {static} void main(String[])
}
interface com.welab.loan.finance.mapper.CreditUserTagConfigMapper {
~ long countByExample(CreditUserTagConfigExample)
~ int deleteByExample(CreditUserTagConfigExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditUserTagConfig)
~ int insertSelective(CreditUserTagConfig)
~ List<CreditUserTagConfig> selectByExampleWithBLOBs(CreditUserTagConfigExample)
~ List<CreditUserTagConfig> selectByExample(CreditUserTagConfigExample)
~ CreditUserTagConfig selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditUserTagConfig,CreditUserTagConfigExample)
~ int updateByExampleWithBLOBs(CreditUserTagConfig,CreditUserTagConfigExample)
~ int updateByExample(CreditUserTagConfig,CreditUserTagConfigExample)
~ int updateByPrimaryKeySelective(CreditUserTagConfig)
~ int updateByPrimaryKeyWithBLOBs(CreditUserTagConfig)
~ int updateByPrimaryKey(CreditUserTagConfig)
}
interface com.welab.loan.finance.mapper.CreditActivityAbTestGroupUserTagRelationMapper {
~ long countByExample(CreditActivityAbTestGroupUserTagRelationExample)
~ int deleteByExample(CreditActivityAbTestGroupUserTagRelationExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditActivityAbTestGroupUserTagRelation)
~ int insertSelective(CreditActivityAbTestGroupUserTagRelation)
~ List<CreditActivityAbTestGroupUserTagRelation> selectByExample(CreditActivityAbTestGroupUserTagRelationExample)
~ CreditActivityAbTestGroupUserTagRelation selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditActivityAbTestGroupUserTagRelation,CreditActivityAbTestGroupUserTagRelationExample)
~ int updateByExample(CreditActivityAbTestGroupUserTagRelation,CreditActivityAbTestGroupUserTagRelationExample)
~ int updateByPrimaryKeySelective(CreditActivityAbTestGroupUserTagRelation)
~ int updateByPrimaryKey(CreditActivityAbTestGroupUserTagRelation)
}
class com.welab.loan.finance.rabbitmq.CreditAccountTrackConsumer {
- CreditAccountTrackService creditAccountTrackService
+ void onMessage(Message)
}
class com.welab.loan.finance.model.CreditUserTagHistory {
- Long id
- Date createdAt
- Date updatedAt
- Boolean deleted
- String accountType
- String userTag
- String remark
- Integer status
- Long minAmount
- Long maxAmount
- Long updateBy
- Long createBy
- String config
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ String getAccountType()
+ void setAccountType(String)
+ String getUserTag()
+ void setUserTag(String)
+ String getRemark()
+ void setRemark(String)
+ Integer getStatus()
+ void setStatus(Integer)
+ Long getMinAmount()
+ void setMinAmount(Long)
+ Long getMaxAmount()
+ void setMaxAmount(Long)
+ Long getUpdateBy()
+ void setUpdateBy(Long)
+ Long getCreateBy()
+ void setCreateBy(Long)
+ String getConfig()
+ void setConfig(String)
}
class com.welab.loan.finance.job.CreditActivityAbTestJob {
- BaseCreditActivityAbTestService baseCreditActivityAbTestService
- CreditActivityAbTestManager creditActivityAbTestManager
- CreditAbTestUserCalculationManager creditAbTestUserCalculationManager
- BaseCreditActivityAbTestGroupUserTagRelationService baseCreditActivityAbTestGroupUserTagRelationService
+ void execute(ShardingContext)
- void doScheduled2Running(List<CreditActivityAbTest>)
- void doRunning2Finished(List<CreditActivityAbTest>)
}
class com.welab.loan.finance.test.job.SendDisburseTaxEmailJobTest {
- DisburseTaxService disburseTaxService
+ void test()
}
class com.welab.loan.finance.model.FinanceExportExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FinanceExportExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FinanceExportExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andOrgIdIsNull()
+ Criteria andOrgIdIsNotNull()
+ Criteria andOrgIdEqualTo(Long)
+ Criteria andOrgIdNotEqualTo(Long)
+ Criteria andOrgIdGreaterThan(Long)
+ Criteria andOrgIdGreaterThanOrEqualTo(Long)
+ Criteria andOrgIdLessThan(Long)
+ Criteria andOrgIdLessThanOrEqualTo(Long)
+ Criteria andOrgIdIn(List<Long>)
+ Criteria andOrgIdNotIn(List<Long>)
+ Criteria andOrgIdBetween(Long,Long)
+ Criteria andOrgIdNotBetween(Long,Long)
+ Criteria andFileNameIsNull()
+ Criteria andFileNameIsNotNull()
+ Criteria andFileNameEqualTo(String)
+ Criteria andFileNameNotEqualTo(String)
+ Criteria andFileNameGreaterThan(String)
+ Criteria andFileNameGreaterThanOrEqualTo(String)
+ Criteria andFileNameLessThan(String)
+ Criteria andFileNameLessThanOrEqualTo(String)
+ Criteria andFileNameLike(String)
+ Criteria andFileNameNotLike(String)
+ Criteria andFileNameIn(List<String>)
+ Criteria andFileNameNotIn(List<String>)
+ Criteria andFileNameBetween(String,String)
+ Criteria andFileNameNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andFileIdIsNull()
+ Criteria andFileIdIsNotNull()
+ Criteria andFileIdEqualTo(String)
+ Criteria andFileIdNotEqualTo(String)
+ Criteria andFileIdGreaterThan(String)
+ Criteria andFileIdGreaterThanOrEqualTo(String)
+ Criteria andFileIdLessThan(String)
+ Criteria andFileIdLessThanOrEqualTo(String)
+ Criteria andFileIdLike(String)
+ Criteria andFileIdNotLike(String)
+ Criteria andFileIdIn(List<String>)
+ Criteria andFileIdNotIn(List<String>)
+ Criteria andFileIdBetween(String,String)
+ Criteria andFileIdNotBetween(String,String)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.FinanceExportExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FinanceExportExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.facade.moon.TbServiceFacade {
- ITbTravelokaService iTbTravelokaService
- ITbLoanDubboService iTbLoanDubboService
- TbUserAccountInfoService tbUserAccountInfoService
- TbUserInfoService tbUserInfoService
+ List<TbBankAccountInfoVO> queryBankAccountInfoByUserId(List<Long>)
+ TravelokaUserInfoVO findTravelokaUserByUserId(Long)
+ TbUserVO findTravelokaUserByNik(String)
+ List<TravelokaBaseUserInfoVO> findByUserIdList(List<Long>)
+ TravelokaDuesVO findByLoanNumber(String)
+ List<TravelokaRepaymentDTO> queryRepaymentTrack(List<String>)
+ List<TbLoanVO> getTbLoanVO(List<String>)
+ TravelokaUserInfoVO findTbUserByUserId(Long)
+ PageInfo<TbUserDocVO> getTbUserList(TbUserQryDTO)
+ Long getTbUserCount(TbUserQryDTO)
+ PageInfo<TbUserCreditInfoVO> tbUserCreditPageList(TbUserQryDTO)
}
class com.welab.loan.finance.model.TbLoanExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> TbLoanExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.TbLoanExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andPartnerIsNull()
+ Criteria andPartnerIsNotNull()
+ Criteria andPartnerEqualTo(String)
+ Criteria andPartnerNotEqualTo(String)
+ Criteria andPartnerGreaterThan(String)
+ Criteria andPartnerGreaterThanOrEqualTo(String)
+ Criteria andPartnerLessThan(String)
+ Criteria andPartnerLessThanOrEqualTo(String)
+ Criteria andPartnerLike(String)
+ Criteria andPartnerNotLike(String)
+ Criteria andPartnerIn(List<String>)
+ Criteria andPartnerNotIn(List<String>)
+ Criteria andPartnerBetween(String,String)
+ Criteria andPartnerNotBetween(String,String)
+ Criteria andOrderNoIsNull()
+ Criteria andOrderNoIsNotNull()
+ Criteria andOrderNoEqualTo(String)
+ Criteria andOrderNoNotEqualTo(String)
+ Criteria andOrderNoGreaterThan(String)
+ Criteria andOrderNoGreaterThanOrEqualTo(String)
+ Criteria andOrderNoLessThan(String)
+ Criteria andOrderNoLessThanOrEqualTo(String)
+ Criteria andOrderNoLike(String)
+ Criteria andOrderNoNotLike(String)
+ Criteria andOrderNoIn(List<String>)
+ Criteria andOrderNoNotIn(List<String>)
+ Criteria andOrderNoBetween(String,String)
+ Criteria andOrderNoNotBetween(String,String)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andBatchNoIsNull()
+ Criteria andBatchNoIsNotNull()
+ Criteria andBatchNoEqualTo(String)
+ Criteria andBatchNoNotEqualTo(String)
+ Criteria andBatchNoGreaterThan(String)
+ Criteria andBatchNoGreaterThanOrEqualTo(String)
+ Criteria andBatchNoLessThan(String)
+ Criteria andBatchNoLessThanOrEqualTo(String)
+ Criteria andBatchNoLike(String)
+ Criteria andBatchNoNotLike(String)
+ Criteria andBatchNoIn(List<String>)
+ Criteria andBatchNoNotIn(List<String>)
+ Criteria andBatchNoBetween(String,String)
+ Criteria andBatchNoNotBetween(String,String)
+ Criteria andLendBatchNoIsNull()
+ Criteria andLendBatchNoIsNotNull()
+ Criteria andLendBatchNoEqualTo(String)
+ Criteria andLendBatchNoNotEqualTo(String)
+ Criteria andLendBatchNoGreaterThan(String)
+ Criteria andLendBatchNoGreaterThanOrEqualTo(String)
+ Criteria andLendBatchNoLessThan(String)
+ Criteria andLendBatchNoLessThanOrEqualTo(String)
+ Criteria andLendBatchNoLike(String)
+ Criteria andLendBatchNoNotLike(String)
+ Criteria andLendBatchNoIn(List<String>)
+ Criteria andLendBatchNoNotIn(List<String>)
+ Criteria andLendBatchNoBetween(String,String)
+ Criteria andLendBatchNoNotBetween(String,String)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andSecondProdCodeIsNull()
+ Criteria andSecondProdCodeIsNotNull()
+ Criteria andSecondProdCodeEqualTo(String)
+ Criteria andSecondProdCodeNotEqualTo(String)
+ Criteria andSecondProdCodeGreaterThan(String)
+ Criteria andSecondProdCodeGreaterThanOrEqualTo(String)
+ Criteria andSecondProdCodeLessThan(String)
+ Criteria andSecondProdCodeLessThanOrEqualTo(String)
+ Criteria andSecondProdCodeLike(String)
+ Criteria andSecondProdCodeNotLike(String)
+ Criteria andSecondProdCodeIn(List<String>)
+ Criteria andSecondProdCodeNotIn(List<String>)
+ Criteria andSecondProdCodeBetween(String,String)
+ Criteria andSecondProdCodeNotBetween(String,String)
+ Criteria andContractNoIsNull()
+ Criteria andContractNoIsNotNull()
+ Criteria andContractNoEqualTo(String)
+ Criteria andContractNoNotEqualTo(String)
+ Criteria andContractNoGreaterThan(String)
+ Criteria andContractNoGreaterThanOrEqualTo(String)
+ Criteria andContractNoLessThan(String)
+ Criteria andContractNoLessThanOrEqualTo(String)
+ Criteria andContractNoLike(String)
+ Criteria andContractNoNotLike(String)
+ Criteria andContractNoIn(List<String>)
+ Criteria andContractNoNotIn(List<String>)
+ Criteria andContractNoBetween(String,String)
+ Criteria andContractNoNotBetween(String,String)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andTermIsNull()
+ Criteria andTermIsNotNull()
+ Criteria andTermEqualTo(String)
+ Criteria andTermNotEqualTo(String)
+ Criteria andTermGreaterThan(String)
+ Criteria andTermGreaterThanOrEqualTo(String)
+ Criteria andTermLessThan(String)
+ Criteria andTermLessThanOrEqualTo(String)
+ Criteria andTermLike(String)
+ Criteria andTermNotLike(String)
+ Criteria andTermIn(List<String>)
+ Criteria andTermNotIn(List<String>)
+ Criteria andTermBetween(String,String)
+ Criteria andTermNotBetween(String,String)
+ Criteria andBillingNoIsNull()
+ Criteria andBillingNoIsNotNull()
+ Criteria andBillingNoEqualTo(String)
+ Criteria andBillingNoNotEqualTo(String)
+ Criteria andBillingNoGreaterThan(String)
+ Criteria andBillingNoGreaterThanOrEqualTo(String)
+ Criteria andBillingNoLessThan(String)
+ Criteria andBillingNoLessThanOrEqualTo(String)
+ Criteria andBillingNoLike(String)
+ Criteria andBillingNoNotLike(String)
+ Criteria andBillingNoIn(List<String>)
+ Criteria andBillingNoNotIn(List<String>)
+ Criteria andBillingNoBetween(String,String)
+ Criteria andBillingNoNotBetween(String,String)
+ Criteria andBusinessTimeIsNull()
+ Criteria andBusinessTimeIsNotNull()
+ Criteria andBusinessTimeEqualTo(Date)
+ Criteria andBusinessTimeNotEqualTo(Date)
+ Criteria andBusinessTimeGreaterThan(Date)
+ Criteria andBusinessTimeGreaterThanOrEqualTo(Date)
+ Criteria andBusinessTimeLessThan(Date)
+ Criteria andBusinessTimeLessThanOrEqualTo(Date)
+ Criteria andBusinessTimeIn(List<Date>)
+ Criteria andBusinessTimeNotIn(List<Date>)
+ Criteria andBusinessTimeBetween(Date,Date)
+ Criteria andBusinessTimeNotBetween(Date,Date)
+ Criteria andDocIdIsNull()
+ Criteria andDocIdIsNotNull()
+ Criteria andDocIdEqualTo(String)
+ Criteria andDocIdNotEqualTo(String)
+ Criteria andDocIdGreaterThan(String)
+ Criteria andDocIdGreaterThanOrEqualTo(String)
+ Criteria andDocIdLessThan(String)
+ Criteria andDocIdLessThanOrEqualTo(String)
+ Criteria andDocIdLike(String)
+ Criteria andDocIdNotLike(String)
+ Criteria andDocIdIn(List<String>)
+ Criteria andDocIdNotIn(List<String>)
+ Criteria andDocIdBetween(String,String)
+ Criteria andDocIdNotBetween(String,String)
+ Criteria andResIdIsNull()
+ Criteria andResIdIsNotNull()
+ Criteria andResIdEqualTo(String)
+ Criteria andResIdNotEqualTo(String)
+ Criteria andResIdGreaterThan(String)
+ Criteria andResIdGreaterThanOrEqualTo(String)
+ Criteria andResIdLessThan(String)
+ Criteria andResIdLessThanOrEqualTo(String)
+ Criteria andResIdLike(String)
+ Criteria andResIdNotLike(String)
+ Criteria andResIdIn(List<String>)
+ Criteria andResIdNotIn(List<String>)
+ Criteria andResIdBetween(String,String)
+ Criteria andResIdNotBetween(String,String)
}
class com.welab.loan.finance.model.TbLoanExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.TbLoanExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
interface com.welab.loan.finance.mapper.LateFeeMapper {
~ Integer getLateFeeCount(Long)
}
class com.welab.loan.finance.app.service.flow.repaymentback.RepaymentBackTagComponent {
- BaseRabbitTemplate baseRabbitTemplate
+ FlowTaskNodeEnum flowTaskNode()
# void process(RepaymentBackFlowContext)
- void repaymentBack(Long)
}
class com.welab.loan.finance.model.LoanUserRepayExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanUserRepayExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanUserRepayExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Boolean)
+ Criteria andStatusNotEqualTo(Boolean)
+ Criteria andStatusGreaterThan(Boolean)
+ Criteria andStatusGreaterThanOrEqualTo(Boolean)
+ Criteria andStatusLessThan(Boolean)
+ Criteria andStatusLessThanOrEqualTo(Boolean)
+ Criteria andStatusIn(List<Boolean>)
+ Criteria andStatusNotIn(List<Boolean>)
+ Criteria andStatusBetween(Boolean,Boolean)
+ Criteria andStatusNotBetween(Boolean,Boolean)
+ Criteria andIsUsedIsNull()
+ Criteria andIsUsedIsNotNull()
+ Criteria andIsUsedEqualTo(Boolean)
+ Criteria andIsUsedNotEqualTo(Boolean)
+ Criteria andIsUsedGreaterThan(Boolean)
+ Criteria andIsUsedGreaterThanOrEqualTo(Boolean)
+ Criteria andIsUsedLessThan(Boolean)
+ Criteria andIsUsedLessThanOrEqualTo(Boolean)
+ Criteria andIsUsedIn(List<Boolean>)
+ Criteria andIsUsedNotIn(List<Boolean>)
+ Criteria andIsUsedBetween(Boolean,Boolean)
+ Criteria andIsUsedNotBetween(Boolean,Boolean)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.LoanUserRepayExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanUserRepayExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.app.command.credit.CreditAbTestHitDataQryExe {
- BaseCreditActivityAbTestLoanService baseCreditActivityAbTestLoanService
- BaseCreditActivityAbTestService baseCreditActivityAbTestService
- BaseCreditBigFieldRelationService baseCreditBigFieldRelationService
- TenorSortListManager tenorSortListManager
- CreditActivityAbTestService creditActivityAbTestService
- CreditAbTestUserCalculationManager creditAbTestUserCalculationManager
+ List<CreditActivityAbTestDataVo> getAbTestData(Long,Integer)
- BigDecimal calRate(Integer,Integer)
}
class com.welab.loan.finance.controller.NsQueryController {
- NsQueryServcie nsQueryServcie
+ Response<List<NsLoanManagementVO>> nsLoanList(NsLoanListQry)
+ Response<List<NsRepaymentVO>> nsRepaymentList(NsRepaymentListQry)
+ Response<List<NsDueVO>> nsDueList(NsDueListQry)
}
interface com.welab.loan.finance.mapper.FlowTaskTrackMapper {
~ long countByExample(FlowTaskTrackExample)
~ int deleteByExample(FlowTaskTrackExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FlowTaskTrack)
~ int insertSelective(FlowTaskTrack)
~ List<FlowTaskTrack> selectByExample(FlowTaskTrackExample)
~ FlowTaskTrack selectByPrimaryKey(Long)
~ int updateByExampleSelective(FlowTaskTrack,FlowTaskTrackExample)
~ int updateByExample(FlowTaskTrack,FlowTaskTrackExample)
~ int updateByPrimaryKeySelective(FlowTaskTrack)
~ int updateByPrimaryKey(FlowTaskTrack)
}
class com.welab.loan.finance.test.credit.CreditAccountInfoServiceTest {
- CreditUserAccountServiceImpl creditUserAccountServiceImpl
+ void calculationMonthlyIncome()
}
class com.welab.loan.finance.app.command.coupon.TryCouponInfoExe {
- MaucashRepaymentServiceImpl maucashRepaymentService
- CouponMultipleDecreaseExe couponMultipleDecreaseExe
+ Response<CouponRepaymentVo> excute(TryCouponInfoCmd)
}
class com.welab.loan.finance.app.service.credit.CreditLoanCancelService {
- BaseLoanDetailService baseLoanDetailService
- BaseCreditLoanCancelService baseCreditLoanCancelService
- CreditUserAccountServiceImpl creditUserAccountServiceImpl
- GatewayLoanCancelCmdExe gatewayLoanCancelCmdExe
- LoansService applicationLoansService
- {static} List<Byte> INVALID_STATUS
+ void doProcess(MultipartFile,Long)
+ void dealProcess(List<String>)
- void updateLoanCancel(String,Byte,String)
+ void preCondition(List<String>)
+ Set<String> importLoanNumbers(MultipartFile)
+ Response<PageInfo<CreditLoanCancelVo>> getPageLoanCancel(Integer,Integer,List<String>)
}
class com.welab.loan.finance.model.UserAdvancePaymentExtnd {
- Long id
- Long advancePaymentId
- String loanNumber
- Date createdAt
+ Long getId()
+ void setId(Long)
+ Long getAdvancePaymentId()
+ void setAdvancePaymentId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
}
interface com.welab.loan.finance.mapper.BankConfigMapper {
~ long countByExample(BankConfigExample)
~ int deleteByExample(BankConfigExample)
~ int deleteByPrimaryKey(Integer)
~ int insert(BankConfig)
~ int insertSelective(BankConfig)
~ List<BankConfig> selectByExample(BankConfigExample)
~ BankConfig selectByPrimaryKey(Integer)
~ int updateByExampleSelective(BankConfig,BankConfigExample)
~ int updateByExample(BankConfig,BankConfigExample)
~ int updateByPrimaryKeySelective(BankConfig)
~ int updateByPrimaryKey(BankConfig)
}
interface com.welab.loan.finance.mapper.CreditUserAccountChildMapper {
~ long countByExample(CreditUserAccountChildExample)
~ int deleteByExample(CreditUserAccountChildExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditUserAccountChild)
~ int insertSelective(CreditUserAccountChild)
~ List<CreditUserAccountChild> selectByExample(CreditUserAccountChildExample)
~ CreditUserAccountChild selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditUserAccountChild,CreditUserAccountChildExample)
~ int updateByExample(CreditUserAccountChild,CreditUserAccountChildExample)
~ int updateByPrimaryKeySelective(CreditUserAccountChild)
~ int updateByPrimaryKey(CreditUserAccountChild)
}
class com.welab.loan.finance.service.core.BaseUVFTradeService {
- LoanUvfTradeMapper loanUvfTradeMapper
+ int save(LoanUvfTrade)
+ LoanUvfTrade getOneByOrderNo(String)
}
interface com.welab.loan.finance.mapper.ext.InsuranceDetailExtMapper {
~ List<InsuranceDetail> selectByLoanNumberAndType(List<InsuranceDetail>)
}
enum com.welab.loan.finance.core.enums.OrgIdEnum {
+  MAUCASH
+  SPEKTRA
+  TRAVELOKA
+  TAPP
+  HSO
+  RESTOCK
+  UVF
+  AOP
+  TRIO
+  MAUMODAL
- Long value
- String code
- String name
+ {static} OrgIdEnum getOrgIdEnumById(Long)
+ {static} OrgIdEnum getOrgIdEnumByCode(String)
+ {static} boolean isMaumodal(Long)
}
class com.welab.loan.finance.model.mongo.tbuser.RestockUserDoc {
}
class com.welab.loan.finance.service.core.BaseOverdueService {
+ {static} int DAY_MIN
- {static} Double emergencyOverduesRate
- {static} Double instalmentOverduesRate
- OverdueMapper overdueMapper
+ {static} BigDecimal calculatorOverdueWithRate(OverDuesReq)
+ {static} OverdueFeeVO calculatorOverdueWithRate(OverDuesReq,Date)
+ {static} BigDecimal findMaxOverAmount(OverDuesReq,ProductCodeEnum)
+ BigDecimal calculatorOverdue(int,BigDecimal)
+ void insertOverdue(Overdue)
+ void overduesScheduleService(String)
+ {static} void main(String[])
}
class com.welab.loan.finance.service.core.BaseUVFRepossessRepaymentService {
- UVFRepossessRepaymentMapper uvfRepossessRepaymentMapper
+ int batchSave(List<UVFRepossessRepayment>)
+ PageInfo<UVFRepossessRepayment> page(UVFRepossessRepaymentExample,int,int)
+ UVFRepossessRepayment findRepossessByContractId(String)
}
class com.welab.loan.finance.dto.TransferLoanDto {
- String mobile
- String loanNumber
- Integer status
- Long adminId
- String lendId
- String startDate
- String endDate
- String secondProdCode
}
class com.welab.loan.finance.app.command.welcall.WelcomeCallLoansCmdExe {
- LoanDetailExtMapper loanDetailExtMapper
- BaseRabbitTemplate baseRabbitTemplate
- ApprovalLoansService approvalLoansService
+ void execute(WelCallLoanRuleDTO)
- List<WelCallLoansDTO> processLoans(List<WelCallLoansDTO>,double,String,String)
}
class com.welab.loan.finance.app.command.welcall.WelcomeCallLoansCmdExe$WelCallQry {
- Date disburseStart
- Date disburseEnd
- List<Integer> userTypes
- String secondProdCode
- String loanType
}
class com.welab.loan.finance.model.CreditUserAccountInfo {
- Long id
- Long userId
- Boolean isMigrate
- Long income
- String tag
- String secondTag
- String applyNo
- Date approvedAt
- Date tagUpdatedAt
- Integer lastUserIdNum
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ Boolean getIsMigrate()
+ void setIsMigrate(Boolean)
+ Long getIncome()
+ void setIncome(Long)
+ String getTag()
+ void setTag(String)
+ String getSecondTag()
+ void setSecondTag(String)
+ String getApplyNo()
+ void setApplyNo(String)
+ Date getApprovedAt()
+ void setApprovedAt(Date)
+ Date getTagUpdatedAt()
+ void setTagUpdatedAt(Date)
+ Integer getLastUserIdNum()
+ void setLastUserIdNum(Integer)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.model.LoanDuesLogExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanDuesLogExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanDuesLogExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andDueTypeIsNull()
+ Criteria andDueTypeIsNotNull()
+ Criteria andDueTypeEqualTo(String)
+ Criteria andDueTypeNotEqualTo(String)
+ Criteria andDueTypeGreaterThan(String)
+ Criteria andDueTypeGreaterThanOrEqualTo(String)
+ Criteria andDueTypeLessThan(String)
+ Criteria andDueTypeLessThanOrEqualTo(String)
+ Criteria andDueTypeLike(String)
+ Criteria andDueTypeNotLike(String)
+ Criteria andDueTypeIn(List<String>)
+ Criteria andDueTypeNotIn(List<String>)
+ Criteria andDueTypeBetween(String,String)
+ Criteria andDueTypeNotBetween(String,String)
+ Criteria andDueIndexIsNull()
+ Criteria andDueIndexIsNotNull()
+ Criteria andDueIndexEqualTo(Integer)
+ Criteria andDueIndexNotEqualTo(Integer)
+ Criteria andDueIndexGreaterThan(Integer)
+ Criteria andDueIndexGreaterThanOrEqualTo(Integer)
+ Criteria andDueIndexLessThan(Integer)
+ Criteria andDueIndexLessThanOrEqualTo(Integer)
+ Criteria andDueIndexIn(List<Integer>)
+ Criteria andDueIndexNotIn(List<Integer>)
+ Criteria andDueIndexBetween(Integer,Integer)
+ Criteria andDueIndexNotBetween(Integer,Integer)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andOperationAmountIsNull()
+ Criteria andOperationAmountIsNotNull()
+ Criteria andOperationAmountEqualTo(Long)
+ Criteria andOperationAmountNotEqualTo(Long)
+ Criteria andOperationAmountGreaterThan(Long)
+ Criteria andOperationAmountGreaterThanOrEqualTo(Long)
+ Criteria andOperationAmountLessThan(Long)
+ Criteria andOperationAmountLessThanOrEqualTo(Long)
+ Criteria andOperationAmountIn(List<Long>)
+ Criteria andOperationAmountNotIn(List<Long>)
+ Criteria andOperationAmountBetween(Long,Long)
+ Criteria andOperationAmountNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andOriginIsNull()
+ Criteria andOriginIsNotNull()
+ Criteria andOriginEqualTo(String)
+ Criteria andOriginNotEqualTo(String)
+ Criteria andOriginGreaterThan(String)
+ Criteria andOriginGreaterThanOrEqualTo(String)
+ Criteria andOriginLessThan(String)
+ Criteria andOriginLessThanOrEqualTo(String)
+ Criteria andOriginLike(String)
+ Criteria andOriginNotLike(String)
+ Criteria andOriginIn(List<String>)
+ Criteria andOriginNotIn(List<String>)
+ Criteria andOriginBetween(String,String)
+ Criteria andOriginNotBetween(String,String)
+ Criteria andAdminIdIsNull()
+ Criteria andAdminIdIsNotNull()
+ Criteria andAdminIdEqualTo(Long)
+ Criteria andAdminIdNotEqualTo(Long)
+ Criteria andAdminIdGreaterThan(Long)
+ Criteria andAdminIdGreaterThanOrEqualTo(Long)
+ Criteria andAdminIdLessThan(Long)
+ Criteria andAdminIdLessThanOrEqualTo(Long)
+ Criteria andAdminIdIn(List<Long>)
+ Criteria andAdminIdNotIn(List<Long>)
+ Criteria andAdminIdBetween(Long,Long)
+ Criteria andAdminIdNotBetween(Long,Long)
+ Criteria andOptNameIsNull()
+ Criteria andOptNameIsNotNull()
+ Criteria andOptNameEqualTo(String)
+ Criteria andOptNameNotEqualTo(String)
+ Criteria andOptNameGreaterThan(String)
+ Criteria andOptNameGreaterThanOrEqualTo(String)
+ Criteria andOptNameLessThan(String)
+ Criteria andOptNameLessThanOrEqualTo(String)
+ Criteria andOptNameLike(String)
+ Criteria andOptNameNotLike(String)
+ Criteria andOptNameIn(List<String>)
+ Criteria andOptNameNotIn(List<String>)
+ Criteria andOptNameBetween(String,String)
+ Criteria andOptNameNotBetween(String,String)
}
class com.welab.loan.finance.model.LoanDuesLogExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanDuesLogExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.service.business.repayment.TransformBackDuesService {
- <<Create>> TransformBackDuesService()
+ {static} List<Dues> findRepaymentBackDues(List<Dues>,Date)
- {static} List<Dues> findDefaultBackDuesByDueDate(List<Dues>,Date)
- {static} Dues findSetDuesLateFee(Dues,String,List<LateFeeDuesExt>)
}
class com.welab.loan.finance.app.command.LoanQryExe {
- BaseLoanDetailService baseLoanDetailService
- DuesManger duesManger
+ Response<PageInfo<RepaymentLoanDTO>> findRepaymentLoans(LoanQry)
+ Response<Long> countLoanQry(LoanQry)
+ Response<LoanStateCountVO> countTbLoanQry(TbLoanCountQry)
}
class com.welab.loan.finance.utils.DateJodaUtil {
+ {static} String[] FORMATS
- <<Create>> DateJodaUtil()
+ {static} Date getNow()
+ {static} String getNowStr(String)
+ {static} Date getTimestampToDate(Timestamp)
+ {static} long getMillis()
+ {static} Date getSqlDateToDate(java.sql.Date)
+ {static} long getStrToTime(String,String)
+ {static} Date getStrToDate(String,String)
+ {static} Date getTimeToDate(long)
+ {static} String formatDate(Date,String)
+ {static} String fomateDate(Date,Locale)
+ {static} LocalDate dateToLocalDate(Date)
+ {static} Date localDateToDate(LocalDate)
+ {static} String formatDate(String)
+ {static} String formatDateByFull(Date)
+ {static} String formatDateByLocal(LocalDate,String)
+ {static} String formatDateByShort(Date)
+ {static} Date plusMonths(Date,int)
+ {static} Date plusDays(Date,int)
+ {static} Date plusYears(Date,int)
+ {static} Date minusDays(Date,int)
+ {static} Date minusYears(Date,int)
+ {static} Date plusMonthsAndDays(Date,int,int)
+ {static} int yearsBetween(Date,Date)
+ {static} int monthsBetween(Date,Date)
+ {static} int daysBetween(Date,Date)
+ {static} int daysBetween(Date)
+ {static} long secondBetween(Date,Date)
+ {static} Date getLocalDate(LocalDate)
+ {static} Date getLocalDateNow()
+ {static} Date plusDayWeeHours(int)
+ {static} int dayNumOfMonth(Date)
+ {static} int getWeek()
+ {static} int getWeek(Date)
+ {static} Date getFirstDayOfMonth(Date)
+ {static} Date getPointDate(String)
+ {static} Date findFixDuesDayBySigap(Date,int)
+ {static} boolean isPastTime(Date)
+ {static} boolean isPastTime(LocalDate)
+ {static} boolean isWithinScope(Date,Date)
+ {static} LocalDate findCurPayDate(LocalDate,int)
+ {static} LocalDate findCurPayDate(int)
+ {static} LocalDate findNextPayDate(LocalDate,int)
+ {static} LocalDate findNextPayDate(LocalDate,int,int)
+ {static} LocalDate findNextPayDateByCredit(LocalDate,int)
+ {static} Date localDateTimeToDate(java.time.LocalDateTime)
}
class com.welab.loan.finance.service.impl.TrackServiceImpl {
- FinanceRepaymentTrackExtMapper trackExtMapper
- LoanDetailExtMapper loanDetailExtMapper
- FinanceRefundDetailExtMapper financeRefundDetailExtMapper
- WhtCostProvider whtCostProvider
- FinanceDuesExtMapper financeDuesExtMapper
- FundService fundService
- JedisCluster jedis
+ Response<List<TrackVo>> findTrackDetailByTime(TrackDto)
- void addOrderInfo(List<TrackVo>)
# void setHasTaxInsterest(List<TrackVo>)
- Map<String,Object> buildQueryParam(TrackDto)
+ Response<TrackVo> findTrackByTime(TrackDto)
+ Long countCollectionByLoanData(List<LoanRepayment>)
+ Response<TrackVo> findTrackByDefault(Map<String,Object>)
# BigDecimal calculateTax(BigDecimal,Long)
+ Response<List<LendVo>> findPendingLendByFund(LendDto)
+ Response<LendVo> countPendingLendByFund(LendDto)
- void cacheRedisValue(LendDto,String,LendVo)
+ Long sumFendingAmount(Long)
+ Response<PageVO<RepayTrackVo>> findTracksByTime(RepayTrackDto)
+ List<TrackVo> findFastPayTrackByTime(List<String>)
+ List<TrackVo> findFastPayTrackByTime(Integer,List<String>)
+ List<TrackVo> findFastPayTrackByTime(Integer,List<String>,MarkTypeEnum)
+ List<TrackVo> findFastPayTrackDetailByTime(Integer,List<String>,MarkTypeEnum,Long)
+ List<TrackVo> findFastPayTrackByDefault(Integer,MarkTypeEnum,List<String>)
+ List<TrackVo> findPayTrackByTime(List<String>,List<String>)
+ List<TrackVo> findPayTrackByTimeAndGateType(List<String>,Byte)
+ List<TrackVo> findPayTrackForFaspayFeeBankByTime(List<String>)
- String getKey(TrackExt)
- String getKey(InsuredTrackExt)
- Long getAdminRate(PendingLendExt)
- AdminFeeResp calculatorAdminFee(PendingLendExt)
+ Response<TrackVo> findTrackForBCA(TrackDto)
+ List<TrackVo> findFastPayTrackDetailByTime(TackDetailForRefundQry)
+ Response<List<TrackVo>> findTrackByTimeForSold(TrackDto)
}
class com.welab.loan.finance.model.LoanOverdueInfo {
- Long id
- Long userId
- String loanNumber
- Integer dueIndex
- Boolean isOverdueFull
- Integer overdueDays
- Date lastOverdueDate
- Boolean isSyn
- Boolean isClose
- Date createdAt
- Date updatedAt
- Integer lfDpd
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Integer getDueIndex()
+ void setDueIndex(Integer)
+ Boolean getIsOverdueFull()
+ void setIsOverdueFull(Boolean)
+ Integer getOverdueDays()
+ void setOverdueDays(Integer)
+ Date getLastOverdueDate()
+ void setLastOverdueDate(Date)
+ Boolean getIsSyn()
+ void setIsSyn(Boolean)
+ Boolean getIsClose()
+ void setIsClose(Boolean)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Integer getLfDpd()
+ void setLfDpd(Integer)
}
class com.welab.loan.finance.job.BimaLendReversalJob {
+ {static} String ORDER_PREFIX
# String getOrderPrefix()
}
interface com.welab.loan.finance.mapper.ext.SyncVaCacheInfoExtMapper {
~ int expiredLastRecord(Long)
~ SyncVaCacheInfo matchRecord(SyncVaCacheInfo)
~ SyncVaCacheInfo getValidRecord(SyncVaCacheInfo)
~ void cleanNoSuccess(Long)
~ List<SyncVaCacheInfo> findInvalidBeforeDate(Date)
~ int cleanCache(List<SyncVaCacheInfo>)
~ int setExpired(Long,Date)
}
class com.welab.loan.finance.model.FinanceUserAccountBalanceBak {
- Long id
- Date createAt
- Date updateAt
- Long userId
- Long amount
- Long balanceAmount
+ Long getId()
+ void setId(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ Long getUserId()
+ void setUserId(Long)
+ Long getAmount()
+ void setAmount(Long)
+ Long getBalanceAmount()
+ void setBalanceAmount(Long)
}
class com.welab.loan.finance.test.credit.ApplicationUtil {
- {static} Logger log
- {static} String YYYYMMDD
- {static} String NIK_YEAR_PREFIX_20
- {static} String NIK_YEAR_PREFIX_19
- {static} String PHONE_REG
+ {static} String threeVersion
+ {static} String selfVersion
+ {static} String spektraRejectVersion
+ {static} boolean checkNik(String)
+ {static} int getSex(String)
+ {static} boolean checkAge(String,int,int)
+ {static} String getBirthday(String)
+ {static} Date stringToDate(String,String)
+ {static} boolean checkPhone(String)
+ {static} boolean applyLoanAge(int,String)
+ {static} int getAgeByBirth(Date)
+ {static} int getAgeByBirth(String)
}
class com.welab.loan.finance.dto.QueryRepossessRepaymentDto {
- String applyNo
- String contractId
}
class com.welab.loan.finance.app.command.tb.order.process.impl.TravelokaPaylaterInvoicePostProcessService {
- TbDuesCreateService tbDuesCreateService
- TbFinanceLendCreateService tbFinanceLendCreateService
+ void doProcess(TbInvoice,LoanDetail)
+ String getKey()
}
class com.welab.loan.finance.utils.ExcelUtil {
+ {static} void exportExcel(OutputStream,String,List<E>,Class<E>)
+ {static} void exportExcel(String,String,List<E>,Class<E>)
+ {static} List<Map<Integer,String>> importExcel(InputStream,Integer)
+ {static} List<Map<Integer,String>> importExcel(String,Integer)
+ {static} List<E> importExcel(InputStream,Class<E>,Integer)
+ {static} List<E> importExcel(String,Class<E>,Integer)
}
class com.welab.loan.finance.utils.ExcelUtil$ExcelListener {
~ List<E> list
+ void invoke(E,AnalysisContext)
+ void doAfterAllAnalysed(AnalysisContext)
+ List<E> getList()
}
class com.welab.loan.finance.dto.cmd.tb.DefaultLoanImportCmd {
- String partner
- String orderNo
- String loanNumber
- String mobile
- Long principal
- Long upfrontAD
- Long upfrontPV
- Long upfrontIF
- Long upfrontPF
- Long repayAD
- Long repayPV
- Long repayIF
- Long repayPF
- Double lfDayPercent
- Long amountDisbursed
- String tenor
- Long commercialFee
- String accountNo
- String bankName
- String to
- String disbursementTime
- String by
- String productCode
- String funder
- String disbursementCommand
- Long DPD
- Date actualDisbursementTime
- Date uploadDate
- Long outstandingAmount
- Long userId
- String userName
}
class com.welab.loan.finance.response.Due {
- Integer dueIndex
- BigDecimal amount
- BigDecimal settledAmount
- BigDecimal remainingAmount
- String dueType
- Integer repayIndex
- String ascription
- String dueDate
- String isAdvanced
- String isKantouFee
- String createdAt
- String updatedAt
- String capitalCode
- Long overAmount
- Long dueAmount
- Boolean isRecalculate
- BigDecimal vat
- Boolean isClose
- Dues vatDues
}
class com.welab.loan.finance.app.command.plan.TryApplyFPlanCmdExcute {
- PlanService planService
- FPlanManager fPlanManager
- LoanDetailManager loanDetailManager
- LoanCessieInfoService loanCessieInfoService
+ Response<TryApplyFPlanDTO> excute(TryApplyFPlanCmd)
}
interface com.welab.loan.finance.mapper.ext.TbLendBatchExtMapper {
~ List<Long> listFundId(String)
}
class com.welab.loan.finance.utils.TemplateUtils {
- {static} String TMP_PATH
- {static} String PREFIX
- {static} String PATH
- <<Create>> TemplateUtils()
+ {static} String getPlanTemplateName(PlansTypeEnum)
+ {static} String getPlanTemplateName(PlansTypeEnum,Boolean)
+ {static} File htmlFile(String,Map<String,Object>)
+ {static} String getUuidFilePath(String)
+ {static} String htmlStr(String,Map<String,Object>)
+ {static} void main(String[])
}
class com.welab.loan.finance.app.manager.TbDuesManager {
- FinanceDuesExtMapper financeDuesExtMapper
- FundService fundService
+ {static} List<Long> EXCLUDE_ORGIDS
+ PageInfo<DuesAmountExt> find(TbDuesQry)
+ Map<String,Object> transLoanMap(TbDuesQry)
+ void translatedData(List<DuesAmountExt>)
}
class com.welab.loan.finance.app.service.credit.CreditConditionService {
- BaseCreditUserAccountService baseCreditUserAccountService
- CreditLoanAmountConfigServiceImpl creditLoanAmountConfigServiceImpl
- CreditMigrateUserService creditMigrateUserService
- BaseCreditUserAccountChildService baseCreditUserAccountChildService
- CreditMaxinstallCalculationManager creditMaxinstallCalculationManager
- BackstageConfigFacade backstageConfigFacade
- String ASTRA_TAG
+ void check(ApplyUseCreditVO)
- boolean isShortSecondProduct(String)
+ TagProductVO handLoan(CreditUserAccountExt,TagProductVO,CreditUserAccountChild)
+ TagProductVO handLoan(CreditUserAccountExt,BigDecimal,TagProductVO,CreditUserAccountChild)
+ boolean isGetAllProduct(CreditUserAccountExt)
+ {static} boolean isTestFlow(String)
+ boolean whetherCheckMaxInstallment(CreditUserAccountExt,String)
+ Long matchMaxAmount(CreditUserAccountExt,TagProductVO,Long)
+ Long matchMaxAmount(CreditUserAccountExt,BigDecimal,TagProductVO,Long)
+ Long getUserMaxInstallment(String,BigDecimal,String)
+ Boolean checkClLongInstallment(CreditUserAccountExt)
}
class com.welab.loan.finance.model.ext.CreditExt {
- String tag
- String tenor
- String secondProductCode
- String productCode
- String creditType
}
class com.welab.loan.finance.vo.tb.HsoLoanVO {
- {static} long serialVersionUID
- Long id
- String customerName
- String customerNumber
- Long userId
- String partner
- String loanNumber
- String orderNo
- String docId
- Long invoiceAmount
- Date invoiceDate
- Byte lendStatus
- String lendStatusStr
- Byte repayStatus
- String repayStatusStr
- Long serviceFeeAmount
- String creditControlArea
- String customerAddress
- String spareparts
- String billingNo
- String ahassName
- String userDocId
- String storeName
- List<BillingAndNettVatVO> billingAndNettVatVOList
}
class com.welab.loan.finance.app.command.plan.EPlanTryCostCmdExe {
- RateService rateService
+ CostDetailDTO tryCost(String,String,LoanDetail,EPlanAmountDTO)
+ Long getNetRepaymentAmount(CostDetailDTO)
}
class com.welab.loan.finance.dto.plan.EUnPayAmountDTO {
- {static} long serialVersionUID
- BigDecimal unPayPrincipal
- BigDecimal unPayFundInterest
- BigDecimal unPayServiceFee
- BigDecimal unPayProvisionFee
- BigDecimal unPayLateFee
}
interface com.welab.loan.finance.constant.TBServiceKeyConstant {
~ String DEFAULT
~ String HSO
~ String TRAVELOKA_PAYLATER
~ String RESTOCK
~ String TRIO
~ String DAYA
~ String SMP
~ String GADA
}
class com.welab.loan.finance.uvf.UvfFileLoader {
- String ftpHost
- Integer ftpPort
- String ftpUserName
- String ftpPwd
- BaseUvfFileService baseUvfFileService
- UvfFileContractMapper contractMapper
+ void loaderForFtp(String,int)
+ void loaderFile(String,String,InputStream)
}
class com.welab.loan.finance.dto.FinanceFundDto {
- Long id
- String fundName
- String fundCode
- String phone
- String address
- String licenseNum
- Long status
- String orgType
- String fundType
- String legalType
- String legalName
- String legalNum
- String loanStartStr
- String loanEndStr
- String loanMode
- String repaymentStartStr
- String repaymentEndStr
- String repaymentMode
- String isApprove
- String paymentMethod
+ Long getId()
+ void setId(Long)
+ String getFundName()
+ void setFundName(String)
+ String getFundCode()
+ void setFundCode(String)
+ String getPhone()
+ void setPhone(String)
+ String getAddress()
+ void setAddress(String)
+ String getLicenseNum()
+ void setLicenseNum(String)
+ Long getStatus()
+ void setStatus(Long)
+ String getOrgType()
+ void setOrgType(String)
+ String getFundType()
+ void setFundType(String)
+ String getLegalType()
+ void setLegalType(String)
+ String getLegalName()
+ void setLegalName(String)
+ String getLegalNum()
+ void setLegalNum(String)
+ String getLoanStartStr()
+ void setLoanStartStr(String)
+ String getLoanEndStr()
+ void setLoanEndStr(String)
+ String getLoanMode()
+ void setLoanMode(String)
+ String getRepaymentStartStr()
+ void setRepaymentStartStr(String)
+ String getRepaymentEndStr()
+ void setRepaymentEndStr(String)
+ String getRepaymentMode()
+ void setRepaymentMode(String)
+ String getIsApprove()
+ void setIsApprove(String)
+ String getPaymentMethod()
+ void setPaymentMethod(String)
}
interface com.welab.loan.finance.enums.CreditLoanCancelEnum {
}
enum com.welab.loan.finance.enums.DealStatus {
+  INIT
+  CAN_NOT_ADDRESS
+  TIMEOUT_NO_NEE_TO_TRANSFER
+  TRANSFER_SUCCESS
+  FAILED
- Byte value
- String desc
- String display
~ <<Create>> DealStatus(Byte,String,String)
+ Byte getValue()
+ String getDesc()
+ String getDisplay()
+ {static} DealStatus getByValue(Byte)
}
class com.welab.loan.finance.dto.paylater.CalServiceFeeReqDTO {
- String prodCode
- String secondProdCode
- Long fundId
- Long amount
- String period
}
interface com.welab.loan.finance.service.business.repayment.IRepaymentService {
~ boolean chargeback(RepaymentCallReq)
~ CouponRepayment tryCouponAmount(LoanCouponCalDto)
~ Long getActualAmount(String)
~ Long getRealAmount(String)
~ CouponRepayment getRealAmount(String,Boolean)
~ CouponRepayment getRealAmount(String,Boolean,Date,Boolean)
~ CouponRepayment getRealAmount(String,Boolean,Boolean,Date,Boolean)
~ CouponRepayment getRealAmount(String,Boolean,Boolean,Date,LoanApplyPlans)
~ List<LoanCouponDetailVo> findAllCouponDetails(String)
~ void saveCouponDues(String)
~ List<CouponDues> findAllCouponDues(String)
~ Boolean matchCoupon(String,Integer,String,Boolean,Long)
~ void restAccount(String,Long)
~ void restAccount(String)
~ boolean chechCoupon(String,Long)
~ ModDuesDto findGoBackOverDues(String,Date)
~ boolean modPlanNextDues(String,Integer)
~ boolean savePlanNextDues(LoanDetail,Integer)
~ CalPlanAmountDTO tryPlanRepayment(TryPlanRepaymentExtDTO)
~ CalCplanRepayDTO tryCplanRepayment(TryPlanRepaymentDTO)
~ List<DuesRepayMentDTO> tryCplanRepaymentDetail(TryPlanRepaymentDTO)
~ Long findEplanAmount(String,PlansTypeEnum,Boolean)
}
class com.welab.loan.finance.app.command.plan.QueryCPlanAmountCmdExe {
- CPlanManager cPlanManager
+ Response<CustomRangeDTO> excute(QueryCPlanAmountCmd)
}
class com.welab.loan.finance.vo.ReportOverdueInfoVO {
- String productCode
- List<ReportOverdueDaysVO> reportOverdueDaysVO
}
interface com.welab.loan.finance.mapper.SyncVaCacheInfoMapper {
~ int deleteByPrimaryKey(Long)
~ int insert(SyncVaCacheInfo)
~ int insertSelective(SyncVaCacheInfo)
~ SyncVaCacheInfo selectByPrimaryKey(Long)
~ int updateByPrimaryKeySelective(SyncVaCacheInfo)
~ int updateByPrimaryKey(SyncVaCacheInfo)
}
class com.welab.loan.finance.common.RebookHelper {
+ {static} boolean isRebookOrder(Byte)
+ {static} boolean isRebookPlan(Byte)
}
class com.welab.loan.finance.model.LoanCessieInfo {
- Long id
- String loanNumber
- Integer dueIndex
- Long dueAmount
- Long cessieDiscount
- Long cessiePay
- Date cessieTime
- Date createdAt
- Date updatedAt
+ <<Create>> LoanCessieInfo()
+ <<Create>> LoanCessieInfo(String,Integer)
+ <<Create>> LoanCessieInfo(String,TransItemDTO)
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Integer getDueIndex()
+ void setDueIndex(Integer)
+ Long getCessieDiscount()
+ void setCessieDiscount(Long)
+ Long getCessiePay()
+ void setCessiePay(Long)
+ Date getCessieTime()
+ void setCessieTime(Date)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Long getDueAmount()
+ void setDueAmount(Long)
}
class com.welab.loan.finance.dto.cmd.AbstractNsListQry {
- String nik
- String loanNumber
- Long userId
- List<Long> userIds
}
class com.welab.loan.finance.vo.request.RepaymentCallReq {
- Long userId
- Long amount
- String extId
- String transId
- String orderNo
- String bankCode
- String accountNumber
- FundEnum fundEnum
- Date actualRepaymentAt
- String loanNumber
- TypeEnum typeEnum
- String repayCode
- Long storeId
- String callAddress
- RepayOriginEnum repayTypeEnum
- String promotionCode
- Long loanUserRepayId
- LoanDetail loanDetail
- String buyerName
- Long notifyAmount
}
class com.welab.loan.finance.model.ext.DuesExtItem {
- Long beforeTax
- Long vatFeeSettledAmount
- Long vateFee
}
class com.welab.loan.finance.model.CreditProxyIncomeLog {
- Long id
- Long userId
- Long proxyIncomeOld
- Long proxyIncomeNew
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ Long getProxyIncomeOld()
+ void setProxyIncomeOld(Long)
+ Long getProxyIncomeNew()
+ void setProxyIncomeNew(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.app.command.vat.VatInvalidCmdExe {
- LoanCouponService loanCouponService
- BaseLoanCouponService baseLoanCouponService
- BaseLoanDetailService baseLoanDetailService
- BaseLoanApplyPlansService baseLoanApplyPlansService
- BaseLoanApplyRepaymentService baseLoanApplyRepaymentService
- {static} Date expireAt
+ void invalid(Date)
}
class com.welab.loan.finance.facade.application.LoanCreditLimitServiceFacade {
- LoanCreditLimitService loanCreditLimitService
+ boolean isFraud(Long)
}
enum com.welab.loan.finance.enums.CreditAccountOprateTypeEnum {
+  UPDATE_SUM_MONEY
+  APPLY
+  CANCEL
+  USE
+  RESTORE
+  RETRACEMENT
- Integer status
- String name
- <<Create>> CreditAccountOprateTypeEnum(int,String)
+ Integer getStatus()
}
class com.welab.loan.finance.model.LoanDelayExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanDelayExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanDelayExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.LoanDelayExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanDelayExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.app.command.advance.AdvanceRepaymentConfirmCmdExe {
- BaseAdvanceMsgListService baseAdvanceMsgListService
- MessageAppFacade messageAppFacade
- AdvanceRepaymentManager advanceRepaymentManager
- BaseLoanService baseLoanService
+ Response<Object> advanceConfirm(String)
}
class com.welab.loan.finance.service.impl.LoanServiceImpl {
- BaseLoanService baseLoanService
- BaseDuesService baseDuesService
- FifStoreService fifStoreService
- DuesService duesService
- BasePayService basePayService
- BankConfigService bankConfigService
- BaseFifUvfService baseFifUvfService
- DuesExtMapper duesExtMapper
- LoanDetailMapper loanDetailMapper
- LoanDetailExtMapper loanDetailExtMapper
- LoanApplyPlansMapper loanApplyPlansMapper
- BaseRabbitTemplate rabbitTemplate
- LoanStatusNoticService loanStatusNoticService
- LoanDetailExtendMapper loanDetailExtendMapper
- LoanCouponMapper couponMapper
- LoanCouponDetailMapper loanCouponDetailMapper
- DuesMapper duesMapper
- ActivityDubboService activityDubboService
- LoanUserRepayMapper loanUserRepayMapper
- ModLendTypeBusiService modLendTypeBusiService
- CreditUserAccountService creditUserAccountService
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- BackstageConfigFacade backstageConfigFacade
- CustomRepayCmdExe customRepayCmdExe
- LoansService loansService
- BaseOperateLoanDetailExtendFlagHistoryService flagHistoryService
- LoanCessieInfoService loanCessieInfoService
- BaseLoanOverdueInfoService loanOverdueInfoService
- BaseTbUserService baseTbUserService
- BaseLoanDetailService baseLoanDetailService
- ApolloUtils apolloUtils
- BaseLoanApplyPlansService baseLoanApplyPlansService
- BaseRabbitTemplate baseRabbitTemplate
- MessageProducer messageProducer
+ Response<LoanDetailVO> getLoanDetailByLoanNumber(String)
+ PageBean findLoanListByPage(LoanBackDto)
+ List<MaxOverDueDto> findNewestDatas(List<Long>)
+ List<MaxOverDueDto> findNewestDataById(Long)
+ List<MaxOverDueDto> findNewestDataById(Long,String)
+ PageBean findRepaymentListByPage(DuesBackDto)
+ Response<Boolean> batchUpdateLabel(List<UpdateLabelDto>)
+ Response<Boolean> updateLabel(UpdateLabelDto)
+ Response updateAdvance(String)
+ PageInfo findLoanListExtByPage(LoanBackDto)
+ Response<LoanDetailVo> findLoan(String)
+ Response<LoanDayExtVo> findLoanOverDay(String)
+ Response<LoanDayExtVo> findLoanOverDayByUserId(Long)
+ Response<LoanDayExtVo> findLoanOverDayByUserIdAndProductType(Long,Byte)
+ Boolean countLoanOverByUserId(Long)
+ Response<List> findBankCode()
+ Response sendCustomAmount(String,String,Long)
+ Response sendCustomAmount(CustomRepayCmd)
+ Response<List<LoanDayExtVo>> findUserOverDay(Long)
+ Response<Boolean> updateDisMethodType(String,TypeEnum)
+ FifUvfExcelVo findUvfByLoanNum(String)
+ OverdueDayDTO getOverdueDay(String)
+ void restAccount(String,Long)
+ long countSpecialPromotion(String)
+ long countAllSpecialPromotion(String)
+ List<CessieDpdRspDTO> findLoanListDpd(List<String>)
+ boolean updateBatchLoanBySold(CessieLoanReqDTO)
+ List<CessieLoanRspDTO> findLoanListCloseAmount(List<String>)
+ List<CessieLoanRspDTO> findLoanListClose(List<String>)
+ boolean updateLoanListClose(List<CessieLoanCloseReqDTO>)
+ List<LoanCouponDetail> findAllUserCoupon(String)
# void addLoanCouponDetail(List<LoanCouponDetail>,LoanCoupon,CouponStatusEnum)
+ List<LoanCouponDetailDTO> findCouponDetailByLoan(String)
+ PageInfo findCreditHistoryLoanByUserId(CreditHistoryLoanReqDTO)
+ void updateCancelLoanNumber(String)
+ Response saveFlag(LoansFlagParamReqVO)
+ Long findUserIdByNib(String)
+ LoanDetailExtVO findLoanDetailExtByLoanNumber(String)
+ List<LoanStateVO> findLoanStateVOByLoanNumber(List<String>)
+ LoanStateVO findLoanStateVOByLoanNumber(String)
}
class com.welab.loan.finance.app.manager.flow.FlowTaskTrackManager {
- BaseFlowTaskTrackService baseFlowTaskTrackService
- BaseBigFieldParamService baseBigFieldParamService
+ int addFlowTaskTrack(FlowTaskTrack)
+ int updateFlowTaskTrackStatus(Long,Byte)
+ int updateFlowTaskTrack(FlowTaskTrack)
+ long countFlowTaskTrack(Long,String,Byte)
+ List<FlowTaskTrack> selectFlowTaskTrackList(Long,String)
+ Map<String,FlowTaskTrack> getFlowTaskTrackMap(Long)
+ FlowTaskTrack selectLastFlowTaskTrack(Long)
}
interface com.welab.loan.finance.mapper.InsuranceDetailMapper {
~ int countByExample(InsuranceDetailExample)
~ int deleteByExample(InsuranceDetailExample)
~ int deleteByPrimaryKey(Long)
~ int insert(InsuranceDetail)
~ int insertSelective(InsuranceDetail)
~ List<InsuranceDetail> selectByExample(InsuranceDetailExample)
~ InsuranceDetail selectByPrimaryKey(Long)
~ int updateByExampleSelective(InsuranceDetail,InsuranceDetailExample)
~ int updateByExample(InsuranceDetail,InsuranceDetailExample)
~ int updateByPrimaryKeySelective(InsuranceDetail)
~ int updateByPrimaryKey(InsuranceDetail)
}
class com.welab.loan.finance.app.manager.credit.activity.TenorSortListManager {
+ List<String> getTenorList(JSONObject)
}
abstract class com.welab.loan.finance.app.service.tb.AbstractTbLoanService {
+ {abstract}TbImportResDTO loanImport(TbLoanImportCmd)
}
class com.welab.loan.finance.dto.FinanceLendBackDto {
- String loanNumber
- String secondProdCode
- String mobile
- String lendId
- Integer status
- Integer lendType
- String startTime
- String endTime
- String transId
- Byte mode
- Long fundId
- Long adminId
- Byte productType
- List<Integer> lendTypes
- List<Integer> statusList
- List<Integer> modes
- List<Integer> fundIds
- List<String> secondProdCodes
- List<Integer> productTypes
- String merchantCode
- String merchantOrderNo
- Byte flag
- String flagReason
}
class com.welab.loan.finance.dto.QueryRemainingAmountDTO {
- List<String> loanNumberList
- boolean isAllDue
}
class com.welab.loan.finance.core.dto.MatchRateDto {
- String tenor
- String riskLevel
- String productCode
- String secondProdCode
- Long fundId
- Long userId
- Integer abTestGroupType
- Long abTestId
- String controlGroupSecondProdCode
- Boolean insuranceSelect
}
class com.welab.loan.finance.model.ext.LoanDetailExt {
- String isSent
- Integer overDay
- String fundName
- Long lateFee
- Long outstandingAmount
- Long paidAmount
- Long serviceFee
- Long fundInterest
- Long carryingFee
- Long ifUpfront
- Long ifWht
- Date repayDueDate
- String bankName
- String bankCode
- String bankAccountNumber
- String nik
- Long liteFundInterest
- String lendTypeStr
- String lendStatusStr
- String repayStatusStr
- String planTypeStr
- Long planServiceFee
- Long planFundInterest
- Long loanTransferAmount
- Long pfUpfront
- Long splitProvisionFee
- Long splitAdminFee
- String transType
- Long payLaterProvisionFee
- Long astraFee
- Long adminFeeRepay
- String cessie
- String buyerName
- String merchantName
- String productTypeStr
- String merchantCode
- String merchantOrderNo
- Long discountServiceFee
- Long disUpfrontServiceFee
- Long disUpfrontAdminFee
- Date disbursementInitiatesDate
- Byte flag
- String flagReason
- String mobile
- Integer overdueDays
- String transId
- BigDecimal fundProvisionRate
- BigDecimal totalServiceFeeRate
- BigDecimal fundInterestEffectiveRate
- BigDecimal provisionFeeEffectiveRate
- String email
- Integer customerSegment
- String rateExtend
- Long premiumAmount
- Byte cashFlowStatus
- String cashFlowStatusStr
+ Date getDisbursementInitiatesDate()
+ {static} Map getExportMap()
+ {static} LinkedHashMap getLoanListExportMap()
+ void setExtData(LoanDetailExt)
}
class com.welab.loan.finance.dto.qry.MerchantRepaymentQry {
- boolean queryCount
- String sourceId
- String merchantCodes
- String loanNumber
- Date beginTime
- Date endTime
- Long userId
}
class com.welab.loan.finance.dto.TryRepayCPlanDTO {
- long nextTotalAmount
- long totalAmount
- long planAmount
- List<CalCplanRepayDTO> loanTryCPlanList
- long principal
- long fundInterest
- long serviceFee
- long lateFee
- long adminFee
- long carryingFee
- long provisionFee
- long interest
}
class com.welab.loan.finance.job.CreateOverdueJob {
- WelabSeaDynamicDbService seaDynamicDbService
+ void execute(ShardingContext)
- String findSql(String)
}
class com.welab.loan.finance.app.base.BaseMerchantTradingService {
- PayLaterExtMapper payLaterExtMapper
+ MerchantTradingDTO queryMerchantTradingInfor(MerchantTradingQry)
+ PageInfo<MerchantLoanDTO> queryMerchantLoans(MerchantLoanQry)
+ PageInfo<MerchantRepaymentLoanDTO> queryMerchantRepaymentLoans(MerchantRepaymentQry)
}
interface com.welab.loan.finance.mapper.ext.LoanPlansRelationExtMapper {
~ List<LoanPlansRelationDTO> getEffectiveEplanLoans(Long)
~ int updateStatusByLoanNumbers(List<String>,Integer,Integer)
}
class com.welab.loan.finance.core.loan.user.LoanUserRepayImpl {
- BaseLoanUserRepayService loanUserRepayService
- LoanDetailMapper detailMapper
+ List<String> findLoanByUser(Long)
+ LoanRepayDTO saveUserRepay(Long,List<String>)
+ LoanUserRepay findLoanUserRepayByUserId(Long)
+ List<String> findLoanUserRepayDetail(Long)
+ LoanUserRepay findLoanUserRepay(Long)
+ int deleteLoanUserRepay(Long)
+ LoanUserDTO findLoanByUserByVa(Long)
+ List<String> findGateWayExtend(Long,String)
- LoanUserRepay findLoanUserRepayOne(Long,boolean)
+ List<String> findDefaultLoanByUser(Long)
- List<String> findLoansByUser(Long,List<String>)
+ List<LoanDetail> findRepayingLoansByUser(Long)
- List<String> findLoansDetail(Long)
+ LoanUserRepay saveRepay(Long,Date)
}
interface com.welab.loan.finance.mapper.UserAdvancePaymentMapper {
~ long countByExample(UserAdvancePaymentExample)
~ int deleteByPrimaryKey(Long)
~ int insert(UserAdvancePayment)
~ int insertSelective(UserAdvancePayment)
~ List<UserAdvancePayment> selectByExample(UserAdvancePaymentExample)
~ UserAdvancePayment selectByPrimaryKey(Long)
~ int updateByExampleSelective(UserAdvancePayment,UserAdvancePaymentExample)
~ int updateByExample(UserAdvancePayment,UserAdvancePaymentExample)
~ int updateByPrimaryKeySelective(UserAdvancePayment)
~ int updateByPrimaryKey(UserAdvancePayment)
}
class com.welab.loan.finance.dto.tb.TbOverdueNotifyDTO {
- {static} long serialVersionUID
- String loanNumber
- Date overdueTime
- Boolean isOverDue
}
class com.welab.loan.finance.app.service.credit.loan.ShortLoanService {
+ List<TagProductVO> processLoan(CreditUserAccountExt,Map<String,TagProductVO>)
}
class com.welab.loan.finance.app.service.paybills.BcaPayBillsService {
- Pattern pattern
- BaseBigFieldParamService baseBigFieldParamService
+ String channel()
# List<BcaPayBillsService.BcaPayBillsContext> parseData(MultipartFile)
- BcaPayBillsService.BcaPayBillsContext buildBcaPayBillsContext(String)
# Long savePayBillsExt(BcaPayBillsContext)
}
class com.welab.loan.finance.app.service.paybills.BcaPayBillsService$BcaPayBillsContext {
- String no
- String mobile
- String name
- String currencyUnit
- String billAmount
- String billDdMmYy
- String billHhMmSs
}
interface com.welab.loan.finance.mapper.FinanceUserAccountDetailMapper {
~ long countByExample(FinanceUserAccountDetailExample)
~ int deleteByExample(FinanceUserAccountDetailExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FinanceUserAccountDetail)
~ int insertSelective(FinanceUserAccountDetail)
~ List<FinanceUserAccountDetail> selectByExample(FinanceUserAccountDetailExample)
~ FinanceUserAccountDetail selectByPrimaryKey(Long)
~ int updateByExampleSelective(FinanceUserAccountDetail,FinanceUserAccountDetailExample)
~ int updateByExample(FinanceUserAccountDetail,FinanceUserAccountDetailExample)
~ int updateByPrimaryKeySelective(FinanceUserAccountDetail)
~ int updateByPrimaryKey(FinanceUserAccountDetail)
}
class com.welab.loan.finance.rabbitmq.syn.SynEventConsumer {
+ void onMessage(Message)
}
class com.welab.loan.finance.model.LendReversalRepaymentDetailExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LendReversalRepaymentDetailExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LendReversalRepaymentDetailExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andRepayLoanNumberIsNull()
+ Criteria andRepayLoanNumberIsNotNull()
+ Criteria andRepayLoanNumberEqualTo(String)
+ Criteria andRepayLoanNumberNotEqualTo(String)
+ Criteria andRepayLoanNumberGreaterThan(String)
+ Criteria andRepayLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andRepayLoanNumberLessThan(String)
+ Criteria andRepayLoanNumberLessThanOrEqualTo(String)
+ Criteria andRepayLoanNumberLike(String)
+ Criteria andRepayLoanNumberNotLike(String)
+ Criteria andRepayLoanNumberIn(List<String>)
+ Criteria andRepayLoanNumberNotIn(List<String>)
+ Criteria andRepayLoanNumberBetween(String,String)
+ Criteria andRepayLoanNumberNotBetween(String,String)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.LendReversalRepaymentDetailExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LendReversalRepaymentDetailExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.service.core.BaseLoanWarrantyService {
- LoanWarrantyExtMapper loanWarrantyExtMapper
- LoanDetailMapper loanDetailMapper
+ String importLoanWarranty(Long,List<LoanWarrantyVo>)
- String checkDueIndexProcessed(Collection<Integer>,Collection<Integer>)
- String checkDueIndex(Collection<Integer>,Collection<Integer>)
- Map<String,LoanDetail> getLoanDetailMaps(Set<String>)
+ {static} void main(String[])
}
class com.welab.loan.finance.model.LoanCoupon {
- Long id
- Long orgId
- String loanNumber
- Byte type
- String promotionCode
- Byte preferentialType
- BigDecimal disInterestFee
- BigDecimal disAdminFee
- BigDecimal disLateFee
- BigDecimal disPrincipal
- BigDecimal disFundFee
- BigDecimal disProvisionFee
- BigDecimal disLateFeeUnpay
- BigDecimal disAdminFeeUnpay
- BigDecimal disInterestFeeUnpay
- BigDecimal disPrincipalUnpay
- BigDecimal disFundFeeUnpay
- BigDecimal disProvisionFeeUnpay
- Byte status
- Long userId
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getOrgId()
+ void setOrgId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Byte getType()
+ void setType(Byte)
+ String getPromotionCode()
+ void setPromotionCode(String)
+ Byte getPreferentialType()
+ void setPreferentialType(Byte)
+ BigDecimal getDisInterestFee()
+ void setDisInterestFee(BigDecimal)
+ BigDecimal getDisAdminFee()
+ void setDisAdminFee(BigDecimal)
+ BigDecimal getDisLateFee()
+ void setDisLateFee(BigDecimal)
+ BigDecimal getDisPrincipal()
+ void setDisPrincipal(BigDecimal)
+ BigDecimal getDisFundFee()
+ void setDisFundFee(BigDecimal)
+ BigDecimal getDisProvisionFee()
+ void setDisProvisionFee(BigDecimal)
+ BigDecimal getDisLateFeeUnpay()
+ void setDisLateFeeUnpay(BigDecimal)
+ BigDecimal getDisAdminFeeUnpay()
+ void setDisAdminFeeUnpay(BigDecimal)
+ BigDecimal getDisInterestFeeUnpay()
+ void setDisInterestFeeUnpay(BigDecimal)
+ BigDecimal getDisPrincipalUnpay()
+ void setDisPrincipalUnpay(BigDecimal)
+ BigDecimal getDisFundFeeUnpay()
+ void setDisFundFeeUnpay(BigDecimal)
+ BigDecimal getDisProvisionFeeUnpay()
+ void setDisProvisionFeeUnpay(BigDecimal)
+ Byte getStatus()
+ void setStatus(Byte)
+ Long getUserId()
+ void setUserId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.model.LoanMqExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanMqExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanMqExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Integer)
+ Criteria andIdNotEqualTo(Integer)
+ Criteria andIdGreaterThan(Integer)
+ Criteria andIdGreaterThanOrEqualTo(Integer)
+ Criteria andIdLessThan(Integer)
+ Criteria andIdLessThanOrEqualTo(Integer)
+ Criteria andIdIn(List<Integer>)
+ Criteria andIdNotIn(List<Integer>)
+ Criteria andIdBetween(Integer,Integer)
+ Criteria andIdNotBetween(Integer,Integer)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.LoanMqExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanMqExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.vo.LoansFlagParamReqVO {
- String loanNumber
- Byte flag
- String flagReason
- Long adminId
}
class com.welab.loan.finance.test.cplan.CPlanManagerTest {
- CPlanManager cPlanManager
- CheckCPlanCustomAmountCmdExe checkCPlanCustomAmountCmdExe
- QueryCPlanAmountCmdExe queryCPlanAmountCmdExe
- TryRepayCPlanCmdExe tryRepayCPlanCmdExe
- CreateCPlanContractCmdExe createCPlanContractCmdExe
- ApplyCPlanCmdExe applyCPlanCmdExe
- BasePayService basePayService
- CPlanCalculationCmdExe cPlanCalculationCmdExe
- long amount
- long userId
- List<String> loanNumbers
+ void isAllowApply()
+ void testCAmount()
+ void checkCPlanCustomAmountCmdExe()
+ void queryCPlanAmountCmdExe()
+ void tryRepayCPlanCmdExe()
+ void createCPlanContractCmdExe()
+ void applyCPlanCmdExe()
+ void tryCPlanForCollection()
}
class com.welab.loan.finance.vo.request.FifUvfMotorLoanReq {
- String applyNo
- String contractId
- String contractDay
- String contractAt
- String ptName
- String branchAddr
- String userName
- String sex
- String occupation
- String fullAddr
- String nik
- String lawType
- String lawCity
- String product
- String purposeDesc
- String fundName
- String objectName
- Long surveyFee
- Long insuranceFee
- Long guaranteeFee
- Long fiduciaryFee
- Long provisionFee
- Long notaryFee
- Long adminFee
- Long roadPrices
- Long fundAmount
- Long serviceAmount
- Long allAmount
- String tenor
- String repaymentTime
- String repaymentPeriod
- String repaymentAmount
- String lastRepayment
- String repaymentDate
- BigDecimal lateRate
- Long collectionFee
- Long agentFee
- String approvedBy
- String signAt
- String borrowerPayAt
- Long lendAmount
- String agentName
- String agentBankAccountNo
- String agentBankName
- String email
- String birthday
- String marital
- String education
- String religion
- String mobile
- String houseTel
- String ktpCode
- String ktpProvince
- String ktpCity
- String ktpArea
- String ktpVillage
- String ktpFullAddr
- String rtKtp
- String rwKtp
- String isSame
- String domicileCode
- String domicileProvince
- String domicileCity
- String domicileArea
- String domicileVillage
- String rtDomicile
- String rwDomicile
- String domicileStatus
- String workStatus
- String companyName
- String salary
- String incomeSource
- String industry
- String workLength
- String officeTel
- String officeCode
- String officeProvince
- String officeCity
- String officeArea
- String officeVillage
- String officeFullAddr
- String sendAt
- Long otherExpense
- String mobile2
- String mobile3
- String mobile4
- Long totalInterestAwda
- String totalActualInterest
- BigDecimal toCustomerBeforeInstallment
- BigDecimal toCustomerAfterInstallment
- String fundCode
- Long fundId
- String interestType
- String collateralOwnership
- String collateralBinding
- String bindingCollateral
- String securityCertificatePosition
- String workCode
- String businessAndWorkingPlace
- String cityCode
- String creditBeginningDate
- String startDate
- String collateralNumber
- String collateralLocation
- String assessmentDateLjk
}
class com.welab.loan.finance.model.ext.InsuredTrackExt {
- Long insuredAmount
- Long fastPayFee
- Long fundInterestFee
- Long vatFee
- Long fundId
- String dateStr
- String bankCode
}
class com.welab.loan.finance.facade.paygateway.GatewayRepaymentOrderServiceFacade {
- GatewayRepaymentOrderService gatewayRepaymentOrderService
+ List<GatewayRepaymentOrderResDTO> listByParam(List<GatewayRepaymentOrderParamDTO>)
}
class com.welab.loan.finance.model.CreditAbtestExportExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditAbtestExportExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditAbtestExportExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreditAbtestIdIsNull()
+ Criteria andCreditAbtestIdIsNotNull()
+ Criteria andCreditAbtestIdEqualTo(Long)
+ Criteria andCreditAbtestIdNotEqualTo(Long)
+ Criteria andCreditAbtestIdGreaterThan(Long)
+ Criteria andCreditAbtestIdGreaterThanOrEqualTo(Long)
+ Criteria andCreditAbtestIdLessThan(Long)
+ Criteria andCreditAbtestIdLessThanOrEqualTo(Long)
+ Criteria andCreditAbtestIdIn(List<Long>)
+ Criteria andCreditAbtestIdNotIn(List<Long>)
+ Criteria andCreditAbtestIdBetween(Long,Long)
+ Criteria andCreditAbtestIdNotBetween(Long,Long)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andFileIdIsNull()
+ Criteria andFileIdIsNotNull()
+ Criteria andFileIdEqualTo(String)
+ Criteria andFileIdNotEqualTo(String)
+ Criteria andFileIdGreaterThan(String)
+ Criteria andFileIdGreaterThanOrEqualTo(String)
+ Criteria andFileIdLessThan(String)
+ Criteria andFileIdLessThanOrEqualTo(String)
+ Criteria andFileIdLike(String)
+ Criteria andFileIdNotLike(String)
+ Criteria andFileIdIn(List<String>)
+ Criteria andFileIdNotIn(List<String>)
+ Criteria andFileIdBetween(String,String)
+ Criteria andFileIdNotBetween(String,String)
+ Criteria andFileNameIsNull()
+ Criteria andFileNameIsNotNull()
+ Criteria andFileNameEqualTo(String)
+ Criteria andFileNameNotEqualTo(String)
+ Criteria andFileNameGreaterThan(String)
+ Criteria andFileNameGreaterThanOrEqualTo(String)
+ Criteria andFileNameLessThan(String)
+ Criteria andFileNameLessThanOrEqualTo(String)
+ Criteria andFileNameLike(String)
+ Criteria andFileNameNotLike(String)
+ Criteria andFileNameIn(List<String>)
+ Criteria andFileNameNotIn(List<String>)
+ Criteria andFileNameBetween(String,String)
+ Criteria andFileNameNotBetween(String,String)
+ Criteria andCreatedByIsNull()
+ Criteria andCreatedByIsNotNull()
+ Criteria andCreatedByEqualTo(Long)
+ Criteria andCreatedByNotEqualTo(Long)
+ Criteria andCreatedByGreaterThan(Long)
+ Criteria andCreatedByGreaterThanOrEqualTo(Long)
+ Criteria andCreatedByLessThan(Long)
+ Criteria andCreatedByLessThanOrEqualTo(Long)
+ Criteria andCreatedByIn(List<Long>)
+ Criteria andCreatedByNotIn(List<Long>)
+ Criteria andCreatedByBetween(Long,Long)
+ Criteria andCreatedByNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.CreditAbtestExportExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.CreditAbtestExportExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.core.dto.dues.CostDetailDTO {
- List<Due> repayCost
- Long repayDueAmount
- Long repayTotalAmount
- Long repayAdminFee
- String realPeriod
- Long upfrontCarryFee
- Long adminFee
- List<CostDTO> lendCost
- boolean isAplan
- FeeTypeExtDTO feeTypeExtDTO
}
interface com.welab.loan.finance.mapper.FinanceUserBankcardExtMapper {
~ Integer selectCount(Long,Date,Date,List<Long>)
}
class com.welab.loan.finance.test.ReversalTest {
- ReversalService reversalService
- LoanReversalJob loanReversalJob
- RepaymentGoBackManager goBackManager
- BaseRabbitTemplate baseRabbitTemplate
- BaseLoanRepaymentService baseLoanRepaymentService
- BaseDuesService baseDuesService
- BaseLoanReversalService baseLoanReversalService
- BaseLoanRepaymentService loanRepaymentService
- BaseLoanCouponDetailService baseLoanCouponDetailService
- BaseFinanceDuesService baseFinanceDuesService
- VaAmountBackCompont vaAmountBackCompont
- DuesGoBackCmdExe duesGoBackCmdExe
+ void testReversal()
+ void testSendEmail()
+ void testBackToAwda()
+ void duesBack()
+ void tbDuesBack()
+ void testDocal()
+ void tbDuesBackByLoanNumber()
+ void testOver()
+ void repayTrackBack()
+ void creditBack()
+ void refundBack()
+ void loanStateBack()
+ void testAddDues()
+ void testOverDue()
+ void financeDuesSync()
+ void syncVA()
}
class com.welab.loan.finance.model.CreditAbtestExport {
- Long id
- Long creditAbtestId
- Byte status
- String fileId
- String fileName
- Long createdBy
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getCreditAbtestId()
+ void setCreditAbtestId(Long)
+ Byte getStatus()
+ void setStatus(Byte)
+ String getFileId()
+ void setFileId(String)
+ String getFileName()
+ void setFileName(String)
+ Long getCreatedBy()
+ void setCreatedBy(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
interface com.welab.loan.finance.mapper.ext.EPlanExtMapper {
~ List<EPlanApplyDTO> getEPlanList(Long)
~ int countForApplying(Long)
~ String maxLendAt(List<String>)
~ String maxDueDay(List<String>)
~ Integer maxOverdueDays(List<String>)
}
class com.welab.loan.finance.job.TravelokaPaylaterVaSyncJob {
- TravelokaPaylaterVaSyncCmdExe travelokaPaylaterVaSyncCmdExe
+ void execute(ShardingContext)
}
class com.welab.loan.finance.model.BusinessCalendars {
- Long id
- Integer calYear
- Date calDay
- Boolean bizDay
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Integer getCalYear()
+ void setCalYear(Integer)
+ Date getCalDay()
+ void setCalDay(Date)
+ Boolean getBizDay()
+ void setBizDay(Boolean)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.model.CreditActivityAbTestGroup {
- Long id
- Date createdAt
- Date updatedAt
- String groupId
- String matrixType
- Long creatorBy
- Byte userGroupRuleType
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getGroupId()
+ void setGroupId(String)
+ String getMatrixType()
+ void setMatrixType(String)
+ Long getCreatorBy()
+ void setCreatorBy(Long)
+ Byte getUserGroupRuleType()
+ void setUserGroupRuleType(Byte)
}
class com.welab.loan.finance.core.dto.repayment.MultipleRepayDTO {
- Long userId
- String extendId
- Long transAmount
- String transId
- String orderNo
- String bankCode
- String accountNumber
- FundEnum fundEnum
- Date actualRepaymentAt
- TypeEnum typeEnum
- String repayCode
- Long storeId
- RepayOriginEnum repayTypeEnum
- Date backDate
- Long principal
- Long serviceFee
- Long lateFee
- Integer dueIndex
- Boolean overdueJobTrigger
- String trxIdOrVa
- Date postDate
}
class com.welab.loan.finance.job.LoanReversalJob {
- BaseLoanReversalService loanReversalService
- UserServiceFacade userServiceFacade
+ void execute(ShardingContext)
+ List quaryList(String)
+ ReversalVo transform(Object)
+ LinkedHashMap getExcelHead()
+ String getSubject(String)
+ void setEmailUser()
}
enum com.welab.loan.finance.enums.LoanUvfStatusEnum {
+  APPLY
+  LOANING
+  LOANSUCC
+  LOANFAIL
- Byte value
- String name
- String enName
}
enum com.welab.loan.finance.enums.TradingTypeEnum {
+  ADMIN_FEE
+  CHANNEL_FEE
+  LEND_FEE
+  RECHARGE_FEE
+  ALFAMART_RECHARGE_FEE
+  ALFAMART_RECHARGE_LEND_FEE
+  ALFAMART_RECHARGE_ADMIN_FEE
+  HANDLING_FEE
+  FUND_INTEREST
+  PROVISION_FEE
+  REFUND_FEE
+  DELAY_REFUND_FEE
+  SERVICE_FEE
+  UVF_MOTOR_BATCH_RECHARGE
+  UVF_MOTOR_BATCH_DISBURSED
+  ASTRA_RECHARGE_FEE
+  ASTRA_PAY_LATER_LEND_FEE
+  ASTRA_PAY_LATER_SERVICE_FEE
+  TAPP_RECHARGE_FEE
+  TAPP_PAY_LATER_LEND_FEE
+  TAPP_PAY_LATER_INTEREST_FEE
+  TAPP_PAY_LATER_ADMIN_FEE
+  TRAVELOKA_RECHARGE
+  TRAVELOKA_LEND
+  HSO_RECHARGE
+  HSO_LEND
+  AOP_RECHARGE
+  AOP_LEND
+  RESTOCK_RECHARGE
+  RESTOCK_LEND
+  REVERSAL_FUND_TO_LOAN
+  REVERSAL_AWDA_TO_LOAN
+  REVERSAL_LOAN_TO_FUND
+  REBOOK
+  VAT_FEE
+  TB_RECHARGE
+  TB_TO_COMPANY
+  TB_TO_AWDA
+  E_PLAN_TO_AWDA
+  REVERSAL_VAT_TO_LOAN
+  CANCEL_LOAN
+  PREMIUM_FEE_2_INSURANCE_BROKER
+  LEND_AMOUNT_TO_BNI_AWDA
+  BNI_AWDA_TO_PERMATA_AWDA
+  BNI_TO_BNI_A
+  BCA_B_TO_BCA_C
+  ASTRA_PAY_LATER_BNI_TO_BNI_A
+  ASTRA_PAY_LATER_BCA_B_TO_BCA_C
+  TB_BNI_TO_BNI_A
+  TB_BCA_B_TO_BCA_C
+  BNI_A_TO_BCA_B
+  INSIDE_LEND_USER
+  INSIDE_LEND_BUSI
- int val
- String desc
- String name
+ {static} List getTradingList()
+ {static} TradingTypeEnum getTradingTypeEnum(int)
}
class com.welab.loan.finance.rabbitmq.TransferConsumer {
- BaseFinanceTrading baseFinanceTrading
- FinanceTradingExtMapper financeTradingExtMapper
- BaseFinanceTradingService baseFinanceTradingService
# FundAccountInfoService fundAccountInfoService
- PayService payService
- AlfamartHandel alfamartHandel
- BaseFundAccountService baseFundAccountService
- ICallbackEvent ICallbackEvent
- JedisCluster jedisCluster
- LoanDetailMapper loanDetailMapper
- UVFTradeService uvfTradeService
- MerchantServiceFacade merchantServiceFacade
- LendReversalService lendReversalService
- TbLendCallbackService tbLendCallbackService
- TbPayService tbPayService
- FinanceRepaymentTrackMapper financeRepaymentTrackMapper
- QueryTaskServiceFacade queryTaskServiceFacade
- BaseFinanceLendService baseFinanceLendService
- BaseBcaTransferService bcaTransferService
- IFundMatchService iFundMatchService
+ void onMessage(Message)
+ void transferHandle(String)
+ void transferNewHandle(TransferCallbackDto,FinanceTrading)
- void doUpdateRepaymentTrack(TransferCallbackDto)
- void doPremium(FinanceTrading)
- void tbTransferNEW(TransferCallbackDto,FinanceTrading)
- void tbTransfer(TransferCallbackDto,FinanceTrading)
- void tbLend(TransferCallbackDto,FinanceTrading)
- void bcaH1Transfer(TransferCallbackDto)
+ void sendEmail(FinanceTrading)
+ void alfamrtCall(FinanceTrading)
- void sendAstra(FinanceTrading)
- void sendAstra(FinanceTrading,QueryPartnerBankDTO)
- FinanceTrading insertAstraPayLaterLendFeeTrading(FinanceTrading,QueryPartnerBankDTO,Long,boolean)
+ QueryPartnerBankDTO getBankAccount(String)
+ void transferOldHandle(String)
+ void sendProvisionFee(String)
# LoanDetail findLoanDetail(String)
+ void sendAlfamart(String)
+ void sendTapp(String)
- boolean locked(String,Date,Date)
+ void callAlfamart(String)
+ FinanceTrading save(String,Long,Long,TradingTypeEnum,FundTransferAccountResponseDTO,String,String)
+ FinanceTrading save(String,Long,TradingTypeEnum,TransferDto,String,String)
# Map<Long,Long> getProvisionFeeAndFundInterest(Map)
- void awdaToLoan(FinanceTrading)
- void loanToFund(FinanceTrading)
- boolean vatToLoan(FinanceTrading)
- void updateCashLoanOrBimaLendStatus(FinanceTrading)
- void payLend(FinanceTrading)
}
class com.welab.loan.finance.model.CreditActivityAbTest {
- Long id
- Date createdAt
- Date updatedAt
- String activityId
- String scenarioName
- String description
- Long bigFieldRelationId
- Long testGroupId
- String activityStatus
- Date startedTime
- Date endTime
- Date launchTime
- Long creatorBy
- Date terminatedTime
- Long terminatedBy
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getActivityId()
+ void setActivityId(String)
+ String getScenarioName()
+ void setScenarioName(String)
+ String getDescription()
+ void setDescription(String)
+ Long getBigFieldRelationId()
+ void setBigFieldRelationId(Long)
+ Long getTestGroupId()
+ void setTestGroupId(Long)
+ String getActivityStatus()
+ void setActivityStatus(String)
+ Date getStartedTime()
+ void setStartedTime(Date)
+ Date getEndTime()
+ void setEndTime(Date)
+ Date getLaunchTime()
+ void setLaunchTime(Date)
+ Long getCreatorBy()
+ void setCreatorBy(Long)
+ Date getTerminatedTime()
+ void setTerminatedTime(Date)
+ Long getTerminatedBy()
+ void setTerminatedBy(Long)
}
interface com.welab.loan.finance.mapper.AbnormalRepaymentRecordMapper {
~ long countByExample(AbnormalRepaymentRecordExample)
~ int deleteByPrimaryKey(Long)
~ int insert(AbnormalRepaymentRecord)
~ int insertSelective(AbnormalRepaymentRecord)
~ List<AbnormalRepaymentRecord> selectByExample(AbnormalRepaymentRecordExample)
~ AbnormalRepaymentRecord selectByPrimaryKey(Long)
~ int updateByExampleSelective(AbnormalRepaymentRecord,AbnormalRepaymentRecordExample)
~ int updateByExample(AbnormalRepaymentRecord,AbnormalRepaymentRecordExample)
~ int updateByPrimaryKeySelective(AbnormalRepaymentRecord)
~ int updateByPrimaryKey(AbnormalRepaymentRecord)
}
class com.welab.loan.finance.model.flow.BaseFlowContext {
- Long taskId
- String taskCode
- String tradeNo
- boolean isRetry
- Integer retryCount
- Map<String,FlowTaskTrack> flowTaskTrackMap
}
class com.welab.loan.finance.service.business.EPlanService {
- BaseLoanPlansRelationService baseLoanPlansRelationService
- LendBusiService lendBusiService
- BaseFinanceLendService financeLendService
- MaucashLendServiceImpl maucashLendService
- LoanStatusNoticService loanStatusNoticService
- BaseRepaymentTrack baseRepaymentTrack
- DuesService duesService
- BaseRabbitTemplate baseRabbitTemplate
- BaseLoanApplyPlansService baseLoanApplyPlansService
- BaseLoanService baseLoanService
- EPlanCalculationCmdExe ePlanCalculationCmdExe
- BaseRabbitTemplate rabbitTemplate
+ void handleApplincationInfo(String)
+ boolean isClose(String)
+ LoanPlansRelation getOneLoanPlansRelation(String)
+ LoanPlansRelation getLoanPlansRelationByOldLoanNum(String)
+ EPlanTryDueVO tryDueForLoanNumber(String)
+ void notifyApplication(EPlanLoanDTO)
+ void fillRepayInfoDtoForEPlan(RepayInfoDto)
+ EPlanTryDueVO tryDue(EPlanTryDueDto)
+ boolean isJoinOtherPlanByUser(long,List<Byte>)
}
abstract class com.welab.loan.finance.app.service.tb.AbstractTbAgreementService {
+ {abstract}Response agreeImport(TbAgreementImportCmd)
# void upload(Long,MultipartFile)
# boolean matchSpecialChar(String)
# boolean checkFileName(String)
# Response checkFiles(TbAgreementImportCmd)
}
enum com.welab.loan.finance.enums.IsAdvanceEnum {
+  advance
+  unadvance
- Byte value
- String name
- String enName
- <<Create>> IsAdvanceEnum(int,String,String)
+ Byte getValue()
+ String getName()
+ String getEnName()
+ {static} IsAdvanceEnum getEnum(Byte)
+ {static} boolean check(Byte)
+ {static} List getStatusList(boolean)
}
interface com.welab.loan.finance.mapper.CreditUserTagRuleMapper {
~ long countByExample(CreditUserTagRuleExample)
~ int deleteByExample(CreditUserTagRuleExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditUserTagRule)
~ int insertSelective(CreditUserTagRule)
~ List<CreditUserTagRule> selectByExampleWithBLOBs(CreditUserTagRuleExample)
~ List<CreditUserTagRule> selectByExample(CreditUserTagRuleExample)
~ CreditUserTagRule selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditUserTagRule,CreditUserTagRuleExample)
~ int updateByExampleWithBLOBs(CreditUserTagRule,CreditUserTagRuleExample)
~ int updateByExample(CreditUserTagRule,CreditUserTagRuleExample)
~ int updateByPrimaryKeySelective(CreditUserTagRule)
~ int updateByPrimaryKeyWithBLOBs(CreditUserTagRule)
~ int updateByPrimaryKey(CreditUserTagRule)
}
class com.welab.loan.finance.core.dues.impl.DdmCostService {
- boolean isDiscount
+ CostDetailDTO findCostDetail(CostReqDTO)
+ String costKey()
}
class com.welab.loan.finance.service.business.repayment.DeductDuesService {
- <<Create>> DeductDuesService()
+ {static} List<DeductDuesDTO> findNormalDeductDuesList(List<DiscountDuesDTO>,Long)
+ {static} List<DeductDuesDTO> findAdvanceDeductDuesList(List<DiscountDuesDTO>,Long)
+ {static} List<DeductDuesDTO> findDefaultDeductDuesList(List<DiscountDuesDTO>,Long)
- {static} boolean isCessieOreder(DiscountDuesDTO)
+ {static} List<DeductDuesDTO> findTravelokaDeductDuesList(List<DiscountDuesDTO>,Integer,Long,Long,Long)
+ {static} void printData(List<DeductDuesDTO>)
+ {static} DeductDetailDTO transformDeductDetail(List<DeductDuesDTO>,boolean)
- {static} void findSetLoanPlansLog(LoanPlansLog,String,Long)
- {static} void findSetCoupon(LoanCouponDetail,String,Long)
}
class com.welab.loan.finance.service.core.BaseBcaTransferService {
- BcaTransferExtMapper bcaTransferExtMapper
- BcaTransferMapper bcaTransferMapper
+ void batchInsert(List<BcaTransfer>)
+ List<BcaTransferExt> selectLendLastTransfer(Map)
+ List<BcaTransfer> selectByBatchNo(String)
+ List<BcaTransferExt> selectTradingLastTransfer(Map)
+ void putBatchNo(List<BcaTransfer>,String)
+ void updateBatchStatus(String,String,TradingStatusEnum)
+ void resetCreatedAtTime(Date)
}
class com.welab.loan.finance.app.service.flow.repaymentback.tb.TbVaAmountBackCompont {
- BaseRabbitTemplate baseRabbitTemplate
- BaseLoanDetailService baseLoanDetailService
- void vaAmountGoBack(String,Long)
+ FlowTaskNodeEnum flowTaskNode()
# void process(RepaymentBackFlowContext)
}
interface com.welab.loan.finance.service.LendService {
~ Response sign(SignDTO)
~ Response signV2(SignDTO)
~ Response sendLend(String,TypeEnum)
~ Response<FinanceLendVo> queryLend(String)
~ Response errorHander(Long)
~ Response<String> callLend(String,Long)
~ Response<String> queryTransIdByLoanNum(String)
~ Response<List<LendStaticExtVo>> findLendStatic(String,String)
~ Response<Long> findUnCloseCreditTotalAmount(String,String)
~ Response<Void> receiveLoan(String)
}
class com.welab.loan.finance.model.LoanUvfDues {
- Long id
- String branchId
- String contractId
- String loanNumber
- Integer paymentTerm
- Integer repaymentPeriod
- Long dueAmount
- Long principal
- Long serviceFee
- Date dueDate
- Long operatorId
- Date createdAt
- Date updatedAt
- Long interestAmountPay
- Long interestAmountUnpay
- Long interestDiscount
- Long principalPay
- Long principalUnpay
- Long principalDiscount
- Long actualPrincipal
- Long actualInterest
- String secondProdCode
+ Long getId()
+ void setId(Long)
+ String getBranchId()
+ void setBranchId(String)
+ String getContractId()
+ void setContractId(String)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Integer getPaymentTerm()
+ void setPaymentTerm(Integer)
+ Integer getRepaymentPeriod()
+ void setRepaymentPeriod(Integer)
+ Long getDueAmount()
+ void setDueAmount(Long)
+ Long getPrincipal()
+ void setPrincipal(Long)
+ Long getServiceFee()
+ void setServiceFee(Long)
+ Date getDueDate()
+ void setDueDate(Date)
+ Long getOperatorId()
+ void setOperatorId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Long getInterestAmountPay()
+ void setInterestAmountPay(Long)
+ Long getInterestAmountUnpay()
+ void setInterestAmountUnpay(Long)
+ Long getInterestDiscount()
+ void setInterestDiscount(Long)
+ Long getPrincipalPay()
+ void setPrincipalPay(Long)
+ Long getPrincipalUnpay()
+ void setPrincipalUnpay(Long)
+ Long getPrincipalDiscount()
+ void setPrincipalDiscount(Long)
+ Long getActualPrincipal()
+ void setActualPrincipal(Long)
+ Long getActualInterest()
+ void setActualInterest(Long)
+ String getSecondProdCode()
+ void setSecondProdCode(String)
}
class com.welab.loan.finance.model.TbLendBatch {
- Long id
- Date createdAt
- Date updatedAt
- Boolean deleted
- String partner
- String batchNo
- Integer status
- Date expectLendAt
- Long fundId
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ String getPartner()
+ void setPartner(String)
+ String getBatchNo()
+ void setBatchNo(String)
+ Integer getStatus()
+ void setStatus(Integer)
+ Date getExpectLendAt()
+ void setExpectLendAt(Date)
+ Long getFundId()
+ void setFundId(Long)
}
class com.welab.loan.finance.vo.request.InsuranceRecordReqVO {
}
interface com.welab.loan.finance.mapper.CreditUserTagHistoryMapper {
~ long countByExample(CreditUserTagHistoryExample)
~ int deleteByExample(CreditUserTagHistoryExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditUserTagHistory)
~ int insertSelective(CreditUserTagHistory)
~ List<CreditUserTagHistory> selectByExampleWithBLOBs(CreditUserTagHistoryExample)
~ List<CreditUserTagHistory> selectByExample(CreditUserTagHistoryExample)
~ CreditUserTagHistory selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditUserTagHistory,CreditUserTagHistoryExample)
~ int updateByExampleWithBLOBs(CreditUserTagHistory,CreditUserTagHistoryExample)
~ int updateByExample(CreditUserTagHistory,CreditUserTagHistoryExample)
~ int updateByPrimaryKeySelective(CreditUserTagHistory)
~ int updateByPrimaryKeyWithBLOBs(CreditUserTagHistory)
~ int updateByPrimaryKey(CreditUserTagHistory)
}
enum com.welab.loan.finance.enums.TBEnum {
+  TRAVELOKA
+  HSO
+  RESTOCK
+  AOP
+  TRIO
+  GADA
+  TRAVELOKA_PAYLATER
+  DAYA
+  SMP
- String code
- Long orgId
- boolean available
- String productCode
+ {static} String INVOICE_FINANCING
+ {static} List<TBEnum> tbEnumList
+ {static} List<TBEnum> availableTBEnumList
+ {static} Map<String,Long> availableCodeMap
+ {static} List<String> availableProductCode
+ {static} TBEnum getByCode(String)
+ {static} TBEnum getByOrgId(Long)
+ {static} TBEnum getAvailableByProductCode(String)
}
class com.welab.loan.finance.service.business.loaninfo.fifuvf.FifUvfLoanInfoServiceImpl {
- LoanUvfDetailMapper loanUvfDetailMapper
+ boolean loanInfo(Map<String,Object>)
+ boolean forcedFundSwitching(Long,String)
+ Long getOrgId()
+ LoanUvfDetail findLoan(String)
}
class com.welab.loan.finance.test.maumodal.MaumodalTest {
- LoanInfoConsumer loanInfoConsumer
- DuesService duesService
- LendService lendService
- TransferConsumer transferConsumer
- LendBusiService lendBusiService
- RateService rateService
- LoanTimeOutJob loanTimeOutJob
- RepaymentService repaymentService
- ITransformDues iTransformDues
- BasePayService basePayService
- IUserRepayAmount userRepayAmount
- RechargeBusiService rechargeBusiService
- MaumodalOverduePushJob maumodalOverduePushJob
+ void newOrder()
+ void updateLateFee()
+ void sendLend()
+ void transferCallBack()
+ void LendCallBack()
+ void loanTimeOutJob()
+ void vaCache()
+ void repaymentList()
+ void saveMultipleRepayment()
+ void sendRepayment()
+ void rechargeAmount()
+ void recharge()
+ void multiRecharge()
+ void testAppTryCal()
+ void testAppTryCal1()
+ void testLoanDate()
+ void paymentSchedule()
+ void testPush()
}
class com.welab.loan.finance.dto.RepaymentLoanDTO {
- String loanNumber
- Long applyAmount
- Long sumRemaingAmount
}
class com.welab.loan.finance.model.ext.TransferExt {
- String orderId
- Long fundId
- String loanNumber
- String secondProdCode
- String inAccountNo
- Byte status
- String mobile
- Long amount
- Date fundSignAt
- String bankName
- Date createdAt
- String fundName
- String statusStr
+ {static} LinkedHashMap getExportMap()
}
class com.welab.loan.finance.facade.document.DocumentServiceFacade {
- DocumentService documentService
+ DocumentDto getLastestOneFile(DocQueryDto)
}
class com.welab.loan.finance.model.MatrixDisbursementCapLog {
- Long id
- Long userId
- String loanNumber
- String partner
- String lob
- String matrix
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getPartner()
+ void setPartner(String)
+ String getLob()
+ void setLob(String)
+ String getMatrix()
+ void setMatrix(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.dto.qry.UnFinishLoanAmountQry {
- Long userId
- Byte productType
- String channel
- String merchantCode
}
interface com.welab.loan.finance.mapper.CreditAccountRemainingTrackMapper {
~ long countByExample(CreditAccountRemainingTrackExample)
~ int deleteByExample(CreditAccountRemainingTrackExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditAccountRemainingTrack)
~ int insertSelective(CreditAccountRemainingTrack)
~ List<CreditAccountRemainingTrack> selectByExample(CreditAccountRemainingTrackExample)
~ CreditAccountRemainingTrack selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditAccountRemainingTrack,CreditAccountRemainingTrackExample)
~ int updateByExample(CreditAccountRemainingTrack,CreditAccountRemainingTrackExample)
~ int updateByPrimaryKeySelective(CreditAccountRemainingTrack)
~ int updateByPrimaryKey(CreditAccountRemainingTrack)
}
class com.welab.loan.finance.response.CalculatorVo {
- List<CalculatorItemVo> dues
- Long advanceAmount
}
class com.welab.loan.finance.service.business.coupon.CouponBusiService {
- LoanCouponDetailMapper couponDetailMapper
- LoanCouponMapper loanCouponMapper
- LoanDetailMapper detailMapper
- BaseRabbitTemplate rabbitTemplate
+ void expiredCode(String,boolean)
}
class com.welab.loan.finance.app.service.flow.repaymentback.RepaymentTrackBackCompont {
- RepaymentGoBackManager repaymentGoBackManager
+ FlowTaskNodeEnum flowTaskNode()
+ void process(RepaymentBackFlowContext)
}
interface com.welab.loan.finance.service.loan.DisbursementCapService {
~ boolean checkUserDisbursementCap(Long)
~ List<String> getMaxCapPartnerList(BigDecimal)
}
class com.welab.loan.finance.app.manager.credit.activity.CreditActivityAbTestManager {
+ {static} String TEST_GROUP_ID_PREFIX
+ {static} String TEST_ID_PREFIX
- JedisCluster jedisCluster
- BaseCreditActivityAbTestService baseCreditActivityAbTestService
- BaseCreditBigFieldRelationService baseCreditBigFieldRelationService
- BaseCreditActivityAbTestGroupService baseCreditActivityAbTestGroupService
- BaseCreditActivityAbTestGroupUserTagRelationService baseCreditActivityAbTestGroupUserTagRelationService
- BaseCreditActivityAbTestGroupUserRelationService baseCreditActivityAbTestGroupUserRelationService
- CreditUserAccountInfoService creditUserAccountInfoService
- UserServiceFacade userServiceFacade
- ProductConfigServiceFacade productConfigServiceFacade
- CreditLoanAmountConfigServiceImpl creditLoanAmountConfigService
+ {static} String PROVISION_RATE
+ {static} String FUND_PROVISION_RATE
+ {static} String LATE_RATE
+ {static} String ADVANCE_RATE
+ {static} String SERVICE_FEE_RATE
+ {static} String FUND_INTEREST_RATE
+ {static} String ADMIN_RATE
+ {static} String UPFRONT_RATE
+ {static} String SERVICE_RATE
+ {static} String UP_FRONT_FEE_TYPE
+ {static} String REPAY_TYPE
+ void doUpdateAbTest2Redis()
+ String collectionType(String,String)
- void doUpdate2Redis(List<CreditActivityAbTest>)
+ boolean isMaucash(String)
+ List<CreditActivityAbTest2RedisDto> getMatchActivityList(Long)
+ CreditActivityAbTest2RedisDto getMatchActivityData(List<CreditActivityAbTest2RedisDto>,Long,Integer)
+ JSONObject getConfigByParam(Long,String,String,String)
+ String generateGroupId()
+ String generateAbTestActivityId()
+ String getFundReteKey(String,String,String)
+ void updateAbTestUserCount(Long,String)
}
class com.welab.loan.finance.controller.TbQueryController {
- TbQueryService tbQueryService
- TravelokaQueryService travelokaQueryService
- TbUserService tbUserService
- ToBAgreementService toBAgreementService
- ProductService productService
- LoanQryExe loanQryExe
- LateFeeUpdateService lateFeeUpdateService
+ Response<PageInfo<TbDisbursementVO>> listDisbursement(TbDisbursementQry)
+ Response<PageInfo<TbLoanVO>> loanList(TravelokaLoanQry)
+ Response<PageInfo<DuesAmountExt>> listDisbursement(TbDuesQry)
+ Response<PageInfo<TbRepaymentVO>> listRepayment(TbRepaymentQry)
+ Response<PageInfo<TbUserDocVO>> userQuery(String,TbUserQryDTO)
+ Response userExport(Long,String,TbUserQryDTO)
+ Response<PageInfo<ToBAgreementVO>> listAgreement(PageToBAgreementParamReq)
+ Response downLoad(Long)
+ Response downLoadByLoan(String)
+ Response<LoanStateCountVO> countPendingLend(String,String,Long,TbLoanCountQry)
+ Response<List<TBEnum>> tbPartnerList()
+ Response<Map<String,Long>> tbPartnerListMap()
+ Response<List<SelectDTO>> tbFundList()
+ Response<List<SelectDTO>> tbLendStatus()
+ Response updateTbDuesAndLateFee(Long)
}
class com.welab.loan.finance.model.TbUserExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> TbUserExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.TbUserExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andPartnerIsNull()
+ Criteria andPartnerIsNotNull()
+ Criteria andPartnerEqualTo(String)
+ Criteria andPartnerNotEqualTo(String)
+ Criteria andPartnerGreaterThan(String)
+ Criteria andPartnerGreaterThanOrEqualTo(String)
+ Criteria andPartnerLessThan(String)
+ Criteria andPartnerLessThanOrEqualTo(String)
+ Criteria andPartnerLike(String)
+ Criteria andPartnerNotLike(String)
+ Criteria andPartnerIn(List<String>)
+ Criteria andPartnerNotIn(List<String>)
+ Criteria andPartnerBetween(String,String)
+ Criteria andPartnerNotBetween(String,String)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andNameIsNull()
+ Criteria andNameIsNotNull()
+ Criteria andNameEqualTo(String)
+ Criteria andNameNotEqualTo(String)
+ Criteria andNameGreaterThan(String)
+ Criteria andNameGreaterThanOrEqualTo(String)
+ Criteria andNameLessThan(String)
+ Criteria andNameLessThanOrEqualTo(String)
+ Criteria andNameLike(String)
+ Criteria andNameNotLike(String)
+ Criteria andNameIn(List<String>)
+ Criteria andNameNotIn(List<String>)
+ Criteria andNameBetween(String,String)
+ Criteria andNameNotBetween(String,String)
+ Criteria andMobileIsNull()
+ Criteria andMobileIsNotNull()
+ Criteria andMobileEqualTo(String)
+ Criteria andMobileNotEqualTo(String)
+ Criteria andMobileGreaterThan(String)
+ Criteria andMobileGreaterThanOrEqualTo(String)
+ Criteria andMobileLessThan(String)
+ Criteria andMobileLessThanOrEqualTo(String)
+ Criteria andMobileLike(String)
+ Criteria andMobileNotLike(String)
+ Criteria andMobileIn(List<String>)
+ Criteria andMobileNotIn(List<String>)
+ Criteria andMobileBetween(String,String)
+ Criteria andMobileNotBetween(String,String)
+ Criteria andNikIsNull()
+ Criteria andNikIsNotNull()
+ Criteria andNikEqualTo(String)
+ Criteria andNikNotEqualTo(String)
+ Criteria andNikGreaterThan(String)
+ Criteria andNikGreaterThanOrEqualTo(String)
+ Criteria andNikLessThan(String)
+ Criteria andNikLessThanOrEqualTo(String)
+ Criteria andNikLike(String)
+ Criteria andNikNotLike(String)
+ Criteria andNikIn(List<String>)
+ Criteria andNikNotIn(List<String>)
+ Criteria andNikBetween(String,String)
+ Criteria andNikNotBetween(String,String)
+ Criteria andEmailIsNull()
+ Criteria andEmailIsNotNull()
+ Criteria andEmailEqualTo(String)
+ Criteria andEmailNotEqualTo(String)
+ Criteria andEmailGreaterThan(String)
+ Criteria andEmailGreaterThanOrEqualTo(String)
+ Criteria andEmailLessThan(String)
+ Criteria andEmailLessThanOrEqualTo(String)
+ Criteria andEmailLike(String)
+ Criteria andEmailNotLike(String)
+ Criteria andEmailIn(List<String>)
+ Criteria andEmailNotIn(List<String>)
+ Criteria andEmailBetween(String,String)
+ Criteria andEmailNotBetween(String,String)
+ Criteria andDocIdIsNull()
+ Criteria andDocIdIsNotNull()
+ Criteria andDocIdEqualTo(String)
+ Criteria andDocIdNotEqualTo(String)
+ Criteria andDocIdGreaterThan(String)
+ Criteria andDocIdGreaterThanOrEqualTo(String)
+ Criteria andDocIdLessThan(String)
+ Criteria andDocIdLessThanOrEqualTo(String)
+ Criteria andDocIdLike(String)
+ Criteria andDocIdNotLike(String)
+ Criteria andDocIdIn(List<String>)
+ Criteria andDocIdNotIn(List<String>)
+ Criteria andDocIdBetween(String,String)
+ Criteria andDocIdNotBetween(String,String)
+ Criteria andParentUserIdIsNull()
+ Criteria andParentUserIdIsNotNull()
+ Criteria andParentUserIdEqualTo(Long)
+ Criteria andParentUserIdNotEqualTo(Long)
+ Criteria andParentUserIdGreaterThan(Long)
+ Criteria andParentUserIdGreaterThanOrEqualTo(Long)
+ Criteria andParentUserIdLessThan(Long)
+ Criteria andParentUserIdLessThanOrEqualTo(Long)
+ Criteria andParentUserIdIn(List<Long>)
+ Criteria andParentUserIdNotIn(List<Long>)
+ Criteria andParentUserIdBetween(Long,Long)
+ Criteria andParentUserIdNotBetween(Long,Long)
+ Criteria andPartnerUserNoIsNull()
+ Criteria andPartnerUserNoIsNotNull()
+ Criteria andPartnerUserNoEqualTo(String)
+ Criteria andPartnerUserNoNotEqualTo(String)
+ Criteria andPartnerUserNoGreaterThan(String)
+ Criteria andPartnerUserNoGreaterThanOrEqualTo(String)
+ Criteria andPartnerUserNoLessThan(String)
+ Criteria andPartnerUserNoLessThanOrEqualTo(String)
+ Criteria andPartnerUserNoLike(String)
+ Criteria andPartnerUserNoNotLike(String)
+ Criteria andPartnerUserNoIn(List<String>)
+ Criteria andPartnerUserNoNotIn(List<String>)
+ Criteria andPartnerUserNoBetween(String,String)
+ Criteria andPartnerUserNoNotBetween(String,String)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.TbUserExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.TbUserExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.core.dto.syn.InvalidAdvLetterDTO {
- String loanNumber
- Boolean apply
- String remark
}
interface com.welab.loan.finance.mapper.ext.CreditUserAccountInfoExtMapper {
~ CreditUserAccountInfo selectByUserId(Long)
~ CreditUserAccountInfo selectByUserIdForUpdate(Long)
~ List<CreditUserAccountInfo> getAccountInfoList(Map<String,Object>)
~ List<CreditUserAccountInfo> getAccountInfoListByParam(CreditUserAccountInfoExt)
~ Long getUserCount(List<String>,List<Integer>)
~ List<Long> findExistsUserInfo(List<Long>)
~ List<String> getTagsByUserId(List<Long>)
~ List<CreditUserAccountInfo> getTagsAndUserIdByUserIds(List<Long>)
}
class com.welab.loan.finance.job.tb.TbDuesUpdateJob {
- TbDuesUpdateService tbDuesUpdateService
+ void execute(ShardingContext)
}
class com.welab.loan.finance.facade.merchant.MerchantServiceFacade {
- MerchantService merchantService
+ MerchantDto getMerchant(String)
+ QueryPartnerBankDTO getPartnerBankConfig(String)
}
class com.welab.loan.finance.vo.CreditUserAccountDetailVO {
- Long id
- Date createdAt
- Date updatedAt
- Boolean deleted
- Long userId
- Long operateUseMoney
- Long operateSumMoney
- Long operateFreezeMoney
- String orderNum
- Long operateUserId
- Integer operateType
- Long accountId
- Long userMoney
- Long sumMoney
- Long freezeMoney
}
class com.welab.loan.finance.dto.plan.TryEPlanDetailDTO {
- {static} long serialVersionUID
- String loanNumber
- Double disLateFeeRatio
- Double disDownPaymentRatio
- String tenor
}
class com.welab.loan.finance.dto.cmd.tb.TbUserImportCmd {
- String partner
- String mobile
- String name
- String email
- String nik
- Boolean isMobile
- String productCode
}
class com.welab.loan.finance.service.credit.usertag.TagExpressInternalFunctionService {
- TagExpressInternalFunctionMapper tagExpressInternalFunctionMapper
- UserProfilesApprovalService userProfilesApprovalService
- BaseCreditUserTagService baseCreditUserTagService
- CreditUserAccountServiceImpl creditUserAccountService
- CooperationUserService cooperationUserService
- MobileWhitelistDubboService mobileWhitelistDubboService
- CreditUserTagRuleDelayTriggerServiceImpl creditUserTagRuleDelayTriggerService
- AdvanceScoreService advanceScoreService
- UserProfilesService userProfilesService
- CreditUserTagService creditUserTagService
- UfiWhiteListDubboServiceFacade ufiWhiteListDubboServiceFacade
- LoansFacade loansFacade
- CreditUserTagServiceFacade creditUserTagServiceFacade
- LoanCreditLimitServiceFacade loanCreditLimitServiceFacade
+ Long notCloseEplanLoanCount(Map<String,Object>)
+ Long ePlanCloseAfterRepaymentCount(Map<String,Object>)
+ Long disbursedCount(Map<String,Object>)
+ Long signedOrDisbursIngCount(Map<String,Object>)
+ Long closeDueCount(Map<String,Object>)
+ Long closeLoanCount(Map<String,Object>)
+ Long repaymentCount(Map<String,Object>)
+ Long repaymentLoanNumberCount(Map<String,Object>)
+ Long repaymentAmount(Map<String,Object>)
+ Long estimatedMonthlyIncome(Map<String,Object>)
+ Long approvalFillIncome(Map<String,Object>)
+ Long firstDpd(Map<String,Object>)
+ Long maxDpd(Map<String,Object>)
+ Long historyMaxDpd(Map<String,Object>)
- Long getDpd(Map<String,Object>)
+ Long repaymentLoanMaxDpd(Map<String,Object>)
+ Long repaymentAfterApprovalCount(Map<String,Object>)
+ Long collectionPlanCount(Map<String,Object>)
+ Long tagUpdateTrackCount(Map<String,Object>)
+ Double advanceScore(Map<String,Object>)
+ boolean canApplicationTenor(Map<String,Object>)
+ boolean isAstra(Map<String,Object>)
+ boolean isCreditNotAstraWhitelist(Map<String,Object>)
+ boolean isFraudRejected(Map<String,Object>)
+ boolean isBlackOrFreezePerpetualUser(Map<String,Object>)
+ boolean isFraudUser(Map<String,Object>)
+ boolean isUfi(Map<String,Object>)
+ boolean creditAccountIsActive(Map<String,Object>)
+ Long getApprovalFillAmount(Map<String,Object>)
+ Long getAmountByMonthlyIncome(Map<String,Object>)
+ Long getEstimatedMaxAmount(Map<String,Object>)
+ Long getMaxAmountByTag(Map<String,Object>)
+ Long getRangeAmountByTag(Map<String,Object>)
+ Long getAmountByUserCreditAccount(Map<String,Object>)
- CreditUserTagConfig getTagConfig(String,CreditAccountTypeEnums)
- CreditAccountTypeEnums getRunModel(Map<String,Object>)
+ boolean delayTriggerCheck(Map<String,Object>)
- Date getPayDay(Long,Date)
}
class com.welab.loan.finance.job.tb.PayLaterTradingJob {
- BaseFinanceTradingService baseFinanceTradingService
- PartnerService partnerService
- BaseLoanDetailExtendService baseLoanDetailExtendService
- {static} ThreadLocal<Map<String,FinanceTrading>> MAP_THREAD_LOCAL
- {static} ThreadLocal<String> PARTNER
- {static} ThreadLocal<Map<String,List<String>>> PARTNER_TO_MERCHANT_CODE
+ void execute(ShardingContext)
+ List quaryList(String)
+ Map<String,Object> transform(Object)
+ LinkedHashMap getExcelHead()
+ String getSubject(String)
+ void setEmailUser()
+ void postEmailDto(MailDTO)
- List<FinanceTrading> queryFinanceTradingList(String)
}
class com.welab.loan.finance.controller.PayLaterController {
- PayLaterServiceImpl payLaterService
+ Response<PageInfo<List<Map<String,Object>>>> loans(QueryPayLaterLoanVo)
}
class com.welab.loan.finance.model.ext.CreditHistoryLoanExt {
- String loanNumber
- Long amount
- Integer overDay
- Date lendDate
- Integer close
}
class com.welab.loan.finance.model.SyncVaCacheInfo {
- Long id
- Long userId
- Long vaAmount
- Byte recordStatus
- Boolean isPlan
- Date expiredDate
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ Long getVaAmount()
+ void setVaAmount(Long)
+ Byte getRecordStatus()
+ void setRecordStatus(Byte)
+ Boolean getIsPlan()
+ void setIsPlan(Boolean)
+ Date getExpiredDate()
+ void setExpiredDate(Date)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.dto.LoanOverdueInfoDTO {
- Long userId
- String loanNumber
- Integer dueIndex
- Integer maxDay
}
class com.welab.loan.finance.service.credit.CreditUserAccountServiceImpl {
# JedisCluster redisClient
- BaseCreditUserAccountService baseCreditUserAccountService
- BaseCreditUserLoanService baseCreditUserLoanService
- BaseCreditUserAccountDetailService baseCreditUserAccountDetailService
- UpdateOrInitCreditCmdExe updateOrInitCreditCmdExe
- FinanceRepaymentTrackExtMapper financeRepaymentTrackExtMapper
- BaseLoanDetailExtendService baseLoanDetailExtendService
- CreditMigrateUserService creditMigrateUserService
- CreditUserTagLogManager creditUserTagLogManager
- CreditConditionService creditConditionService
- BaseRabbitTemplate baseRabbitTemplate
- CreditAccountManager creditAccountManager
- CreditUserQryExe creditUserQryExe
- OprateAccountManager oprateAccountManager
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
- BaseCreditProxyIncomeLogService baseCreditProxyIncomeLogService
- BaseCreditUserTagLogService baseCreditUserTagLogService
- {static} String INCOME_TIME
- LoanInfoConsumer loanInfoConsumer
+ List<CreditUserAccountDetailVO> findDetailByAccount(Long)
- CreditUserAccountServiceImpl getThis()
+ List<CreditUserAccountVO> findByUser(Long)
+ CreditUserAccountVO findByUserAndProductCode(Long,String)
+ CreditUserAccountVO findByUserActiveAndProductCode(Long,String)
+ Response<PageInfo<CreditUserAccountStatusLogDTO>> getFreezeLogList(PageRequestDTO<CreditUserAccountStatusLogDTO>)
+ Response<Boolean> freezeUser(CreditUserAccountStatusLogDTO)
- void putToBlacklist(CreditUserAccountStatusLogDTO,Long)
- String freezeUserKey(Long)
+ Response<Boolean> unFreezeUser(CreditUserAccountStatusLogDTO)
+ void updateIncome(UpdateCreditUserAccountVO)
+ Response<Boolean> updateOrInitCredit(UpdateCreditUserAccountVO)
+ Response<Boolean> applyUseCredit(ApplyUseCreditVO)
+ Response<Boolean> cancelApplyCreditForTransaction(CancelApplyCreditVO)
+ Response<Boolean> cancelApplyCredit(CancelApplyCreditVO)
+ Response<Boolean> useCredit(UseCreditVO)
+ Response<List<Long>> filterActiveUser(List<Long>)
+ Response<Boolean> useCreditForTransaction(UseCreditVO)
+ Response<Boolean> quickUseCredit(QuickUseCreditVO)
+ Response<Boolean> applyUseCredit(String)
+ Response<Boolean> quickUseCreditForTransactional(QuickUseCreditVO)
+ Response<Boolean> restoreCredit(RestoreCreditVO)
+ Response<Boolean> retracementCredit(RetracementCreditVO)
+ BigDecimal calculationMonthlyIncome(Long,String)
+ BigDecimal calculationMonthlyIncomeOld(Long,String)
+ Response<CalculationTagAmountVO> creditCalculationByMonthlyIncome(QuotaByMonthlyIncomDTO)
+ TagProductVO getTagProductVO(CreditAccountTypeEnums,QuotaByMonthlyIncomDTO)
- boolean lock(String,String)
- boolean relaseLock(String,String)
- long getAlbeMoney(CreditUserAccount)
+ Response<Boolean> delete(Long)
+ Response<Boolean> deleteUser(Long)
+ CreditUserAccountExt findByAccount(Long,String,String)
+ CreditUserAccountVO findByUserInfo(Long,String)
}
class com.welab.loan.finance.core.dto.ModDuesDto {
- List<Dues> modList
- List<Dues> delList
}
class com.welab.loan.finance.model.ext.TrackExt {
- Long orgId
- String loanNumber
- Integer dueIndex
- Date repaymentDate
- String orderNo
- String transId
- Long repaymentAmount
- Long fundInterestFee
- Long serviceFee
- Long lateFee
- Long principalFee
- Long provisionFee
- Long adminFee
- Long carryingFee
- Long vatFee
- String bankCode
- String buyerCode
- Long insuredAmount
- Long fundId
- String dateStr
- Long fastPayFee
- Byte type
- Byte fundType
- Long pfVatFee
- Long afVatFee
- Long cfVatFee
- Long lfVatFee
+ void addRepaymentAmount(Long)
}
class com.welab.loan.finance.vo.request.TbUserImportVO {
- String partner
- MultipartFile file
- List<T> dataList
}
class com.welab.loan.finance.app.command.tb.order.loandetail.impl.TravelokaPaylaterTbLoanDetailBuilder {
- {static} List<RateExtendDto.FeeTypeEnum> FEE_TYPE_ENUM_LISTEENUMS
+ void doBuild(TbInvoice,ProductRateConfigVO,LoanDetail)
+ void doBuild(TbInvoice,ProductRateConfigVO,LoanDetailExtend)
- BigDecimal getTotalServiceFeeRate(TbInvoice)
+ String getKey()
}
class com.welab.loan.finance.response.FinanceLendExtVo {
- Long id
- String loanNumber
- Long userId
- Long amount
- Long payFee
- Long otherFee
- String lendAccount
- String receiptAccount
- Date createdAt
- Date updatedAt
- String lendid
- Byte status
- Long fundId
- Byte lendType
- String fundName
- String mobile
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Long getAmount()
+ void setAmount(Long)
+ Long getPayFee()
+ void setPayFee(Long)
+ Long getOtherFee()
+ void setOtherFee(Long)
+ String getLendAccount()
+ void setLendAccount(String)
+ String getReceiptAccount()
+ void setReceiptAccount(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getLendid()
+ void setLendid(String)
+ Byte getStatus()
+ void setStatus(Byte)
+ Long getFundId()
+ void setFundId(Long)
+ Byte getLendType()
+ void setLendType(Byte)
+ String getFundName()
+ void setFundName(String)
+ String getMobile()
+ void setMobile(String)
+ Long getUserId()
+ void setUserId(Long)
}
enum com.welab.loan.finance.enums.CreditUserStatusEnum {
+  ACTIVE
+  FREEZE
+  FREEZE_BY_CUSTOMER
+  FREEZE_BY_C_AND_S
+  SIGAP_INVALID
+  BLACK_LIST
+  RESIGN_INVALID
- String status
- String displayName
- String desc
- Integer statusCode
+ {static} CreditUserStatusEnum getByStatusCode(Integer)
+ {static} CreditUserStatusEnum getByStatus(String)
}
class com.welab.loan.finance.dto.cmd.SendC1PushCmd {
- Long userId
- Long orgId
}
class com.welab.loan.finance.response.LoanDetailBeanVo {
- LoanDetailVo loan
- UserProfileVO user
- List<DocumentVO> documents
- WorkProfileVO work
- List<ContactVO> contact
- List<FinanceRepaymentTrackVo> track
- List<DuesExtVo> dues
- LoanAmountVo totalAmount
- LoanAmountVo repayAmount
- List<String> promotionCodes
}
class com.welab.loan.finance.model.flow.LoanFlowContext {
- String loanNumber
- Long reversedAmount
- Integer dueIndex
}
class com.welab.loan.finance.service.core.BaseLoanPlansContractService {
- LoanPlansContractMapper loanPlansContractMapper
+ int insertLoanPlansContract(LoanPlansContract)
+ int updateLoanPlansContractById(LoanPlansContract)
+ List<LoanPlansContract> selectLoanPlansContract(PlansTypeEnum,String,Integer,byte)
}
class com.welab.loan.finance.response.FinanceLendVo {
- Long id
- Long userId
- String loanNumber
- Byte mode
- Boolean isPayAdminfee
- String mobile
- Long amount
- Long channelFee
- Long otherFee
- Long provisionFee
- Long surplusAmount
- Long receivedAmount
- String lendAccount
- String bankCode
- String receiptAccount
- String accountName
- String transId
- String lendid
- Byte status
- Long fundId
- Byte lendType
- Long storeId
- Byte fundType
- String orderNo
- Integer remainingSecond
}
class com.welab.loan.finance.facade.credit.CreditUserCheckServiceFacade {
- CreditUserCheckService creditUserCheckService
+ Boolean checkRebookUser(Long)
}
interface com.welab.loan.finance.mapper.ext.CreditActivityAbTestGroupUserTagRelationExtMapper {
~ int batchInsert(List<CreditActivityAbTestGroupUserTagRelation>)
}
class com.welab.loan.finance.model.TbUser {
- Long id
- String partner
- Long userId
- String name
- String mobile
- String nik
- String email
- String docId
- Long parentUserId
- String partnerUserNo
- Boolean deleted
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getPartner()
+ void setPartner(String)
+ Long getUserId()
+ void setUserId(Long)
+ String getName()
+ void setName(String)
+ String getMobile()
+ void setMobile(String)
+ String getNik()
+ void setNik(String)
+ String getEmail()
+ void setEmail(String)
+ String getDocId()
+ void setDocId(String)
+ Long getParentUserId()
+ void setParentUserId(Long)
+ String getPartnerUserNo()
+ void setPartnerUserNo(String)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.core.dto.transform.MulRepaymentDTO {
- List<MulLoanDTO> list
- String code
- Long amount
- Long userId
- String repayConfig
}
interface com.welab.loan.finance.mapper.FinanceRefundMapper {
~ long countByExample(FinanceRefundExample)
~ int deleteByExample(FinanceRefundExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FinanceRefund)
~ int insertSelective(FinanceRefund)
~ List<FinanceRefund> selectByExample(FinanceRefundExample)
~ FinanceRefund selectByPrimaryKey(Long)
~ int updateByExampleSelective(FinanceRefund,FinanceRefundExample)
~ int updateByExample(FinanceRefund,FinanceRefundExample)
~ int updateByPrimaryKeySelective(FinanceRefund)
~ int updateByPrimaryKey(FinanceRefund)
}
class com.welab.loan.finance.tools.DataInitTest {
+ {static} void main(String[])
}
class com.welab.loan.finance.app.command.tb.dues.costreq.impl.RestockCostReqBuilder {
- ITbLoanDubboService iTbLoanDubboService
+ void doBuild(CostReqDTO)
+ String getKey()
}
class com.welab.loan.finance.model.CreditUpdateDetail {
- Long id
- String transId
- Long creditAccountDetailId
- Date createdAt
+ Long getId()
+ void setId(Long)
+ String getTransId()
+ void setTransId(String)
+ Long getCreditAccountDetailId()
+ void setCreditAccountDetailId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
}
class com.welab.loan.finance.calculator.FixedDateCalculatorV3 {
+ List<Due> calculate(Date,BigDecimal,String,BigDecimal,BigDecimal,Map<String,BigDecimal>)
}
enum com.welab.loan.finance.enums.AbnormalRepaymentStatusEnum {
+  INIT
+  ABNORMAL
+  SUCCESS
+  INVALID
- byte status
- String value
~ <<Create>> AbnormalRepaymentStatusEnum(byte,String)
+ byte getStatus()
+ String getValue()
}
class com.welab.loan.finance.app.command.tb.dues.TbDuesServiceHelper {
- {static} int DEFAULT_MIN_DAYS
- {static} int DEFAULT_MAX_DAYS
- BaseLoanDetailExtendService loanDetailExtendService
- CostReqBuilderServiceProvider costReqBuilderServiceProvider
~ int resetPeriod(LoanDetail,Date)
+ CostDetailDTO findCost(LoanDetail,Date,String)
- CostReqDTO createCostReqDTO(LoanDetail,Date,String)
+ boolean isCanOperate(LoanDetail,int)
+ List<Dues> findCostDues(LoanDetail,Date,List<Dues>)
- int getDays(String,int)
- List<Dues> convert2Dues(List<Due>,List<Dues>)
}
class com.welab.loan.finance.vo.request.LimitTokoVo {
- String MerchantCode
- String CustomerCode
- String Amount
- String Status
}
class com.welab.loan.finance.model.ext.RefundParams {
- Integer type
- Byte markType
- List<String> list
- boolean noTaxForFundInterest
- Long fundId
- String buyerCode
}
class com.welab.loan.finance.facade.marketing.PartnerListDubboServiceFacade {
- PartnerListDubboService partnerListDubboService
+ PartnerListDTO getByPartnerLobStatus(String,String,String)
}
class com.welab.loan.finance.app.command.repayment.VACacheCleanCmdExe {
- BaseSyncVaCacheInfoService baseSyncVaCacheInfoService
- BaseVACacheRepaymentDataService baseVACacheRepaymentDataService
+ void clean(Long,Long)
+ void cleanInvalidData()
}
class com.welab.loan.finance.dto.tb.Dues {
- Long principal
- Long interest
- Integer dueIndex
}
class com.welab.loan.finance.facade.message.MessageAppFacade {
- MessagePushService messageAppService
- AppTemplateMessageService appTemplateMessageService
+ void sendAppMsg(AppMessageTemplateDTO)
+ Response<Long> sendTemplateAppMsg(AppMessageTemplateDTO)
}
interface com.welab.loan.finance.mapper.FlowTaskMapper {
~ long countByExample(FlowTaskExample)
~ int deleteByExample(FlowTaskExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FlowTask)
~ int insertSelective(FlowTask)
~ List<FlowTask> selectByExample(FlowTaskExample)
~ FlowTask selectByPrimaryKey(Long)
~ int updateByExampleSelective(FlowTask,FlowTaskExample)
~ int updateByExample(FlowTask,FlowTaskExample)
~ int updateByPrimaryKeySelective(FlowTask)
~ int updateByPrimaryKey(FlowTask)
}
class com.welab.loan.finance.dto.dues.DuesDto {
- Long id
- String loanId
- Long orgId
- Integer dueIndex
- Date dueDate
- String dueType
- Long amount
- Integer repayIndex
- Long settledAmount
- Long remainingAmount
- String capitalCode
- String isAdvanced
- String isKantouFee
- Long discountLateFee
- Long couponFee
- Date createdAt
- Date updatedAt
- Boolean isClose
- Byte planType
- Long lateFeeAmount
- Long overAmount
- Boolean isLock
- Boolean isRecalculate
- String creditTag
}
interface com.welab.loan.finance.app.command.tb.lend.transfer.TbTransferService {
~ void doCreateTransferTrading(TbBatch,Long)
}
class com.welab.loan.finance.app.manager.LendManager {
- Boolean open
- String userIdStr
- BaseLoanDetailService baseLoanDetailService
- BaseFinanceLendService baseFinanceLendService
+ boolean isForceSwitchPermata(String)
}
class com.welab.loan.finance.core.dto.FeeDdmDTO {
- BigDecimal dailyFundInterestFee
- BigDecimal dailyServiceFee
- BigDecimal orgDailyAdminFee
- BigDecimal dailyAdminFee
- BigDecimal dailyProvisionFee
- boolean is_aplan
- int day
}
class com.welab.loan.finance.test.tb.TravelokaPaylaterTest {
- TravelokaPaylaterRepaymentService travelokaPaylaterRepaymentService
- TbService tbService
+ void doRepayment()
+ void doImportTest()
+ void repaymentTest()
+ void doDe()
}
class com.welab.loan.finance.test.loan.LoanCancelTest {
- GatewayLoanCancelCmdExe gatewayLoanCancelCmdExe
+ void testGateWayCalcel()
+ void testCamcel()
}
class com.welab.loan.finance.test.credit.CreditProductListTest {
- CreditUserTagServiceImpl tagService
- CreditActivityAbTestManager creditActivityAbTestManager
- DuesService duesService
+ void getProductList()
+ void testGetProductList()
}
class com.welab.loan.finance.core.dto.FeeTypeExtDTO {
- FeeTypeDTO feeTypeDTO
- Long upfrontCarryFee
- Long upfrontFee
}
class com.welab.loan.finance.vo.TransferCmd {
- {static} long serialVersionUID
- Long orgId
- String loanNumber
- Long fundId
- Long amount
- String outAccountNo
- String inAccountNo
- String bankCode
- Byte gatewayType
- TradingTypeEnum tradingTypeEnum
- FundTradingTypeEnum fundTradingTypeEnum
- String remark
- boolean skipCheckTrading
}
class com.welab.loan.finance.dto.UserTransDTO {
- {static} long serialVersionUID
- Long userId
- int pageNum
- int pageSize
- String loanNumber
}
class com.welab.loan.finance.dto.DuesDto {
- Integer dueIndex
- Date dueDate
- String dueType
- BigDecimal amount
- String discount
- Long orgAmount
}
enum com.welab.loan.finance.enums.ServiceTypeEnum {
+  LEND_CALL
- String desc
}
interface com.welab.loan.finance.core.overdue.IModLateService {
~ boolean updateLateFee(ModLateReqDTO)
~ boolean updateBatchLateFee(List<ModLateReqDTO>)
~ boolean updateLoanLateRsp(List<LoanLateRspDTO>)
~ void doHandle(LoanLateRspDTO)
}
class com.welab.loan.finance.model.InsuranceDetail {
- Long id
- Long insuranceRecordId
- Byte type
- String loanNumber
- String policyNumber
- Long insuranceCoverage
- Date startDate
- Date endDate
- String claimStatus
- String insurancePaymentStatus
- Long paymentAmount
- String relation
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getInsuranceRecordId()
+ void setInsuranceRecordId(Long)
+ Byte getType()
+ void setType(Byte)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getPolicyNumber()
+ void setPolicyNumber(String)
+ Long getInsuranceCoverage()
+ void setInsuranceCoverage(Long)
+ Date getStartDate()
+ void setStartDate(Date)
+ Date getEndDate()
+ void setEndDate(Date)
+ String getClaimStatus()
+ void setClaimStatus(String)
+ String getInsurancePaymentStatus()
+ void setInsurancePaymentStatus(String)
+ Long getPaymentAmount()
+ void setPaymentAmount(Long)
+ String getRelation()
+ void setRelation(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
interface com.welab.loan.finance.mapper.FinanceTradingMapper {
~ int countByExample(FinanceTradingExample)
~ int deleteByExample(FinanceTradingExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FinanceTrading)
~ int insertSelective(FinanceTrading)
~ List<FinanceTrading> selectByExample(FinanceTradingExample)
~ FinanceTrading selectByPrimaryKey(Long)
~ int updateByExampleSelective(FinanceTrading,FinanceTradingExample)
~ int updateByExample(FinanceTrading,FinanceTradingExample)
~ int updateByPrimaryKeySelective(FinanceTrading)
~ int updateByPrimaryKey(FinanceTrading)
}
class com.welab.loan.finance.test.redis.RedisTest {
- JedisCluster jedisCluster
+ void testQuery()
+ void delKey()
+ TreeSet<String> keys(String)
}
enum com.welab.loan.finance.enums.FlowTaskStatusEnum {
+  INIT
+  PROCESSING
+  BUSINESS_ERROR
+  UNKNOWN_ERROR
+  SUCCESS
- byte code
- String desc
}
class com.welab.loan.finance.app.impl.DuesQueryServiceImpl {
- FPlanDuesQryExcute fPlanDuesQryExcute
- BaseDuesService baseDuesService
+ Response<List<LoanDuesDTO>> getFPlanDues(FPlanDuesQry)
+ Response<List<LoanDuesDTO>> selectByLoanNumber(List<String>)
+ Response<LoanDuesDTO> selectByLoanNumber(String)
}
class com.welab.loan.finance.app.manager.credit.loanList.ClLongLoanManager {
+ List<TagProductVO> processLoan(CreditUserAccountExt,Map<String,TagProductVO>)
}
class com.welab.loan.finance.model.PayBillsExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> PayBillsExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.PayBillsExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andChannelIsNull()
+ Criteria andChannelIsNotNull()
+ Criteria andChannelEqualTo(String)
+ Criteria andChannelNotEqualTo(String)
+ Criteria andChannelGreaterThan(String)
+ Criteria andChannelGreaterThanOrEqualTo(String)
+ Criteria andChannelLessThan(String)
+ Criteria andChannelLessThanOrEqualTo(String)
+ Criteria andChannelLike(String)
+ Criteria andChannelNotLike(String)
+ Criteria andChannelIn(List<String>)
+ Criteria andChannelNotIn(List<String>)
+ Criteria andChannelBetween(String,String)
+ Criteria andChannelNotBetween(String,String)
+ Criteria andTransactionDateIsNull()
+ Criteria andTransactionDateIsNotNull()
+ Criteria andTransactionDateEqualTo(Date)
+ Criteria andTransactionDateNotEqualTo(Date)
+ Criteria andTransactionDateGreaterThan(Date)
+ Criteria andTransactionDateGreaterThanOrEqualTo(Date)
+ Criteria andTransactionDateLessThan(Date)
+ Criteria andTransactionDateLessThanOrEqualTo(Date)
+ Criteria andTransactionDateIn(List<Date>)
+ Criteria andTransactionDateNotIn(List<Date>)
+ Criteria andTransactionDateBetween(Date,Date)
+ Criteria andTransactionDateNotBetween(Date,Date)
+ Criteria andTransactionAmountIsNull()
+ Criteria andTransactionAmountIsNotNull()
+ Criteria andTransactionAmountEqualTo(BigDecimal)
+ Criteria andTransactionAmountNotEqualTo(BigDecimal)
+ Criteria andTransactionAmountGreaterThan(BigDecimal)
+ Criteria andTransactionAmountGreaterThanOrEqualTo(BigDecimal)
+ Criteria andTransactionAmountLessThan(BigDecimal)
+ Criteria andTransactionAmountLessThanOrEqualTo(BigDecimal)
+ Criteria andTransactionAmountIn(List<BigDecimal>)
+ Criteria andTransactionAmountNotIn(List<BigDecimal>)
+ Criteria andTransactionAmountBetween(BigDecimal,BigDecimal)
+ Criteria andTransactionAmountNotBetween(BigDecimal,BigDecimal)
+ Criteria andTrxIdOrVaIsNull()
+ Criteria andTrxIdOrVaIsNotNull()
+ Criteria andTrxIdOrVaEqualTo(String)
+ Criteria andTrxIdOrVaNotEqualTo(String)
+ Criteria andTrxIdOrVaGreaterThan(String)
+ Criteria andTrxIdOrVaGreaterThanOrEqualTo(String)
+ Criteria andTrxIdOrVaLessThan(String)
+ Criteria andTrxIdOrVaLessThanOrEqualTo(String)
+ Criteria andTrxIdOrVaLike(String)
+ Criteria andTrxIdOrVaNotLike(String)
+ Criteria andTrxIdOrVaIn(List<String>)
+ Criteria andTrxIdOrVaNotIn(List<String>)
+ Criteria andTrxIdOrVaBetween(String,String)
+ Criteria andTrxIdOrVaNotBetween(String,String)
+ Criteria andOrderNoIsNull()
+ Criteria andOrderNoIsNotNull()
+ Criteria andOrderNoEqualTo(String)
+ Criteria andOrderNoNotEqualTo(String)
+ Criteria andOrderNoGreaterThan(String)
+ Criteria andOrderNoGreaterThanOrEqualTo(String)
+ Criteria andOrderNoLessThan(String)
+ Criteria andOrderNoLessThanOrEqualTo(String)
+ Criteria andOrderNoLike(String)
+ Criteria andOrderNoNotLike(String)
+ Criteria andOrderNoIn(List<String>)
+ Criteria andOrderNoNotIn(List<String>)
+ Criteria andOrderNoBetween(String,String)
+ Criteria andOrderNoNotBetween(String,String)
+ Criteria andReceivedAmountIsNull()
+ Criteria andReceivedAmountIsNotNull()
+ Criteria andReceivedAmountEqualTo(BigDecimal)
+ Criteria andReceivedAmountNotEqualTo(BigDecimal)
+ Criteria andReceivedAmountGreaterThan(BigDecimal)
+ Criteria andReceivedAmountGreaterThanOrEqualTo(BigDecimal)
+ Criteria andReceivedAmountLessThan(BigDecimal)
+ Criteria andReceivedAmountLessThanOrEqualTo(BigDecimal)
+ Criteria andReceivedAmountIn(List<BigDecimal>)
+ Criteria andReceivedAmountNotIn(List<BigDecimal>)
+ Criteria andReceivedAmountBetween(BigDecimal,BigDecimal)
+ Criteria andReceivedAmountNotBetween(BigDecimal,BigDecimal)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(String)
+ Criteria andStatusNotEqualTo(String)
+ Criteria andStatusGreaterThan(String)
+ Criteria andStatusGreaterThanOrEqualTo(String)
+ Criteria andStatusLessThan(String)
+ Criteria andStatusLessThanOrEqualTo(String)
+ Criteria andStatusLike(String)
+ Criteria andStatusNotLike(String)
+ Criteria andStatusIn(List<String>)
+ Criteria andStatusNotIn(List<String>)
+ Criteria andStatusBetween(String,String)
+ Criteria andStatusNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andBigFieldIdIsNull()
+ Criteria andBigFieldIdIsNotNull()
+ Criteria andBigFieldIdEqualTo(Long)
+ Criteria andBigFieldIdNotEqualTo(Long)
+ Criteria andBigFieldIdGreaterThan(Long)
+ Criteria andBigFieldIdGreaterThanOrEqualTo(Long)
+ Criteria andBigFieldIdLessThan(Long)
+ Criteria andBigFieldIdLessThanOrEqualTo(Long)
+ Criteria andBigFieldIdIn(List<Long>)
+ Criteria andBigFieldIdNotIn(List<Long>)
+ Criteria andBigFieldIdBetween(Long,Long)
+ Criteria andBigFieldIdNotBetween(Long,Long)
}
class com.welab.loan.finance.model.PayBillsExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.PayBillsExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.exception.FlowTaskRuntimeException {
+ <<Create>> FlowTaskRuntimeException(String)
+ Throwable fillInStackTrace()
}
enum com.welab.loan.finance.enums.PlansTypeEnum {
+  C1_PLAN
+  F_PLAN
+  E_PLAN
+  REBOOK
+  ADVANCE_APK
- byte val
- String enDesc
- String desc
- String code
+ {static} PlansTypeEnum getPlansType(Byte)
+ {static} PlansTypeEnum getPlansTypeByCode(String)
+ {static} String getPlansTypeStr(Byte)
+ {static} String getPlansTypeList(List<Byte>)
+ {static} List getStatusList()
}
class com.welab.loan.finance.vo.UpdateCreditUserAccountVO {
- {static} long serialVersionUID
- Long userId
- Long clSumMoney
- Long plSumMoney
- String productCode
- String secondProductCode
- Date approvedAt
- String applyNo
- String tag
- String secondTag
- Date tagUpdateTime
- Long income
- Boolean isMigrate
- String transId
- String creditStatus
- CreditUserTagTriggerMethodEnum triggerMethod
}
class com.welab.loan.finance.model.ext.FinanceRepaymentTrackExt {
- String branch
- Long earlySettlementFee
- String channel
- String fundName
- Date nplUploadAt
- String typeStr
- String originStr
- String planTypeStr
- String cessie
- Long ifWht
- String transType
- String productType
- Long payLaterProvisionFee
- String merchantProductCode
- String merchantCode
- String merchantOrderNo
- String merchantCategory
- String mobile
- Date dueDate
- Byte flag
- String flagReason
- String backTransId
- Long orgId
- String sourceId
- String refundTagging
- String loanTransfer
- String previousLoan
+ {static} Map getExportMap()
}
class com.welab.loan.finance.core.dto.DeductDuesDTO {
- Long deductAmount
- Boolean isDeduct
}
class com.welab.loan.finance.core.dto.overdue.ModLateReqDTO {
- String loanNumber
- Integer dueIndex
- String secondProdCode
- boolean isSkip
- boolean isSyn
- String date
- Integer day
- Long orgId
}
interface com.welab.loan.finance.service.business.fund.IFundMatchService {
~ FundAccountInfoDTO matchFund(Long,String)
~ FundTransferAccountResponseDTO getRechargeFund(Long)
~ FundTransferAccountResponseDTO getTransferAccount(Long)
~ FundTransferAccountResponseDTO getLoansAndRepaymentAccount(Long)
~ FundOutInputAccountDTO getLendTaxAcc()
~ DisbursementsFundAccountDTO getDisbursementsFundAccount()
}
interface com.welab.loan.finance.mapper.FinanceErrorMapper {
~ long countByExample(FinanceErrorExample)
~ int deleteByExample(FinanceErrorExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FinanceError)
~ int insertSelective(FinanceError)
~ List<FinanceError> selectByExample(FinanceErrorExample)
~ FinanceError selectByPrimaryKey(Long)
~ int updateByExampleSelective(FinanceError,FinanceErrorExample)
~ int updateByExample(FinanceError,FinanceErrorExample)
~ int updateByPrimaryKeySelective(FinanceError)
~ int updateByPrimaryKey(FinanceError)
}
class com.welab.loan.finance.job.fdc.LateOverDayJob {
- int PAGESIZE
- LoanOverdueInfoExtMapper loanOverdueInfoExtMapper
- BaseRabbitTemplate rabbitTemplate
+ void execute(ShardingContext)
}
class com.welab.loan.finance.core.dues.impl.RebookCostService {
- {static} int REPAY_INDEX
- DuesMapper duesMapper
- LoanDetailExtendMapper loanDetailExtendMapper
- BaseDuesService baseDuesService
+ CostDetailDTO findCostDetail(CostReqDTO)
- FeeDdmDTO getFeeDdmDTO(CostReqDTO,String,ActivityRateRspDTO)
- BigDecimal doDDM(BigDecimal,DueTypeEnum,FeeDdmDTO,int,int,boolean)
- String getSalaryDay(String)
- Due buildDue(BigDecimal,DueTypeEnum,int,String)
- CostItem calcPrincipalFee(BigDecimal,int)
- CostItem calcFundFee(BigDecimal,BigDecimal,int,DuesDetailExt,FundInterestTypeEnum,String)
- CostItem calcServiceFee(BigDecimal,BigDecimal,int,DuesDetailExt,ActivityRateRspDTO)
- CostItem calcProvisionFee(BigDecimal,BigDecimal,int)
- CostItem calcAdminFee(int)
- DuesDetailExt remaingAmountStat(String)
+ String costKey()
}
class com.welab.loan.finance.core.dues.impl.RebookCostService$CostItem {
- BigDecimal perAmount
- BigDecimal residualAmount
- DueTypeEnum dueType
+ <<Create>> CostItem()
+ <<Create>> CostItem(BigDecimal,BigDecimal,int,DueTypeEnum)
}
enum com.welab.loan.finance.enums.SignAutoOtpEnum {
+  NO
+  YES
- Integer value
- String desc
+ {static} boolean check(Integer)
}
interface com.welab.loan.finance.mapper.UvfFileLoanMapper {
~ int countByExample(UvfFileLoanExample)
~ int deleteByExample(UvfFileLoanExample)
~ int deleteByPrimaryKey(Long)
~ int insert(UvfFileLoan)
~ int insertSelective(UvfFileLoan)
~ List<UvfFileLoan> selectByExample(UvfFileLoanExample)
~ UvfFileLoan selectByPrimaryKey(Long)
~ int updateByExampleSelective(UvfFileLoan,UvfFileLoanExample)
~ int updateByExample(UvfFileLoan,UvfFileLoanExample)
~ int updateByPrimaryKeySelective(UvfFileLoan)
~ int updateByPrimaryKey(UvfFileLoan)
}
class com.welab.loan.finance.dto.cmd.AdvanceRepaymentInitiateCmd {
- {static} long serialVersionUID
- String loanNumber
}
class com.welab.loan.finance.app.command.tb.dues.TbDuesCreateService {
- BaseDuesService baseDuesService
- BaseRabbitTemplate baseRabbitTemplate
- DuesSaveService duesSaveService
- TbDuesServiceHelper tbDuesServiceHelper
+ void doCreate(LoanDetail)
+ void doCreate(LoanDetail,Date)
+ void doCreate(LoanDetail,String)
- void doCreate(LoanDetail,Date,String)
- void partRepayment(LoanDetail,Date,String,List<Due>,List<Dues>)
- Date getDueDate(LoanDetail)
- int getTenorMin(LoanDetail)
}
class com.welab.loan.finance.vo.request.ProductMatchRate {
- BigDecimal adminRate
- BigDecimal serviceFeeRate
- BigDecimal lateRate
- BigDecimal advanceRate
- BigDecimal fundInterestRate
}
class com.welab.loan.finance.model.ext.BcaTransferExt {
- Long fundId
}
class com.welab.loan.finance.model.CreditAccountTrack {
- Long id
- Long userId
- Long sumAvailabeAmount
- Long availabeAmount
- Long inferIncome
- String tag
- Byte type
- String groupId
- String creditType
- Long x1
- Long x2
- Long x3
- Long x4
- Long x6
- Long x12
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ Long getSumAvailabeAmount()
+ void setSumAvailabeAmount(Long)
+ Long getAvailabeAmount()
+ void setAvailabeAmount(Long)
+ Long getInferIncome()
+ void setInferIncome(Long)
+ String getTag()
+ void setTag(String)
+ Byte getType()
+ void setType(Byte)
+ String getGroupId()
+ void setGroupId(String)
+ String getCreditType()
+ void setCreditType(String)
+ Long getX1()
+ void setX1(Long)
+ Long getX2()
+ void setX2(Long)
+ Long getX3()
+ void setX3(Long)
+ Long getX4()
+ void setX4(Long)
+ Long getX6()
+ void setX6(Long)
+ Long getX12()
+ void setX12(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.test.refund.RefundQryTest {
- TrackServiceImpl trackServiceImpl
+ void qryTrack()
+ void qryNoSoldRefundDetail()
+ void qrySoldRefundDetail()
+ void qryRefundTrackList()
+ void qryRefundDetailList()
}
class com.welab.loan.finance.service.impl.PlanServiceImpl {
- DuesExtMapper duesExtMapper
- BaseLoanApplyPlansService baseLoanApplyPlansService
- BasePayService basePayService
- LoanDetailMapper loanDetailMapper
- FinanceRepaymentTrackExtMapper repaymentTrackExtMapper
- DuesMapper duesMapper
- MaucashRepaymentServiceImpl maucashRepaymentService
- LoansService loansService
- DuesService duesService
- BaseRabbitTemplate rabbitTemplate
- IRepaymentService repaymentService
- RateService rateService
- LoanPlansContractBusiService loanPlansContractBusiService
- EPlanExtMapper ePlanExtMapper
- TransformDuesImpl transformDuesImpl
- IQueryDuesService queryDuesService
- BaseDuesService baseDuesService
- PartnerServiceFacade partnerServiceFacade
- ApplyFPlanCmdExcute applyFPlanCmdExcute
- TryApplyFPlanCmdExcute tryApplyFPlanCmdExcute
- BatchApplyPlanCmdExe batchApplyPlanCmdExe
- UserProfilesServiceFacade userProfilesServiceFacade
- EPlanCalculationCmdExe ePlanCalculationCmdExe
- EPlanService ePlanService
- LoanDetailExtMapper loanDetailExtMapper
- LoanOverdueInfoMapper loanOverdueInfoMapper
- LoanOverdueInfoExtMapper loanOverdueInfoExtMapper
- FinanceRepaymentTrackExtMapper financeRepaymentTrackExtMapper
- LoanApplyPlansExtMapper loanApplyPlansExtMapper
- LoanPlansRelationExtMapper loanPlansRelationExtMapper
- CPlanManager cPlanManager
+ Response reliefProgram(ReliefProgramDTO)
+ Response applyPlan(ApplyPlanDTO)
+ Response checkApplyPlan(ApplyPlanDTO)
+ Response<CalPlanAmountDto> tryApplyPlan(ApplyPlanDTO)
+ Response<CalPlanAmountDto> tryApplyPlan(ApplyPlanDTO,LoanDetail)
+ Response<LoanPlanTypeCountVo> loanPlanTypeCount(String)
+ Response<LoanPlanTypeCountVo> loanPlanTypeCount(List<String>,List<PlansStatusEnum>)
+ Response<List<CollectionProgramVO>> tryLoanPlan(List<String>)
+ Response<Map<String,Integer>> getLoanPlanCount(List<String>,PlansTypeEnum)
+ Response<FPlansContractDTO> getFPlanContract(String)
+ Response<TryApplyFPlanDTO> tryApplyFPlan(TryApplyFPlanCmd)
+ Response<Void> applyFPlan(ApplyFPlanCmd)
+ Response<List<String>> findDuePlan(Long)
+ Response<Void> applyFPlanByNik(BatchApplyFPlanCmd)
+ boolean savePlan(ApplyPlanDTO)
+ void updateCustomAmount(ApplyPlanDTO)
+ Response verifyPlanData(ApplyPlanDTO,boolean,Boolean,LoanDetail)
+ Response checkPlan(ApplyPlanDTO)
+ Response checkPlan(ApplyPlanDTO,boolean)
+ Response checkPlanDTP(ApplyPlanDTO,OverdueDayDTO,DueIndexDTO)
+ Response checkPlanByReason(ApplyPlanDTO,boolean)
+ LoanApplyPlans findLoanApplyPlans(String,PlansTypeEnum,PlansStatusEnum)
+ LoanDetail findLoanDetailByLoanNumber(String)
+ Response<List<EPlanApplyDTO>> getEPlanList(Long)
+ Response<UserPlanInfoDto> listUserPlanInfo(Long,String)
+ Response<PageInfo<UserUnsettledLoanDto>> listUserUnsettledLoan(Long,Integer,Integer)
+ Response cancelPlanStatus(List<String>)
+ Response<Boolean> collectionCplanUserVerify(Long)
+ Response<List<String>> collectionCplanLoanVerify(List<String>,boolean)
}
interface com.welab.loan.finance.mapper.ext.CreditActivityAbTestExtMapper {
~ List<CreditActivityAbTestDto> selectFitAbTestByParams(CreditActivityAbTestExt)
~ List<CreditActivityAbTestExt> selectActivityList(CreditActivityAbTestRequestVo)
~ List<CreditActivityAbTestExt> countActivityStatus()
}
class com.welab.loan.finance.response.FinanceUserBankcardVo {
- Long id
- Date createAt
- Date updateAt
- Long userId
- String bankAccountNumber
- String bankCode
- String bankAccountHolderName
- Byte isUsed
- String bankName
- List<DocumentDto> docList
}
class com.welab.loan.finance.app.command.rebook.RebookCheckCmdExe {
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
- CreditUserAccountInfoService creditUserAccountInfoService
- BaseCreditUserAccountService baseCreditUserAccountService
- BaseLoanDetailService baseLoanDetailService
- BaseDuesService baseDuesService
- BaseRebookTimeLimitService baseRebookTimeLimitService
- LoansFacade loansFacade
- CreditUserCheckServiceFacade creditUserCheckServiceFacade
- ApolloUtils apolloUtils
- LoanCessieInfoService loanCessieInfoService
- BaseRepaymentTrack baseRepaymentTrack
- BaseFinanceDuesService baseFinanceDuesService
+ Response<RebookCheckVO> checkRebookAuthForUser(Long,String)
+ RebookCheckVO checkRebookAuthForLoan(String)
+ Response<Boolean> checkUserExistSigningRebook(Long)
+ boolean checkUserExistSigningRebook(Long,String)
+ List<String> filterNotOverDueUser(Long,List<String>)
}
class com.welab.loan.finance.vo.TryPlanRepaymentExtDTO {
- LoanDetail loanDetail
}
class com.welab.loan.finance.core.dues.impl.RestockCostService {
+ CostDetailDTO findCostDetail(CostReqDTO)
+ String costKey()
}
class com.welab.loan.finance.test.credit.CreditTest {
- CreditUserAccountServiceImpl creditUserAccountService
- CustomerService customerService
- LoanService loanService
- CreditUserReCheckConsumer creditUserReCheckConsumer
- BaseLoanDetailExtendService baseLoanDetailExtendService
- BaseFinanceDuesService baseFinanceDuesService
- BaseCreditUserAccountService baseCreditUserAccountService
- MaucashLoanInfoServiceImpl maucashLoanInfoServiceImpl
- CreditUserTagService creditUserTagService
- LendServiceImpl lendServiceImpl
- LendService lendService
- ProductConfigService config
- CreditUserController creditUserController
- BaseCreditUserTagService baseCreditUserTagService
- CreditLoanAmountConfigServiceImpl creditLoanAmountConfigServiceImpl
+ void message()
+ void query2()
+ void getConfig()
+ void register()
+ void query()
+ void testMigrate()
+ void test()
+ void findPage()
+ void testApply()
+ void getStepProductListForMaucash()
+ void testTagProList()
+ void sendLend()
+ void creditFifDisbrument()
+ void getProductList()
+ void getTags()
+ void saveTagConfig()
+ void applyUseCredit()
+ void freezeUser()
+ void unfreezeUser()
+ void freezeLog()
+ void testConfig()
+ void retracementCredit()
}
class com.welab.loan.finance.vo.CreditUserTagConfigVO {
- String userTag
- Integer orderValue
- CreditUserTagConfig plConfig
- CreditUserTagConfig clConfig
}
class com.welab.loan.finance.model.FinanceUserThirdpartyAccount {
- Long id
- Date createAt
- Date updateAt
- Long userId
- String thirdAccountId
- String accountName
- Integer orgId
- String orgName
- Date expirationDate
- String bankCode
- Byte status
+ Long getId()
+ void setId(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ Long getUserId()
+ void setUserId(Long)
+ String getThirdAccountId()
+ void setThirdAccountId(String)
+ String getAccountName()
+ void setAccountName(String)
+ Integer getOrgId()
+ void setOrgId(Integer)
+ String getOrgName()
+ void setOrgName(String)
+ Date getExpirationDate()
+ void setExpirationDate(Date)
+ String getBankCode()
+ void setBankCode(String)
+ Byte getStatus()
+ void setStatus(Byte)
}
class com.welab.loan.finance.vo.credit.CreditActivityAbTestCountStatusVo {
- Integer all
- Integer running
- Integer scheduled
- Integer drafts
- Integer finished
- Integer terminated
}
class com.welab.loan.finance.dto.CreditUserAccountStatusLogDTO {
- {static} long serialVersionUID
- List<Long> userIds
- Long userId
- String freezeReason
- String creditStatus
- String operateAction
- Long operateUserId
- Boolean isSystemFreeze
- Date createdAt
- String operateUser
- String blackListType
}
class com.welab.loan.finance.dto.plan.CalCPlanDetailAmountDTO {
- {static} long serialVersionUID
- String loanNumber
- Long minRepaymentAmount
- Long interestFunderAmount
- Long provisionFeeAmount
- Long platformFeeAmount
- Long carryFeeAmount
- Long nextPaymentAmount
- Date nextDueDate
}
interface com.welab.loan.finance.mapper.CreditAccountTrackHistoryMapper {
~ long countByExample(CreditAccountTrackHistoryExample)
~ int deleteByExample(CreditAccountTrackHistoryExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditAccountTrackHistory)
~ int insertSelective(CreditAccountTrackHistory)
~ List<CreditAccountTrackHistory> selectByExample(CreditAccountTrackHistoryExample)
~ CreditAccountTrackHistory selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditAccountTrackHistory,CreditAccountTrackHistoryExample)
~ int updateByExample(CreditAccountTrackHistory,CreditAccountTrackHistoryExample)
~ int updateByPrimaryKeySelective(CreditAccountTrackHistory)
~ int updateByPrimaryKey(CreditAccountTrackHistory)
}
class com.welab.loan.finance.vo.DuesVO {
- String secondProdCode
- Integer dueIndex
- Date dueDate
- String dueType
- Long amount
- Long settledAmount
- Long remainingAmount
- Long couponFee
}
class com.welab.loan.finance.dto.paylater.PayLaterLimitReqDTO {
- Long userId
- String queryProductCodes
- String queryChannel
}
class com.welab.loan.finance.test.LoanCessieInfoServiceTest {
- LoanCessieInfoService loanCessieInfoService
+ void asyncInitLoanCessieInfo()
+ void asyncRepaymentByDues()
+ void repaymentByAmount()
}
class com.welab.loan.finance.model.ext.FinanceTradingExt {
- String loanNumber
- Long adminFee
- Long lendFee
- Long channelFee
- Date createdStr
- Long astraFee
- Long userId
- Long provisionFee
- Long fundInterest
- String startDateStr
- String endDateStr
- String disburseDateStr
- String merchantCode
- Byte isPremium
- String ext
}
interface com.welab.loan.finance.enums.FundAccountEnum {
}
enum com.welab.loan.finance.enums.AccountType {
+  PREMIUM_2_BROKER
- Byte value
- String desc
}
interface com.welab.loan.finance.mapper.TbUserMapper {
~ long countByExample(TbUserExample)
~ int deleteByExample(TbUserExample)
~ int deleteByPrimaryKey(Long)
~ int insert(TbUser)
~ int insertSelective(TbUser)
~ List<TbUser> selectByExample(TbUserExample)
~ TbUser selectByPrimaryKey(Long)
~ int updateByExampleSelective(TbUser,TbUserExample)
~ int updateByExample(TbUser,TbUserExample)
~ int updateByPrimaryKeySelective(TbUser)
~ int updateByPrimaryKey(TbUser)
}
class com.welab.loan.finance.model.ext.TransDetail {
- String type
- Long dueIndex
- String transType
- Date createdAt
- Date updatedAt
- String transId
- Long amount
- Byte isAdvance
- Byte status
- Byte isCustom
- String channel
}
class com.welab.loan.finance.facade.paygateway.AstraPayWalletServiceFacade {
- IAstraPayWalletService astraPayWalletService
+ Response<String> payment(AstraPayWalletPaymentCmd)
+ AstraPayWalletProfileDTO profile(AstraPayWalletProfileQry)
}
class com.welab.loan.finance.dto.cmd.tb.DeductionTbUserAccountCmd {
- Long useMoney
}
interface com.welab.loan.finance.service.LoanService {
~ List<MaxOverDueDto> findNewestDatas(List<Long>)
~ List<MaxOverDueDto> findNewestDataById(Long)
~ List<MaxOverDueDto> findNewestDataById(Long,String)
~ Response<LoanDetailVO> getLoanDetailByLoanNumber(String)
~ PageBean findLoanListByPage(LoanBackDto)
~ PageBean findRepaymentListByPage(DuesBackDto)
~ Response<Boolean> batchUpdateLabel(List<UpdateLabelDto>)
~ Response<Boolean> updateLabel(UpdateLabelDto)
~ Response updateAdvance(String)
~ PageInfo findLoanListExtByPage(LoanBackDto)
~ Response<LoanDetailVo> findLoan(String)
~ Response<LoanDayExtVo> findLoanOverDay(String)
~ Response<LoanDayExtVo> findLoanOverDayByUserId(Long)
~ Response<LoanDayExtVo> findLoanOverDayByUserIdAndProductType(Long,Byte)
~ Boolean countLoanOverByUserId(Long)
~ Response<List> findBankCode()
~ Response sendCustomAmount(String,String,Long)
~ Response sendCustomAmount(CustomRepayCmd)
~ Response<List<LoanDayExtVo>> findUserOverDay(Long)
~ Response<Boolean> updateDisMethodType(String,TypeEnum)
~ FifUvfExcelVo findUvfByLoanNum(String)
~ OverdueDayDTO getOverdueDay(String)
~ void restAccount(String,Long)
~ long countSpecialPromotion(String)
~ long countAllSpecialPromotion(String)
~ List<CessieDpdRspDTO> findLoanListDpd(List<String>)
~ boolean updateBatchLoanBySold(CessieLoanReqDTO)
~ List<CessieLoanRspDTO> findLoanListCloseAmount(List<String>)
~ List<CessieLoanRspDTO> findLoanListClose(List<String>)
~ boolean updateLoanListClose(List<CessieLoanCloseReqDTO>)
~ List<LoanCouponDetailDTO> findCouponDetailByLoan(String)
~ PageInfo findCreditHistoryLoanByUserId(CreditHistoryLoanReqDTO)
~ void updateCancelLoanNumber(String)
~ Response saveFlag(LoansFlagParamReqVO)
~ Long findUserIdByNib(String)
~ LoanDetailExtVO findLoanDetailExtByLoanNumber(String)
~ List<LoanStateVO> findLoanStateVOByLoanNumber(List<String>)
~ LoanStateVO findLoanStateVOByLoanNumber(String)
}
class com.welab.loan.finance.dto.cmd.NsRepaymentListQry {
}
class com.welab.loan.finance.model.LoanUserRepayDetail {
- Long id
- Long repayId
- String loanNumber
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getRepayId()
+ void setRepayId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.service.core.BaseDuesService {
- DuesMapper duesMapper
- DuesExtMapper duesExtMapper
- BaseLoanService baseLoanService
- BaseLoanDuesLogService loanDuesLogService
- JedisCluster jedisCluster
- BankConfigService bankConfigService
- BaseFinanceDuesService baseFinanceDuesService
- LoanDuesConfigMapper loanDuesConfigMapper
- LoanOverdueInfoMapper loanOverdueInfoMapper
- FlexifitRepaymentConfigFacade flexifitRepaymentConfigFacade
- IQueryDuesService queryDuesService
- VatManager vatManager
- ILoanUserRepay iLoanUserRepay
- BaseLoanDetailService baseLoanDetailService
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
- int badDebtDay
+ {static} Double ADVANC_EPERCENT
+ void saveDues(Dues)
+ void saveDuesById(Dues)
+ void updateDuesById(Dues)
+ void insert(Dues)
+ int deleteByLoanNumber(String)
+ List<DuesExtItem> findDuesExt(String,Boolean)
# DuesExample buildExample(String,Boolean)
+ List<Dues> findDues(String,Boolean)
+ boolean isClose(String,Integer)
+ List<Dues> findDuesNoMerge(String,Boolean)
+ List<Dues> findDuesList(String,Boolean,DueTypeEnum)
+ List<Dues> findDuesListNoMerge(String,Boolean,DueTypeEnum)
+ List<Dues> findDuesByDueIndex(String,List<Integer>)
+ List<Dues> findDuesNoMergeByDueIndex(String,List<Integer>)
+ List<Dues> findDuesNoMergeByDueIndex(String,Integer)
+ Dues findDues(String,Integer,DueTypeEnum)
+ Dues findDuesNoMerge(String,Integer,DueTypeEnum)
+ Dues findDuesNoMerge(String,Integer,Boolean,DueTypeEnum)
- DuesExample getDuesExample(String,Integer,Boolean,DueTypeEnum[])
+ Dues findDues(String,Integer,Boolean,DueTypeEnum)
+ List<Dues> findAllOverdues(String)
+ List<Dues> findAllOverdues(List<String>)
+ List<Dues> findCloseOverdues(List<String>)
+ Map<String,List<Dues>> findDuesList(List<String>,Boolean)
+ Date selectFirstOverdueDateByLoanNum(String)
+ Dues getOne(Dues)
+ List<Dues> findNowDues(String)
+ List<Dues> findNowDues(List<String>)
+ Long getAmount(LoanDetail,List<Dues>)
+ Long getActualAmount(String)
+ Long getActualAmount(String,boolean)
+ Long getDueAmount(String)
+ List<Dues> getDues(String)
+ List<Dues> getAstraPayDues(Long,List<String>)
+ DuesDetailExt findSumDuesByLoanNum(String,DuesNameEnum)
+ List<OverdueVO> getOverdueVOListByOverdueQueryDtoNew(OverdueQueryDto)
+ UserDuesExt findDuesByUserId(Long)
+ Dues findExpiryDate(String)
+ Integer updateNowOverdue(String,String)
+ Response updateLateFee(LoanDetail,LateFeeDto,BigDecimal)
+ Dues selectNowOverdue(String)
+ Dues selectLockOverdues(String)
+ List<DuesAmountExt> findDuesByTime(DuesReqDto)
+ String getBadDebt()
+ String getBadDebtV2()
+ {static} Long advanceServiceFeeTotal(List<Dues>,BigDecimal)
+ boolean updateSaigaDuesDate(String,Date)
+ void updateOnLineDuesDate(String,String,Date,String,Long)
- Date flexiFitLongProdProcessor(FlexifitRepaymentConfigDTO,int,Date)
- Date getFlexiFitDueDayBySecondProdCode(FlexifitRepaymentConfigDTO,Date,Boolean)
+ void updateOnlineDueDateByDdm(String,String,Date,int)
+ int updateShortDueDateByDdm(String,int)
+ void updateShortDueDateByDdmShort(String,LocalDate,String,Long,Date,Long)
+ RepayUnPayVO findAllDuesAmount(String)
+ PageInfo<CollectionUserListVO> selectCollectionUserList(CollectionUserListQry)
+ CollectionUserListVO selectCollectionUserOverdue(Long)
+ void updateLoanListClose(List<String>)
+ void updateLoanClose(String,String)
+ void updateLoanLock(List<String>)
+ void resetVatFee(List<String>)
- void recalculateCarryFee(List<String>)
+ void updateDuesList(List<Dues>)
+ List<Dues> findDuesByLoanNumberAndDueIndex(String,Integer)
+ List<VatInitLoan> findVatInitLoan(Date,Long,int,String)
+ List<VatInitLoanDues> findVatInitLoanDues(Date,List<String>,String)
+ List<DuesExtItem> findVATFeeMergeDuesExt(DuesExample)
+ List<Dues> findVATFeeMergeDuesExample(DuesExample)
+ List<Dues> findDuesExample(DuesExample)
+ List<Dues> selectVatDuse(LoanOverdueInfo)
+ int deleteById(Dues)
+ void backup(DuesBackupModel)
+ void clearBackupTable(String)
+ Dues getLateFeeDues(String,Integer)
+ int getRealDueIndex(String)
}
interface com.welab.loan.finance.mapper.LoanUserRepayMapper {
~ long countByExample(LoanUserRepayExample)
~ int deleteByExample(LoanUserRepayExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanUserRepay)
~ int insertSelective(LoanUserRepay)
~ List<LoanUserRepay> selectByExample(LoanUserRepayExample)
~ LoanUserRepay selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanUserRepay,LoanUserRepayExample)
~ int updateByExample(LoanUserRepay,LoanUserRepayExample)
~ int updateByPrimaryKeySelective(LoanUserRepay)
~ int updateByPrimaryKey(LoanUserRepay)
}
class com.welab.loan.finance.model.ext.LoanTrack {
- Integer index
- Long userId
- Long storeId
- String loanNumber
- String userName
- String branchName
- Long amount
- String period
- Long repayAmount
- Integer dueIndex
- Long lateFee
- Long interestFee
- Date applyAt
- Date repaymentAt
- Date dueDate
- String mobile
}
enum com.welab.loan.finance.enums.FundInterestTypeEnum {
+  RATE
+  LIST
+  EXTEND
- int key
- String value
~ <<Create>> FundInterestTypeEnum(int,String)
+ String getValue()
+ int getKey()
+ {static} FundInterestTypeEnum getFundInterestType(Byte)
}
enum com.welab.loan.finance.enums.FastPayEnum {
+  BBank
+  MayBANK
+  Alfamart
+  Tapp
+  ASTRAPAY_WALLET
+  BCA
- byte val
- String desc
}
enum com.welab.loan.finance.enums.FundInterestTypeEnum {
+  RATE
+  LIST
+  EXTEND
- int key
- String value
~ <<Create>> FundInterestTypeEnum(int,String)
+ String getValue()
+ int getKey()
+ {static} FundInterestTypeEnum getFundInterestType(Byte)
}
class com.welab.loan.finance.app.command.advance.AdvanceRepaymentEnableCmdExe {
- BaseAdvanceMsgListService baseAdvanceMsgListService
- LoanServiceImpl loanServiceImpl
+ Response<Object> startAdvanceRepayment(AdvanceRepaymentStartCmd)
}
class com.welab.loan.finance.vo.request.CreditUserAccountReq {
- boolean countFalg
- String userStatus
- String accountType
}
enum com.welab.loan.finance.enums.CostEnum {
+  E_PLAN_V2
+  REBOOK
+  TB
+  TB_TRAVELOKA_PAY_LATER
- String costKey
}
class com.welab.loan.finance.app.service.InsuranceRecordService {
- BaseInsuranceRecordService baseInsuranceRecordService
- BaseInsuranceDetailService baseInsuranceDetailService
- OptUnityLogServiceFacade optUnityLogServiceFacade
- UserServiceFacade userServiceFacade
- BaseLoanDetailService baseLoanDetailService
+ Response uploadInsuranceInfo(Long,MultipartFile,MultipartFile,String)
- Response<Object> checkUploadData(List<InsuranceDetail>)
- void parseInsuranceFile(MultipartFile,MultipartFile,List<InsuranceDetail>)
+ Response<PageInfo<InsuranceRecordRespVO>> getInsuranceGroupList(Integer,Integer,String)
+ Response downloadGroupFile(HttpServletResponse,String)
- byte[] buildClaimFile(List<InsuranceDetail>)
- byte[] buildPolicyFile(List<InsuranceDetail>)
}
class com.welab.loan.finance.dto.UserPlanInfoDto {
- String maxDisbursedTime
- String maxDueDate
- Integer maxDpd
- String secondProdCodeStr
}
class com.welab.loan.finance.model.FinanceUserThirdpartyAccountExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FinanceUserThirdpartyAccountExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FinanceUserThirdpartyAccountExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andThirdAccountIdIsNull()
+ Criteria andThirdAccountIdIsNotNull()
+ Criteria andThirdAccountIdEqualTo(String)
+ Criteria andThirdAccountIdNotEqualTo(String)
+ Criteria andThirdAccountIdGreaterThan(String)
+ Criteria andThirdAccountIdGreaterThanOrEqualTo(String)
+ Criteria andThirdAccountIdLessThan(String)
+ Criteria andThirdAccountIdLessThanOrEqualTo(String)
+ Criteria andThirdAccountIdLike(String)
+ Criteria andThirdAccountIdNotLike(String)
+ Criteria andThirdAccountIdIn(List<String>)
+ Criteria andThirdAccountIdNotIn(List<String>)
+ Criteria andThirdAccountIdBetween(String,String)
+ Criteria andThirdAccountIdNotBetween(String,String)
+ Criteria andAccountNameIsNull()
+ Criteria andAccountNameIsNotNull()
+ Criteria andAccountNameEqualTo(String)
+ Criteria andAccountNameNotEqualTo(String)
+ Criteria andAccountNameGreaterThan(String)
+ Criteria andAccountNameGreaterThanOrEqualTo(String)
+ Criteria andAccountNameLessThan(String)
+ Criteria andAccountNameLessThanOrEqualTo(String)
+ Criteria andAccountNameLike(String)
+ Criteria andAccountNameNotLike(String)
+ Criteria andAccountNameIn(List<String>)
+ Criteria andAccountNameNotIn(List<String>)
+ Criteria andAccountNameBetween(String,String)
+ Criteria andAccountNameNotBetween(String,String)
+ Criteria andOrgIdIsNull()
+ Criteria andOrgIdIsNotNull()
+ Criteria andOrgIdEqualTo(Integer)
+ Criteria andOrgIdNotEqualTo(Integer)
+ Criteria andOrgIdGreaterThan(Integer)
+ Criteria andOrgIdGreaterThanOrEqualTo(Integer)
+ Criteria andOrgIdLessThan(Integer)
+ Criteria andOrgIdLessThanOrEqualTo(Integer)
+ Criteria andOrgIdIn(List<Integer>)
+ Criteria andOrgIdNotIn(List<Integer>)
+ Criteria andOrgIdBetween(Integer,Integer)
+ Criteria andOrgIdNotBetween(Integer,Integer)
+ Criteria andOrgNameIsNull()
+ Criteria andOrgNameIsNotNull()
+ Criteria andOrgNameEqualTo(String)
+ Criteria andOrgNameNotEqualTo(String)
+ Criteria andOrgNameGreaterThan(String)
+ Criteria andOrgNameGreaterThanOrEqualTo(String)
+ Criteria andOrgNameLessThan(String)
+ Criteria andOrgNameLessThanOrEqualTo(String)
+ Criteria andOrgNameLike(String)
+ Criteria andOrgNameNotLike(String)
+ Criteria andOrgNameIn(List<String>)
+ Criteria andOrgNameNotIn(List<String>)
+ Criteria andOrgNameBetween(String,String)
+ Criteria andOrgNameNotBetween(String,String)
+ Criteria andExpirationDateIsNull()
+ Criteria andExpirationDateIsNotNull()
+ Criteria andExpirationDateEqualTo(Date)
+ Criteria andExpirationDateNotEqualTo(Date)
+ Criteria andExpirationDateGreaterThan(Date)
+ Criteria andExpirationDateGreaterThanOrEqualTo(Date)
+ Criteria andExpirationDateLessThan(Date)
+ Criteria andExpirationDateLessThanOrEqualTo(Date)
+ Criteria andExpirationDateIn(List<Date>)
+ Criteria andExpirationDateNotIn(List<Date>)
+ Criteria andExpirationDateBetween(Date,Date)
+ Criteria andExpirationDateNotBetween(Date,Date)
+ Criteria andBankCodeIsNull()
+ Criteria andBankCodeIsNotNull()
+ Criteria andBankCodeEqualTo(String)
+ Criteria andBankCodeNotEqualTo(String)
+ Criteria andBankCodeGreaterThan(String)
+ Criteria andBankCodeGreaterThanOrEqualTo(String)
+ Criteria andBankCodeLessThan(String)
+ Criteria andBankCodeLessThanOrEqualTo(String)
+ Criteria andBankCodeLike(String)
+ Criteria andBankCodeNotLike(String)
+ Criteria andBankCodeIn(List<String>)
+ Criteria andBankCodeNotIn(List<String>)
+ Criteria andBankCodeBetween(String,String)
+ Criteria andBankCodeNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
}
class com.welab.loan.finance.model.FinanceUserThirdpartyAccountExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FinanceUserThirdpartyAccountExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.vo.ActivityRepaymentVO {
- Long orgTotalAmount
- Long orgRepayDueAmount
- Long activityTotalAmount
- Long activityRepayDueAmount
- Long upfrontFee
- Long orgUpfrontFee
}
class com.welab.loan.finance.model.LoanUvfDuesExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanUvfDuesExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanUvfDuesExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
# void addCriterionForJDBCDate(String,Date,String)
# void addCriterionForJDBCDate(String,List<Date>,String)
# void addCriterionForJDBCDate(String,Date,Date,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andBranchIdIsNull()
+ Criteria andBranchIdIsNotNull()
+ Criteria andBranchIdEqualTo(String)
+ Criteria andBranchIdNotEqualTo(String)
+ Criteria andBranchIdGreaterThan(String)
+ Criteria andBranchIdGreaterThanOrEqualTo(String)
+ Criteria andBranchIdLessThan(String)
+ Criteria andBranchIdLessThanOrEqualTo(String)
+ Criteria andBranchIdLike(String)
+ Criteria andBranchIdNotLike(String)
+ Criteria andBranchIdIn(List<String>)
+ Criteria andBranchIdNotIn(List<String>)
+ Criteria andBranchIdBetween(String,String)
+ Criteria andBranchIdNotBetween(String,String)
+ Criteria andContractIdIsNull()
+ Criteria andContractIdIsNotNull()
+ Criteria andContractIdEqualTo(String)
+ Criteria andContractIdNotEqualTo(String)
+ Criteria andContractIdGreaterThan(String)
+ Criteria andContractIdGreaterThanOrEqualTo(String)
+ Criteria andContractIdLessThan(String)
+ Criteria andContractIdLessThanOrEqualTo(String)
+ Criteria andContractIdLike(String)
+ Criteria andContractIdNotLike(String)
+ Criteria andContractIdIn(List<String>)
+ Criteria andContractIdNotIn(List<String>)
+ Criteria andContractIdBetween(String,String)
+ Criteria andContractIdNotBetween(String,String)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andPaymentTermIsNull()
+ Criteria andPaymentTermIsNotNull()
+ Criteria andPaymentTermEqualTo(Integer)
+ Criteria andPaymentTermNotEqualTo(Integer)
+ Criteria andPaymentTermGreaterThan(Integer)
+ Criteria andPaymentTermGreaterThanOrEqualTo(Integer)
+ Criteria andPaymentTermLessThan(Integer)
+ Criteria andPaymentTermLessThanOrEqualTo(Integer)
+ Criteria andPaymentTermIn(List<Integer>)
+ Criteria andPaymentTermNotIn(List<Integer>)
+ Criteria andPaymentTermBetween(Integer,Integer)
+ Criteria andPaymentTermNotBetween(Integer,Integer)
+ Criteria andRepaymentPeriodIsNull()
+ Criteria andRepaymentPeriodIsNotNull()
+ Criteria andRepaymentPeriodEqualTo(Integer)
+ Criteria andRepaymentPeriodNotEqualTo(Integer)
+ Criteria andRepaymentPeriodGreaterThan(Integer)
+ Criteria andRepaymentPeriodGreaterThanOrEqualTo(Integer)
+ Criteria andRepaymentPeriodLessThan(Integer)
+ Criteria andRepaymentPeriodLessThanOrEqualTo(Integer)
+ Criteria andRepaymentPeriodIn(List<Integer>)
+ Criteria andRepaymentPeriodNotIn(List<Integer>)
+ Criteria andRepaymentPeriodBetween(Integer,Integer)
+ Criteria andRepaymentPeriodNotBetween(Integer,Integer)
+ Criteria andDueAmountIsNull()
+ Criteria andDueAmountIsNotNull()
+ Criteria andDueAmountEqualTo(Long)
+ Criteria andDueAmountNotEqualTo(Long)
+ Criteria andDueAmountGreaterThan(Long)
+ Criteria andDueAmountGreaterThanOrEqualTo(Long)
+ Criteria andDueAmountLessThan(Long)
+ Criteria andDueAmountLessThanOrEqualTo(Long)
+ Criteria andDueAmountIn(List<Long>)
+ Criteria andDueAmountNotIn(List<Long>)
+ Criteria andDueAmountBetween(Long,Long)
+ Criteria andDueAmountNotBetween(Long,Long)
+ Criteria andPrincipalIsNull()
+ Criteria andPrincipalIsNotNull()
+ Criteria andPrincipalEqualTo(Long)
+ Criteria andPrincipalNotEqualTo(Long)
+ Criteria andPrincipalGreaterThan(Long)
+ Criteria andPrincipalGreaterThanOrEqualTo(Long)
+ Criteria andPrincipalLessThan(Long)
+ Criteria andPrincipalLessThanOrEqualTo(Long)
+ Criteria andPrincipalIn(List<Long>)
+ Criteria andPrincipalNotIn(List<Long>)
+ Criteria andPrincipalBetween(Long,Long)
+ Criteria andPrincipalNotBetween(Long,Long)
+ Criteria andServiceFeeIsNull()
+ Criteria andServiceFeeIsNotNull()
+ Criteria andServiceFeeEqualTo(Long)
+ Criteria andServiceFeeNotEqualTo(Long)
+ Criteria andServiceFeeGreaterThan(Long)
+ Criteria andServiceFeeGreaterThanOrEqualTo(Long)
+ Criteria andServiceFeeLessThan(Long)
+ Criteria andServiceFeeLessThanOrEqualTo(Long)
+ Criteria andServiceFeeIn(List<Long>)
+ Criteria andServiceFeeNotIn(List<Long>)
+ Criteria andServiceFeeBetween(Long,Long)
+ Criteria andServiceFeeNotBetween(Long,Long)
+ Criteria andDueDateIsNull()
+ Criteria andDueDateIsNotNull()
+ Criteria andDueDateEqualTo(Date)
+ Criteria andDueDateNotEqualTo(Date)
+ Criteria andDueDateGreaterThan(Date)
+ Criteria andDueDateGreaterThanOrEqualTo(Date)
+ Criteria andDueDateLessThan(Date)
+ Criteria andDueDateLessThanOrEqualTo(Date)
+ Criteria andDueDateIn(List<Date>)
+ Criteria andDueDateNotIn(List<Date>)
+ Criteria andDueDateBetween(Date,Date)
+ Criteria andDueDateNotBetween(Date,Date)
+ Criteria andOperatorIdIsNull()
+ Criteria andOperatorIdIsNotNull()
+ Criteria andOperatorIdEqualTo(Long)
+ Criteria andOperatorIdNotEqualTo(Long)
+ Criteria andOperatorIdGreaterThan(Long)
+ Criteria andOperatorIdGreaterThanOrEqualTo(Long)
+ Criteria andOperatorIdLessThan(Long)
+ Criteria andOperatorIdLessThanOrEqualTo(Long)
+ Criteria andOperatorIdIn(List<Long>)
+ Criteria andOperatorIdNotIn(List<Long>)
+ Criteria andOperatorIdBetween(Long,Long)
+ Criteria andOperatorIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andInterestAmountPayIsNull()
+ Criteria andInterestAmountPayIsNotNull()
+ Criteria andInterestAmountPayEqualTo(Long)
+ Criteria andInterestAmountPayNotEqualTo(Long)
+ Criteria andInterestAmountPayGreaterThan(Long)
+ Criteria andInterestAmountPayGreaterThanOrEqualTo(Long)
+ Criteria andInterestAmountPayLessThan(Long)
+ Criteria andInterestAmountPayLessThanOrEqualTo(Long)
+ Criteria andInterestAmountPayIn(List<Long>)
+ Criteria andInterestAmountPayNotIn(List<Long>)
+ Criteria andInterestAmountPayBetween(Long,Long)
+ Criteria andInterestAmountPayNotBetween(Long,Long)
+ Criteria andInterestAmountUnpayIsNull()
+ Criteria andInterestAmountUnpayIsNotNull()
+ Criteria andInterestAmountUnpayEqualTo(Long)
+ Criteria andInterestAmountUnpayNotEqualTo(Long)
+ Criteria andInterestAmountUnpayGreaterThan(Long)
+ Criteria andInterestAmountUnpayGreaterThanOrEqualTo(Long)
+ Criteria andInterestAmountUnpayLessThan(Long)
+ Criteria andInterestAmountUnpayLessThanOrEqualTo(Long)
+ Criteria andInterestAmountUnpayIn(List<Long>)
+ Criteria andInterestAmountUnpayNotIn(List<Long>)
+ Criteria andInterestAmountUnpayBetween(Long,Long)
+ Criteria andInterestAmountUnpayNotBetween(Long,Long)
+ Criteria andInterestDiscountIsNull()
+ Criteria andInterestDiscountIsNotNull()
+ Criteria andInterestDiscountEqualTo(Long)
+ Criteria andInterestDiscountNotEqualTo(Long)
+ Criteria andInterestDiscountGreaterThan(Long)
+ Criteria andInterestDiscountGreaterThanOrEqualTo(Long)
+ Criteria andInterestDiscountLessThan(Long)
+ Criteria andInterestDiscountLessThanOrEqualTo(Long)
+ Criteria andInterestDiscountIn(List<Long>)
+ Criteria andInterestDiscountNotIn(List<Long>)
+ Criteria andInterestDiscountBetween(Long,Long)
+ Criteria andInterestDiscountNotBetween(Long,Long)
+ Criteria andPrincipalPayIsNull()
+ Criteria andPrincipalPayIsNotNull()
+ Criteria andPrincipalPayEqualTo(Long)
+ Criteria andPrincipalPayNotEqualTo(Long)
+ Criteria andPrincipalPayGreaterThan(Long)
+ Criteria andPrincipalPayGreaterThanOrEqualTo(Long)
+ Criteria andPrincipalPayLessThan(Long)
+ Criteria andPrincipalPayLessThanOrEqualTo(Long)
+ Criteria andPrincipalPayIn(List<Long>)
+ Criteria andPrincipalPayNotIn(List<Long>)
+ Criteria andPrincipalPayBetween(Long,Long)
+ Criteria andPrincipalPayNotBetween(Long,Long)
+ Criteria andPrincipalUnpayIsNull()
+ Criteria andPrincipalUnpayIsNotNull()
+ Criteria andPrincipalUnpayEqualTo(Long)
+ Criteria andPrincipalUnpayNotEqualTo(Long)
+ Criteria andPrincipalUnpayGreaterThan(Long)
+ Criteria andPrincipalUnpayGreaterThanOrEqualTo(Long)
+ Criteria andPrincipalUnpayLessThan(Long)
+ Criteria andPrincipalUnpayLessThanOrEqualTo(Long)
+ Criteria andPrincipalUnpayIn(List<Long>)
+ Criteria andPrincipalUnpayNotIn(List<Long>)
+ Criteria andPrincipalUnpayBetween(Long,Long)
+ Criteria andPrincipalUnpayNotBetween(Long,Long)
+ Criteria andPrincipalDiscountIsNull()
+ Criteria andPrincipalDiscountIsNotNull()
+ Criteria andPrincipalDiscountEqualTo(Long)
+ Criteria andPrincipalDiscountNotEqualTo(Long)
+ Criteria andPrincipalDiscountGreaterThan(Long)
+ Criteria andPrincipalDiscountGreaterThanOrEqualTo(Long)
+ Criteria andPrincipalDiscountLessThan(Long)
+ Criteria andPrincipalDiscountLessThanOrEqualTo(Long)
+ Criteria andPrincipalDiscountIn(List<Long>)
+ Criteria andPrincipalDiscountNotIn(List<Long>)
+ Criteria andPrincipalDiscountBetween(Long,Long)
+ Criteria andPrincipalDiscountNotBetween(Long,Long)
+ Criteria andActualPrincipalIsNull()
+ Criteria andActualPrincipalIsNotNull()
+ Criteria andActualPrincipalEqualTo(Long)
+ Criteria andActualPrincipalNotEqualTo(Long)
+ Criteria andActualPrincipalGreaterThan(Long)
+ Criteria andActualPrincipalGreaterThanOrEqualTo(Long)
+ Criteria andActualPrincipalLessThan(Long)
+ Criteria andActualPrincipalLessThanOrEqualTo(Long)
+ Criteria andActualPrincipalIn(List<Long>)
+ Criteria andActualPrincipalNotIn(List<Long>)
+ Criteria andActualPrincipalBetween(Long,Long)
+ Criteria andActualPrincipalNotBetween(Long,Long)
+ Criteria andActualInterestIsNull()
+ Criteria andActualInterestIsNotNull()
+ Criteria andActualInterestEqualTo(Long)
+ Criteria andActualInterestNotEqualTo(Long)
+ Criteria andActualInterestGreaterThan(Long)
+ Criteria andActualInterestGreaterThanOrEqualTo(Long)
+ Criteria andActualInterestLessThan(Long)
+ Criteria andActualInterestLessThanOrEqualTo(Long)
+ Criteria andActualInterestIn(List<Long>)
+ Criteria andActualInterestNotIn(List<Long>)
+ Criteria andActualInterestBetween(Long,Long)
+ Criteria andActualInterestNotBetween(Long,Long)
+ Criteria andSecondProdCodeIsNull()
+ Criteria andSecondProdCodeIsNotNull()
+ Criteria andSecondProdCodeEqualTo(String)
+ Criteria andSecondProdCodeNotEqualTo(String)
+ Criteria andSecondProdCodeGreaterThan(String)
+ Criteria andSecondProdCodeGreaterThanOrEqualTo(String)
+ Criteria andSecondProdCodeLessThan(String)
+ Criteria andSecondProdCodeLessThanOrEqualTo(String)
+ Criteria andSecondProdCodeLike(String)
+ Criteria andSecondProdCodeNotLike(String)
+ Criteria andSecondProdCodeIn(List<String>)
+ Criteria andSecondProdCodeNotIn(List<String>)
+ Criteria andSecondProdCodeBetween(String,String)
+ Criteria andSecondProdCodeNotBetween(String,String)
}
class com.welab.loan.finance.model.LoanUvfDuesExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanUvfDuesExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.service.business.RepaymentBusiService {
- BaseLoanService baseLoanService
- BaseDuesService baseDuesService
- IRepaymentService repaymentService
- IAccountService accountService
+ Response repamentByExcel(List<RepaymentExcelVo>)
+ boolean checkData(RepaymentExcelVo,List<RepaymentExcelVo>)
+ Boolean checkAccountAmount(long)
+ boolean chargeback(RepaymentExcelVo)
}
class com.welab.loan.finance.test.product.ProductDemo {
- ProductRateConfigService productRateConfigService
+ void getProductRate()
+ void getProductRateList()
}
class com.welab.loan.finance.test.lend.LendTest {
- FinanceLendExtMapper financeLendExtMapper
- BasePayService basePayService
- DuesService duesService
- ApplicationController applicationController
- FinanceController financeController
- MaucashLendServiceImpl maucashLendService
- RechargeBusiService rechargeBusiService
- JedisCluster jedisCluster
- BaseLoanService baseLoanService
- BaseLoanDetailExtendService baseLoanDetailExtendService
- PlanServiceImpl planService
- EmailService emailService
- PlanEmailBusiService planEmailBusiService
- CalculatorOverdueJob calculatorOverdueJob
- BaseFinanceDuesService baseFinanceDuesService
- LoanDiscountMapper loanDiscountMapper
- IRepaymentService iRepaymentService
- BaseFinanceLendService baseFinanceLendService
- IQueryDuesService queryDuesService
- FinanceUserBankcardSevice financeUserBankcardSevice
- LoanCouponMapper loanCouponMapper
- BaseRepaymentTrack baseRepaymentTrack
- LoanService loanService
- LendService lendService
+ void testMaucashLend1()
+ void loanExport()
+ void getLoan()
+ void lendExport()
+ void testQuery()
+ void testQueryAdvacne()
+ void testMaucashLend()
+ void testUvfLend()
+ void findFinanceRepaymentTrackExtByPage()
+ void testLed()
+ void testLedd()
+ void callLend()
+ void testMaucashRepayment()
+ void testMaucashRepayment1()
+ void testMaucashRepayment2()
+ void testMaucashRepayment3()
+ void testMaucashRepayment33()
+ void tryActivityRepaymentVO()
+ void testMaucashRepayment4()
+ void testAb()
+ void testBB()
+ void testBd()
+ void testBdd()
+ void testBdd1()
+ void testBdd2()
+ void testDm()
+ void tesBm()
+ void tetAm()
+ void tes()
+ void tesN()
+ void tesb()
+ void testC()
+ void testfindFinanceLendExtByPage()
+ void testlistUserPlanInfo()
+ void testListUserUnsettledLoan()
}
class com.welab.loan.finance.model.CreditActivityAbTestGroupUserTagRelation {
- Long id
- Date createdAt
- Date updatedAt
- Long testGroupId
- String userTag
- Integer testGroupUserCount
- Integer totalUserCount
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Long getTestGroupId()
+ void setTestGroupId(Long)
+ String getUserTag()
+ void setUserTag(String)
+ Integer getTestGroupUserCount()
+ void setTestGroupUserCount(Integer)
+ Integer getTotalUserCount()
+ void setTotalUserCount(Integer)
}
class com.welab.loan.finance.facade.credit.CreditUserTagServiceFacade {
- CreditProductListService creditProductListService
+ List<TagProductVO> getTagProductVOList(CreditUserAccountDTO)
}
class com.welab.loan.finance.utils.ConvertUtils {
+ {static} Map<String,String> defFormat
+ {static} List<T> defParseText(List<String>,int,Class<T>,String[])
+ {static} List<T> parseText(List<List<String>>,int,String,Class<T>,String[],Map<String,String>,boolean)
- {static} void setValue(String,String,Field,T,Map<String,String>)
- {static} Object caseToObj(Field,String,Map<String,String>)
+ {static} String excelColIndexToStr(int)
}
class com.welab.loan.finance.dto.qry.BatchTbCreditUserAccountQry {
- String partner
- String parentUserNo
- List<String> userNoList
}
class com.welab.loan.finance.dto.cmd.tb.TbAgreementImportCmd {
- String partner
- Long adminId
- MultipartFile[] files
}
class com.welab.loan.finance.dto.cmd.CreateCPlanContractCmd {
- List<String> loanNumbers
- Long customAmount
- Long userId
- Long orgId
}
class com.welab.loan.finance.controller.FifUvfController {
- FifUvfBusiService fifUvfBusiService
- BaseFifUvfService baseFifUvfService
- BaseFinanceLendService baseFinanceLendService
- BaseUVFRepossessRepaymentService baseUVFRepossessRepaymentService
- BaseUvfDocService baseUvfDocService
- DocumentService documentService
- UvfDocManager uvfDocManager
+ Response<PageInfo<UVFRepossessRepayment>> repossessRepaymentList(QueryRepossessRepaymentDto)
+ Response uploadMotorRepossessRepayment(Long,MultipartFile)
+ Response uploadUVFMotorLoan(Long,MultipartFile)
+ Response uploadChannelling(Long,MultipartFile)
+ Response uploadUvfDoc(Long,MultipartFile,String)
+ Response uvfDocList(UvfLoanDto)
+ Response uvfDocDown(List<String>)
+ Response uvfDocDownload(String,HttpServletResponse)
+ Response uploadLoanExcel(Long,MultipartFile)
+ Response confirm(Long,String)
+ Response findListPage(UvfLoanDto)
+ Response findDetail(String)
+ Response loanConfig()
+ Response loanExport(Long,UvfLoanDto)
+ Response uploadLoanRepayExcel(Long,MultipartFile)
+ Response uploadMotoLoanRepayExcel(Long,MultipartFile)
+ Response findRepaymentListPage(UvfRepaymentDto)
+ Response loanRepaymentExport(Long,UvfRepaymentDto)
+ Response<Void> uploadLoanDueListExcel(Long,MultipartFile)
+ Response uploadMotoLoanDueListExcel(Long,MultipartFile)
+ Response findDuesListPage(UvfDueDto)
}
class com.welab.loan.finance.model.CreditUserAccountDetailExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditUserAccountDetailExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditUserAccountDetailExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andAccountTypeIsNull()
+ Criteria andAccountTypeIsNotNull()
+ Criteria andAccountTypeEqualTo(String)
+ Criteria andAccountTypeNotEqualTo(String)
+ Criteria andAccountTypeGreaterThan(String)
+ Criteria andAccountTypeGreaterThanOrEqualTo(String)
+ Criteria andAccountTypeLessThan(String)
+ Criteria andAccountTypeLessThanOrEqualTo(String)
+ Criteria andAccountTypeLike(String)
+ Criteria andAccountTypeNotLike(String)
+ Criteria andAccountTypeIn(List<String>)
+ Criteria andAccountTypeNotIn(List<String>)
+ Criteria andAccountTypeBetween(String,String)
+ Criteria andAccountTypeNotBetween(String,String)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andOperateUseMoneyIsNull()
+ Criteria andOperateUseMoneyIsNotNull()
+ Criteria andOperateUseMoneyEqualTo(Long)
+ Criteria andOperateUseMoneyNotEqualTo(Long)
+ Criteria andOperateUseMoneyGreaterThan(Long)
+ Criteria andOperateUseMoneyGreaterThanOrEqualTo(Long)
+ Criteria andOperateUseMoneyLessThan(Long)
+ Criteria andOperateUseMoneyLessThanOrEqualTo(Long)
+ Criteria andOperateUseMoneyIn(List<Long>)
+ Criteria andOperateUseMoneyNotIn(List<Long>)
+ Criteria andOperateUseMoneyBetween(Long,Long)
+ Criteria andOperateUseMoneyNotBetween(Long,Long)
+ Criteria andOperateSumMoneyIsNull()
+ Criteria andOperateSumMoneyIsNotNull()
+ Criteria andOperateSumMoneyEqualTo(Long)
+ Criteria andOperateSumMoneyNotEqualTo(Long)
+ Criteria andOperateSumMoneyGreaterThan(Long)
+ Criteria andOperateSumMoneyGreaterThanOrEqualTo(Long)
+ Criteria andOperateSumMoneyLessThan(Long)
+ Criteria andOperateSumMoneyLessThanOrEqualTo(Long)
+ Criteria andOperateSumMoneyIn(List<Long>)
+ Criteria andOperateSumMoneyNotIn(List<Long>)
+ Criteria andOperateSumMoneyBetween(Long,Long)
+ Criteria andOperateSumMoneyNotBetween(Long,Long)
+ Criteria andOperateFreezeMoneyIsNull()
+ Criteria andOperateFreezeMoneyIsNotNull()
+ Criteria andOperateFreezeMoneyEqualTo(Long)
+ Criteria andOperateFreezeMoneyNotEqualTo(Long)
+ Criteria andOperateFreezeMoneyGreaterThan(Long)
+ Criteria andOperateFreezeMoneyGreaterThanOrEqualTo(Long)
+ Criteria andOperateFreezeMoneyLessThan(Long)
+ Criteria andOperateFreezeMoneyLessThanOrEqualTo(Long)
+ Criteria andOperateFreezeMoneyIn(List<Long>)
+ Criteria andOperateFreezeMoneyNotIn(List<Long>)
+ Criteria andOperateFreezeMoneyBetween(Long,Long)
+ Criteria andOperateFreezeMoneyNotBetween(Long,Long)
+ Criteria andOrderNumIsNull()
+ Criteria andOrderNumIsNotNull()
+ Criteria andOrderNumEqualTo(String)
+ Criteria andOrderNumNotEqualTo(String)
+ Criteria andOrderNumGreaterThan(String)
+ Criteria andOrderNumGreaterThanOrEqualTo(String)
+ Criteria andOrderNumLessThan(String)
+ Criteria andOrderNumLessThanOrEqualTo(String)
+ Criteria andOrderNumLike(String)
+ Criteria andOrderNumNotLike(String)
+ Criteria andOrderNumIn(List<String>)
+ Criteria andOrderNumNotIn(List<String>)
+ Criteria andOrderNumBetween(String,String)
+ Criteria andOrderNumNotBetween(String,String)
+ Criteria andOperateUserIdIsNull()
+ Criteria andOperateUserIdIsNotNull()
+ Criteria andOperateUserIdEqualTo(Long)
+ Criteria andOperateUserIdNotEqualTo(Long)
+ Criteria andOperateUserIdGreaterThan(Long)
+ Criteria andOperateUserIdGreaterThanOrEqualTo(Long)
+ Criteria andOperateUserIdLessThan(Long)
+ Criteria andOperateUserIdLessThanOrEqualTo(Long)
+ Criteria andOperateUserIdIn(List<Long>)
+ Criteria andOperateUserIdNotIn(List<Long>)
+ Criteria andOperateUserIdBetween(Long,Long)
+ Criteria andOperateUserIdNotBetween(Long,Long)
+ Criteria andOperateTypeIsNull()
+ Criteria andOperateTypeIsNotNull()
+ Criteria andOperateTypeEqualTo(Integer)
+ Criteria andOperateTypeNotEqualTo(Integer)
+ Criteria andOperateTypeGreaterThan(Integer)
+ Criteria andOperateTypeGreaterThanOrEqualTo(Integer)
+ Criteria andOperateTypeLessThan(Integer)
+ Criteria andOperateTypeLessThanOrEqualTo(Integer)
+ Criteria andOperateTypeIn(List<Integer>)
+ Criteria andOperateTypeNotIn(List<Integer>)
+ Criteria andOperateTypeBetween(Integer,Integer)
+ Criteria andOperateTypeNotBetween(Integer,Integer)
+ Criteria andAccountIdIsNull()
+ Criteria andAccountIdIsNotNull()
+ Criteria andAccountIdEqualTo(Long)
+ Criteria andAccountIdNotEqualTo(Long)
+ Criteria andAccountIdGreaterThan(Long)
+ Criteria andAccountIdGreaterThanOrEqualTo(Long)
+ Criteria andAccountIdLessThan(Long)
+ Criteria andAccountIdLessThanOrEqualTo(Long)
+ Criteria andAccountIdIn(List<Long>)
+ Criteria andAccountIdNotIn(List<Long>)
+ Criteria andAccountIdBetween(Long,Long)
+ Criteria andAccountIdNotBetween(Long,Long)
+ Criteria andUserMoneyIsNull()
+ Criteria andUserMoneyIsNotNull()
+ Criteria andUserMoneyEqualTo(Long)
+ Criteria andUserMoneyNotEqualTo(Long)
+ Criteria andUserMoneyGreaterThan(Long)
+ Criteria andUserMoneyGreaterThanOrEqualTo(Long)
+ Criteria andUserMoneyLessThan(Long)
+ Criteria andUserMoneyLessThanOrEqualTo(Long)
+ Criteria andUserMoneyIn(List<Long>)
+ Criteria andUserMoneyNotIn(List<Long>)
+ Criteria andUserMoneyBetween(Long,Long)
+ Criteria andUserMoneyNotBetween(Long,Long)
+ Criteria andSumMoneyIsNull()
+ Criteria andSumMoneyIsNotNull()
+ Criteria andSumMoneyEqualTo(Long)
+ Criteria andSumMoneyNotEqualTo(Long)
+ Criteria andSumMoneyGreaterThan(Long)
+ Criteria andSumMoneyGreaterThanOrEqualTo(Long)
+ Criteria andSumMoneyLessThan(Long)
+ Criteria andSumMoneyLessThanOrEqualTo(Long)
+ Criteria andSumMoneyIn(List<Long>)
+ Criteria andSumMoneyNotIn(List<Long>)
+ Criteria andSumMoneyBetween(Long,Long)
+ Criteria andSumMoneyNotBetween(Long,Long)
+ Criteria andFreezeMoneyIsNull()
+ Criteria andFreezeMoneyIsNotNull()
+ Criteria andFreezeMoneyEqualTo(Long)
+ Criteria andFreezeMoneyNotEqualTo(Long)
+ Criteria andFreezeMoneyGreaterThan(Long)
+ Criteria andFreezeMoneyGreaterThanOrEqualTo(Long)
+ Criteria andFreezeMoneyLessThan(Long)
+ Criteria andFreezeMoneyLessThanOrEqualTo(Long)
+ Criteria andFreezeMoneyIn(List<Long>)
+ Criteria andFreezeMoneyNotIn(List<Long>)
+ Criteria andFreezeMoneyBetween(Long,Long)
+ Criteria andFreezeMoneyNotBetween(Long,Long)
}
class com.welab.loan.finance.model.CreditUserAccountDetailExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.CreditUserAccountDetailExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.vo.credit.CreditActivityAbTestSaveRequestVo {
- Long id
- Long testGroupId
- String scenarioName
- String description
- Date startedTime
- Date endTime
- Date launchTime
- Date terminatedTime
- String configContent
}
class com.welab.loan.finance.app.manager.credit.loanList.ClShortLoanManager {
+ List<TagProductVO> processLoan(CreditUserAccountExt,Map<String,TagProductVO>)
- List<TagProductVO> hasLoans(CreditUserAccountExt,Map<String,TagProductVO>)
- List<TagProductVO> noLoans(CreditUserAccountExt,Map<String,TagProductVO>)
}
class com.welab.loan.finance.app.base.BaseFinanceLendNewService {
- FinanceLendMapper financeLendMapper
+ FinanceLend findOne(String,LendModeEnum)
+ int save(FinanceLend)
}
class com.welab.loan.finance.model.LoanUvfInputExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanUvfInputExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanUvfInputExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andApplyNoIsNull()
+ Criteria andApplyNoIsNotNull()
+ Criteria andApplyNoEqualTo(String)
+ Criteria andApplyNoNotEqualTo(String)
+ Criteria andApplyNoGreaterThan(String)
+ Criteria andApplyNoGreaterThanOrEqualTo(String)
+ Criteria andApplyNoLessThan(String)
+ Criteria andApplyNoLessThanOrEqualTo(String)
+ Criteria andApplyNoLike(String)
+ Criteria andApplyNoNotLike(String)
+ Criteria andApplyNoIn(List<String>)
+ Criteria andApplyNoNotIn(List<String>)
+ Criteria andApplyNoBetween(String,String)
+ Criteria andApplyNoNotBetween(String,String)
+ Criteria andBatchNoIsNull()
+ Criteria andBatchNoIsNotNull()
+ Criteria andBatchNoEqualTo(String)
+ Criteria andBatchNoNotEqualTo(String)
+ Criteria andBatchNoGreaterThan(String)
+ Criteria andBatchNoGreaterThanOrEqualTo(String)
+ Criteria andBatchNoLessThan(String)
+ Criteria andBatchNoLessThanOrEqualTo(String)
+ Criteria andBatchNoLike(String)
+ Criteria andBatchNoNotLike(String)
+ Criteria andBatchNoIn(List<String>)
+ Criteria andBatchNoNotIn(List<String>)
+ Criteria andBatchNoBetween(String,String)
+ Criteria andBatchNoNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andSecondProductCodeIsNull()
+ Criteria andSecondProductCodeIsNotNull()
+ Criteria andSecondProductCodeEqualTo(String)
+ Criteria andSecondProductCodeNotEqualTo(String)
+ Criteria andSecondProductCodeGreaterThan(String)
+ Criteria andSecondProductCodeGreaterThanOrEqualTo(String)
+ Criteria andSecondProductCodeLessThan(String)
+ Criteria andSecondProductCodeLessThanOrEqualTo(String)
+ Criteria andSecondProductCodeLike(String)
+ Criteria andSecondProductCodeNotLike(String)
+ Criteria andSecondProductCodeIn(List<String>)
+ Criteria andSecondProductCodeNotIn(List<String>)
+ Criteria andSecondProductCodeBetween(String,String)
+ Criteria andSecondProductCodeNotBetween(String,String)
}
class com.welab.loan.finance.model.LoanUvfInputExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanUvfInputExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.LoanUvfDetail {
- Long id
- Long orgId
- String applyNo
- String contractId
- String loanNumber
- String period
- Long userId
- String userName
- String mobile
- String nik
- Long fundId
- Long adminFee
- Long insuranceFee
- Long otherFee
- Long amount
- Long interestFee
- Long agentFee
- Long receivedAmount
- Date signAt
- Date lendAt
- Date applyAt
- Long outstandingAmount
- String storeName
- String agentName
- String agentBankNo
- String agentBankCode
- Byte status
- Long otherExpense
- Date createAt
- Date updateAt
- String secondProductCode
- Long totalInterestAwda
- Long totalActualInterest
- Long customerBeforeInstallment
- Long customerAfterInstallment
- String companyId
- String approvedBy
- String jfPartner
+ Long getId()
+ void setId(Long)
+ Long getOrgId()
+ void setOrgId(Long)
+ String getApplyNo()
+ void setApplyNo(String)
+ String getContractId()
+ void setContractId(String)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getPeriod()
+ void setPeriod(String)
+ Long getUserId()
+ void setUserId(Long)
+ String getUserName()
+ void setUserName(String)
+ String getMobile()
+ void setMobile(String)
+ String getNik()
+ void setNik(String)
+ Long getFundId()
+ void setFundId(Long)
+ Long getAdminFee()
+ void setAdminFee(Long)
+ Long getInsuranceFee()
+ void setInsuranceFee(Long)
+ Long getOtherFee()
+ void setOtherFee(Long)
+ Long getAmount()
+ void setAmount(Long)
+ Long getInterestFee()
+ void setInterestFee(Long)
+ Long getAgentFee()
+ void setAgentFee(Long)
+ Long getReceivedAmount()
+ void setReceivedAmount(Long)
+ Date getSignAt()
+ void setSignAt(Date)
+ Date getLendAt()
+ void setLendAt(Date)
+ Date getApplyAt()
+ void setApplyAt(Date)
+ Long getOutstandingAmount()
+ void setOutstandingAmount(Long)
+ String getStoreName()
+ void setStoreName(String)
+ String getAgentName()
+ void setAgentName(String)
+ String getAgentBankNo()
+ void setAgentBankNo(String)
+ String getAgentBankCode()
+ void setAgentBankCode(String)
+ Byte getStatus()
+ void setStatus(Byte)
+ Long getOtherExpense()
+ void setOtherExpense(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ String getSecondProductCode()
+ void setSecondProductCode(String)
+ Long getTotalInterestAwda()
+ void setTotalInterestAwda(Long)
+ Long getTotalActualInterest()
+ void setTotalActualInterest(Long)
+ Long getCustomerBeforeInstallment()
+ void setCustomerBeforeInstallment(Long)
+ Long getCustomerAfterInstallment()
+ void setCustomerAfterInstallment(Long)
+ String getCompanyId()
+ void setCompanyId(String)
+ String getApprovedBy()
+ void setApprovedBy(String)
+ String getJfPartner()
+ void setJfPartner(String)
}
class com.welab.loan.finance.model.ext.SigapExcelExt {
- String loanNumber
- String receivedAmount
- Long userId
- Date lendAt
- String period
- String repayDueAmount
- String unpayAmount
- Date dueDate
- String userName
- String npk
- String nik
- String dueDateStr
+ {static} LinkedHashMap getExportHead()
}
class com.welab.loan.finance.service.other.DisburseTaxService {
- MessageEmailFacade messageEmailFacade
- List<DisburseTaxHandler> disburseTaxHandlers
+ {static} String DISBURSE_LIST_TAX_ACCOUNT
+ void sendDisburseTaxEmail(Date,Date)
- void sendDisburseListTaxAccount(List<DisburseTax>)
}
class com.welab.loan.finance.rabbitmq.CreditUserReCheckConsumer {
- CreditUserAccountInfoService creditUserAccountInfoService
- CreditUserAccountService creditUserAccountService
- ApprovalBlackService approvalBlackService
+ void onMessage(Message)
- void reCheck(List<CreditUserAccountInfo>)
}
class com.welab.loan.finance.vo.request.CalculatorReq {
- Long amount
- String tenor
- Boolean isHeadFee
- BigDecimal adminFeeRate
- Integer fixAdminFee
- AdminTypeEnum adminTypeEnum
- BigDecimal serviceRate
- BigDecimal fundRate
- FundInterestTypeEnum fundInterestTypeEnum
- BigDecimal fixFundInterest
- boolean byDay
- ActivityRuleResponseDTO ActivityRuleResponseDTO
- String origin
- String extend
- String secondProdCode
- Long fundId
- Long userId
- String provisionRate
- VatCostProvider vatCostProvider
- Boolean insuranceSelect
- String controlGroupSecondProdCode
}
class com.welab.loan.finance.utils.RequsetParamUtils {
- <<Create>> RequsetParamUtils()
+ {static} T toJavaObject(HttpServletRequest,Class<T>)
+ {static} T toJavaObject(HttpServletRequest,Class<T>,ICallBack<T>)
- {static} JSONObject getParamData(HttpServletRequest)
}
interface com.welab.loan.finance.utils.RequsetParamUtils$ICallBack {
~ void call(T)
}
abstract class com.welab.loan.finance.app.service.credit.loan.AbstractCreditLoanService {
# BaseCreditUserAccountService baseCreditUserAccountService
# BaseCreditUserTagService baseCreditUserTagService
# BaseCreditUserAccountChildService baseCreditUserAccountChildService
# CreditLoanAmountConfigServiceImpl creditLoanAmountConfigServiceImpl
# CreditMigrateUserService creditMigrateUserService
# CreditConditionService creditConditionService
# CreditMaxinstallCalculationManager creditMaxinstallCalculationManager
# BaseLoanDetailService baseLoanDetailService
# {static} String X2
+ {static} AbstractCreditLoanService getLoanService(CreditLoanServiceEnum)
+ {static} long getAbleForChildAccount(CreditUserAccountChild)
+ {static} long getAlbeMoney(CreditUserAccount)
+ {abstract}List<TagProductVO> processLoan(CreditUserAccountExt,Map<String,TagProductVO>)
# void hand2X(CreditUserAccountExt,List<TagProductVO>,Map<String,TagProductVO>,CreditUserAccountChild)
# List<TagProductVO> matchInstallment(CreditUserAccountExt,Map<String,TagProductVO>)
# CreditUserAccountChild getBlanceCreditForTenor(CreditUserAccountExt,TagProductVO)
# Long minValue(Long,long,Long)
# void setAvailableMoney(TagProductVO,TagProductVO,Long)
}
enum com.welab.loan.finance.app.service.credit.loan.CreditLoanServiceEnum {
+  LONG_LOAN
+  SHORT_LOAN
+  SIGAP_LOAN
+  CL_G3_LONG_LOAN
+  CL_L3_SHORT_LOAN
+  A1_A3_SHORT_LOAN
- String beanName
}
enum com.welab.loan.finance.enums.ApplyRepaymentTypeEnum {
+  CUSTOM
- byte type
- String desc
}
class com.welab.loan.finance.job.PremiumTransferJob {
- LendBusiService lendBusiService
# PayService payService
- BaseFinanceTradingService baseFinanceTradingService
- FinanceTradingMapper financeTradingMapper
# FundAccountInfoService fundAccountInfoService
- BaseFundAccountService baseFundAccountService
+ void execute(ShardingContext)
+ void doJob(String)
+ void asyncTransfer(FinanceTrading,Byte)
- TransferDto buildTransferDto(FinanceTrading,Byte)
}
class com.welab.loan.finance.app.base.tb.BaseTbRepaymentService {
- TbRepaymentMapper tbRepaymentMapper
+ List<TbRepaymentVO> list(TbRepaymentQry)
+ Long count(TbRepaymentQry)
+ List<TbRepaymentVO> findRepaymentTrackList(TbRepaymentQry)
+ List<TbPendRepayVO> findPendRepayList(List<String>)
}
class com.welab.loan.finance.core.dues.vat.WhtCostProvider {
- ConfigServiceFacade taxConfigServiceFacade
+ BigDecimal doCalc(BigDecimal,long)
+ BigDecimal doCalc(BigDecimal,BigDecimal)
+ BigDecimal getWhtRate(Long)
}
class com.welab.loan.finance.core.dto.credit.CreditActivityAbTest2RedisDto {
- Integer userGroupRuleType
- List<String> userTagList
- String userIdLastNums
- List<Long> userIdList
- JSONObject config
}
class com.welab.loan.finance.vo.tb.TbPendRepayVO {
- {static} long serialVersionUID
- String batchNo
- Long amount
- Date lendAt
- Long lendAmount
- Date dueDate
- Long repayAmount
- String loanNumber
- String orderNo
- Long principalAmount
- Long serviceFeeAmount
- String billingNo
- Integer dpd
- Long lateFee
- String tenor
}
class com.welab.loan.finance.dto.qry.UserMaxDpdQry {
- List<Long> userIdList
- Boolean settleFalg
- List<String> productCodeList
}
enum com.welab.loan.finance.enums.AdminTypeEnum {
+  RATE
+  FIXED
+  EXTEND
- int key
- String value
~ <<Create>> AdminTypeEnum(int,String)
+ String getValue()
+ int getKey()
+ {static} AdminTypeEnum getAdminType(Byte)
}
class com.welab.loan.finance.dto.cmd.CreateC1ContractCmd {
- String loanNum
- String loanNumber
- Long amount
- Long orgId
}
class com.welab.loan.finance.dto.ReliefProgramDTO {
- String programCode
}
class com.welab.loan.finance.dto.CalPlanAmountDto {
- Long totalAmount
- Long orgTotalAmount
- String discountLateFee
- Long lateFee
- String discountServiceFee
- Long serviceFee
- String discountAdminFee
- Long adminFee
- String discountFundInterest
- Long fundInterest
- String discountPrincipal
- Long principal
- String discountProvision
- Long provisionFee
- Long carryFee
- Long minRepayAmount
- String loanNumber
- String orgPeriod
- List<String> periods
- Long approvedAmount
- Long downPaymentAmount
- Double disDownPaymentRatio
- Date nextDueDate
- Long nextPaymentAmount
}
interface com.welab.loan.finance.mapper.MatrixDisbursementCapLogMapper {
~ long countByExample(MatrixDisbursementCapLogExample)
~ int deleteByPrimaryKey(Long)
~ int insert(MatrixDisbursementCapLog)
~ int insertSelective(MatrixDisbursementCapLog)
~ List<MatrixDisbursementCapLog> selectByExample(MatrixDisbursementCapLogExample)
~ MatrixDisbursementCapLog selectByPrimaryKey(Long)
~ int updateByExampleSelective(MatrixDisbursementCapLog,MatrixDisbursementCapLogExample)
~ int updateByExample(MatrixDisbursementCapLog,MatrixDisbursementCapLogExample)
~ int updateByPrimaryKeySelective(MatrixDisbursementCapLog)
~ int updateByPrimaryKey(MatrixDisbursementCapLog)
}
class com.welab.loan.finance.app.service.tb.TbLoanQueryDubboServiceImpl {
- TbQueryService tbQueryService
+ List<TbPendRepayVO> findPendRepayList(List<String>)
+ PageInfo<TbRepaymentVO> listRepayment(TbRepaymentQry)
}
class com.welab.loan.finance.dto.cmd.BatchApplyFPlanCmd {
- String nik
}
class com.welab.loan.finance.model.LoanDuesConfig {
- Long id
- String loanNumber
- Integer dueIndex
- Long adminId
- Date startTime
- Date endTime
- Date createAt
- Date updateAt
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Integer getDueIndex()
+ void setDueIndex(Integer)
+ Long getAdminId()
+ void setAdminId(Long)
+ Date getStartTime()
+ void setStartTime(Date)
+ Date getEndTime()
+ void setEndTime(Date)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
}
class com.welab.loan.finance.dto.DisburseSuccessReqDto {
- String taskId
- Date disburseDate
}
class com.welab.loan.finance.dto.GatewayTaskDto {
- String taskId
- String loanNumber
- String loanNumbers
- String thirdpartyIds
- Byte type
- Byte fundId
- Long userId
- Byte status
- Date startTime
- Date endTime
- int pageSize
- int pageNum
- String tradingType
}
class com.welab.loan.finance.test.dues.DecountTest {
- IQueryDuesService iQueryDuesService
+ void testD()
}
class com.welab.loan.finance.dto.LoanCouponCalDto {
- String loanNumber
- String repayDueIndex
- String promotionCode
- Byte preferentialType
- BigDecimal disInterestFee
- BigDecimal disAdminFee
- BigDecimal disLateFee
- BigDecimal disPrincipal
- Boolean isCustom
- Long customAmount
}
class com.welab.loan.finance.model.CreditReLoanExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditReLoanExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditReLoanExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andOriginalLendStatusIsNull()
+ Criteria andOriginalLendStatusIsNotNull()
+ Criteria andOriginalLendStatusEqualTo(Byte)
+ Criteria andOriginalLendStatusNotEqualTo(Byte)
+ Criteria andOriginalLendStatusGreaterThan(Byte)
+ Criteria andOriginalLendStatusGreaterThanOrEqualTo(Byte)
+ Criteria andOriginalLendStatusLessThan(Byte)
+ Criteria andOriginalLendStatusLessThanOrEqualTo(Byte)
+ Criteria andOriginalLendStatusIn(List<Byte>)
+ Criteria andOriginalLendStatusNotIn(List<Byte>)
+ Criteria andOriginalLendStatusBetween(Byte,Byte)
+ Criteria andOriginalLendStatusNotBetween(Byte,Byte)
+ Criteria andOriginalRepayStatusIsNull()
+ Criteria andOriginalRepayStatusIsNotNull()
+ Criteria andOriginalRepayStatusEqualTo(Byte)
+ Criteria andOriginalRepayStatusNotEqualTo(Byte)
+ Criteria andOriginalRepayStatusGreaterThan(Byte)
+ Criteria andOriginalRepayStatusGreaterThanOrEqualTo(Byte)
+ Criteria andOriginalRepayStatusLessThan(Byte)
+ Criteria andOriginalRepayStatusLessThanOrEqualTo(Byte)
+ Criteria andOriginalRepayStatusIn(List<Byte>)
+ Criteria andOriginalRepayStatusNotIn(List<Byte>)
+ Criteria andOriginalRepayStatusBetween(Byte,Byte)
+ Criteria andOriginalRepayStatusNotBetween(Byte,Byte)
+ Criteria andCreateAdminIdIsNull()
+ Criteria andCreateAdminIdIsNotNull()
+ Criteria andCreateAdminIdEqualTo(Long)
+ Criteria andCreateAdminIdNotEqualTo(Long)
+ Criteria andCreateAdminIdGreaterThan(Long)
+ Criteria andCreateAdminIdGreaterThanOrEqualTo(Long)
+ Criteria andCreateAdminIdLessThan(Long)
+ Criteria andCreateAdminIdLessThanOrEqualTo(Long)
+ Criteria andCreateAdminIdIn(List<Long>)
+ Criteria andCreateAdminIdNotIn(List<Long>)
+ Criteria andCreateAdminIdBetween(Long,Long)
+ Criteria andCreateAdminIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.CreditReLoanExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.CreditReLoanExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.app.command.plan.EPlanTransferCmdExe {
- IFundMatchService iFundMatchService
- MaucashLendServiceImpl iTransferService
- BaseFundAccountService baseFundAccountService
+ void doTransferToAwda(LoanDetail,Long)
}
class com.welab.loan.finance.core.dto.overdue.LoanLateReqDTO {
- String loanNumber
- Integer dueIndex
- String secondProdCode
- Long amount
- BigDecimal lateRate
- boolean isSkip
- boolean isSyn
- Integer day
- String date
- Long maxLateFee
- Date dueDate
- Long userId
- Long totalAdminFee
- Boolean isHead
- Boolean isLong
- Long orgLateFee
- Integer type
- Long afterVatLateFee
- Long afterVatMaxLateFee
- Long orgId
- List<LateFeeDuesExt> calLateFeeDues
}
class com.welab.loan.finance.model.RebookTimeLimitExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> RebookTimeLimitExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.RebookTimeLimitExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andDueIndexIsNull()
+ Criteria andDueIndexIsNotNull()
+ Criteria andDueIndexEqualTo(Integer)
+ Criteria andDueIndexNotEqualTo(Integer)
+ Criteria andDueIndexGreaterThan(Integer)
+ Criteria andDueIndexGreaterThanOrEqualTo(Integer)
+ Criteria andDueIndexLessThan(Integer)
+ Criteria andDueIndexLessThanOrEqualTo(Integer)
+ Criteria andDueIndexIn(List<Integer>)
+ Criteria andDueIndexNotIn(List<Integer>)
+ Criteria andDueIndexBetween(Integer,Integer)
+ Criteria andDueIndexNotBetween(Integer,Integer)
+ Criteria andStartTimeIsNull()
+ Criteria andStartTimeIsNotNull()
+ Criteria andStartTimeEqualTo(Date)
+ Criteria andStartTimeNotEqualTo(Date)
+ Criteria andStartTimeGreaterThan(Date)
+ Criteria andStartTimeGreaterThanOrEqualTo(Date)
+ Criteria andStartTimeLessThan(Date)
+ Criteria andStartTimeLessThanOrEqualTo(Date)
+ Criteria andStartTimeIn(List<Date>)
+ Criteria andStartTimeNotIn(List<Date>)
+ Criteria andStartTimeBetween(Date,Date)
+ Criteria andStartTimeNotBetween(Date,Date)
+ Criteria andEndTimeIsNull()
+ Criteria andEndTimeIsNotNull()
+ Criteria andEndTimeEqualTo(Date)
+ Criteria andEndTimeNotEqualTo(Date)
+ Criteria andEndTimeGreaterThan(Date)
+ Criteria andEndTimeGreaterThanOrEqualTo(Date)
+ Criteria andEndTimeLessThan(Date)
+ Criteria andEndTimeLessThanOrEqualTo(Date)
+ Criteria andEndTimeIn(List<Date>)
+ Criteria andEndTimeNotIn(List<Date>)
+ Criteria andEndTimeBetween(Date,Date)
+ Criteria andEndTimeNotBetween(Date,Date)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.RebookTimeLimitExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.RebookTimeLimitExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
enum com.welab.loan.finance.enums.ErrorHanderEnum {
+  HANDER
+  UNHANDER
- String value
- String name
- String enName
- <<Create>> ErrorHanderEnum(String,String,String)
+ boolean check(String)
+ {static} List getStatusList(boolean)
}
class com.welab.loan.finance.service.business.lend.maucash.MaucashLendServiceImpl {
- BaseUserBankCardService baseUserBankCardService
- LoanDetailMapper loanDetailMapper
- LoanDetailExtendMapper loanDetailExtendMapper
- BaseLoanCodeService baseLoanCodeService
- BaseFundAccountService fundAccountService
- BaseFinanceTrading baseFinanceTrading
- LoanDelayMapper loanDelayMapper
- FinanceRepaymentTrackMapper repaymentTrackMapper
- RebookAmountService rebookAmountService
- BNILoanPassKeyManager bniLoanPassKeyManager
+ OrgIdEnum getProductId()
+ TypeEnum getLoanType(String)
+ TransferAmountDto getTransferAmount(String,TradingTypeEnum)
+ FinanceLend buildLend(String,TypeEnum,LendModeEnum,boolean)
# Long getAdminFee(LoanDetail,LoanDetailExtend)
# Long getVatFee(LoanDetailExtend)
# Long getProvisionFee(LoanDetail,LoanDetailExtend)
# Long getRefundFee(String)
+ {static} Long getFundInterest(LoanDetail,LoanDetailExtend)
+ {static} Long getServcieFee(LoanDetail,LoanDetailExtend)
- Long getAfTransfer(LoanDetail)
- Long getLendAmount(LoanDetail)
+ void beforeLend(String,TypeEnum,LendModeEnum)
+ Response verifyData(String,TypeEnum,LendModeEnum)
+ FinanceLend buildLendRecord(String,TypeEnum,LendModeEnum,boolean)
+ FinanceLend buildLendRecordLoanDetail(LoanDetail,TypeEnum,LendModeEnum)
+ FinanceLend buildLendRecordLoanDetail(LoanDetail,TypeEnum,LendModeEnum,boolean)
+ Long getLoanFundId(String)
# boolean briOnlineIntercept(String,LoanDelayTypeEnum)
+ void loanDelay(String,Long,LoanDelayTypeEnum)
+ Boolean repairLoan(String,LendModeEnum)
+ LoanDetail findLoanDetail(String)
+ LoanDetailExtend findLoanDetailExt(String)
}
class com.welab.loan.finance.app.base.credit.BaseCreditActivityAbTestGroupService {
- CreditActivityAbTestGroupExtMapper creditActivityAbTestGroupExtMapper
+ List<CreditActivityAbTestGroupExt> getTestGroupList(CreditActivityAbTestRequestVo)
+ int insertSelective(CreditActivityAbTestGroup)
+ int updateByPrimaryKeySelective(CreditActivityAbTestGroup)
+ CreditActivityAbTestGroupExt selectExtByTestGroupId(Long)
+ CreditActivityAbTestGroup selectByPrimaryKey(Long)
+ CreditActivityAbTestGroup getLastestOne()
}
class com.welab.loan.finance.vo.response.NsLoanManagementVO {
- Long userId
- String funder
- Long fundId
- String name
- String nik
- Long totalAmount
- Integer dpd
- Long totalOutstanding
- Long totalPaidAmount
- Long totalPrinciple
- Long interestFunder
- Long platformFee
- Long provisionFee
- Long adminFee
- Long repayInterestFunder
- Long repayPlatformFee
- Long repayProvisionFee
- Long repayAdminFee
- List<LoanDetailExt> LoanDetailExts
}
class com.welab.loan.finance.app.command.tb.order.TbCancelLoanService {
- BaseLoanDetailService baseLoanDetailService
+ Response cancelLoan(List<String>)
}
abstract class com.welab.loan.finance.job.base.AbstractEmailJob {
- EmailService emailService
# Boolean pro
# String appId
# EmailTaskEnum emailTaskEnum
# String emailReceiveBusi
+ {abstract}void setEmailUser()
+ {abstract}MailDTO buildMail(String)
+ void postBaseEmail(MailDTO)
+ void sendEmail(String)
}
class com.welab.loan.finance.model.ext.DuesExt {
- Long Id
- String loanId
- Integer dueIndex
- Date dueDate
- String dueType
- Byte planType
- Long orgId
- Long amount
- Long settledAmount
- Long remainingAmount
- Long overAmount
- String secondProdCode
- Long maxOver
}
class com.welab.loan.finance.dto.FlexRepaymentResult {
- List<String> errorMsgList
}
class com.welab.loan.finance.model.CreditUserTagHistoryExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditUserTagHistoryExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditUserTagHistoryExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andAccountTypeIsNull()
+ Criteria andAccountTypeIsNotNull()
+ Criteria andAccountTypeEqualTo(String)
+ Criteria andAccountTypeNotEqualTo(String)
+ Criteria andAccountTypeGreaterThan(String)
+ Criteria andAccountTypeGreaterThanOrEqualTo(String)
+ Criteria andAccountTypeLessThan(String)
+ Criteria andAccountTypeLessThanOrEqualTo(String)
+ Criteria andAccountTypeLike(String)
+ Criteria andAccountTypeNotLike(String)
+ Criteria andAccountTypeIn(List<String>)
+ Criteria andAccountTypeNotIn(List<String>)
+ Criteria andAccountTypeBetween(String,String)
+ Criteria andAccountTypeNotBetween(String,String)
+ Criteria andUserTagIsNull()
+ Criteria andUserTagIsNotNull()
+ Criteria andUserTagEqualTo(String)
+ Criteria andUserTagNotEqualTo(String)
+ Criteria andUserTagGreaterThan(String)
+ Criteria andUserTagGreaterThanOrEqualTo(String)
+ Criteria andUserTagLessThan(String)
+ Criteria andUserTagLessThanOrEqualTo(String)
+ Criteria andUserTagLike(String)
+ Criteria andUserTagNotLike(String)
+ Criteria andUserTagIn(List<String>)
+ Criteria andUserTagNotIn(List<String>)
+ Criteria andUserTagBetween(String,String)
+ Criteria andUserTagNotBetween(String,String)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Integer)
+ Criteria andStatusNotEqualTo(Integer)
+ Criteria andStatusGreaterThan(Integer)
+ Criteria andStatusGreaterThanOrEqualTo(Integer)
+ Criteria andStatusLessThan(Integer)
+ Criteria andStatusLessThanOrEqualTo(Integer)
+ Criteria andStatusIn(List<Integer>)
+ Criteria andStatusNotIn(List<Integer>)
+ Criteria andStatusBetween(Integer,Integer)
+ Criteria andStatusNotBetween(Integer,Integer)
+ Criteria andMinAmountIsNull()
+ Criteria andMinAmountIsNotNull()
+ Criteria andMinAmountEqualTo(Long)
+ Criteria andMinAmountNotEqualTo(Long)
+ Criteria andMinAmountGreaterThan(Long)
+ Criteria andMinAmountGreaterThanOrEqualTo(Long)
+ Criteria andMinAmountLessThan(Long)
+ Criteria andMinAmountLessThanOrEqualTo(Long)
+ Criteria andMinAmountIn(List<Long>)
+ Criteria andMinAmountNotIn(List<Long>)
+ Criteria andMinAmountBetween(Long,Long)
+ Criteria andMinAmountNotBetween(Long,Long)
+ Criteria andMaxAmountIsNull()
+ Criteria andMaxAmountIsNotNull()
+ Criteria andMaxAmountEqualTo(Long)
+ Criteria andMaxAmountNotEqualTo(Long)
+ Criteria andMaxAmountGreaterThan(Long)
+ Criteria andMaxAmountGreaterThanOrEqualTo(Long)
+ Criteria andMaxAmountLessThan(Long)
+ Criteria andMaxAmountLessThanOrEqualTo(Long)
+ Criteria andMaxAmountIn(List<Long>)
+ Criteria andMaxAmountNotIn(List<Long>)
+ Criteria andMaxAmountBetween(Long,Long)
+ Criteria andMaxAmountNotBetween(Long,Long)
+ Criteria andUpdateByIsNull()
+ Criteria andUpdateByIsNotNull()
+ Criteria andUpdateByEqualTo(Long)
+ Criteria andUpdateByNotEqualTo(Long)
+ Criteria andUpdateByGreaterThan(Long)
+ Criteria andUpdateByGreaterThanOrEqualTo(Long)
+ Criteria andUpdateByLessThan(Long)
+ Criteria andUpdateByLessThanOrEqualTo(Long)
+ Criteria andUpdateByIn(List<Long>)
+ Criteria andUpdateByNotIn(List<Long>)
+ Criteria andUpdateByBetween(Long,Long)
+ Criteria andUpdateByNotBetween(Long,Long)
+ Criteria andCreateByIsNull()
+ Criteria andCreateByIsNotNull()
+ Criteria andCreateByEqualTo(Long)
+ Criteria andCreateByNotEqualTo(Long)
+ Criteria andCreateByGreaterThan(Long)
+ Criteria andCreateByGreaterThanOrEqualTo(Long)
+ Criteria andCreateByLessThan(Long)
+ Criteria andCreateByLessThanOrEqualTo(Long)
+ Criteria andCreateByIn(List<Long>)
+ Criteria andCreateByNotIn(List<Long>)
+ Criteria andCreateByBetween(Long,Long)
+ Criteria andCreateByNotBetween(Long,Long)
}
class com.welab.loan.finance.model.CreditUserTagHistoryExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.CreditUserTagHistoryExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.facade.application.WhiteListServiceFacade {
- JawaBaliCityService jawaBaliCityService
+ Boolean isJawaBaliCity(String)
}
interface com.welab.loan.finance.mapper.ext.CreditUserAccountExtMapper {
~ CreditUserAccountExt findOneForUpdate(Long,String,String)
~ CreditUserAccountExt findOne(CreditUserAccountExt)
~ List<CreditUserAccountExt> findListForUpdate(Long,String,String)
~ List<CreditUserAccountExt> findList(CreditUserAccountExt)
~ int updateMoney(CreditUserAccountExt)
~ CreditUserAccountExt findOneByAccountId(Long)
~ List<CreditUserAccountExt> selectForListByUserIds(CreditUserAccountExt)
}
class com.welab.loan.finance.helper.OrgIdHelper {
+ {static} long getOrgIdForSecondProCode(String)
+ {static} long getOrgIdForLoanNumber(String)
+ {static} long parseForLoanNum(String,Long)
}
class com.welab.loan.finance.core.dto.DeductDetailDTO {
- List<DeductItemDTO> deductList
- List<Dues> duesList
- List<Dues> unDeductList
- List<Integer> closeDueIndex
- Long disBackAmount
- List<LoanPlansLog> plansLogList
- List<LoanCouponDetail> couponList
- List<LoanCouponDetail> advCouponList
}
interface com.welab.loan.finance.mapper.DuesCalculationMapper {
~ List<DuesExt> queryOverDues(Map)
~ DuesExt queryOverAmountDues(Map)
~ DuesExt queryMuchOverAmountDues(Map)
~ List<DuesExt> queryOverAmountDuesList(Map)
~ Long countOverDues(Map)
~ List<DuesExt> getOverDuesByLoanId(String)
~ List<DuesExt> queryOverDuesByLoanId(String)
~ List<DuesExt> queryTotalReainingAmountByLoanId(String,Boolean)
~ List<Integer> queryNoPlanPeriod(String)
~ long countNewOverDues()
~ List<DuesExt> queryNewOverDues(Map)
~ List<DuesExt> queNewOverDuesByLoanId(String)
~ List<DuesExt> queNewOverDuesByLoanIds(List<String>)
}
class com.welab.loan.finance.vo.CouponDues {
- String loanId
- Integer dueIndex
- Date dueDate
- String dueType
- Long amount
- Integer repayIndex
- Long settledAmount
- Long remainingAmount
- String isAdvanced
- String isKantouFee
- Long discountLateFee
- Boolean isClose
- Long lateFeeAmount
- Long overAmount
- Boolean isLock
- Long orgRemainingAmount
- Long couponFee
- Date repaymentDate
}
class com.welab.loan.finance.vo.DuesAmountExtVo {
- String loanId
- Integer dueIndex
- Date dueDate
- Boolean isClose
- Long interestAmount
- Long interestPay
- Long interestUnPay
- Long principalAmount
- Long principalPay
- Long principalUnPay
- Long adminFeeAmount
- Long adminFeePay
- Long adminFeeUnPay
- Long carryingFeeAmount
- Long carryingFeePay
- Long carryingFeeUnPay
- Long lateFeeAmount
- Long lateFeePay
- Long lateFeeUnPay
- Long vatBeforeLateFeeUnPay
- Long provisionFeeAmount
- Long provisionFeePay
- Long provisionFeeUnPay
- Long promoCodeFee
}
class com.welab.loan.finance.model.ext.CreditUserAccountExt {
- List<Long> userIdList
- Long operateFreezeMoney
- Long operateSumMoney
- Long operateUseMoney
- Boolean isMigrate
- Long income
- String tag
- String secondTag
- Date approvedAt
- String applyNo
- Date tagUpdatedAt
- Long usableMoney
- String tenor
- String filterTenor
- Long approvalIncome
- boolean noContainsCurrentDue
- String previousLoan
- Integer abTestGroupType
- Long abTestId
- boolean isApproval
- JSONObject abTestConfig
- JSONObject abTestTenorItemConfig
}
class com.welab.loan.finance.model.FinanceUserBankcardLog {
- Long id
- Long userId
- String mobile
- String ip
- String name
- String newName
- Date createdAt
- Date updateAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ String getMobile()
+ void setMobile(String)
+ String getIp()
+ void setIp(String)
+ String getName()
+ void setName(String)
+ String getNewName()
+ void setNewName(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
}
class com.welab.loan.finance.dto.QueryUserProfilesDTOExt {
- String name
- String mobile
- String nik
- Boolean isApproved
- String accountType
- String creditUserStatus
- Long outstandingStart
- Long outstandingEnd
- String userTag
- List<String> userTags
}
class com.welab.loan.finance.app.service.flow.repaymentback.LoanRepaymentBackCompont {
- BaseLoanRepaymentService baseLoanRepaymentService
+ FlowTaskNodeEnum flowTaskNode()
# void process(RepaymentBackFlowContext)
}
interface com.welab.loan.finance.mapper.LoanDuesConfigMapper {
~ long countByExample(LoanDuesConfigExample)
~ int deleteByExample(LoanDuesConfigExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanDuesConfig)
~ int insertSelective(LoanDuesConfig)
~ List<LoanDuesConfig> selectByExample(LoanDuesConfigExample)
~ LoanDuesConfig selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanDuesConfig,LoanDuesConfigExample)
~ int updateByExample(LoanDuesConfig,LoanDuesConfigExample)
~ int updateByPrimaryKeySelective(LoanDuesConfig)
~ int updateByPrimaryKey(LoanDuesConfig)
}
class com.welab.loan.finance.model.CreditActivityAbTestExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditActivityAbTestExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditActivityAbTestExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
# void addCriterionForJDBCDate(String,Date,String)
# void addCriterionForJDBCDate(String,List<Date>,String)
# void addCriterionForJDBCDate(String,Date,Date,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andActivityIdIsNull()
+ Criteria andActivityIdIsNotNull()
+ Criteria andActivityIdEqualTo(String)
+ Criteria andActivityIdNotEqualTo(String)
+ Criteria andActivityIdGreaterThan(String)
+ Criteria andActivityIdGreaterThanOrEqualTo(String)
+ Criteria andActivityIdLessThan(String)
+ Criteria andActivityIdLessThanOrEqualTo(String)
+ Criteria andActivityIdLike(String)
+ Criteria andActivityIdNotLike(String)
+ Criteria andActivityIdIn(List<String>)
+ Criteria andActivityIdNotIn(List<String>)
+ Criteria andActivityIdBetween(String,String)
+ Criteria andActivityIdNotBetween(String,String)
+ Criteria andScenarioNameIsNull()
+ Criteria andScenarioNameIsNotNull()
+ Criteria andScenarioNameEqualTo(String)
+ Criteria andScenarioNameNotEqualTo(String)
+ Criteria andScenarioNameGreaterThan(String)
+ Criteria andScenarioNameGreaterThanOrEqualTo(String)
+ Criteria andScenarioNameLessThan(String)
+ Criteria andScenarioNameLessThanOrEqualTo(String)
+ Criteria andScenarioNameLike(String)
+ Criteria andScenarioNameNotLike(String)
+ Criteria andScenarioNameIn(List<String>)
+ Criteria andScenarioNameNotIn(List<String>)
+ Criteria andScenarioNameBetween(String,String)
+ Criteria andScenarioNameNotBetween(String,String)
+ Criteria andDescriptionIsNull()
+ Criteria andDescriptionIsNotNull()
+ Criteria andDescriptionEqualTo(String)
+ Criteria andDescriptionNotEqualTo(String)
+ Criteria andDescriptionGreaterThan(String)
+ Criteria andDescriptionGreaterThanOrEqualTo(String)
+ Criteria andDescriptionLessThan(String)
+ Criteria andDescriptionLessThanOrEqualTo(String)
+ Criteria andDescriptionLike(String)
+ Criteria andDescriptionNotLike(String)
+ Criteria andDescriptionIn(List<String>)
+ Criteria andDescriptionNotIn(List<String>)
+ Criteria andDescriptionBetween(String,String)
+ Criteria andDescriptionNotBetween(String,String)
+ Criteria andBigFieldRelationIdIsNull()
+ Criteria andBigFieldRelationIdIsNotNull()
+ Criteria andBigFieldRelationIdEqualTo(Long)
+ Criteria andBigFieldRelationIdNotEqualTo(Long)
+ Criteria andBigFieldRelationIdGreaterThan(Long)
+ Criteria andBigFieldRelationIdGreaterThanOrEqualTo(Long)
+ Criteria andBigFieldRelationIdLessThan(Long)
+ Criteria andBigFieldRelationIdLessThanOrEqualTo(Long)
+ Criteria andBigFieldRelationIdIn(List<Long>)
+ Criteria andBigFieldRelationIdNotIn(List<Long>)
+ Criteria andBigFieldRelationIdBetween(Long,Long)
+ Criteria andBigFieldRelationIdNotBetween(Long,Long)
+ Criteria andTestGroupIdIsNull()
+ Criteria andTestGroupIdIsNotNull()
+ Criteria andTestGroupIdEqualTo(Long)
+ Criteria andTestGroupIdNotEqualTo(Long)
+ Criteria andTestGroupIdGreaterThan(Long)
+ Criteria andTestGroupIdGreaterThanOrEqualTo(Long)
+ Criteria andTestGroupIdLessThan(Long)
+ Criteria andTestGroupIdLessThanOrEqualTo(Long)
+ Criteria andTestGroupIdIn(List<Long>)
+ Criteria andTestGroupIdNotIn(List<Long>)
+ Criteria andTestGroupIdBetween(Long,Long)
+ Criteria andTestGroupIdNotBetween(Long,Long)
+ Criteria andActivityStatusIsNull()
+ Criteria andActivityStatusIsNotNull()
+ Criteria andActivityStatusEqualTo(String)
+ Criteria andActivityStatusNotEqualTo(String)
+ Criteria andActivityStatusGreaterThan(String)
+ Criteria andActivityStatusGreaterThanOrEqualTo(String)
+ Criteria andActivityStatusLessThan(String)
+ Criteria andActivityStatusLessThanOrEqualTo(String)
+ Criteria andActivityStatusLike(String)
+ Criteria andActivityStatusNotLike(String)
+ Criteria andActivityStatusIn(List<String>)
+ Criteria andActivityStatusNotIn(List<String>)
+ Criteria andActivityStatusBetween(String,String)
+ Criteria andActivityStatusNotBetween(String,String)
+ Criteria andStartedTimeIsNull()
+ Criteria andStartedTimeIsNotNull()
+ Criteria andStartedTimeEqualTo(Date)
+ Criteria andStartedTimeNotEqualTo(Date)
+ Criteria andStartedTimeGreaterThan(Date)
+ Criteria andStartedTimeGreaterThanOrEqualTo(Date)
+ Criteria andStartedTimeLessThan(Date)
+ Criteria andStartedTimeLessThanOrEqualTo(Date)
+ Criteria andStartedTimeIn(List<Date>)
+ Criteria andStartedTimeNotIn(List<Date>)
+ Criteria andStartedTimeBetween(Date,Date)
+ Criteria andStartedTimeNotBetween(Date,Date)
+ Criteria andEndTimeIsNull()
+ Criteria andEndTimeIsNotNull()
+ Criteria andEndTimeEqualTo(Date)
+ Criteria andEndTimeNotEqualTo(Date)
+ Criteria andEndTimeGreaterThan(Date)
+ Criteria andEndTimeGreaterThanOrEqualTo(Date)
+ Criteria andEndTimeLessThan(Date)
+ Criteria andEndTimeLessThanOrEqualTo(Date)
+ Criteria andEndTimeIn(List<Date>)
+ Criteria andEndTimeNotIn(List<Date>)
+ Criteria andEndTimeBetween(Date,Date)
+ Criteria andEndTimeNotBetween(Date,Date)
+ Criteria andLaunchTimeIsNull()
+ Criteria andLaunchTimeIsNotNull()
+ Criteria andLaunchTimeEqualTo(Date)
+ Criteria andLaunchTimeNotEqualTo(Date)
+ Criteria andLaunchTimeGreaterThan(Date)
+ Criteria andLaunchTimeGreaterThanOrEqualTo(Date)
+ Criteria andLaunchTimeLessThan(Date)
+ Criteria andLaunchTimeLessThanOrEqualTo(Date)
+ Criteria andLaunchTimeIn(List<Date>)
+ Criteria andLaunchTimeNotIn(List<Date>)
+ Criteria andLaunchTimeBetween(Date,Date)
+ Criteria andLaunchTimeNotBetween(Date,Date)
+ Criteria andCreatorByIsNull()
+ Criteria andCreatorByIsNotNull()
+ Criteria andCreatorByEqualTo(Long)
+ Criteria andCreatorByNotEqualTo(Long)
+ Criteria andCreatorByGreaterThan(Long)
+ Criteria andCreatorByGreaterThanOrEqualTo(Long)
+ Criteria andCreatorByLessThan(Long)
+ Criteria andCreatorByLessThanOrEqualTo(Long)
+ Criteria andCreatorByIn(List<Long>)
+ Criteria andCreatorByNotIn(List<Long>)
+ Criteria andCreatorByBetween(Long,Long)
+ Criteria andCreatorByNotBetween(Long,Long)
+ Criteria andTerminatedTimeIsNull()
+ Criteria andTerminatedTimeIsNotNull()
+ Criteria andTerminatedTimeEqualTo(Date)
+ Criteria andTerminatedTimeNotEqualTo(Date)
+ Criteria andTerminatedTimeGreaterThan(Date)
+ Criteria andTerminatedTimeGreaterThanOrEqualTo(Date)
+ Criteria andTerminatedTimeLessThan(Date)
+ Criteria andTerminatedTimeLessThanOrEqualTo(Date)
+ Criteria andTerminatedTimeIn(List<Date>)
+ Criteria andTerminatedTimeNotIn(List<Date>)
+ Criteria andTerminatedTimeBetween(Date,Date)
+ Criteria andTerminatedTimeNotBetween(Date,Date)
+ Criteria andTerminatedByIsNull()
+ Criteria andTerminatedByIsNotNull()
+ Criteria andTerminatedByEqualTo(Long)
+ Criteria andTerminatedByNotEqualTo(Long)
+ Criteria andTerminatedByGreaterThan(Long)
+ Criteria andTerminatedByGreaterThanOrEqualTo(Long)
+ Criteria andTerminatedByLessThan(Long)
+ Criteria andTerminatedByLessThanOrEqualTo(Long)
+ Criteria andTerminatedByIn(List<Long>)
+ Criteria andTerminatedByNotIn(List<Long>)
+ Criteria andTerminatedByBetween(Long,Long)
+ Criteria andTerminatedByNotBetween(Long,Long)
}
class com.welab.loan.finance.model.CreditActivityAbTestExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.CreditActivityAbTestExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.ScaffoldServer {
- {static} Logger LOG
+ {static} void main(String[])
}
class com.welab.loan.finance.job.LoanOffLineRepayJob {
- BaseRepaymentTrack baseRepaymentTrack
- ApplicationService applicationService
- FifStoreService fifStoreService
- Map<Long,FifBranchDTO> cacheStore
- Integer index
+ void execute(ShardingContext)
+ List quaryList(String)
+ LoanTrack transform(Object)
+ LinkedHashMap getExcelHead()
+ String getSubject(String)
+ void setEmailUser()
+ UserProfileVO getUserInfo(Long)
+ {static} void main(String[])
}
class com.welab.loan.finance.app.command.tb.lend.TbLendService {
+ {static} String LOCK_KEY
+ {static} String LOAN_ACCOUNT
- Boolean testSwitch
- BaseLoanDetailService loanDetailService
- BaseUserAccountService baseUserAccountService
- BaseFinanceTrading financeTrading
- LendCheckManager lendCheckManager
- IFundMatchService iFundMatchService
- TbDuesCreateService tbDuesCreateService
- TbPayService tbPayService
- TbFinanceLendCreateService tbFinanceLendCreateService
- TbTransferServiceProvider transferServiceProvider
- CashFlowStatusService cashFlowStatusService
- JedisCluster jedisCluster
+ void doBatchLend(TbBatch)
- void doProcess(TbBatch)
- void validateFields(TbBatch)
- void validateBiz(TbBatch)
- FinanceTrading doCreateRechargeTrading(TbBatch,Long)
- void doCreateTransferTrding(TbBatch,Long)
- void doLend(LoanDetail)
}
class com.welab.loan.finance.dto.cmd.tb.RestockLoanImportCmd {
}
class com.welab.loan.finance.rabbitmq.CreditManageMq {
- CreditUserAccountServiceImpl creditUserAccountServiceImpl
- CreditMigrateUserService creditMigrateUserService
+ void creditFreeze(Message)
+ void creditFreezeList(Message)
- void freezeUser(JSONObject)
+ void creditMigrateUser(Message)
}
interface com.welab.loan.finance.mapper.LoanApplyRepaymentMapper {
~ long countByExample(LoanApplyRepaymentExample)
~ int deleteByExample(LoanApplyRepaymentExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanApplyRepayment)
~ int insertSelective(LoanApplyRepayment)
~ List<LoanApplyRepayment> selectByExample(LoanApplyRepaymentExample)
~ LoanApplyRepayment selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanApplyRepayment,LoanApplyRepaymentExample)
~ int updateByExample(LoanApplyRepayment,LoanApplyRepaymentExample)
~ int updateByPrimaryKeySelective(LoanApplyRepayment)
~ int updateByPrimaryKey(LoanApplyRepayment)
}
class com.welab.loan.finance.dto.cmd.CouponLoansAbleCmd {
- List<String> loanNumbers
}
enum com.welab.loan.finance.enums.CashFlowStatusEnum {
+  PENDING_RECHARGE
+  BNI_ESCROW_NEW_BNI
+  NEW_BCA_TO_BCA_DISB
- Byte value
- String name
- <<Create>> CashFlowStatusEnum(Byte,String)
+ Byte getValue()
+ String getName()
+ {static} List<Map<String,Object>> getStatusList()
+ {static} String getEnumName(Byte)
}
class com.welab.loan.finance.model.mongo.TbBaseLoanDoc {
- String partner
- String merchantCode
- String customerCode
- String orderNo
- String invoiceAmount
- String invoiceDate
- String loanNumber
}
class com.welab.loan.finance.vo.response.FPlansContractVO {
- {static} long serialVersionUID
- String loanNumber
- Integer dueIndex
- String url
}
class com.welab.loan.finance.model.FinanceDuesExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FinanceDuesExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FinanceDuesExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
# void addCriterionForJDBCDate(String,Date,String)
# void addCriterionForJDBCDate(String,List<Date>,String)
# void addCriterionForJDBCDate(String,Date,Date,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andOrgIdIsNull()
+ Criteria andOrgIdIsNotNull()
+ Criteria andOrgIdEqualTo(Long)
+ Criteria andOrgIdNotEqualTo(Long)
+ Criteria andOrgIdGreaterThan(Long)
+ Criteria andOrgIdGreaterThanOrEqualTo(Long)
+ Criteria andOrgIdLessThan(Long)
+ Criteria andOrgIdLessThanOrEqualTo(Long)
+ Criteria andOrgIdIn(List<Long>)
+ Criteria andOrgIdNotIn(List<Long>)
+ Criteria andOrgIdBetween(Long,Long)
+ Criteria andOrgIdNotBetween(Long,Long)
+ Criteria andLoanIdIsNull()
+ Criteria andLoanIdIsNotNull()
+ Criteria andLoanIdEqualTo(String)
+ Criteria andLoanIdNotEqualTo(String)
+ Criteria andLoanIdGreaterThan(String)
+ Criteria andLoanIdGreaterThanOrEqualTo(String)
+ Criteria andLoanIdLessThan(String)
+ Criteria andLoanIdLessThanOrEqualTo(String)
+ Criteria andLoanIdLike(String)
+ Criteria andLoanIdNotLike(String)
+ Criteria andLoanIdIn(List<String>)
+ Criteria andLoanIdNotIn(List<String>)
+ Criteria andLoanIdBetween(String,String)
+ Criteria andLoanIdNotBetween(String,String)
+ Criteria andDueIndexIsNull()
+ Criteria andDueIndexIsNotNull()
+ Criteria andDueIndexEqualTo(Integer)
+ Criteria andDueIndexNotEqualTo(Integer)
+ Criteria andDueIndexGreaterThan(Integer)
+ Criteria andDueIndexGreaterThanOrEqualTo(Integer)
+ Criteria andDueIndexLessThan(Integer)
+ Criteria andDueIndexLessThanOrEqualTo(Integer)
+ Criteria andDueIndexIn(List<Integer>)
+ Criteria andDueIndexNotIn(List<Integer>)
+ Criteria andDueIndexBetween(Integer,Integer)
+ Criteria andDueIndexNotBetween(Integer,Integer)
+ Criteria andDueDateIsNull()
+ Criteria andDueDateIsNotNull()
+ Criteria andDueDateEqualTo(Date)
+ Criteria andDueDateNotEqualTo(Date)
+ Criteria andDueDateGreaterThan(Date)
+ Criteria andDueDateGreaterThanOrEqualTo(Date)
+ Criteria andDueDateLessThan(Date)
+ Criteria andDueDateLessThanOrEqualTo(Date)
+ Criteria andDueDateIn(List<Date>)
+ Criteria andDueDateNotIn(List<Date>)
+ Criteria andDueDateBetween(Date,Date)
+ Criteria andDueDateNotBetween(Date,Date)
+ Criteria andIsCloseIsNull()
+ Criteria andIsCloseIsNotNull()
+ Criteria andIsCloseEqualTo(Boolean)
+ Criteria andIsCloseNotEqualTo(Boolean)
+ Criteria andIsCloseGreaterThan(Boolean)
+ Criteria andIsCloseGreaterThanOrEqualTo(Boolean)
+ Criteria andIsCloseLessThan(Boolean)
+ Criteria andIsCloseLessThanOrEqualTo(Boolean)
+ Criteria andIsCloseIn(List<Boolean>)
+ Criteria andIsCloseNotIn(List<Boolean>)
+ Criteria andIsCloseBetween(Boolean,Boolean)
+ Criteria andIsCloseNotBetween(Boolean,Boolean)
+ Criteria andPlanTypeIsNull()
+ Criteria andPlanTypeIsNotNull()
+ Criteria andPlanTypeEqualTo(Byte)
+ Criteria andPlanTypeNotEqualTo(Byte)
+ Criteria andPlanTypeGreaterThan(Byte)
+ Criteria andPlanTypeGreaterThanOrEqualTo(Byte)
+ Criteria andPlanTypeLessThan(Byte)
+ Criteria andPlanTypeLessThanOrEqualTo(Byte)
+ Criteria andPlanTypeIn(List<Byte>)
+ Criteria andPlanTypeNotIn(List<Byte>)
+ Criteria andPlanTypeBetween(Byte,Byte)
+ Criteria andPlanTypeNotBetween(Byte,Byte)
+ Criteria andRepaymentTypeIsNull()
+ Criteria andRepaymentTypeIsNotNull()
+ Criteria andRepaymentTypeEqualTo(Byte)
+ Criteria andRepaymentTypeNotEqualTo(Byte)
+ Criteria andRepaymentTypeGreaterThan(Byte)
+ Criteria andRepaymentTypeGreaterThanOrEqualTo(Byte)
+ Criteria andRepaymentTypeLessThan(Byte)
+ Criteria andRepaymentTypeLessThanOrEqualTo(Byte)
+ Criteria andRepaymentTypeIn(List<Byte>)
+ Criteria andRepaymentTypeNotIn(List<Byte>)
+ Criteria andRepaymentTypeBetween(Byte,Byte)
+ Criteria andRepaymentTypeNotBetween(Byte,Byte)
+ Criteria andPlansStrIsNull()
+ Criteria andPlansStrIsNotNull()
+ Criteria andPlansStrEqualTo(String)
+ Criteria andPlansStrNotEqualTo(String)
+ Criteria andPlansStrGreaterThan(String)
+ Criteria andPlansStrGreaterThanOrEqualTo(String)
+ Criteria andPlansStrLessThan(String)
+ Criteria andPlansStrLessThanOrEqualTo(String)
+ Criteria andPlansStrLike(String)
+ Criteria andPlansStrNotLike(String)
+ Criteria andPlansStrIn(List<String>)
+ Criteria andPlansStrNotIn(List<String>)
+ Criteria andPlansStrBetween(String,String)
+ Criteria andPlansStrNotBetween(String,String)
+ Criteria andPromotionCodeIsNull()
+ Criteria andPromotionCodeIsNotNull()
+ Criteria andPromotionCodeEqualTo(String)
+ Criteria andPromotionCodeNotEqualTo(String)
+ Criteria andPromotionCodeGreaterThan(String)
+ Criteria andPromotionCodeGreaterThanOrEqualTo(String)
+ Criteria andPromotionCodeLessThan(String)
+ Criteria andPromotionCodeLessThanOrEqualTo(String)
+ Criteria andPromotionCodeLike(String)
+ Criteria andPromotionCodeNotLike(String)
+ Criteria andPromotionCodeIn(List<String>)
+ Criteria andPromotionCodeNotIn(List<String>)
+ Criteria andPromotionCodeBetween(String,String)
+ Criteria andPromotionCodeNotBetween(String,String)
+ Criteria andPrincipalAmountIsNull()
+ Criteria andPrincipalAmountIsNotNull()
+ Criteria andPrincipalAmountEqualTo(Long)
+ Criteria andPrincipalAmountNotEqualTo(Long)
+ Criteria andPrincipalAmountGreaterThan(Long)
+ Criteria andPrincipalAmountGreaterThanOrEqualTo(Long)
+ Criteria andPrincipalAmountLessThan(Long)
+ Criteria andPrincipalAmountLessThanOrEqualTo(Long)
+ Criteria andPrincipalAmountIn(List<Long>)
+ Criteria andPrincipalAmountNotIn(List<Long>)
+ Criteria andPrincipalAmountBetween(Long,Long)
+ Criteria andPrincipalAmountNotBetween(Long,Long)
+ Criteria andPrincipalPayIsNull()
+ Criteria andPrincipalPayIsNotNull()
+ Criteria andPrincipalPayEqualTo(Long)
+ Criteria andPrincipalPayNotEqualTo(Long)
+ Criteria andPrincipalPayGreaterThan(Long)
+ Criteria andPrincipalPayGreaterThanOrEqualTo(Long)
+ Criteria andPrincipalPayLessThan(Long)
+ Criteria andPrincipalPayLessThanOrEqualTo(Long)
+ Criteria andPrincipalPayIn(List<Long>)
+ Criteria andPrincipalPayNotIn(List<Long>)
+ Criteria andPrincipalPayBetween(Long,Long)
+ Criteria andPrincipalPayNotBetween(Long,Long)
+ Criteria andPrincipalUnpayIsNull()
+ Criteria andPrincipalUnpayIsNotNull()
+ Criteria andPrincipalUnpayEqualTo(Long)
+ Criteria andPrincipalUnpayNotEqualTo(Long)
+ Criteria andPrincipalUnpayGreaterThan(Long)
+ Criteria andPrincipalUnpayGreaterThanOrEqualTo(Long)
+ Criteria andPrincipalUnpayLessThan(Long)
+ Criteria andPrincipalUnpayLessThanOrEqualTo(Long)
+ Criteria andPrincipalUnpayIn(List<Long>)
+ Criteria andPrincipalUnpayNotIn(List<Long>)
+ Criteria andPrincipalUnpayBetween(Long,Long)
+ Criteria andPrincipalUnpayNotBetween(Long,Long)
+ Criteria andPrincipalDiscountIsNull()
+ Criteria andPrincipalDiscountIsNotNull()
+ Criteria andPrincipalDiscountEqualTo(Long)
+ Criteria andPrincipalDiscountNotEqualTo(Long)
+ Criteria andPrincipalDiscountGreaterThan(Long)
+ Criteria andPrincipalDiscountGreaterThanOrEqualTo(Long)
+ Criteria andPrincipalDiscountLessThan(Long)
+ Criteria andPrincipalDiscountLessThanOrEqualTo(Long)
+ Criteria andPrincipalDiscountIn(List<Long>)
+ Criteria andPrincipalDiscountNotIn(List<Long>)
+ Criteria andPrincipalDiscountBetween(Long,Long)
+ Criteria andPrincipalDiscountNotBetween(Long,Long)
+ Criteria andPrincipalPlanDiscountIsNull()
+ Criteria andPrincipalPlanDiscountIsNotNull()
+ Criteria andPrincipalPlanDiscountEqualTo(Long)
+ Criteria andPrincipalPlanDiscountNotEqualTo(Long)
+ Criteria andPrincipalPlanDiscountGreaterThan(Long)
+ Criteria andPrincipalPlanDiscountGreaterThanOrEqualTo(Long)
+ Criteria andPrincipalPlanDiscountLessThan(Long)
+ Criteria andPrincipalPlanDiscountLessThanOrEqualTo(Long)
+ Criteria andPrincipalPlanDiscountIn(List<Long>)
+ Criteria andPrincipalPlanDiscountNotIn(List<Long>)
+ Criteria andPrincipalPlanDiscountBetween(Long,Long)
+ Criteria andPrincipalPlanDiscountNotBetween(Long,Long)
+ Criteria andAdminFeeAmountIsNull()
+ Criteria andAdminFeeAmountIsNotNull()
+ Criteria andAdminFeeAmountEqualTo(Long)
+ Criteria andAdminFeeAmountNotEqualTo(Long)
+ Criteria andAdminFeeAmountGreaterThan(Long)
+ Criteria andAdminFeeAmountGreaterThanOrEqualTo(Long)
+ Criteria andAdminFeeAmountLessThan(Long)
+ Criteria andAdminFeeAmountLessThanOrEqualTo(Long)
+ Criteria andAdminFeeAmountIn(List<Long>)
+ Criteria andAdminFeeAmountNotIn(List<Long>)
+ Criteria andAdminFeeAmountBetween(Long,Long)
+ Criteria andAdminFeeAmountNotBetween(Long,Long)
+ Criteria andAdminFeePayIsNull()
+ Criteria andAdminFeePayIsNotNull()
+ Criteria andAdminFeePayEqualTo(Long)
+ Criteria andAdminFeePayNotEqualTo(Long)
+ Criteria andAdminFeePayGreaterThan(Long)
+ Criteria andAdminFeePayGreaterThanOrEqualTo(Long)
+ Criteria andAdminFeePayLessThan(Long)
+ Criteria andAdminFeePayLessThanOrEqualTo(Long)
+ Criteria andAdminFeePayIn(List<Long>)
+ Criteria andAdminFeePayNotIn(List<Long>)
+ Criteria andAdminFeePayBetween(Long,Long)
+ Criteria andAdminFeePayNotBetween(Long,Long)
+ Criteria andAdminFeeUnpayIsNull()
+ Criteria andAdminFeeUnpayIsNotNull()
+ Criteria andAdminFeeUnpayEqualTo(Long)
+ Criteria andAdminFeeUnpayNotEqualTo(Long)
+ Criteria andAdminFeeUnpayGreaterThan(Long)
+ Criteria andAdminFeeUnpayGreaterThanOrEqualTo(Long)
+ Criteria andAdminFeeUnpayLessThan(Long)
+ Criteria andAdminFeeUnpayLessThanOrEqualTo(Long)
+ Criteria andAdminFeeUnpayIn(List<Long>)
+ Criteria andAdminFeeUnpayNotIn(List<Long>)
+ Criteria andAdminFeeUnpayBetween(Long,Long)
+ Criteria andAdminFeeUnpayNotBetween(Long,Long)
+ Criteria andAdminFeeDiscountIsNull()
+ Criteria andAdminFeeDiscountIsNotNull()
+ Criteria andAdminFeeDiscountEqualTo(Long)
+ Criteria andAdminFeeDiscountNotEqualTo(Long)
+ Criteria andAdminFeeDiscountGreaterThan(Long)
+ Criteria andAdminFeeDiscountGreaterThanOrEqualTo(Long)
+ Criteria andAdminFeeDiscountLessThan(Long)
+ Criteria andAdminFeeDiscountLessThanOrEqualTo(Long)
+ Criteria andAdminFeeDiscountIn(List<Long>)
+ Criteria andAdminFeeDiscountNotIn(List<Long>)
+ Criteria andAdminFeeDiscountBetween(Long,Long)
+ Criteria andAdminFeeDiscountNotBetween(Long,Long)
+ Criteria andAdminFeePlanDiscountIsNull()
+ Criteria andAdminFeePlanDiscountIsNotNull()
+ Criteria andAdminFeePlanDiscountEqualTo(Long)
+ Criteria andAdminFeePlanDiscountNotEqualTo(Long)
+ Criteria andAdminFeePlanDiscountGreaterThan(Long)
+ Criteria andAdminFeePlanDiscountGreaterThanOrEqualTo(Long)
+ Criteria andAdminFeePlanDiscountLessThan(Long)
+ Criteria andAdminFeePlanDiscountLessThanOrEqualTo(Long)
+ Criteria andAdminFeePlanDiscountIn(List<Long>)
+ Criteria andAdminFeePlanDiscountNotIn(List<Long>)
+ Criteria andAdminFeePlanDiscountBetween(Long,Long)
+ Criteria andAdminFeePlanDiscountNotBetween(Long,Long)
+ Criteria andFundInterestAmountIsNull()
+ Criteria andFundInterestAmountIsNotNull()
+ Criteria andFundInterestAmountEqualTo(Long)
+ Criteria andFundInterestAmountNotEqualTo(Long)
+ Criteria andFundInterestAmountGreaterThan(Long)
+ Criteria andFundInterestAmountGreaterThanOrEqualTo(Long)
+ Criteria andFundInterestAmountLessThan(Long)
+ Criteria andFundInterestAmountLessThanOrEqualTo(Long)
+ Criteria andFundInterestAmountIn(List<Long>)
+ Criteria andFundInterestAmountNotIn(List<Long>)
+ Criteria andFundInterestAmountBetween(Long,Long)
+ Criteria andFundInterestAmountNotBetween(Long,Long)
+ Criteria andFundInterestPayIsNull()
+ Criteria andFundInterestPayIsNotNull()
+ Criteria andFundInterestPayEqualTo(Long)
+ Criteria andFundInterestPayNotEqualTo(Long)
+ Criteria andFundInterestPayGreaterThan(Long)
+ Criteria andFundInterestPayGreaterThanOrEqualTo(Long)
+ Criteria andFundInterestPayLessThan(Long)
+ Criteria andFundInterestPayLessThanOrEqualTo(Long)
+ Criteria andFundInterestPayIn(List<Long>)
+ Criteria andFundInterestPayNotIn(List<Long>)
+ Criteria andFundInterestPayBetween(Long,Long)
+ Criteria andFundInterestPayNotBetween(Long,Long)
+ Criteria andFundInterestUnpayIsNull()
+ Criteria andFundInterestUnpayIsNotNull()
+ Criteria andFundInterestUnpayEqualTo(Long)
+ Criteria andFundInterestUnpayNotEqualTo(Long)
+ Criteria andFundInterestUnpayGreaterThan(Long)
+ Criteria andFundInterestUnpayGreaterThanOrEqualTo(Long)
+ Criteria andFundInterestUnpayLessThan(Long)
+ Criteria andFundInterestUnpayLessThanOrEqualTo(Long)
+ Criteria andFundInterestUnpayIn(List<Long>)
+ Criteria andFundInterestUnpayNotIn(List<Long>)
+ Criteria andFundInterestUnpayBetween(Long,Long)
+ Criteria andFundInterestUnpayNotBetween(Long,Long)
+ Criteria andFundInterestDiscountIsNull()
+ Criteria andFundInterestDiscountIsNotNull()
+ Criteria andFundInterestDiscountEqualTo(Long)
+ Criteria andFundInterestDiscountNotEqualTo(Long)
+ Criteria andFundInterestDiscountGreaterThan(Long)
+ Criteria andFundInterestDiscountGreaterThanOrEqualTo(Long)
+ Criteria andFundInterestDiscountLessThan(Long)
+ Criteria andFundInterestDiscountLessThanOrEqualTo(Long)
+ Criteria andFundInterestDiscountIn(List<Long>)
+ Criteria andFundInterestDiscountNotIn(List<Long>)
+ Criteria andFundInterestDiscountBetween(Long,Long)
+ Criteria andFundInterestDiscountNotBetween(Long,Long)
+ Criteria andFundInterestPlanDiscountIsNull()
+ Criteria andFundInterestPlanDiscountIsNotNull()
+ Criteria andFundInterestPlanDiscountEqualTo(Long)
+ Criteria andFundInterestPlanDiscountNotEqualTo(Long)
+ Criteria andFundInterestPlanDiscountGreaterThan(Long)
+ Criteria andFundInterestPlanDiscountGreaterThanOrEqualTo(Long)
+ Criteria andFundInterestPlanDiscountLessThan(Long)
+ Criteria andFundInterestPlanDiscountLessThanOrEqualTo(Long)
+ Criteria andFundInterestPlanDiscountIn(List<Long>)
+ Criteria andFundInterestPlanDiscountNotIn(List<Long>)
+ Criteria andFundInterestPlanDiscountBetween(Long,Long)
+ Criteria andFundInterestPlanDiscountNotBetween(Long,Long)
+ Criteria andServiceFeeAmountIsNull()
+ Criteria andServiceFeeAmountIsNotNull()
+ Criteria andServiceFeeAmountEqualTo(Long)
+ Criteria andServiceFeeAmountNotEqualTo(Long)
+ Criteria andServiceFeeAmountGreaterThan(Long)
+ Criteria andServiceFeeAmountGreaterThanOrEqualTo(Long)
+ Criteria andServiceFeeAmountLessThan(Long)
+ Criteria andServiceFeeAmountLessThanOrEqualTo(Long)
+ Criteria andServiceFeeAmountIn(List<Long>)
+ Criteria andServiceFeeAmountNotIn(List<Long>)
+ Criteria andServiceFeeAmountBetween(Long,Long)
+ Criteria andServiceFeeAmountNotBetween(Long,Long)
+ Criteria andServiceFeePayIsNull()
+ Criteria andServiceFeePayIsNotNull()
+ Criteria andServiceFeePayEqualTo(Long)
+ Criteria andServiceFeePayNotEqualTo(Long)
+ Criteria andServiceFeePayGreaterThan(Long)
+ Criteria andServiceFeePayGreaterThanOrEqualTo(Long)
+ Criteria andServiceFeePayLessThan(Long)
+ Criteria andServiceFeePayLessThanOrEqualTo(Long)
+ Criteria andServiceFeePayIn(List<Long>)
+ Criteria andServiceFeePayNotIn(List<Long>)
+ Criteria andServiceFeePayBetween(Long,Long)
+ Criteria andServiceFeePayNotBetween(Long,Long)
+ Criteria andServiceFeeUnpayIsNull()
+ Criteria andServiceFeeUnpayIsNotNull()
+ Criteria andServiceFeeUnpayEqualTo(Long)
+ Criteria andServiceFeeUnpayNotEqualTo(Long)
+ Criteria andServiceFeeUnpayGreaterThan(Long)
+ Criteria andServiceFeeUnpayGreaterThanOrEqualTo(Long)
+ Criteria andServiceFeeUnpayLessThan(Long)
+ Criteria andServiceFeeUnpayLessThanOrEqualTo(Long)
+ Criteria andServiceFeeUnpayIn(List<Long>)
+ Criteria andServiceFeeUnpayNotIn(List<Long>)
+ Criteria andServiceFeeUnpayBetween(Long,Long)
+ Criteria andServiceFeeUnpayNotBetween(Long,Long)
+ Criteria andServiceFeeDiscountIsNull()
+ Criteria andServiceFeeDiscountIsNotNull()
+ Criteria andServiceFeeDiscountEqualTo(Long)
+ Criteria andServiceFeeDiscountNotEqualTo(Long)
+ Criteria andServiceFeeDiscountGreaterThan(Long)
+ Criteria andServiceFeeDiscountGreaterThanOrEqualTo(Long)
+ Criteria andServiceFeeDiscountLessThan(Long)
+ Criteria andServiceFeeDiscountLessThanOrEqualTo(Long)
+ Criteria andServiceFeeDiscountIn(List<Long>)
+ Criteria andServiceFeeDiscountNotIn(List<Long>)
+ Criteria andServiceFeeDiscountBetween(Long,Long)
+ Criteria andServiceFeeDiscountNotBetween(Long,Long)
+ Criteria andServiceFeePlanDiscountIsNull()
+ Criteria andServiceFeePlanDiscountIsNotNull()
+ Criteria andServiceFeePlanDiscountEqualTo(Long)
+ Criteria andServiceFeePlanDiscountNotEqualTo(Long)
+ Criteria andServiceFeePlanDiscountGreaterThan(Long)
+ Criteria andServiceFeePlanDiscountGreaterThanOrEqualTo(Long)
+ Criteria andServiceFeePlanDiscountLessThan(Long)
+ Criteria andServiceFeePlanDiscountLessThanOrEqualTo(Long)
+ Criteria andServiceFeePlanDiscountIn(List<Long>)
+ Criteria andServiceFeePlanDiscountNotIn(List<Long>)
+ Criteria andServiceFeePlanDiscountBetween(Long,Long)
+ Criteria andServiceFeePlanDiscountNotBetween(Long,Long)
+ Criteria andProvisionPlanDiscountIsNull()
+ Criteria andProvisionPlanDiscountIsNotNull()
+ Criteria andProvisionPlanDiscountEqualTo(Long)
+ Criteria andProvisionPlanDiscountNotEqualTo(Long)
+ Criteria andProvisionPlanDiscountGreaterThan(Long)
+ Criteria andProvisionPlanDiscountGreaterThanOrEqualTo(Long)
+ Criteria andProvisionPlanDiscountLessThan(Long)
+ Criteria andProvisionPlanDiscountLessThanOrEqualTo(Long)
+ Criteria andProvisionPlanDiscountIn(List<Long>)
+ Criteria andProvisionPlanDiscountNotIn(List<Long>)
+ Criteria andProvisionPlanDiscountBetween(Long,Long)
+ Criteria andProvisionPlanDiscountNotBetween(Long,Long)
+ Criteria andProvisionDiscountIsNull()
+ Criteria andProvisionDiscountIsNotNull()
+ Criteria andProvisionDiscountEqualTo(Long)
+ Criteria andProvisionDiscountNotEqualTo(Long)
+ Criteria andProvisionDiscountGreaterThan(Long)
+ Criteria andProvisionDiscountGreaterThanOrEqualTo(Long)
+ Criteria andProvisionDiscountLessThan(Long)
+ Criteria andProvisionDiscountLessThanOrEqualTo(Long)
+ Criteria andProvisionDiscountIn(List<Long>)
+ Criteria andProvisionDiscountNotIn(List<Long>)
+ Criteria andProvisionDiscountBetween(Long,Long)
+ Criteria andProvisionDiscountNotBetween(Long,Long)
+ Criteria andProvisionUnpayIsNull()
+ Criteria andProvisionUnpayIsNotNull()
+ Criteria andProvisionUnpayEqualTo(Long)
+ Criteria andProvisionUnpayNotEqualTo(Long)
+ Criteria andProvisionUnpayGreaterThan(Long)
+ Criteria andProvisionUnpayGreaterThanOrEqualTo(Long)
+ Criteria andProvisionUnpayLessThan(Long)
+ Criteria andProvisionUnpayLessThanOrEqualTo(Long)
+ Criteria andProvisionUnpayIn(List<Long>)
+ Criteria andProvisionUnpayNotIn(List<Long>)
+ Criteria andProvisionUnpayBetween(Long,Long)
+ Criteria andProvisionUnpayNotBetween(Long,Long)
+ Criteria andProvisionPayIsNull()
+ Criteria andProvisionPayIsNotNull()
+ Criteria andProvisionPayEqualTo(Long)
+ Criteria andProvisionPayNotEqualTo(Long)
+ Criteria andProvisionPayGreaterThan(Long)
+ Criteria andProvisionPayGreaterThanOrEqualTo(Long)
+ Criteria andProvisionPayLessThan(Long)
+ Criteria andProvisionPayLessThanOrEqualTo(Long)
+ Criteria andProvisionPayIn(List<Long>)
+ Criteria andProvisionPayNotIn(List<Long>)
+ Criteria andProvisionPayBetween(Long,Long)
+ Criteria andProvisionPayNotBetween(Long,Long)
+ Criteria andProvisionAmountIsNull()
+ Criteria andProvisionAmountIsNotNull()
+ Criteria andProvisionAmountEqualTo(Long)
+ Criteria andProvisionAmountNotEqualTo(Long)
+ Criteria andProvisionAmountGreaterThan(Long)
+ Criteria andProvisionAmountGreaterThanOrEqualTo(Long)
+ Criteria andProvisionAmountLessThan(Long)
+ Criteria andProvisionAmountLessThanOrEqualTo(Long)
+ Criteria andProvisionAmountIn(List<Long>)
+ Criteria andProvisionAmountNotIn(List<Long>)
+ Criteria andProvisionAmountBetween(Long,Long)
+ Criteria andProvisionAmountNotBetween(Long,Long)
+ Criteria andLateFeeAmountIsNull()
+ Criteria andLateFeeAmountIsNotNull()
+ Criteria andLateFeeAmountEqualTo(Long)
+ Criteria andLateFeeAmountNotEqualTo(Long)
+ Criteria andLateFeeAmountGreaterThan(Long)
+ Criteria andLateFeeAmountGreaterThanOrEqualTo(Long)
+ Criteria andLateFeeAmountLessThan(Long)
+ Criteria andLateFeeAmountLessThanOrEqualTo(Long)
+ Criteria andLateFeeAmountIn(List<Long>)
+ Criteria andLateFeeAmountNotIn(List<Long>)
+ Criteria andLateFeeAmountBetween(Long,Long)
+ Criteria andLateFeeAmountNotBetween(Long,Long)
+ Criteria andLateFeePayIsNull()
+ Criteria andLateFeePayIsNotNull()
+ Criteria andLateFeePayEqualTo(Long)
+ Criteria andLateFeePayNotEqualTo(Long)
+ Criteria andLateFeePayGreaterThan(Long)
+ Criteria andLateFeePayGreaterThanOrEqualTo(Long)
+ Criteria andLateFeePayLessThan(Long)
+ Criteria andLateFeePayLessThanOrEqualTo(Long)
+ Criteria andLateFeePayIn(List<Long>)
+ Criteria andLateFeePayNotIn(List<Long>)
+ Criteria andLateFeePayBetween(Long,Long)
+ Criteria andLateFeePayNotBetween(Long,Long)
+ Criteria andLateFeeUnpayIsNull()
+ Criteria andLateFeeUnpayIsNotNull()
+ Criteria andLateFeeUnpayEqualTo(Long)
+ Criteria andLateFeeUnpayNotEqualTo(Long)
+ Criteria andLateFeeUnpayGreaterThan(Long)
+ Criteria andLateFeeUnpayGreaterThanOrEqualTo(Long)
+ Criteria andLateFeeUnpayLessThan(Long)
+ Criteria andLateFeeUnpayLessThanOrEqualTo(Long)
+ Criteria andLateFeeUnpayIn(List<Long>)
+ Criteria andLateFeeUnpayNotIn(List<Long>)
+ Criteria andLateFeeUnpayBetween(Long,Long)
+ Criteria andLateFeeUnpayNotBetween(Long,Long)
+ Criteria andLateFeeDiscountIsNull()
+ Criteria andLateFeeDiscountIsNotNull()
+ Criteria andLateFeeDiscountEqualTo(Long)
+ Criteria andLateFeeDiscountNotEqualTo(Long)
+ Criteria andLateFeeDiscountGreaterThan(Long)
+ Criteria andLateFeeDiscountGreaterThanOrEqualTo(Long)
+ Criteria andLateFeeDiscountLessThan(Long)
+ Criteria andLateFeeDiscountLessThanOrEqualTo(Long)
+ Criteria andLateFeeDiscountIn(List<Long>)
+ Criteria andLateFeeDiscountNotIn(List<Long>)
+ Criteria andLateFeeDiscountBetween(Long,Long)
+ Criteria andLateFeeDiscountNotBetween(Long,Long)
+ Criteria andLateFeePlanDiscountIsNull()
+ Criteria andLateFeePlanDiscountIsNotNull()
+ Criteria andLateFeePlanDiscountEqualTo(Long)
+ Criteria andLateFeePlanDiscountNotEqualTo(Long)
+ Criteria andLateFeePlanDiscountGreaterThan(Long)
+ Criteria andLateFeePlanDiscountGreaterThanOrEqualTo(Long)
+ Criteria andLateFeePlanDiscountLessThan(Long)
+ Criteria andLateFeePlanDiscountLessThanOrEqualTo(Long)
+ Criteria andLateFeePlanDiscountIn(List<Long>)
+ Criteria andLateFeePlanDiscountNotIn(List<Long>)
+ Criteria andLateFeePlanDiscountBetween(Long,Long)
+ Criteria andLateFeePlanDiscountNotBetween(Long,Long)
+ Criteria andCarryingFeeAmountIsNull()
+ Criteria andCarryingFeeAmountIsNotNull()
+ Criteria andCarryingFeeAmountEqualTo(Long)
+ Criteria andCarryingFeeAmountNotEqualTo(Long)
+ Criteria andCarryingFeeAmountGreaterThan(Long)
+ Criteria andCarryingFeeAmountGreaterThanOrEqualTo(Long)
+ Criteria andCarryingFeeAmountLessThan(Long)
+ Criteria andCarryingFeeAmountLessThanOrEqualTo(Long)
+ Criteria andCarryingFeeAmountIn(List<Long>)
+ Criteria andCarryingFeeAmountNotIn(List<Long>)
+ Criteria andCarryingFeeAmountBetween(Long,Long)
+ Criteria andCarryingFeeAmountNotBetween(Long,Long)
+ Criteria andCarryingFeePayIsNull()
+ Criteria andCarryingFeePayIsNotNull()
+ Criteria andCarryingFeePayEqualTo(Long)
+ Criteria andCarryingFeePayNotEqualTo(Long)
+ Criteria andCarryingFeePayGreaterThan(Long)
+ Criteria andCarryingFeePayGreaterThanOrEqualTo(Long)
+ Criteria andCarryingFeePayLessThan(Long)
+ Criteria andCarryingFeePayLessThanOrEqualTo(Long)
+ Criteria andCarryingFeePayIn(List<Long>)
+ Criteria andCarryingFeePayNotIn(List<Long>)
+ Criteria andCarryingFeePayBetween(Long,Long)
+ Criteria andCarryingFeePayNotBetween(Long,Long)
+ Criteria andCarryingFeeUnpayIsNull()
+ Criteria andCarryingFeeUnpayIsNotNull()
+ Criteria andCarryingFeeUnpayEqualTo(Long)
+ Criteria andCarryingFeeUnpayNotEqualTo(Long)
+ Criteria andCarryingFeeUnpayGreaterThan(Long)
+ Criteria andCarryingFeeUnpayGreaterThanOrEqualTo(Long)
+ Criteria andCarryingFeeUnpayLessThan(Long)
+ Criteria andCarryingFeeUnpayLessThanOrEqualTo(Long)
+ Criteria andCarryingFeeUnpayIn(List<Long>)
+ Criteria andCarryingFeeUnpayNotIn(List<Long>)
+ Criteria andCarryingFeeUnpayBetween(Long,Long)
+ Criteria andCarryingFeeUnpayNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andEplanUnpayIsNull()
+ Criteria andEplanUnpayIsNotNull()
+ Criteria andEplanUnpayEqualTo(Long)
+ Criteria andEplanUnpayNotEqualTo(Long)
+ Criteria andEplanUnpayGreaterThan(Long)
+ Criteria andEplanUnpayGreaterThanOrEqualTo(Long)
+ Criteria andEplanUnpayLessThan(Long)
+ Criteria andEplanUnpayLessThanOrEqualTo(Long)
+ Criteria andEplanUnpayIn(List<Long>)
+ Criteria andEplanUnpayNotIn(List<Long>)
+ Criteria andEplanUnpayBetween(Long,Long)
+ Criteria andEplanUnpayNotBetween(Long,Long)
+ Criteria andPlansTypeIsNull()
+ Criteria andPlansTypeIsNotNull()
+ Criteria andPlansTypeEqualTo(Byte)
+ Criteria andPlansTypeNotEqualTo(Byte)
+ Criteria andPlansTypeGreaterThan(Byte)
+ Criteria andPlansTypeGreaterThanOrEqualTo(Byte)
+ Criteria andPlansTypeLessThan(Byte)
+ Criteria andPlansTypeLessThanOrEqualTo(Byte)
+ Criteria andPlansTypeIn(List<Byte>)
+ Criteria andPlansTypeNotIn(List<Byte>)
+ Criteria andPlansTypeBetween(Byte,Byte)
+ Criteria andPlansTypeNotBetween(Byte,Byte)
+ Criteria andFundInterestWhtAmountIsNull()
+ Criteria andFundInterestWhtAmountIsNotNull()
+ Criteria andFundInterestWhtAmountEqualTo(Long)
+ Criteria andFundInterestWhtAmountNotEqualTo(Long)
+ Criteria andFundInterestWhtAmountGreaterThan(Long)
+ Criteria andFundInterestWhtAmountGreaterThanOrEqualTo(Long)
+ Criteria andFundInterestWhtAmountLessThan(Long)
+ Criteria andFundInterestWhtAmountLessThanOrEqualTo(Long)
+ Criteria andFundInterestWhtAmountIn(List<Long>)
+ Criteria andFundInterestWhtAmountNotIn(List<Long>)
+ Criteria andFundInterestWhtAmountBetween(Long,Long)
+ Criteria andFundInterestWhtAmountNotBetween(Long,Long)
+ Criteria andFundInterestWhtPayIsNull()
+ Criteria andFundInterestWhtPayIsNotNull()
+ Criteria andFundInterestWhtPayEqualTo(Long)
+ Criteria andFundInterestWhtPayNotEqualTo(Long)
+ Criteria andFundInterestWhtPayGreaterThan(Long)
+ Criteria andFundInterestWhtPayGreaterThanOrEqualTo(Long)
+ Criteria andFundInterestWhtPayLessThan(Long)
+ Criteria andFundInterestWhtPayLessThanOrEqualTo(Long)
+ Criteria andFundInterestWhtPayIn(List<Long>)
+ Criteria andFundInterestWhtPayNotIn(List<Long>)
+ Criteria andFundInterestWhtPayBetween(Long,Long)
+ Criteria andFundInterestWhtPayNotBetween(Long,Long)
+ Criteria andFundInterestWhtUnpayIsNull()
+ Criteria andFundInterestWhtUnpayIsNotNull()
+ Criteria andFundInterestWhtUnpayEqualTo(Long)
+ Criteria andFundInterestWhtUnpayNotEqualTo(Long)
+ Criteria andFundInterestWhtUnpayGreaterThan(Long)
+ Criteria andFundInterestWhtUnpayGreaterThanOrEqualTo(Long)
+ Criteria andFundInterestWhtUnpayLessThan(Long)
+ Criteria andFundInterestWhtUnpayLessThanOrEqualTo(Long)
+ Criteria andFundInterestWhtUnpayIn(List<Long>)
+ Criteria andFundInterestWhtUnpayNotIn(List<Long>)
+ Criteria andFundInterestWhtUnpayBetween(Long,Long)
+ Criteria andFundInterestWhtUnpayNotBetween(Long,Long)
+ Criteria andFundInterestWhtDiscountIsNull()
+ Criteria andFundInterestWhtDiscountIsNotNull()
+ Criteria andFundInterestWhtDiscountEqualTo(Long)
+ Criteria andFundInterestWhtDiscountNotEqualTo(Long)
+ Criteria andFundInterestWhtDiscountGreaterThan(Long)
+ Criteria andFundInterestWhtDiscountGreaterThanOrEqualTo(Long)
+ Criteria andFundInterestWhtDiscountLessThan(Long)
+ Criteria andFundInterestWhtDiscountLessThanOrEqualTo(Long)
+ Criteria andFundInterestWhtDiscountIn(List<Long>)
+ Criteria andFundInterestWhtDiscountNotIn(List<Long>)
+ Criteria andFundInterestWhtDiscountBetween(Long,Long)
+ Criteria andFundInterestWhtDiscountNotBetween(Long,Long)
+ Criteria andFundInterestWhtPlanDiscountIsNull()
+ Criteria andFundInterestWhtPlanDiscountIsNotNull()
+ Criteria andFundInterestWhtPlanDiscountEqualTo(Long)
+ Criteria andFundInterestWhtPlanDiscountNotEqualTo(Long)
+ Criteria andFundInterestWhtPlanDiscountGreaterThan(Long)
+ Criteria andFundInterestWhtPlanDiscountGreaterThanOrEqualTo(Long)
+ Criteria andFundInterestWhtPlanDiscountLessThan(Long)
+ Criteria andFundInterestWhtPlanDiscountLessThanOrEqualTo(Long)
+ Criteria andFundInterestWhtPlanDiscountIn(List<Long>)
+ Criteria andFundInterestWhtPlanDiscountNotIn(List<Long>)
+ Criteria andFundInterestWhtPlanDiscountBetween(Long,Long)
+ Criteria andFundInterestWhtPlanDiscountNotBetween(Long,Long)
}
class com.welab.loan.finance.model.FinanceDuesExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FinanceDuesExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
interface com.welab.loan.finance.mapper.FinanceUserAccountMapper {
~ int countByExample(FinanceUserAccountExample)
~ int deleteByExample(FinanceUserAccountExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FinanceUserAccount)
~ int insertSelective(FinanceUserAccount)
~ List<FinanceUserAccount> selectByExample(FinanceUserAccountExample)
~ FinanceUserAccount selectByPrimaryKey(Long)
~ int updateByExampleSelective(FinanceUserAccount,FinanceUserAccountExample)
~ int updateByExample(FinanceUserAccount,FinanceUserAccountExample)
~ int updateByPrimaryKeySelective(FinanceUserAccount)
~ int updateByPrimaryKey(FinanceUserAccount)
}
class com.welab.loan.finance.model.LoanDuesConfigExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanDuesConfigExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanDuesConfigExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andDueIndexIsNull()
+ Criteria andDueIndexIsNotNull()
+ Criteria andDueIndexEqualTo(Integer)
+ Criteria andDueIndexNotEqualTo(Integer)
+ Criteria andDueIndexGreaterThan(Integer)
+ Criteria andDueIndexGreaterThanOrEqualTo(Integer)
+ Criteria andDueIndexLessThan(Integer)
+ Criteria andDueIndexLessThanOrEqualTo(Integer)
+ Criteria andDueIndexIn(List<Integer>)
+ Criteria andDueIndexNotIn(List<Integer>)
+ Criteria andDueIndexBetween(Integer,Integer)
+ Criteria andDueIndexNotBetween(Integer,Integer)
+ Criteria andAdminIdIsNull()
+ Criteria andAdminIdIsNotNull()
+ Criteria andAdminIdEqualTo(Long)
+ Criteria andAdminIdNotEqualTo(Long)
+ Criteria andAdminIdGreaterThan(Long)
+ Criteria andAdminIdGreaterThanOrEqualTo(Long)
+ Criteria andAdminIdLessThan(Long)
+ Criteria andAdminIdLessThanOrEqualTo(Long)
+ Criteria andAdminIdIn(List<Long>)
+ Criteria andAdminIdNotIn(List<Long>)
+ Criteria andAdminIdBetween(Long,Long)
+ Criteria andAdminIdNotBetween(Long,Long)
+ Criteria andStartTimeIsNull()
+ Criteria andStartTimeIsNotNull()
+ Criteria andStartTimeEqualTo(Date)
+ Criteria andStartTimeNotEqualTo(Date)
+ Criteria andStartTimeGreaterThan(Date)
+ Criteria andStartTimeGreaterThanOrEqualTo(Date)
+ Criteria andStartTimeLessThan(Date)
+ Criteria andStartTimeLessThanOrEqualTo(Date)
+ Criteria andStartTimeIn(List<Date>)
+ Criteria andStartTimeNotIn(List<Date>)
+ Criteria andStartTimeBetween(Date,Date)
+ Criteria andStartTimeNotBetween(Date,Date)
+ Criteria andEndTimeIsNull()
+ Criteria andEndTimeIsNotNull()
+ Criteria andEndTimeEqualTo(Date)
+ Criteria andEndTimeNotEqualTo(Date)
+ Criteria andEndTimeGreaterThan(Date)
+ Criteria andEndTimeGreaterThanOrEqualTo(Date)
+ Criteria andEndTimeLessThan(Date)
+ Criteria andEndTimeLessThanOrEqualTo(Date)
+ Criteria andEndTimeIn(List<Date>)
+ Criteria andEndTimeNotIn(List<Date>)
+ Criteria andEndTimeBetween(Date,Date)
+ Criteria andEndTimeNotBetween(Date,Date)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.LoanDuesConfigExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanDuesConfigExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.common.TBHelper {
+ {static} boolean isTrio(String)
+ {static} boolean isTrio(Long)
+ {static} boolean isAop(Long)
+ {static} boolean isHso(Long)
+ {static} boolean isTraveloka(Long)
+ {static} boolean isTraveloka(String)
+ {static} boolean isGada(Long)
+ {static} boolean isSMP(Long)
+ {static} boolean isTravelokaPaylater(Long)
+ {static} boolean isRestock(Long)
+ {static} boolean isDaya(Long)
+ {static} boolean isTbOrder(Long)
+ {static} boolean isCalcLateFee(Long,int)
+ {static} boolean isCarryingFee(Long)
+ {static} boolean isUpfrontFee(Long)
+ {static} boolean isSupportRepaymentBack(Long)
+ {static} boolean isSupportDuesBack(Long)
+ {static} boolean isSupportPartRepayment(Long)
}
class com.welab.loan.finance.app.manager.credit.CreditMaxinstallCalculationManager {
- BackstageConfigService backstageConfigService
- ILoanUserRepay iLoanUserRepay
- BaseCreditUserLoanService baseCreditUserLoanService
- IQueryDuesService iQueryDuesService
- UserProfilesApprovalService userProfilesApprovalService
- BaseCreditUserAccountService baseCreditUserAccountService
- int randomTime()
+ BigDecimal getUserMaxInstallment(CreditUserAccountExt)
- BigDecimal getUserMaxInstallmentForCL(CreditUserAccountExt,Long)
+ BigDecimal getUserMaxInstallment(CreditUserAccountExt,Long)
+ BigDecimal calculationMaxInstall(BigDecimal,Long,String)
}
class com.welab.loan.finance.vo.FinanceRepaymentTrackVO {
- Long id
- String loanNumber
- Integer dueIndex
- Date repaymentAt
- Byte type
- String transId
- Long repaymentAmount
- Long operatorId
- Date createdAt
- Date updateAt
- Boolean isAdvance
}
interface com.welab.loan.finance.mapper.LoanOverdueInfoMapper {
~ long countByExample(LoanOverdueInfoExample)
~ int deleteByExample(LoanOverdueInfoExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanOverdueInfo)
~ int insertSelective(LoanOverdueInfo)
~ List<LoanOverdueInfo> selectByExample(LoanOverdueInfoExample)
~ LoanOverdueInfo selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanOverdueInfo,LoanOverdueInfoExample)
~ int updateByExample(LoanOverdueInfo,LoanOverdueInfoExample)
~ int updateByPrimaryKeySelective(LoanOverdueInfo)
~ int updateByPrimaryKey(LoanOverdueInfo)
~ List<LoanOverdueInfo> selectListByMinId(Long,int)
~ int countVatInit()
}
class com.welab.loan.finance.facade.merchant.PartnerServiceFacade {
- PartnerService partnerService
- JedisCluster jedisCluster
+ List<PartnerLogoVO> findPartnerLogos()
+ PartnerLogoVO findByOrigin(String)
}
interface com.welab.loan.finance.mapper.ext.NsQueryExtMapper {
~ List<NsLoanManagementVO> loanList(NsLoanListQry)
~ List<NsRepaymentVO> repaymentList(NsRepaymentListQry)
~ List<NsDueVO> dueList(NsDueListQry)
}
interface com.welab.loan.finance.mapper.LoanUserRepayDetailMapper {
~ long countByExample(LoanUserRepayDetailExample)
~ int deleteByExample(LoanUserRepayDetailExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanUserRepayDetail)
~ int insertSelective(LoanUserRepayDetail)
~ List<LoanUserRepayDetail> selectByExample(LoanUserRepayDetailExample)
~ LoanUserRepayDetail selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanUserRepayDetail,LoanUserRepayDetailExample)
~ int updateByExample(LoanUserRepayDetail,LoanUserRepayDetailExample)
~ int updateByPrimaryKeySelective(LoanUserRepayDetail)
~ int updateByPrimaryKey(LoanUserRepayDetail)
}
class com.welab.loan.finance.dto.cmd.tb.RestockDuesUpdateCmd {
- String loanNumber
- String secondProdCode
- String tenor
- Long amount
- String loanDate
}
class com.welab.loan.finance.dto.CessieLoanReqDTO {
- Long adminId
- String buyerName
- String buyerCode
- List<String> loanList
}
class com.welab.loan.finance.vo.UserBankcardRespVO {
- String loanTimeMsg
- boolean changeBindStatus
}
class com.welab.loan.finance.response.LoanDetailDueExtVo {
- String cardNumber
- Long repayment
- Long actualRepayment
- Date repaymentTime
+ String getCardNumber()
+ void setCardNumber(String)
+ Long getRepayment()
+ void setRepayment(Long)
+ Long getActualRepayment()
+ void setActualRepayment(Long)
+ Date getRepaymentTime()
+ void setRepaymentTime(Date)
}
class com.welab.loan.finance.app.manager.credit.activity.CreditAbTestUserCalculationManager {
- BaseCreditUserInfoService baseCreditUserInfoService
- BaseCreditActivityAbTestGroupUserRelationService baseCreditActivityAbTestGroupUserRelationService
- BaseCreditActivityAbTestService baseCreditActivityAbTestService
- BaseCreditActivityAbTestGroupUserTagRelationService baseCreditActivityTagService
- BaseCreditActivityAbTestGroupService baseCreditActivityAbTestGroupService
+ CreditActivityAbTestUserVo calculationAbtestUser(List<Long>)
+ CreditActivityAbTestUserVo calculationAbtestUserByTags(List<Long>,List<String>)
+ CreditActivityAbTestUserVo calculationAbtestUser(List<Integer>,List<String>)
+ CreditActivityAbTestUserVo buildTestUserData(CreditActivityAbTestGroupExt)
+ CreditActivityAbTestUserVo getAbTestUserVoByGroupInfo(Long,List<String>,Byte)
+ List<CreditActivityAbTestUserVo> getAbtestUserInfoForTags(CreditActivityAbTestExt)
+ CreditActivityAbTestUserVo getAbtestUserInfo(CreditActivityAbTest)
}
class com.welab.loan.finance.vo.TbDisbursementVO {
- {static} long serialVersionUID
- String partner
- String lendId
- Long orgId
- String transactionNumber
- String orderNo
- String productType
- String funder
- String loanNumber
- String secondProdCode
- String bankName
- String mobile
- Long amountFunded
- Long receivedAmount
- Long ad
- Long pv
- Long if_
- Long pf
- Long totalUpfrontFee
- Long channelFee
- String disbursementChannel
- String disbursementStatus
- Date disbursementTime
- String docId
- Long fundId
- String lendBatchNo
- String tenorMin
- String tenorMax
- Long userId
- String receiptAccount
- String partnerOrderNumber
- Long otherFee
- Long facilityFee
+ {static} Map getExportMapNew()
+ {static} Map getExportMap()
}
class com.welab.loan.finance.model.LoanRepayment {
- Long id
- Long userId
- String transId
- String orderNo
- String loanNumber
- Integer dueIndex
- Long repaymentAmount
- Date createdAt
- Date updateAt
+ <<Create>> LoanRepayment()
+ <<Create>> LoanRepayment(SingleRepayDTO)
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ String getTransId()
+ void setTransId(String)
+ String getOrderNo()
+ void setOrderNo(String)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Integer getDueIndex()
+ void setDueIndex(Integer)
+ Long getRepaymentAmount()
+ void setRepaymentAmount(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
}
class com.welab.loan.finance.job.AlfamartHandel {
- String SPILD
- FinanceTradingExtMapper financeTradingExtMapper
- FinanceLendMapper financeLendMapper
- FundEnum fundEnum
+ File exportData(String,String)
+ File exportData(String,String,FundEnum)
+ List quaryList(String)
+ FinanceTradingExt transform(Object)
+ LinkedHashMap getExcelHead()
+ String getSubject(String)
+ void setEmailUser()
+ void updateTransferStatus(String)
}
class com.welab.loan.finance.service.business.lend.maumodal.MaumodalLendServiceImpl {
+ OrgIdEnum getProductId()
}
class com.welab.loan.finance.model.CreditAccountTrackExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditAccountTrackExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditAccountTrackExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andSumAvailabeAmountIsNull()
+ Criteria andSumAvailabeAmountIsNotNull()
+ Criteria andSumAvailabeAmountEqualTo(Long)
+ Criteria andSumAvailabeAmountNotEqualTo(Long)
+ Criteria andSumAvailabeAmountGreaterThan(Long)
+ Criteria andSumAvailabeAmountGreaterThanOrEqualTo(Long)
+ Criteria andSumAvailabeAmountLessThan(Long)
+ Criteria andSumAvailabeAmountLessThanOrEqualTo(Long)
+ Criteria andSumAvailabeAmountIn(List<Long>)
+ Criteria andSumAvailabeAmountNotIn(List<Long>)
+ Criteria andSumAvailabeAmountBetween(Long,Long)
+ Criteria andSumAvailabeAmountNotBetween(Long,Long)
+ Criteria andAvailabeAmountIsNull()
+ Criteria andAvailabeAmountIsNotNull()
+ Criteria andAvailabeAmountEqualTo(Long)
+ Criteria andAvailabeAmountNotEqualTo(Long)
+ Criteria andAvailabeAmountGreaterThan(Long)
+ Criteria andAvailabeAmountGreaterThanOrEqualTo(Long)
+ Criteria andAvailabeAmountLessThan(Long)
+ Criteria andAvailabeAmountLessThanOrEqualTo(Long)
+ Criteria andAvailabeAmountIn(List<Long>)
+ Criteria andAvailabeAmountNotIn(List<Long>)
+ Criteria andAvailabeAmountBetween(Long,Long)
+ Criteria andAvailabeAmountNotBetween(Long,Long)
+ Criteria andInferIncomeIsNull()
+ Criteria andInferIncomeIsNotNull()
+ Criteria andInferIncomeEqualTo(Long)
+ Criteria andInferIncomeNotEqualTo(Long)
+ Criteria andInferIncomeGreaterThan(Long)
+ Criteria andInferIncomeGreaterThanOrEqualTo(Long)
+ Criteria andInferIncomeLessThan(Long)
+ Criteria andInferIncomeLessThanOrEqualTo(Long)
+ Criteria andInferIncomeIn(List<Long>)
+ Criteria andInferIncomeNotIn(List<Long>)
+ Criteria andInferIncomeBetween(Long,Long)
+ Criteria andInferIncomeNotBetween(Long,Long)
+ Criteria andTagIsNull()
+ Criteria andTagIsNotNull()
+ Criteria andTagEqualTo(String)
+ Criteria andTagNotEqualTo(String)
+ Criteria andTagGreaterThan(String)
+ Criteria andTagGreaterThanOrEqualTo(String)
+ Criteria andTagLessThan(String)
+ Criteria andTagLessThanOrEqualTo(String)
+ Criteria andTagLike(String)
+ Criteria andTagNotLike(String)
+ Criteria andTagIn(List<String>)
+ Criteria andTagNotIn(List<String>)
+ Criteria andTagBetween(String,String)
+ Criteria andTagNotBetween(String,String)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andGroupIdIsNull()
+ Criteria andGroupIdIsNotNull()
+ Criteria andGroupIdEqualTo(String)
+ Criteria andGroupIdNotEqualTo(String)
+ Criteria andGroupIdGreaterThan(String)
+ Criteria andGroupIdGreaterThanOrEqualTo(String)
+ Criteria andGroupIdLessThan(String)
+ Criteria andGroupIdLessThanOrEqualTo(String)
+ Criteria andGroupIdLike(String)
+ Criteria andGroupIdNotLike(String)
+ Criteria andGroupIdIn(List<String>)
+ Criteria andGroupIdNotIn(List<String>)
+ Criteria andGroupIdBetween(String,String)
+ Criteria andGroupIdNotBetween(String,String)
+ Criteria andCreditTypeIsNull()
+ Criteria andCreditTypeIsNotNull()
+ Criteria andCreditTypeEqualTo(String)
+ Criteria andCreditTypeNotEqualTo(String)
+ Criteria andCreditTypeGreaterThan(String)
+ Criteria andCreditTypeGreaterThanOrEqualTo(String)
+ Criteria andCreditTypeLessThan(String)
+ Criteria andCreditTypeLessThanOrEqualTo(String)
+ Criteria andCreditTypeLike(String)
+ Criteria andCreditTypeNotLike(String)
+ Criteria andCreditTypeIn(List<String>)
+ Criteria andCreditTypeNotIn(List<String>)
+ Criteria andCreditTypeBetween(String,String)
+ Criteria andCreditTypeNotBetween(String,String)
+ Criteria andX1IsNull()
+ Criteria andX1IsNotNull()
+ Criteria andX1EqualTo(Long)
+ Criteria andX1NotEqualTo(Long)
+ Criteria andX1GreaterThan(Long)
+ Criteria andX1GreaterThanOrEqualTo(Long)
+ Criteria andX1LessThan(Long)
+ Criteria andX1LessThanOrEqualTo(Long)
+ Criteria andX1In(List<Long>)
+ Criteria andX1NotIn(List<Long>)
+ Criteria andX1Between(Long,Long)
+ Criteria andX1NotBetween(Long,Long)
+ Criteria andX2IsNull()
+ Criteria andX2IsNotNull()
+ Criteria andX2EqualTo(Long)
+ Criteria andX2NotEqualTo(Long)
+ Criteria andX2GreaterThan(Long)
+ Criteria andX2GreaterThanOrEqualTo(Long)
+ Criteria andX2LessThan(Long)
+ Criteria andX2LessThanOrEqualTo(Long)
+ Criteria andX2In(List<Long>)
+ Criteria andX2NotIn(List<Long>)
+ Criteria andX2Between(Long,Long)
+ Criteria andX2NotBetween(Long,Long)
+ Criteria andX3IsNull()
+ Criteria andX3IsNotNull()
+ Criteria andX3EqualTo(Long)
+ Criteria andX3NotEqualTo(Long)
+ Criteria andX3GreaterThan(Long)
+ Criteria andX3GreaterThanOrEqualTo(Long)
+ Criteria andX3LessThan(Long)
+ Criteria andX3LessThanOrEqualTo(Long)
+ Criteria andX3In(List<Long>)
+ Criteria andX3NotIn(List<Long>)
+ Criteria andX3Between(Long,Long)
+ Criteria andX3NotBetween(Long,Long)
+ Criteria andX4IsNull()
+ Criteria andX4IsNotNull()
+ Criteria andX4EqualTo(Long)
+ Criteria andX4NotEqualTo(Long)
+ Criteria andX4GreaterThan(Long)
+ Criteria andX4GreaterThanOrEqualTo(Long)
+ Criteria andX4LessThan(Long)
+ Criteria andX4LessThanOrEqualTo(Long)
+ Criteria andX4In(List<Long>)
+ Criteria andX4NotIn(List<Long>)
+ Criteria andX4Between(Long,Long)
+ Criteria andX4NotBetween(Long,Long)
+ Criteria andX6IsNull()
+ Criteria andX6IsNotNull()
+ Criteria andX6EqualTo(Long)
+ Criteria andX6NotEqualTo(Long)
+ Criteria andX6GreaterThan(Long)
+ Criteria andX6GreaterThanOrEqualTo(Long)
+ Criteria andX6LessThan(Long)
+ Criteria andX6LessThanOrEqualTo(Long)
+ Criteria andX6In(List<Long>)
+ Criteria andX6NotIn(List<Long>)
+ Criteria andX6Between(Long,Long)
+ Criteria andX6NotBetween(Long,Long)
+ Criteria andX12IsNull()
+ Criteria andX12IsNotNull()
+ Criteria andX12EqualTo(Long)
+ Criteria andX12NotEqualTo(Long)
+ Criteria andX12GreaterThan(Long)
+ Criteria andX12GreaterThanOrEqualTo(Long)
+ Criteria andX12LessThan(Long)
+ Criteria andX12LessThanOrEqualTo(Long)
+ Criteria andX12In(List<Long>)
+ Criteria andX12NotIn(List<Long>)
+ Criteria andX12Between(Long,Long)
+ Criteria andX12NotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.CreditAccountTrackExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.CreditAccountTrackExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.rabbitmq.syn.LateFeeModifyConsumer {
- IModLateService modLateService
+ void onMessage(Message)
+ void execute(List<ModLateReqDTO>)
}
class com.welab.loan.finance.model.FinanceUserAccountExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FinanceUserAccountExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FinanceUserAccountExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andBalanceAmountIsNull()
+ Criteria andBalanceAmountIsNotNull()
+ Criteria andBalanceAmountEqualTo(Long)
+ Criteria andBalanceAmountNotEqualTo(Long)
+ Criteria andBalanceAmountGreaterThan(Long)
+ Criteria andBalanceAmountGreaterThanOrEqualTo(Long)
+ Criteria andBalanceAmountLessThan(Long)
+ Criteria andBalanceAmountLessThanOrEqualTo(Long)
+ Criteria andBalanceAmountIn(List<Long>)
+ Criteria andBalanceAmountNotIn(List<Long>)
+ Criteria andBalanceAmountBetween(Long,Long)
+ Criteria andBalanceAmountNotBetween(Long,Long)
}
class com.welab.loan.finance.model.FinanceUserAccountExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FinanceUserAccountExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.test.vat.VatOverdueFullInitCmdExeTest {
- VatOverdueFullInitCmdExe vatOverdueFullInitCmdExe
+ void excute()
}
class com.welab.loan.finance.vo.LoanNumberAmountDTO {
- Long amount
- Long cplanAmount
- String loanNumber
- BigDecimal rate
- Long carryFee
}
class com.welab.loan.finance.model.CreditUserTagConfigExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditUserTagConfigExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditUserTagConfigExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andAccountTypeIsNull()
+ Criteria andAccountTypeIsNotNull()
+ Criteria andAccountTypeEqualTo(String)
+ Criteria andAccountTypeNotEqualTo(String)
+ Criteria andAccountTypeGreaterThan(String)
+ Criteria andAccountTypeGreaterThanOrEqualTo(String)
+ Criteria andAccountTypeLessThan(String)
+ Criteria andAccountTypeLessThanOrEqualTo(String)
+ Criteria andAccountTypeLike(String)
+ Criteria andAccountTypeNotLike(String)
+ Criteria andAccountTypeIn(List<String>)
+ Criteria andAccountTypeNotIn(List<String>)
+ Criteria andAccountTypeBetween(String,String)
+ Criteria andAccountTypeNotBetween(String,String)
+ Criteria andOrderValueIsNull()
+ Criteria andOrderValueIsNotNull()
+ Criteria andOrderValueEqualTo(Integer)
+ Criteria andOrderValueNotEqualTo(Integer)
+ Criteria andOrderValueGreaterThan(Integer)
+ Criteria andOrderValueGreaterThanOrEqualTo(Integer)
+ Criteria andOrderValueLessThan(Integer)
+ Criteria andOrderValueLessThanOrEqualTo(Integer)
+ Criteria andOrderValueIn(List<Integer>)
+ Criteria andOrderValueNotIn(List<Integer>)
+ Criteria andOrderValueBetween(Integer,Integer)
+ Criteria andOrderValueNotBetween(Integer,Integer)
+ Criteria andUserTagIsNull()
+ Criteria andUserTagIsNotNull()
+ Criteria andUserTagEqualTo(String)
+ Criteria andUserTagNotEqualTo(String)
+ Criteria andUserTagGreaterThan(String)
+ Criteria andUserTagGreaterThanOrEqualTo(String)
+ Criteria andUserTagLessThan(String)
+ Criteria andUserTagLessThanOrEqualTo(String)
+ Criteria andUserTagLike(String)
+ Criteria andUserTagNotLike(String)
+ Criteria andUserTagIn(List<String>)
+ Criteria andUserTagNotIn(List<String>)
+ Criteria andUserTagBetween(String,String)
+ Criteria andUserTagNotBetween(String,String)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Integer)
+ Criteria andStatusNotEqualTo(Integer)
+ Criteria andStatusGreaterThan(Integer)
+ Criteria andStatusGreaterThanOrEqualTo(Integer)
+ Criteria andStatusLessThan(Integer)
+ Criteria andStatusLessThanOrEqualTo(Integer)
+ Criteria andStatusIn(List<Integer>)
+ Criteria andStatusNotIn(List<Integer>)
+ Criteria andStatusBetween(Integer,Integer)
+ Criteria andStatusNotBetween(Integer,Integer)
+ Criteria andMinAmountIsNull()
+ Criteria andMinAmountIsNotNull()
+ Criteria andMinAmountEqualTo(Long)
+ Criteria andMinAmountNotEqualTo(Long)
+ Criteria andMinAmountGreaterThan(Long)
+ Criteria andMinAmountGreaterThanOrEqualTo(Long)
+ Criteria andMinAmountLessThan(Long)
+ Criteria andMinAmountLessThanOrEqualTo(Long)
+ Criteria andMinAmountIn(List<Long>)
+ Criteria andMinAmountNotIn(List<Long>)
+ Criteria andMinAmountBetween(Long,Long)
+ Criteria andMinAmountNotBetween(Long,Long)
+ Criteria andMaxAmountIsNull()
+ Criteria andMaxAmountIsNotNull()
+ Criteria andMaxAmountEqualTo(Long)
+ Criteria andMaxAmountNotEqualTo(Long)
+ Criteria andMaxAmountGreaterThan(Long)
+ Criteria andMaxAmountGreaterThanOrEqualTo(Long)
+ Criteria andMaxAmountLessThan(Long)
+ Criteria andMaxAmountLessThanOrEqualTo(Long)
+ Criteria andMaxAmountIn(List<Long>)
+ Criteria andMaxAmountNotIn(List<Long>)
+ Criteria andMaxAmountBetween(Long,Long)
+ Criteria andMaxAmountNotBetween(Long,Long)
+ Criteria andUpdateByIsNull()
+ Criteria andUpdateByIsNotNull()
+ Criteria andUpdateByEqualTo(Long)
+ Criteria andUpdateByNotEqualTo(Long)
+ Criteria andUpdateByGreaterThan(Long)
+ Criteria andUpdateByGreaterThanOrEqualTo(Long)
+ Criteria andUpdateByLessThan(Long)
+ Criteria andUpdateByLessThanOrEqualTo(Long)
+ Criteria andUpdateByIn(List<Long>)
+ Criteria andUpdateByNotIn(List<Long>)
+ Criteria andUpdateByBetween(Long,Long)
+ Criteria andUpdateByNotBetween(Long,Long)
+ Criteria andCreateByIsNull()
+ Criteria andCreateByIsNotNull()
+ Criteria andCreateByEqualTo(Long)
+ Criteria andCreateByNotEqualTo(Long)
+ Criteria andCreateByGreaterThan(Long)
+ Criteria andCreateByGreaterThanOrEqualTo(Long)
+ Criteria andCreateByLessThan(Long)
+ Criteria andCreateByLessThanOrEqualTo(Long)
+ Criteria andCreateByIn(List<Long>)
+ Criteria andCreateByNotIn(List<Long>)
+ Criteria andCreateByBetween(Long,Long)
+ Criteria andCreateByNotBetween(Long,Long)
}
class com.welab.loan.finance.model.CreditUserTagConfigExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.CreditUserTagConfigExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.app.command.custom.CustomRepayCmdExe {
- BaseLoanService baseLoanService
- LoanApplyPlansMapper loanApplyPlansMapper
- BasePayService basePayService
- IQueryDuesService queryDuesService
- LoanCouponMapper loanCouponMapper
- LoanCouponDetailMapper loanCouponDetailMapper
- LoanCessieInfoService loanCessieInfoService
+ Response excute(CustomRepayCmd)
+ Response check(CustomRepayCmd)
- LoanCoupon findLoanCoupon(String)
- List<LoanCouponDetail> findAllUserCouponByStatus(String,List<Byte>)
}
class com.welab.loan.finance.service.core.FinanceUserBankcardLogService {
- FinanceUserBankcardLogMapper financeUserBankcardLogMapper
+ void save(FinanceUserBankcardLog)
}
class com.welab.loan.finance.app.manager.dues.VatManager {
- BaseDuesService baseDuesService
- VatCostProvider vatCostProvider
+ void generateLatFeeVat(Dues)
+ void generateCarryFeeVat(String,Integer)
}
class com.welab.loan.finance.dto.FinanceFundRateConfigVO {
- {static} long serialVersionUID
- Long adminId
- Long id
- Long fundId
- String fundName
- Byte fundInterestType
- BigDecimal fundInterestRate
- String fixFundInterest
- BigDecimal serviceFeeRate
- BigDecimal fundProvisionRate
- Long productRateId
- String extend
}
class com.welab.loan.finance.service.impl.CreditUserTagRuleServiceImpl {
- BaseCreditUserTagRuleService baseCreditUserTagRuleService
+ Response<List<String>> getCanIncreaseTags()
}
class com.welab.loan.finance.model.DuesRepayUpdateRecord {
- Long id
- String loanNumber
- String docId
- Long operatorAdminId
- Integer status
- Date createdAt
- Date updatedAt
- {static} long serialVersionUID
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getDocId()
+ void setDocId(String)
+ Long getOperatorAdminId()
+ void setOperatorAdminId(Long)
+ Integer getStatus()
+ void setStatus(Integer)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String toString()
}
interface com.welab.loan.finance.service.LoanUserTelService {
~ Response<Integer> loanUserTelMod(Long,String)
}
class com.welab.loan.finance.dto.TryRepayCPlanLoanDTO {
- long nextTotalAmount
- long totalAmount
- List<DuesDto> deductDueList
- Integer deductDueIndex
- long planAmount
- List<DuesDto> nextDueList
- String loanNumber
}
class com.welab.loan.finance.service.core.BaseCreditUserAccountDetailService {
- CreditUserAccountDetailMapper creditUserAccountDetailMapper
+ boolean save(CreditUserAccountDetail)
+ List<CreditUserAccountDetail> findList(Long)
}
class com.welab.loan.finance.service.credit.CreditLoanAmountConfigServiceImpl {
- BackstageConfigService backstageConfigService
- JedisCluster jedisCluster
- BaseCreditUserTagService baseCreditUserTagService
- CreditActivityAbTestManager creditActivityAbTestManager
- CreditUserAccountInfoService creditUserAccountInfoService
- CreditUserAccountService creditUserAccountService
- Map<String,JSONObject> creditConfigMap
- String ASTRA_QUOTA_CALCULATION_PRO_CODE
- String XJUMBO_CODE
- String JUMBO_CODE
- String NON_ASTRA_QUOTA_CALCULATION_PRO_CODE
- String PAYLATER_QUOTA_CALCULATION_PRO_CODE
- String PAYLATER_XJUMBO_CODE
- Set<String> proCodeSet
- String ASTRA_TAG
+ TagProductVO getConfig(CreditUserAccountExt,String,String,String,String,String)
+ TagProductVO getAbtestConfig(CreditUserAccountExt,String,String,String,String,String)
- int randomTime()
- BigDecimal getServiceFeeRatio(String,String,String,JSONObject)
+ List<TagProductVO> getCreditConfig(String,String)
+ List<TagProductVO> getCreditConfig(CreditUserAccountExt)
+ JSONObject mergeJsonObject(CreditUserAccountExt,JSONObject)
+ CreditUserAccountExt getAbTestConfig(CreditUserAccountExt)
+ JSONObject getTagConfigCache(String,String)
+ TagProductVO getProduct(CreditUserAccountExt,String,String,Long)
+ TagProductVO findProduct(int,int,List<TagProductVO>,Long)
+ TagProductVO findProductForMaxAmount(int,int,List<TagProductVO>,Long)
+ String getTenor(String)
+ List<TagProductVO> getStepProductListForAddCredit(String,String,String)
+ List<TagProductVO> getStepProductList(CreditUserAccountExt,CreditExt)
- String getAbTestInstallmentKeyString(CreditExt,Long)
+ Long getMaxInstallment(Long,TagProductVO)
+ List<TagProductVO> updateProductStepList(CreditExt)
+ List<TagProductVO> createProductStepListAbTest(Long,String,TagProductVO,JSONObject,String)
- TagProductVO buildStep(String,String,TagProductVO,long)
+ Long getLowIDR(String,String)
}
class com.welab.loan.finance.app.command.tb.lend.lend.impl.TrioFinanceLendBuilder {
- RateService rateService
- VatCostProvider vatCostProvider
+ void doBuild(FinanceLend,LoanDetail)
- Long doCalcFacilityFee(LoanDetail)
- BigDecimal getFacilityRate(LoanDetail)
# String getPrefix()
+ String getKey()
}
class com.welab.loan.finance.model.FinanceUserBankcard {
- Long id
- Long orgId
- Date createAt
- Date updateAt
- Long userId
- String userName
- String bankAccountNumber
- String bankCode
- String bankAccountHolderName
- Byte isUsed
- String bankName
- Byte cardType
+ Long getId()
+ void setId(Long)
+ Long getOrgId()
+ void setOrgId(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ Long getUserId()
+ void setUserId(Long)
+ String getUserName()
+ void setUserName(String)
+ String getBankAccountNumber()
+ void setBankAccountNumber(String)
+ String getBankCode()
+ void setBankCode(String)
+ String getBankAccountHolderName()
+ void setBankAccountHolderName(String)
+ Byte getIsUsed()
+ void setIsUsed(Byte)
+ String getBankName()
+ void setBankName(String)
+ Byte getCardType()
+ void setCardType(Byte)
}
class com.welab.loan.finance.app.command.tb.repayment.notify.TbRepaymentNotifyService {
- BaseRabbitTemplate baseRabbitTemplate
+ void doNotify(TbRepaymentNotifyDTO)
}
interface com.welab.loan.finance.mapper.LoanDetailMapper {
~ int countByExample(LoanDetailExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanDetail)
~ int insertSelective(LoanDetail)
~ List<LoanDetail> selectByExample(LoanDetailExample)
~ LoanDetail selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanDetail,LoanDetailExample)
~ int updateByExample(LoanDetail,LoanDetailExample)
~ int updateByPrimaryKeySelective(LoanDetail)
~ int updateByPrimaryKey(LoanDetail)
}
class com.welab.loan.finance.service.business.trade.BaseTradeService {
- PayService payService
+ Response<Void> asyncTransfer(TransferDto)
}
class com.welab.loan.finance.model.FinanceError {
- Long id
- Long orgId
- String seqNum
- String type
- String loanNum
- String source
- String remark
- Date createdAt
- String isHander
- String result
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getOrgId()
+ void setOrgId(Long)
+ String getSeqNum()
+ void setSeqNum(String)
+ String getType()
+ void setType(String)
+ String getLoanNum()
+ void setLoanNum(String)
+ String getSource()
+ void setSource(String)
+ String getRemark()
+ void setRemark(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ String getIsHander()
+ void setIsHander(String)
+ String getResult()
+ void setResult(String)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.job.PaylaterLendReversalJob {
+ {static} String ORDER_PREFIX
- BaseFinanceLendService financeLendService
# String getOrderPrefix()
# ReversalBill buildReversalBill(ReversalGroup)
}
class com.welab.loan.finance.model.LoanUvfTrade {
- Long id
- Date createdAt
- Date updatedAt
- String loanNumber
- String debit
- String credit
- Date tradeAt
- String orderNo
- String debitCode
- String creditCode
- String payTradeId
- String remark
- Integer status
- Integer tradeType
- Long handlingFee
- Long tradeMoney
- String relationId
- Boolean deleted
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getDebit()
+ void setDebit(String)
+ String getCredit()
+ void setCredit(String)
+ Date getTradeAt()
+ void setTradeAt(Date)
+ String getOrderNo()
+ void setOrderNo(String)
+ String getDebitCode()
+ void setDebitCode(String)
+ String getCreditCode()
+ void setCreditCode(String)
+ String getPayTradeId()
+ void setPayTradeId(String)
+ String getRemark()
+ void setRemark(String)
+ Integer getStatus()
+ void setStatus(Integer)
+ Integer getTradeType()
+ void setTradeType(Integer)
+ Long getHandlingFee()
+ void setHandlingFee(Long)
+ Long getTradeMoney()
+ void setTradeMoney(Long)
+ String getRelationId()
+ void setRelationId(String)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
}
class com.welab.loan.finance.rabbitmq.syn.SynDuesConsumer {
- BaseFinanceDuesService baseFinanceDuesService
+ void onMessage(Message)
+ void execute(List<SynDuesDTO>)
}
class com.welab.loan.finance.app.base.BaseLoanApplyRepaymentService {
- LoanApplyRepaymentMapper applyRepaymentMapper
+ boolean save(LoanApplyRepayment)
+ boolean hasCollectionPlan(List<String>)
+ void update(LoanApplyRepayment)
+ void updateById(LoanApplyRepayment)
+ void updateByExampleSelective(LoanApplyRepayment,LoanApplyRepaymentExample)
+ LoanApplyRepayment findLoanApplyRepayment(String)
+ LoanApplyRepayment findLoanApplyRepayment(String,ApplyRepaymentTypeEnum,ApplyRepaymentStatusEnum)
+ long countLoanApplyRepayment(String,Date)
+ long countLoanApplyRepayment(String,ApplyRepaymentTypeEnum,Date)
+ List<LoanApplyRepayment> findUnUseApplyRepayment(Date)
}
class com.welab.loan.finance.model.CreditBigFieldRelationExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditBigFieldRelationExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditBigFieldRelationExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.CreditBigFieldRelationExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.CreditBigFieldRelationExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.dto.ApplyPlanDTO {
- String loanNumber
- Integer dueIndex
- PlansTypeEnum plansTypeEnum
- Integer day
- Long userId
- Integer reason
- Long customAmount
- Double disLateFeeRatio
- Double disPrincipalRatio
- Double disDownPaymentRatio
- Long downPaymentAmount
- Long approvedAmount
- String tenor
- Date expireDate
- String optName
- Boolean isLong
- String oldPeriod
- Boolean isJumpCheck
- Boolean isEPlanV2
- Byte triggerType
- Long minRepaymentAmount
}
class com.welab.loan.finance.dto.plan.CalEPlanDetailAmountDTO {
- {static} long serialVersionUID
- String loanNumber
- Long amountFundedAmount
- Long interestFunderAmount
- Long platformFeeAmount
- Long provisionFeeAmount
- Long lateFeeAmount
- Long totalOutstandingFeeAmount
- Long nextPaymentAmount
- Long newLoanPrincipalAmount
- Long totalMinRepaymentAmount
}
class com.welab.loan.finance.facade.sun.PartnerOrderServiceFacade {
- IPartnerOrderService iPartnerOrderService
+ Map<String,String> getPartnerOrderNo(List<String>)
}
class com.welab.loan.finance.job.CreditAccountRecordMigrateJob {
- WelabSeaDynamicDbService welabSeaDynamicDbService
- JdbcTemplate jdbcTemplate
+ void execute(ShardingContext)
+ void runMigrate()
}
class com.welab.loan.finance.app.manager.FinanceTradingManager {
+ FinanceTrading initTrading(long,String,String,long,long)
}
class com.welab.loan.finance.vo.request.LendReversalExcelVo {
- String loanNumber
- String reason
}
class com.welab.loan.finance.app.command.plan.CPlanCalculationCmdExe {
- BaseDuesService baseDuesService
- CPlanManager cPlanManager
- MaucashRepaymentServiceImpl maucashRepaymentService
- PlanService planService
- BaseLoanDetailService baseLoanDetailService
- LoanApplyPlansExtMapper loanApplyPlansExtMapper
- PartnerServiceFacade partnerServiceFacade
- IRepaymentService repaymentService
- BaseLoanApplyPlansService baseLoanApplyPlansService
- Integer remainder
+ Response tryCPlanForCollection(TryCPlanParamDTO,boolean)
- List<Dues> generateCPlanDues(String,Long,Double)
+ Response<TryRepayCPlanLoanDetailDto> tryRepayCPlanLoanDetail(String,Long)
+ Response tryCPlanForUser(Long)
+ MinPayAmountDetailDto buildMinPayAmountDetailDto(List<LoanApplyPlansExt>)
}
class com.welab.loan.finance.service.impl.UserTransServiceImpl {
- BaseRepaymentTrack baseRepaymentTrack
+ Response<PageInfo<RepaymentTrackVo>> findUserTransByPage(Long,int,int)
+ Response<PageInfo<RepaymentTrackVo>> findUserTransByPage(UserTransDTO)
+ Response<AmountExtVo> findUserTransByTransId(String,boolean)
}
class com.welab.loan.finance.dto.cmd.QueryCustomRangeCmd {
- String loanNumber
}
interface com.welab.loan.finance.mapper.ext.CreditUserTagRuleDelayTriggerExtMapper {
~ List<CreditUserTagRuleDelayTrigger> getDelayTriggerList(Map<String,Object>)
}
class com.welab.loan.finance.vo.TagProductVO {
- {static} long serialVersionUID
- Long stepSize
- String tenor
- String tenorMin
- String tenorMax
- Long tenorStepSize
- Long minAmount
- String productType
- Long maxAmount
- String secondProductCode
- BigDecimal serviceFeeRatio
- Long installment
- Boolean status
- Boolean isAvailable
- String controlGroupSecondProdCode
- Byte insuranceSelectType
- Long insuranceAmountCoverage
- Long insurancePremiumAmount
- Byte insuranceConfigStatus
- String insuranceName
}
class com.welab.loan.finance.model.mongo.tbuser.BaseUserDoc {
- String agreementNo
- String agreementDate
- String bankAccount
}
class com.welab.loan.finance.dto.cmd.tb.RestockUserCmd {
}
class com.welab.loan.finance.test.ProductRateConfigTest {
- ProductConfigService productConfigService
+ void getRate()
}
class com.welab.loan.finance.model.FinanceUserAccount {
- Long id
- Date createAt
- Date updateAt
- Long userId
- Long amount
- Long balanceAmount
+ Long getId()
+ void setId(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ Long getUserId()
+ void setUserId(Long)
+ Long getAmount()
+ void setAmount(Long)
+ Long getBalanceAmount()
+ void setBalanceAmount(Long)
}
class com.welab.loan.finance.test.FundRefundTest {
- TrackService trackService
+ void findTrackByTime()
+ void findFastPayTrackByTime()
+ void findPayTrackByTime()
+ void findPayTrackForFaspayFeeBankByTime()
+ void findTrackDetailByTime()
+ void findFastPayTrackDetailByTime()
}
class com.welab.loan.finance.service.impl.LendServiceImpl {
- PayService payService
- BaseUserBankCardService baseUserBankCardService
- BaseLoanService baseLoanService
- LendBusiService lendBusiService
- BaseFinanceLendService financeLendService
- BaseFinanceError baseFinanceError
- FundService fundService
- BaseLoanCodeService baseLoanCodeService
- ApplicationService applicationService
# FundAccountInfoService fundAccountInfoService
# JedisCluster redisClient
- BaseFinanceConfigService financeConfigService
- EPlanService ePlanService
- BaseLoanPlansRelationService baseLoanPlansRelationService
- BaseRabbitTemplate rabbitTemplate
- BaseUserAccountService baseUserAccountService
- BaseCreditUserAccountService baseCreditUserAccountService
- CreditUserAccountServiceImpl creditUserAccountServiceImpl
- RebookAmountService rebookAmountService
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- ApolloUtils apolloUtils
- MessageProducer messageProducer
+ Response sign(SignDTO)
+ Response signV2(SignDTO)
+ Response sendLend(String,TypeEnum)
- LendServiceImpl getThis()
+ Response sendLendTranscational(String,TypeEnum)
- boolean isThirdPartSign(String)
+ void beforeSignByDdm(LoanDetail)
+ Response<FinanceLendVo> queryLend(String)
+ BigDecimal findReceivedAmountByDdm(LoanDetail)
+ Response errorHander(Long)
+ Response<String> callLend(String,Long)
+ FundAccountInfoDTO matchFund(Long,String)
+ void asyncPaying(LendSaveReq,String)
+ void asyncCorePaying(PayingDto)
- void updatePayStatus(Long,String,FinanceLend,String)
+ Response<String> queryTransIdByLoanNum(String)
+ Response<List<LendStaticExtVo>> findLendStatic(String,String)
+ Response<PayingVO> getAlfmartCode(String,Long,Long)
+ Response<Long> findUnCloseCreditTotalAmount(String,String)
+ Response<Void> receiveLoan(String)
}
interface com.welab.loan.finance.mapper.LoanUvfDetailMapper {
~ long countByExample(LoanUvfDetailExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanUvfDetail)
~ int insertSelective(LoanUvfDetail)
~ List<LoanUvfDetail> selectByExample(LoanUvfDetailExample)
~ LoanUvfDetail selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanUvfDetail,LoanUvfDetailExample)
~ int updateByExample(LoanUvfDetail,LoanUvfDetailExample)
~ int updateByPrimaryKeySelective(LoanUvfDetail)
~ int updateByPrimaryKey(LoanUvfDetail)
}
class com.welab.loan.finance.service.core.BaseLoanDetailExtendService {
- LoanDetailExtendMapper loanDetailExtendMapper
- LoanDetailExtendExtMapper loanDetailExtendExtMapper
+ int insert(LoanDetailExtend)
+ LoanDetailExtend selectByPrimaryKey(Long)
+ List<LoanDetailExtend> selectByExample(LoanDetailExtendExample)
+ LoanDetailExtend findByLoanNum(String)
+ List<LoanDetailExtend> findListByLoanNum(List<String>)
+ long getPremiumFee(LoanDetailExtend)
+ void updateMerchant(String,String)
+ int updateByKey(LoanDetailExtend)
+ int saveRecord(LoanDetailExtend)
+ QuickUseCreditVO findUseCreditVOByLoanNum(String)
}
class com.welab.loan.finance.controller.FinanceController {
- LoanService loanService
- LendService lendService
- BaseFinanceLendService baseFinanceLendService
- BaseUserAccountDetailService baseUserAccountDetailService
- FinanceUserBankcardSevice financeUserBankcardSevice
- BaseUserBankCardService baseUserBankCardService
- CustomerService customerService
- BaseFinanceError baseFinanceError
- BaseLoanService baseLoanService
- BaseFinanceLendService baseLendService
- BaseFinanceExport baseFinanceExport
- GatewayTaskService gatewayTaskService
- BankConfigService bankConfigService
- RepaymentBusiService repaymentBusiService
- FundService fundService
- ProductService productService
- ProductConfigServiceFacade productConfigServiceFacade
- BaseFinanceTrading baseFinanceTrading
- ConfigsService configsService
# JedisCluster redisClient
- ITaskService iTaskService
- ReversalService reversalService
- LendReversalImportService lendReversalImportService
- PayTaskManager payTaskManager
- SignMethodManager signMethodManager
- Boolean reversalSwitch
- int maxDays
+ Response loanList(Long,String,LoanBackDto)
+ Response loanListExport(Long,String,LoanBackDto)
+ Response loanDetail(Long,String)
+ Response loanConfig(String)
+ Response disbursementList(Long,String,FinanceLendBackDto)
+ Response disbursementConfig(String)
- void setSecondProductCode(String,Map<String,Object>)
+ Response disbursementExport(Long,String,FinanceLendBackDto)
+ Response repaymentTrackList(Long,String,RepaymentTracBackDto)
+ Response<String> uploadReversalExcel(Long,MultipartFile,String)
+ Response<String> uploadLendReversalExcel(Long,MultipartFile)
+ {static} Response repaymentTrackList(Long,Long,RepaymentTracBackDto,Boolean)
+ Response repaymentExport(Long,String,RepaymentTracBackDto,HttpServletResponse)
+ {static} Response repaymentExport(Long,Long,RepaymentTracBackDto,HttpServletResponse,Boolean)
+ Response repaymentList(DuesBackDto)
+ Response repaymentConfig(String)
+ List<Map<String,Object>> getBankCodeList()
+ Response customerList(QueryUserProfilesDTOExt)
+ Response TbCustomerList(TbQueryUserDTO)
+ Response tbPartnerList()
+ Response customerLoanDetail(CustomerLoanBackDto)
+ Response customerTransList(CustomerLoanBackDto)
+ Response<FinanceUserBankcard> getBankCard(Long)
+ Response<Boolean> checkBankCard(Long,CheckBankCardDto)
+ Response<PageInfo<FinanceError>> errorList(String,FinanceErrorBackDto)
+ Response errorConfig()
+ Response errorHander(Long)
+ Response duesList(Long,String,DuesReqDto)
+ {static} Response getDuesList(Long,Long,DuesReqDto,Boolean)
+ Response duesExport(Long,String,DuesReqDto)
+ {static} Response duesExport(Long,Long,DuesReqDto,Boolean)
+ Response<PageInfo<FinanceExport>> exportList(Long,ExportDto)
+ Response download(Long,Long,HttpServletResponse)
+ Response taskConfig()
+ Response taskPage(GatewayTaskDto)
+ Response exportTaskPage(Long,GatewayTaskDto)
+ Response retryTask(String)
+ Response retryTaskStatusInquire(String)
+ Response<List<String>> importTaskStatus(Long,MultipartFile)
+ Response<List<String>> importRetryTasks(Long,MultipartFile)
+ Response<List<GatewayRequestVO>> getGatewayRequestByTaskId(String)
+ Response getRepayChannel(Integer,Integer)
+ Response editRepayChannel(EditRepayConfig)
+ Response getTkb()
+ Response updateTkb(BankConfigDTO)
+ Response uploadRepamentExcel(Long,MultipartFile)
+ Response transferList(Long,String,TransferLoanDto)
+ Response transferExportList(Long,String,TransferLoanDto)
+ Response switchSign(List<SignMethodConfigVO>,Long)
+ Response<List<SignHistoryVO>> getSignHistory(String)
+ Response<List<FinanceConfigVO>> getSignType()
+ Response<Boolean> disburseSuccess(DisburseSuccessReqDto)
+ Response saveFlag(Long,LoansFlagParamReqVO)
}
interface com.welab.loan.finance.mapper.ext.PayLaterExtMapper {
~ List<Map<String,Object>> selectPayLaterLoan()
~ Long selectUnpaidPrincipal(Map<String,Object>)
~ List<Map<String,Object>> queryLoans(Map<String,Object>)
~ Map<String,Object> queryMerchantTradingInfor(Map<String,Object>)
~ List<MerchantLoanDTO> queryMerchantLoans(Map<String,Object>)
~ List<Map<String,Object>> queryServiceFee(List<String>)
~ List<MerchantRepaymentLoanDTO> queryMerchantRepaymentLoans(MerchantRepaymentQry)
}
enum com.welab.loan.finance.enums.FlowTaskNodeEnum {
+  REPAYMENT_BACK_DUES_NODE
+  REPAYMENT_BACK_NOTIFY_NODE
+  REPAYMENT_BACK_TAG_NODE
+  REPAYMENT_BACK_TO_AWDA_NODE
+  REPAYMENT_BACK_FINANCE_DUES_NODE
+  REPAYMENT_BACK_REFUND_NODE
+  REPAYMENT_BACK_REPAYMENT_TRACK_NODE
+  REPAYMENT_BACK_VA_ACCOUNT_NODE
+  REPAYMENT_BACK_LOAN_STATE_NODE
+  REPAYMENT_BACK_LOAN_REPAYMENT_NODE
+  REPAYMENT_BACK_USER_REPAY_NODE
+  REPAYMENT_BACK_CREDIT_USER_ACCOUNT_NODE
+  TB_REPAYMENT_BACK_DUES_NODE
+  TB_REPAYMENT_BACK_CREDIT_USER_ACCOUNT_NODE
+  TB_REPAYMENT_BACK_VA_ACCOUNT_NODE
+  TB_REPAYMENT_BACK_LOAN_STATE_NODE
- String code
- String desc
}
enum com.welab.loan.finance.enums.TbUserAccountTransTypeEnum {
+  FREEZE
+  DEDUCTION
+  RESTORE
- byte val
- String desc
}
class com.welab.loan.finance.utils.SpringUtils {
- {static} ApplicationContext applicationContext
+ void setApplicationContext(ApplicationContext)
+ {static} ApplicationContext getApplicationContext()
+ {static} Object getBean(String)
+ {static} T getBean(Class<T>)
+ {static} T getBean(String,Class<T>)
}
interface com.welab.loan.finance.mapper.FinanceExportMapper {
~ long countByExample(FinanceExportExample)
~ int deleteByExample(FinanceExportExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FinanceExport)
~ int insertSelective(FinanceExport)
~ List<FinanceExport> selectByExample(FinanceExportExample)
~ FinanceExport selectByPrimaryKey(Long)
~ int updateByExampleSelective(FinanceExport,FinanceExportExample)
~ int updateByExample(FinanceExport,FinanceExportExample)
~ int updateByPrimaryKeySelective(FinanceExport)
~ int updateByPrimaryKey(FinanceExport)
}
class com.welab.loan.finance.test.ScaffoldTest {
- DefaultConfigService config
- String ZOOKEEPER_URL
+ void test1()
+ void appId()
}
class com.welab.loan.finance.utils.cache.GuavaCacheUtils {
- {static} Cache<String,Object> globalCache
- {static} Cache<String,Object> LOCAL_CACHE
- <<Create>> GuavaCacheUtils()
+ {static} Object getCache(String)
+ {static} void putCache(String,Object)
+ {static} FinanceConfig getFinanceConfigCache(String,String)
+ {static} String getMerchantProductName(QueryMerchantProductDto)
+ {static} List<String> getTestFlowTag()
}
enum com.welab.loan.finance.utils.cache.CacheKeyEnum {
+  FundAccountInfo
+  FundTransferAccount
+  repaymentAccount
+  vatAccount
- Integer key
~ <<Create>> CacheKeyEnum(int)
+ String findKey(Long)
}
class com.welab.loan.finance.test.AccountTest {
- AccountService accountService
+ void findOne()
+ void updateStatus()
+ void onMessage()
}
class com.welab.loan.finance.response.dues.TryCalDuesVO {
- {static} long serialVersionUID
- Long applyAmount
- String applyPeriod
- Long approvalAmount
- String approvalPeriod
- Long upfrontFee
- Long upfrontAdminFee
- Long totalRepayAmount
- Long totalServiceFee
- Long receivedAmount
- List<CalDuesFeeVO> tryCalDuesFeeList
}
class com.welab.loan.finance.test.FifUvf.FifUvfTest {
- FifUvfController fifUvfController
- LoanService loanService
- LoanUvfDetailExtMapper loanUvfDetailExtMapper
- BaseFifUvfService baseFifUvfService
+ void testController()
+ void testConfirm()
+ void testquary()
+ void teste()
+ void test1Controller()
+ void testLoanList()
}
class com.welab.loan.finance.model.LoanUvfDocExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanUvfDocExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanUvfDocExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andCreateByIsNull()
+ Criteria andCreateByIsNotNull()
+ Criteria andCreateByEqualTo(String)
+ Criteria andCreateByNotEqualTo(String)
+ Criteria andCreateByGreaterThan(String)
+ Criteria andCreateByGreaterThanOrEqualTo(String)
+ Criteria andCreateByLessThan(String)
+ Criteria andCreateByLessThanOrEqualTo(String)
+ Criteria andCreateByLike(String)
+ Criteria andCreateByNotLike(String)
+ Criteria andCreateByIn(List<String>)
+ Criteria andCreateByNotIn(List<String>)
+ Criteria andCreateByBetween(String,String)
+ Criteria andCreateByNotBetween(String,String)
+ Criteria andDocIdIsNull()
+ Criteria andDocIdIsNotNull()
+ Criteria andDocIdEqualTo(Long)
+ Criteria andDocIdNotEqualTo(Long)
+ Criteria andDocIdGreaterThan(Long)
+ Criteria andDocIdGreaterThanOrEqualTo(Long)
+ Criteria andDocIdLessThan(Long)
+ Criteria andDocIdLessThanOrEqualTo(Long)
+ Criteria andDocIdIn(List<Long>)
+ Criteria andDocIdNotIn(List<Long>)
+ Criteria andDocIdBetween(Long,Long)
+ Criteria andDocIdNotBetween(Long,Long)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Integer)
+ Criteria andTypeNotEqualTo(Integer)
+ Criteria andTypeGreaterThan(Integer)
+ Criteria andTypeGreaterThanOrEqualTo(Integer)
+ Criteria andTypeLessThan(Integer)
+ Criteria andTypeLessThanOrEqualTo(Integer)
+ Criteria andTypeIn(List<Integer>)
+ Criteria andTypeNotIn(List<Integer>)
+ Criteria andTypeBetween(Integer,Integer)
+ Criteria andTypeNotBetween(Integer,Integer)
+ Criteria andSecondProdCodeIsNull()
+ Criteria andSecondProdCodeIsNotNull()
+ Criteria andSecondProdCodeEqualTo(String)
+ Criteria andSecondProdCodeNotEqualTo(String)
+ Criteria andSecondProdCodeGreaterThan(String)
+ Criteria andSecondProdCodeGreaterThanOrEqualTo(String)
+ Criteria andSecondProdCodeLessThan(String)
+ Criteria andSecondProdCodeLessThanOrEqualTo(String)
+ Criteria andSecondProdCodeLike(String)
+ Criteria andSecondProdCodeNotLike(String)
+ Criteria andSecondProdCodeIn(List<String>)
+ Criteria andSecondProdCodeNotIn(List<String>)
+ Criteria andSecondProdCodeBetween(String,String)
+ Criteria andSecondProdCodeNotBetween(String,String)
+ Criteria andContractIdIsNull()
+ Criteria andContractIdIsNotNull()
+ Criteria andContractIdEqualTo(String)
+ Criteria andContractIdNotEqualTo(String)
+ Criteria andContractIdGreaterThan(String)
+ Criteria andContractIdGreaterThanOrEqualTo(String)
+ Criteria andContractIdLessThan(String)
+ Criteria andContractIdLessThanOrEqualTo(String)
+ Criteria andContractIdLike(String)
+ Criteria andContractIdNotLike(String)
+ Criteria andContractIdIn(List<String>)
+ Criteria andContractIdNotIn(List<String>)
+ Criteria andContractIdBetween(String,String)
+ Criteria andContractIdNotBetween(String,String)
}
class com.welab.loan.finance.model.LoanUvfDocExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanUvfDocExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.app.command.tb.order.validate.TbInvoiceValidateServiceProvider {
}
class com.welab.loan.finance.app.base.credit.BaseCreditUserInfoService {
- CreditUserAccountInfoExtMapper creditUserAccountInfoExtMapper
+ Long getUserCount(List<String>)
+ List<Long> findExistsUserInfo(List<Long>)
+ Long getUserCountForLastNum(List<String>,List<Integer>)
+ List<String> getTagsByUserId(List<Long>)
+ List<CreditUserAccountInfo> getTagsAndUserIdByUserIds(List<Long>)
+ Long getUserCount(List<Long>,List<String>)
}
class com.welab.loan.finance.model.ext.DisburseTax {
- Date transferDate
- String batchNo
- String loanNumber
- String orderId
- String transNumber
- String transferOrderId
- String secondProdCode
- String backCode
- String funder
- String activeLoanFlag
- Long applyAmount
- Long disburseAmount
- Long facilityFeeWithoutVat
- Long adminFeeWithouVat
- Long fundInterestFeeIncludeWht
- Long provisionFee
- Long platformFeeWithoutVat
- Long carryingFeeWithoutVat
- Long ffVatFee
- Long adVatFee
- Long pfVatFee
- Long rfVatFee
- Long totalWht
- Long totalVat
- Long taxPortion
- Date disburseDate
- Long fundId
- Byte repayStatus
- String ext
}
class com.welab.loan.finance.dto.cmd.CPlanConfirmCmd {
- Long loanNumber
}
class com.welab.loan.finance.model.LoanDuesLog {
- Long id
- String loanNumber
- String dueType
- Integer dueIndex
- Long amount
- Long operationAmount
- Date createdAt
- String origin
- Long adminId
- String optName
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getDueType()
+ void setDueType(String)
+ Integer getDueIndex()
+ void setDueIndex(Integer)
+ Long getAmount()
+ void setAmount(Long)
+ Long getOperationAmount()
+ void setOperationAmount(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ String getOrigin()
+ void setOrigin(String)
+ Long getAdminId()
+ void setAdminId(Long)
+ String getOptName()
+ void setOptName(String)
}
class com.welab.loan.finance.dto.LendDto {
- Long fundId
}
class com.welab.loan.finance.core.dto.CalPlanAmountDTO {
- Long totalAmount
- Long orgTotalAmount
- String discountLateFee
- Long lateFee
- String discountServiceFee
- Long serviceFee
- String discountAdminFee
- Long adminFee
- String discountFundInterest
- Long fundInterest
- String discountPrincipal
- Long principal
- Long carryFee
- String discountProvision
- Long provisionFee
- String loanNumber
- String orgPeriod
- List<String> periods
- Long approvedAmount
- Long downPaymentAmount
- Long orgLateFee
- Double disDownPaymentRatio
}
class com.welab.loan.finance.vo.HomePageAhassInfoVO {
- String ahassUserId
- String ahassName
- Boolean selected
}
class com.welab.loan.finance.test.loan.LoanTest {
- LoanService loanService
+ void testFindLoanListExtByPage()
}
enum com.welab.loan.finance.enums.PayChanelEnum {
+  DOB
+  Cimb
+  Bni
+  MandiriClickpay
- String code
- String value
- <<Create>> PayChanelEnum(String,String)
+ String getCode()
+ String getValue()
+ {static} String getValue(String)
}
class com.welab.loan.finance.service.credit.usertag.CreditUserTagRuleService {
+ {static} String RULE_EXPRESS_KEY
+ {static} String BEGIN_TIME_KEY
+ {static} String END_TIME_KEY
+ {static} String USER_ID_KEY
+ {static} String CALCULATE_TAG_KEY
+ {static} String PRODUCT_TYPES_KEY
+ {static} String UFI_MATRIX_KEY
+ {static} String EXCLUDE_USER_STATUS
+ {static} String ORIGINAL_TAG_KEY
+ {static} String SKIP_ORIGINAL_TAG_KEY
+ {static} String QUERY_TAG_NAMES_KEY
+ {static} String EXCLUDE_TAG_NAMES_KEY
+ {static} String SKIP_TAG_LAST_UPDATE_TIME_KEY
+ {static} String CREDIT_LAST_TAG_UPDATE_TIME_KEY
+ {static} String EXT_MAP_COLLECTION_PLAN_KEY
+ {static} String DELAY_TRIGGER_EXPRESS_KEY
+ {static} String CALCULATION_MONTHLY_INCOME_KEY
+ {static} String UPDATE_LAST_TAG_TIME_KEY
+ {static} String ACTIVATE_USER_KEY
+ {static} String DELAY_DUE_DATE_COUNT_KEY
+ {static} String APPLICATION_TENOR_KEY
+ {static} String REPAYMENT_LOANNUMBERS_KEY
+ {static} String TEST_FLOW_TAGS_KEY
+ {static} String ALL_TAG
+ {static} String NOT_CHANGE_TAG_MARK
+ {static} String TARGET_TAG_KEY
+ {static} String ASTRA_KEY
+ {static} String APPROVE_INCOME_KEY
+ {static} String CREDIT_USER_ACCOUNT_INFO_KEY
+ {static} String ESTIMATED_MONTHLY_INCOME_KEY
+ {static} String RUN_MODE_KEY
+ {static} String COMMON_PARAM_KEY
+ {static} String TRIGGER_METHOD_KEY
+ {static} String IS_SKIP_DELAY_KEY
+ {static} String IS_REMOVE_DELAY_TASK_KEY
+ {static} String IS_IGNORE_INVALID_DUE_DATE_CHECK_KEY
+ {static} String IS_MIGRATE_USER_KEY
+ {static} String IS_SKIP_CREDIT_USER_STATUS
+ {static} String UPDATE_TAG_REMARK_MSG_KEY
+ {static} String IS_FRAUD_REJECTED
+ String CURRENT_RUN_COUNT_KEY
+ int MAX_RETRIES_COUNT
- TagExpressInternalFunctionService tagExpressInternalFunction
- CreditUserTagRuleMapper creditUserTagRuleMapper
- CreditUserTagLogManager creditUserTagLogManager
- BaseCreditUserAccountService baseCreditUserAccountService
- JedisCluster jedisCluster
- CreditUserAccountServiceImpl creditUserAccountService
- BackstageConfigService backstageConfigService
- CreditUserAccountInfoService creditUserAccountInfoService
- CreditUpdateForTagRule creditUpdateForTagRule
- CreditAccountManager creditAccountManager
- String CREDIT_USERTAGCHANGE
- ExecutorService executorService
- ExpressRunner runner
- Cache<String,Object> LOCAL_CACHE
- int TAG_DELAY_TIME
- HashedWheelTimer TAG_WHEEL_TIMER
- String LIST_CREDIT_USER_TAG_RULE_KEY
+ void init()
+ ExpressRunner getRunner()
+ List<CreditUserTagRule> getEnableList()
+ void updateTagByRule(CreditUserTagChangeDTO)
+ void updateTagByRule(CreditUserTagChangeDTO,IUpdateTagCallBack)
+ BestRuleRes runRule(CreditUserAccountExt,CreditUserTagTriggerMethodEnum,List<CreditUserTagRule>,Map<String,Object>)
- void updateUserTagAndAmount(CreditUserTagChangeDTO,CreditUserAccountExt,CreditUserTagTriggerMethodEnum,BestRuleRes)
- String getExpressAndSetParam(DefaultContext<String,Object>,String)
- Map<String,Object> setFunctionParam(Map<String,Object>)
- Object handParam(String,Object)
+ BigDecimal getCreditUserIncomeProportion(CreditAccountTypeEnums)
- ExpressRunner createExpressRunner()
}
class com.welab.loan.finance.service.credit.usertag.CreditUserTagRuleService$BestRuleRes {
- CreditUserTagRule rule
- Long cashLoanAmount
- Long payLaterAmount
- boolean isDelay
}
class com.welab.loan.finance.service.credit.usertag.CreditUserTagRuleService$UpdateTagCallBackRes {
- BestRuleRes bestRuleRes
- CreditUserTagTriggerMethodEnum tagTriggerMethodEnum
- Long userId
- Boolean isSuccess
}
interface com.welab.loan.finance.service.credit.usertag.CreditUserTagRuleService$IUpdateTagCallBack {
~ void call(UpdateTagCallBackRes)
}
class com.welab.loan.finance.rabbitmq.LoanInfoConsumer {
- BaseLoanMqService baseLoanMqService
- EPlanService ePlanService
+ void onMessage(Message)
+ boolean handle(String)
+ void saveLoanLog(String)
}
class com.welab.loan.finance.service.impl.OverdueQueryServiceImpl {
- BaseDuesService baseDuesService
- LateFeeMapper lateFeeMapper
- DuesExtMapper duesExtMapper
- CollectionUserListMannger collectionFPlanUserListMannger
- BaseLoanDetailService baseLoanDetailService
- FlexifitWhiteFacade flexifitWhiteFacade
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
+ Response<CollectionLoanOverDueInfoDTO> listCollectionLoanOverDueInfo(OverdueQueryDto)
+ Response getLateFeeCount(Long)
+ Response<Map<String,Long>> getRepaymentAmountByDueIndex(List<String>,Integer)
+ Response<Map<String,Map<String,List<OverdueAmountDetailVO>>>> getOverdueAmountDetail(List<String>)
+ Response<Integer> isOldUserByUserId(Long)
+ PageInfo<CollectionUserListVO> selectCollectionUserList(CollectionUserListQry)
}
class com.welab.loan.finance.response.LoanCalculator {
- BigDecimal installment
- BigDecimal minInstallment
- BigDecimal maxInstallment
- String tenor
}
class com.welab.loan.finance.core.dto.DuesMergeDTO {
- Long fundInterestFee
- Long serviceFee
- Long lateFee
- Long provisionFee
- Long principalFee
- Long adminFee
- Long carryFee
- Long serviceFeeVat
- Long lateFeeVat
- Long adminFeeVat
- Long carryFeeVat
+ Long getAllAmountSum()
}
class com.welab.loan.finance.app.manager.credit.loanList.NocheckInstallmentLoanManager {
+ List<TagProductVO> processLoan(CreditUserAccountExt,Map<String,TagProductVO>)
}
class com.welab.loan.finance.calculator.DuesCalculator {
+ {static} BigDecimal promotionCodeForDecrease(String,String,BigDecimal,List<Dues>)
}
interface com.welab.loan.finance.mapper.ext.LoanCouponExtMapper {
}
class com.welab.loan.finance.model.LoanPlansContractExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanPlansContractExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanPlansContractExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andDueIndexIsNull()
+ Criteria andDueIndexIsNotNull()
+ Criteria andDueIndexEqualTo(Integer)
+ Criteria andDueIndexNotEqualTo(Integer)
+ Criteria andDueIndexGreaterThan(Integer)
+ Criteria andDueIndexGreaterThanOrEqualTo(Integer)
+ Criteria andDueIndexLessThan(Integer)
+ Criteria andDueIndexLessThanOrEqualTo(Integer)
+ Criteria andDueIndexIn(List<Integer>)
+ Criteria andDueIndexNotIn(List<Integer>)
+ Criteria andDueIndexBetween(Integer,Integer)
+ Criteria andDueIndexNotBetween(Integer,Integer)
+ Criteria andPlansTypeIsNull()
+ Criteria andPlansTypeIsNotNull()
+ Criteria andPlansTypeEqualTo(Byte)
+ Criteria andPlansTypeNotEqualTo(Byte)
+ Criteria andPlansTypeGreaterThan(Byte)
+ Criteria andPlansTypeGreaterThanOrEqualTo(Byte)
+ Criteria andPlansTypeLessThan(Byte)
+ Criteria andPlansTypeLessThanOrEqualTo(Byte)
+ Criteria andPlansTypeIn(List<Byte>)
+ Criteria andPlansTypeNotIn(List<Byte>)
+ Criteria andPlansTypeBetween(Byte,Byte)
+ Criteria andPlansTypeNotBetween(Byte,Byte)
+ Criteria andContractTypeIsNull()
+ Criteria andContractTypeIsNotNull()
+ Criteria andContractTypeEqualTo(Byte)
+ Criteria andContractTypeNotEqualTo(Byte)
+ Criteria andContractTypeGreaterThan(Byte)
+ Criteria andContractTypeGreaterThanOrEqualTo(Byte)
+ Criteria andContractTypeLessThan(Byte)
+ Criteria andContractTypeLessThanOrEqualTo(Byte)
+ Criteria andContractTypeIn(List<Byte>)
+ Criteria andContractTypeNotIn(List<Byte>)
+ Criteria andContractTypeBetween(Byte,Byte)
+ Criteria andContractTypeNotBetween(Byte,Byte)
+ Criteria andDocIdIsNull()
+ Criteria andDocIdIsNotNull()
+ Criteria andDocIdEqualTo(Long)
+ Criteria andDocIdNotEqualTo(Long)
+ Criteria andDocIdGreaterThan(Long)
+ Criteria andDocIdGreaterThanOrEqualTo(Long)
+ Criteria andDocIdLessThan(Long)
+ Criteria andDocIdLessThanOrEqualTo(Long)
+ Criteria andDocIdIn(List<Long>)
+ Criteria andDocIdNotIn(List<Long>)
+ Criteria andDocIdBetween(Long,Long)
+ Criteria andDocIdNotBetween(Long,Long)
+ Criteria andIsDeleteIsNull()
+ Criteria andIsDeleteIsNotNull()
+ Criteria andIsDeleteEqualTo(Boolean)
+ Criteria andIsDeleteNotEqualTo(Boolean)
+ Criteria andIsDeleteGreaterThan(Boolean)
+ Criteria andIsDeleteGreaterThanOrEqualTo(Boolean)
+ Criteria andIsDeleteLessThan(Boolean)
+ Criteria andIsDeleteLessThanOrEqualTo(Boolean)
+ Criteria andIsDeleteIn(List<Boolean>)
+ Criteria andIsDeleteNotIn(List<Boolean>)
+ Criteria andIsDeleteBetween(Boolean,Boolean)
+ Criteria andIsDeleteNotBetween(Boolean,Boolean)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.LoanPlansContractExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanPlansContractExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.dto.cmd.TryRepayPlanDetailCmd {
}
class com.welab.loan.finance.vo.TagConfigVO {
- {static} long serialVersionUID
- List<TagProductVO> creditConfig
}
class com.welab.loan.finance.app.command.plan.EPlanAdvanceCloseNotifyCmdExe {
- BaseLoanApplyPlansService baseLoanApplyPlansService
- BaseLoanDetailService baseLoanDetailService
- UserProfilesServiceFacade userProfilesServiceFacade
- MessageEmailFacade messageEmailFacade
- MessageAppFacade messageAppFacade
+ void handler(List<UserRepayAmountDTO>,Long)
# Map<String,Object> setModel(LoanApplyPlans,LoanDetail)
}
class com.welab.loan.finance.dto.cmd.RepaymentImportCmd {
- List<FlexRepaymentDto> repaymentDtoList
}
class com.welab.loan.finance.dto.cmd.CheckCustomCmd {
- List<String> loanNumbers
}
class com.welab.loan.finance.test.credit.CreditMigrateUserServiceTest {
- CreditMigrateUserService creditMigrateUserService
+ void start()
}
class com.welab.loan.finance.model.ext.LoanUvfDetailExt {
- Long allAmount
- String lendStatusStr
- String statusStr
- Long lendAmount
- String mobile2
- String mobile3
- String mobile4
- String fundCode
- Integer dpd
- Byte loanStatus
+ {static} LinkedHashMap getExportMap(String)
}
class com.welab.loan.finance.common.EPlanHelper {
+ {static} String PL_PREFIX
+ {static} String CL_PREFIX
+ {static} boolean isEPlanSecondProdCode(String)
+ {static} boolean isOldEPlanSecondProdCode(String)
+ {static} boolean isNewEPlanSecondProdCode(String)
+ {static} boolean isPaylaterSecondProdCode(String)
+ {static} boolean isCashLoanSecondProdCode(String)
+ {static} String getSecondProdCode(String)
+ {static} boolean isNewEPlanLoanNumber(String)
+ {static} boolean isPaylaterLoanNumber(String)
+ {static} boolean isCashLoanLoanNumber(String)
}
class com.welab.loan.finance.config.Swagger2Config {
+ Docket createRestApi()
- ApiInfo apiInfo()
- List<Parameter> buildHeader()
}
class com.welab.loan.finance.vo.response.InsuranceRecordRespVO {
- String groupName
- String type
- String creator
- Date createdAt
- Integer totalPolicyLoans
- Integer totalClaimLoans
}
class com.welab.loan.finance.dto.plan.TryRepayCPlanLoanDetailDto {
- BigDecimal principalFee
- BigDecimal normalDueServiceFee
- Integer maxDueIndex
- BigDecimal totalCarryFee
- BigDecimal nextUnPayAmount
- List<PeriodInfo> periodInfos
}
class com.welab.loan.finance.dto.plan.TryRepayCPlanLoanDetailDto$PeriodInfo {
- Integer dueIndex
- BigDecimal unPayAmount
- Date dueDate
}
class com.welab.loan.finance.facade.marketing.ConfigServiceFacade {
- CommonConfigService commonConfigService
- BackstageConfigService backstageConfigService
+ BigDecimal getVatRate()
+ BigDecimal getWhtRate(Long)
}
class com.welab.loan.finance.model.OperateLoanDetailExtendFlagHistoryExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> OperateLoanDetailExtendFlagHistoryExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.OperateLoanDetailExtendFlagHistoryExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andCreateByIsNull()
+ Criteria andCreateByIsNotNull()
+ Criteria andCreateByEqualTo(Long)
+ Criteria andCreateByNotEqualTo(Long)
+ Criteria andCreateByGreaterThan(Long)
+ Criteria andCreateByGreaterThanOrEqualTo(Long)
+ Criteria andCreateByLessThan(Long)
+ Criteria andCreateByLessThanOrEqualTo(Long)
+ Criteria andCreateByIn(List<Long>)
+ Criteria andCreateByNotIn(List<Long>)
+ Criteria andCreateByBetween(Long,Long)
+ Criteria andCreateByNotBetween(Long,Long)
+ Criteria andUpdateByIsNull()
+ Criteria andUpdateByIsNotNull()
+ Criteria andUpdateByEqualTo(Long)
+ Criteria andUpdateByNotEqualTo(Long)
+ Criteria andUpdateByGreaterThan(Long)
+ Criteria andUpdateByGreaterThanOrEqualTo(Long)
+ Criteria andUpdateByLessThan(Long)
+ Criteria andUpdateByLessThanOrEqualTo(Long)
+ Criteria andUpdateByIn(List<Long>)
+ Criteria andUpdateByNotIn(List<Long>)
+ Criteria andUpdateByBetween(Long,Long)
+ Criteria andUpdateByNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.OperateLoanDetailExtendFlagHistoryExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.OperateLoanDetailExtendFlagHistoryExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.LendReversal {
- Long id
- String loanNumber
- String reason
- Long amount
- Long adminId
- String orderPrefix
- String batchNo
- String reversalLoanNumber
- Long fundId
- Byte reversalStatus
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getReason()
+ void setReason(String)
+ Long getAmount()
+ void setAmount(Long)
+ String getOrderPrefix()
+ void setOrderPrefix(String)
+ String getBatchNo()
+ void setBatchNo(String)
+ String getReversalLoanNumber()
+ void setReversalLoanNumber(String)
+ Long getFundId()
+ void setFundId(Long)
+ Byte getReversalStatus()
+ void setReversalStatus(Byte)
+ Long getAdminId()
+ void setAdminId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.dto.qry.LoanOverdueQry {
- {static} long serialVersionUID
- Long userId
- List<String> productCodeList
}
class com.welab.loan.finance.test.UvfLoaderTest {
- UvfFileLoader uvfFileLoader
- BankConfigService bankConfigService
- MaucashRepaymentServiceImpl maucashRepaymentServiceImpl
+ void loaderForFtp()
+ void test()
+ void testGetRealAmount()
}
class com.welab.loan.finance.dto.LoanDueIndexDuesDTO {
- String loanNumber
- String secondProdCode
- Integer dueIndex
- Date dueDate
- Long fundInterestAmount
- Long fundInterestPay
- Long fundInterestUnPay
- Long principalAmount
- Long principalPay
- Long principalUnPay
- Long adminFeeAmount
- Long adminFeePay
- Long adminFeeUnPay
- Long carryingFeeAmount
- Long carryingFeePay
- Long carryingFeeUnPay
- Long lateFeeAmount
- Long lateFeePay
- Long lateFeeUnPay
- Long vatBeforeLateFeeUnPay
- Long provisionFeeAmount
- Long provisionFeePay
- Long provisionFeeUnPay
- Long platformFeeAmount
- Long platformFeePay
- Long platformFeeUnPay
- Long promoCodeFee
- String promoCode
}
class com.welab.loan.finance.response.LoanDetailExtVo {
- String isSent
- Date overDate
+ String getIsSent()
+ void setIsSent(String)
+ Date getOverDate()
+ void setOverDate(Date)
}
class com.welab.loan.finance.model.CreditReLoan {
- Long id
- String loanNumber
- Byte originalLendStatus
- Byte originalRepayStatus
- Long createAdminId
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Byte getOriginalLendStatus()
+ void setOriginalLendStatus(Byte)
+ Byte getOriginalRepayStatus()
+ void setOriginalRepayStatus(Byte)
+ Long getCreateAdminId()
+ void setCreateAdminId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.dto.cmd.TbSendLendCmd {
- String loanNumber
}
interface com.welab.loan.finance.mapper.LoanTimeoutConfigMapper {
~ long countByExample(LoanTimeoutConfigExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanTimeoutConfig)
~ int insertSelective(LoanTimeoutConfig)
~ List<LoanTimeoutConfig> selectByExample(LoanTimeoutConfigExample)
~ LoanTimeoutConfig selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanTimeoutConfig,LoanTimeoutConfigExample)
~ int updateByExample(LoanTimeoutConfig,LoanTimeoutConfigExample)
~ int updateByPrimaryKeySelective(LoanTimeoutConfig)
~ int updateByPrimaryKey(LoanTimeoutConfig)
}
class com.welab.loan.finance.vo.DuesExtVo {
- Long id
- String loanId
- Integer dueIndex
- Date dueDate
- String dueType
- Long amount
- Integer repayIndex
- Long settledAmount
- Long remainingAmount
- String capitalCode
- String isAdvanced
- String isKantouFee
- Date createdAt
- Date updatedAt
- Boolean isClose
- Long lateFeeAmount
- Long overAmount
- Long couponFee
- Byte repaymentType
}
class com.welab.loan.finance.model.InsuranceRecordExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> InsuranceRecordExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.InsuranceRecordExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andGroupNameIsNull()
+ Criteria andGroupNameIsNotNull()
+ Criteria andGroupNameEqualTo(String)
+ Criteria andGroupNameNotEqualTo(String)
+ Criteria andGroupNameGreaterThan(String)
+ Criteria andGroupNameGreaterThanOrEqualTo(String)
+ Criteria andGroupNameLessThan(String)
+ Criteria andGroupNameLessThanOrEqualTo(String)
+ Criteria andGroupNameLike(String)
+ Criteria andGroupNameNotLike(String)
+ Criteria andGroupNameIn(List<String>)
+ Criteria andGroupNameNotIn(List<String>)
+ Criteria andGroupNameBetween(String,String)
+ Criteria andGroupNameNotBetween(String,String)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andPolicyFileIdIsNull()
+ Criteria andPolicyFileIdIsNotNull()
+ Criteria andPolicyFileIdEqualTo(String)
+ Criteria andPolicyFileIdNotEqualTo(String)
+ Criteria andPolicyFileIdGreaterThan(String)
+ Criteria andPolicyFileIdGreaterThanOrEqualTo(String)
+ Criteria andPolicyFileIdLessThan(String)
+ Criteria andPolicyFileIdLessThanOrEqualTo(String)
+ Criteria andPolicyFileIdLike(String)
+ Criteria andPolicyFileIdNotLike(String)
+ Criteria andPolicyFileIdIn(List<String>)
+ Criteria andPolicyFileIdNotIn(List<String>)
+ Criteria andPolicyFileIdBetween(String,String)
+ Criteria andPolicyFileIdNotBetween(String,String)
+ Criteria andClaimFileIdIsNull()
+ Criteria andClaimFileIdIsNotNull()
+ Criteria andClaimFileIdEqualTo(String)
+ Criteria andClaimFileIdNotEqualTo(String)
+ Criteria andClaimFileIdGreaterThan(String)
+ Criteria andClaimFileIdGreaterThanOrEqualTo(String)
+ Criteria andClaimFileIdLessThan(String)
+ Criteria andClaimFileIdLessThanOrEqualTo(String)
+ Criteria andClaimFileIdLike(String)
+ Criteria andClaimFileIdNotLike(String)
+ Criteria andClaimFileIdIn(List<String>)
+ Criteria andClaimFileIdNotIn(List<String>)
+ Criteria andClaimFileIdBetween(String,String)
+ Criteria andClaimFileIdNotBetween(String,String)
+ Criteria andCreatorIsNull()
+ Criteria andCreatorIsNotNull()
+ Criteria andCreatorEqualTo(String)
+ Criteria andCreatorNotEqualTo(String)
+ Criteria andCreatorGreaterThan(String)
+ Criteria andCreatorGreaterThanOrEqualTo(String)
+ Criteria andCreatorLessThan(String)
+ Criteria andCreatorLessThanOrEqualTo(String)
+ Criteria andCreatorLike(String)
+ Criteria andCreatorNotLike(String)
+ Criteria andCreatorIn(List<String>)
+ Criteria andCreatorNotIn(List<String>)
+ Criteria andCreatorBetween(String,String)
+ Criteria andCreatorNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.InsuranceRecordExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.InsuranceRecordExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.dto.SelectDTO {
- {static} long serialVersionUID
- Long key
- String value
}
class com.welab.loan.finance.app.command.plan.FPlanDuesQryExcute {
- DuesExtMapper duesExtMapper
- LoanDetailManager loanDetailManager
- CPlanExtMapper cPlanExtMapper
- LoanOverdueInfoManager loanOverdueInfoManager
- DuesService duesService
- VatRepaymentCostProvider vatRepaymentCostProvider
+ Response<List<LoanDuesDTO>> excute(FPlanDuesQry)
}
class com.welab.loan.finance.model.LoanUserRepay {
- Long id
- Long userId
- String loanNumber
- Boolean status
- Boolean isUsed
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Boolean getStatus()
+ void setStatus(Boolean)
+ Boolean getIsUsed()
+ void setIsUsed(Boolean)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.dto.paylater.RepayUnPayDTO {
- Long unPayAmount
- boolean isPay
}
interface com.welab.loan.finance.mapper.UvfFileTaskMapper {
~ int countByExample(UvfFileTaskExample)
~ int deleteByExample(UvfFileTaskExample)
~ int deleteByPrimaryKey(Long)
~ int insert(UvfFileTask)
~ int insertSelective(UvfFileTask)
~ List<UvfFileTask> selectByExample(UvfFileTaskExample)
~ UvfFileTask selectByPrimaryKey(Long)
~ int updateByExampleSelective(UvfFileTask,UvfFileTaskExample)
~ int updateByExample(UvfFileTask,UvfFileTaskExample)
~ int updateByPrimaryKeySelective(UvfFileTask)
~ int updateByPrimaryKey(UvfFileTask)
}
class com.welab.loan.finance.facade.application.ProductConfigServiceFacade {
- ProductConfigService productConfigService
+ PageVO<ProductRateConfigVO> getRateVOListByRateDto(ProductRateConfigDto)
+ List<ProductRateConfigVO> getProductConfig(ProductRateConfigDto)
+ List<ProductRateConfigVO> getProductConfig()
+ List<ProductRateConfigVO> getProductConfigList(String,List<String>)
+ List<ProductRateConfigVO> getRateVOList(ProductRateConfigDto)
+ ProductRateConfigVO getBySecondProdCode(String)
}
class com.welab.loan.finance.service.business.FifUvfBusiService {
- ValidatorService validatorService
- UserProfilesService userProfilesService
- FundAccountInfoService fundAccountInfoService
- UvfApplicationService uvfApplicationService
- LoanUvfInputMapper loanUvfInputMapper
- LoanUvfDetailMapper loanUvfDetailMapper
- BaseRabbitTemplate baseRabbitTemplate
- LoanUvfDetailExtMapper loanUvfDetailExtMapper
- LoanUvfRepaymentMapper loanUvfRepaymentMapper
- LoanUvfRepaymentExtMapper loanUvfRepaymentExtMapper
- FundService fundService
- BaseUserAccountService baseUserAccountService
- BaseUserAccountDetailService baseUserAccountDetailService
- FinanceRepaymentTrackMapper trackMapper
- LoanUvfDuesMapper loanUvfDuesMapper
- BaseFifUvfService baseFifUvfService
- LoansService loansService
- BaseUVFRepossessRepaymentService repossessRepaymentService
- UVFTradeService uvfTradeService
- MongoManager mongoManager
- BaseFinanceExport baseFinanceExport
+ Response inputRecord(List<FifUvfExcelVo>)
# Response checkLoan(List<FifUvfExcelVo>)
- void saveLoanUvfInput(String,String,String,ProductCodeEnum)
+ Boolean saveLoan(FifUvfExcelVo,String)
- Long getSettledAmount(String)
- Long getActualAmount(String)
+ Response confirmLoan(String)
- Response checkData(LoanUvfDetail)
+ List<UfiMotorImportErrorVO> uploadMotoRepayRecord(List<FifUvfMotoRepayExcelVo>,Long)
+ List<UfiMotorImportErrorVO> uploadRepayRecordByProductCode(List<FifUvfMotoRepayExcelVo>,Long,ProductCodeEnum)
+ Response uploadRepayRecord(List<FifUvfRepayExcelVo>,Long,ProductCodeEnum)
+ Response verificationMoto(List<FifUvfMotoRepayExcelVo>)
+ Response verificationByProductCode(List<FifUvfMotoRepayExcelVo>,ProductCodeEnum)
+ Response verification(List<FifUvfRepayExcelVo>)
+ void repayTrack(Long,List<LoanUvfRepayment>,ProductCodeEnum)
+ boolean saveAccount(FundAccountInfoDTO,LoanUvfRepayment,ProductCodeEnum,FinanceRepaymentTrack)
+ Response<Void> uploadDueList(List<FifUvfDueListExcelVo>,Long)
+ void saveDueList(List<FifUvfDueListExcelVo>,Long)
+ Response<Void> saveMotoDueList(List<FifUvfMotoDueListExcelVo>,Long)
+ Response<Void> saveDueListByProductCode(ProductCodeEnum,List<FifUvfMotoDueListExcelVo>,Long)
+ List<UfiMotorImportErrorVO> verificationMotoDueList(List<FifUvfMotoDueListExcelVo>,Long)
+ List<UfiMotorImportErrorVO> verificationDueListByProductCode(List<FifUvfMotoDueListExcelVo>,ProductCodeEnum,Long)
- Response<Void> verificationDueList(List<FifUvfDueListExcelVo>)
+ Response importUVFMotorLoan(InputStream,Long)
- LoanUvfDetail saveUvfLoan(UvfChannellingLoanReq,String,ProductCodeEnum)
- List<UfiMotorImportErrorVO> checkAndRecordFifUvfLoan(List<FifUvfMotorLoanReq>,ProductCodeEnum,Long)
+ void ufiErrorMsgExport(List<UfiMotorImportErrorVO>,String,Long)
+ {static} void main(String[])
+ Response importMotorRepossessRepayment(List<String>,Long)
- void handleDueForRepossessRepayment(UVFRepossessRepayment,List<LoanUvfDues>)
+ Response importUVFChannelling(InputStream,Long)
}
interface com.welab.loan.finance.core.loan.lend.ILendTransferService {
~ void sendSingleTransfer(SynTransferDTO)
~ void sendBatchTransfer(List<SynTransferDTO>)
}
class com.welab.loan.finance.service.core.BaseLoanUserRepayService {
- LoanUserRepayMapper userRepayMapper
- LoanUserRepayDetailMapper userRepayDetailMapper
+ int insert(LoanUserRepay)
+ void insertDetail(LoanUserRepayDetail)
+ List<LoanUserRepay> findRepayList(LoanUserRepayExample)
+ List<LoanUserRepayDetail> findRepayDetailList(LoanUserRepayDetailExample)
+ LoanUserRepay findById(Long)
+ int deleteById(Long)
+ int deleteByLoanNmuber(List<String>)
+ void deleteAllByUserId(Long)
+ void deleteAllByUserId(List<Long>)
}
class com.welab.loan.finance.vo.credit.CreditActivityAbTestRateVo {
- BigDecimal upfrontRate
- BigDecimal serviceRate
- BigDecimal provisionRate
- String secondProductCode
- String tenor
- BigDecimal serviceFeeRate
- BigDecimal fundInterestRate
- BigDecimal lateRate
- BigDecimal adminRate
}
class com.welab.loan.finance.core.dto.TransferAmountDto {
- Long amount
- Long userId
- Long fundId
- Long orgId
+ <<Create>> TransferAmountDto(Long,Long,Long)
+ <<Create>> TransferAmountDto(Long,Long,Long,Long)
}
class com.welab.loan.finance.dto.RepaymentDto {
- Long amount
- Long userId
- String loanNumber
- Long storeId
- String code
}
enum com.welab.loan.finance.enums.TravelokaDisbursedCommandEnum {
+  RECORD_ONLY
+  DISBURSED
- String code
- String name
}
class com.welab.loan.finance.vo.credit.CreditActivityAbTestUserVo {
- Long abtestTagId
- String userTag
- Integer total
- Integer cgUser
- Integer tgUser
- Date lastUpdateDate
}
class com.welab.loan.finance.app.manager.MongoManager {
- MongoTemplateExt mongoTemplate
+ String save(Doc)
+ String saveTbLoan(TbLoanDoc)
+ TbLoanDoc tbLoanDoc(String)
+ T tbLoanDoc(String,Class<T>)
+ TbUserDoc tbUserDoc(String)
+ List<TbLoanDoc> listTbLoanDoc(List<String>)
+ List<? extends Doc> listDocs(List<String>,Class<? extends Doc>)
+ Map<String,TbLoanDoc> mapTbLoanDoc(List<String>)
+ List<T> listTbUserDoc(List<String>,Class<T>)
}
interface com.welab.loan.finance.service.IEplanService {
~ List<LoanPlansRelationDTO> getEplanLoans(Long)
~ Response<EPlanTryCalculationListVO> tryEplan(List<String>)
~ Response<EPlanTryCalculationListVO> tryEplanForUser(Long)
~ Response<CalEPlanAmountDTO> tryEPlanForCollection(TryEPlanDTO)
~ Response applyEPlan(TryEPlanDTO)
~ Response checkEPlanAuth(List<String>)
~ Response<EContractInfoVO> tryEPlanForContract(String)
}
class com.welab.loan.finance.job.DuesBackupJobTest {
~ DuesBackupJob duesBackupJob
+ void runJob()
}
class com.welab.loan.finance.core.overdue.credit.CreditCalLateFeeImpl {
- int type
+ LoanLateRspDTO findLateFee(LoanLateReqDTO)
+ List<LoanLateRspDTO> findBatchLateFee(List<LoanLateReqDTO>)
+ List<LoanLateRspDTO> updateBatchLateFee(List<LoanLateReqDTO>)
+ String findKey()
}
class com.welab.loan.finance.model.BcaTransfer {
- Long id
- Long orgId
- String loanNumber
- String batchNo
- Byte source
- Long relationId
- Date transferDate
- Long amount
- Byte status
- String orderId
- String remark
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getOrgId()
+ void setOrgId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getBatchNo()
+ void setBatchNo(String)
+ Byte getSource()
+ void setSource(Byte)
+ Long getRelationId()
+ void setRelationId(Long)
+ Date getTransferDate()
+ void setTransferDate(Date)
+ Long getAmount()
+ void setAmount(Long)
+ Byte getStatus()
+ void setStatus(Byte)
+ String getOrderId()
+ void setOrderId(String)
+ String getRemark()
+ void setRemark(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.service.business.LoanPlansContractBusiService {
- BaseLoanPlansContractService baseLoanPlansContractService
- PlanEmailBusiService planEmailBusiService
- DocumentService documentService
- BaseLoanService baseLoanService
- BaseLoanApplyPlansService baseLoanApplyPlansService
+ {static} byte TRIAL
+ {static} byte OFFICIAL
+ Response<List<LoanPlansContractDTO>> getLoanPlansContract(PlansTypeEnum,String,Integer)
+ Response<String> createC1LoanPlansContract(CreateC1PlanContractVo)
- Long upload(DocUploadDto)
+ Response<FPlansContractVO> getFPlanContract(String)
}
class com.welab.loan.finance.test.credit.DynamicallyUpdtateTagTest {
+ {static} void main(String[])
}
class com.welab.loan.finance.app.manager.CreditAccountManager {
- BaseRabbitTemplate baseRabbitTemplate
+ void saveAccountTrack(Long,CreditAccountTrackTypeEnum,String)
+ void saveAccountTrack(String,CreditAccountTrackTypeEnum,String)
}
class com.welab.loan.finance.service.other.disburse_tax.MaumodalDisburseTaxHandler {
# List<DisburseTax> queryDisburseTax(Date,Date)
}
class com.welab.loan.finance.core.dues.vat.impl.ServiceFeeVatCost {
+ String dueType()
+ BigDecimal doCalc(BigDecimal,BigDecimal)
}
class com.welab.loan.finance.service.business.trade.UVFTradeService {
- BaseUVFTradeService baseUVFTradeService
- FundAccountInfoService fundAccountInfoService
+ BaseFifUvfService baseFifUvfService
+ void callback(TransferCallbackDto)
+ void asyncTransferForMotor(List<LoanUvfDetailExt>,String)
+ TransferDto bulidTransferDtoForMotor(FundAccountInfoDTO,List<LoanUvfDetailExt>)
}
class com.welab.loan.finance.app.base.tb.BaseRebookTimeLimitService {
- RebookTimeLimitMapper rebookTimeLimitMapper
+ RebookTimeLimit getLastRebookTimeLimit(Long,List<String>)
+ RebookTimeLimit getLastRebookTimeLimit(String)
+ List<RebookTimeLimit> listByLoanNumber(String)
+ void save(RebookTimeLimit)
}
class com.welab.loan.finance.vo.BaseRepaymentAmountInfoVo {
- {static} long serialVersionUID
- Long amount
- Long fundInterestFee
- Long serviceFee
- Long interestFee
- Long lateFee
- Long principalFee
- Long provisionFee
- Long adminFee
- Long carryFee
- Integer dueIndex
- Long discountLateFee
- Long couponLateFee
- Long couponAdminFee
- Long couponInterestFee
- Long couponPrincipal
- Long couponFundFee
- Long couponProvisionFee
- String promotionCode
- Long subFundInterestFee
- Long subServiceFee
- Long serviceFeeVat
- Long lateFeeVat
- Long adminFeeVat
- Long carryFeeVat
+ void setSumAmount()
+ Long getSumAmount()
}
class com.welab.loan.finance.model.LoanCodeExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanCodeExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanCodeExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andLoanCodeIsNull()
+ Criteria andLoanCodeIsNotNull()
+ Criteria andLoanCodeEqualTo(String)
+ Criteria andLoanCodeNotEqualTo(String)
+ Criteria andLoanCodeGreaterThan(String)
+ Criteria andLoanCodeGreaterThanOrEqualTo(String)
+ Criteria andLoanCodeLessThan(String)
+ Criteria andLoanCodeLessThanOrEqualTo(String)
+ Criteria andLoanCodeLike(String)
+ Criteria andLoanCodeNotLike(String)
+ Criteria andLoanCodeIn(List<String>)
+ Criteria andLoanCodeNotIn(List<String>)
+ Criteria andLoanCodeBetween(String,String)
+ Criteria andLoanCodeNotBetween(String,String)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andLoanNumIsNull()
+ Criteria andLoanNumIsNotNull()
+ Criteria andLoanNumEqualTo(String)
+ Criteria andLoanNumNotEqualTo(String)
+ Criteria andLoanNumGreaterThan(String)
+ Criteria andLoanNumGreaterThanOrEqualTo(String)
+ Criteria andLoanNumLessThan(String)
+ Criteria andLoanNumLessThanOrEqualTo(String)
+ Criteria andLoanNumLike(String)
+ Criteria andLoanNumNotLike(String)
+ Criteria andLoanNumIn(List<String>)
+ Criteria andLoanNumNotIn(List<String>)
+ Criteria andLoanNumBetween(String,String)
+ Criteria andLoanNumNotBetween(String,String)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andIsUserIsNull()
+ Criteria andIsUserIsNotNull()
+ Criteria andIsUserEqualTo(Boolean)
+ Criteria andIsUserNotEqualTo(Boolean)
+ Criteria andIsUserGreaterThan(Boolean)
+ Criteria andIsUserGreaterThanOrEqualTo(Boolean)
+ Criteria andIsUserLessThan(Boolean)
+ Criteria andIsUserLessThanOrEqualTo(Boolean)
+ Criteria andIsUserIn(List<Boolean>)
+ Criteria andIsUserNotIn(List<Boolean>)
+ Criteria andIsUserBetween(Boolean,Boolean)
+ Criteria andIsUserNotBetween(Boolean,Boolean)
}
class com.welab.loan.finance.model.LoanCodeExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanCodeExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.vo.FifUvfMotoRepayExcelVo {
- String loanNumber
- String applyNo
- String branchId
- String contractId
- Date repaymentAt
- String userName
- Long userId
- Integer period
- String seqNo
- Long installmentAmount
- Long totalAmount
- Long repaymentAmount
- Long collectionFee
- Long lateFee
- Long outstandingAmount
- Long fundId
- Long serviceFeePay
- Long fundAmountPay
- Long lateFeeUnPay
- Long outstandingLoan
- Long transferAmount
- Long operatorId
- String term
- Long actualTotalAmount
- Long actualInterestAmount
- Long actualPrincipalAmount
- Long actualOutstandingLoan
- BigDecimal mgsPortion
- BigDecimal portion
- String mgsPortionRate
- String portionRate
- String secondProdCode
}
class com.welab.loan.finance.test.FifUvf.UfiMotorTest {
- FifUvfBusiService fifUvfBusiService
- FifUvfController fifUvfController
+ void uploadLoan()
+ void test()
}
class com.welab.loan.finance.model.DuesRepayUpdateRecordExtExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> DuesRepayUpdateRecordExtExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.DuesRepayUpdateRecordExtExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andRecordIdIsNull()
+ Criteria andRecordIdIsNotNull()
+ Criteria andRecordIdEqualTo(Long)
+ Criteria andRecordIdNotEqualTo(Long)
+ Criteria andRecordIdGreaterThan(Long)
+ Criteria andRecordIdGreaterThanOrEqualTo(Long)
+ Criteria andRecordIdLessThan(Long)
+ Criteria andRecordIdLessThanOrEqualTo(Long)
+ Criteria andRecordIdIn(List<Long>)
+ Criteria andRecordIdNotIn(List<Long>)
+ Criteria andRecordIdBetween(Long,Long)
+ Criteria andRecordIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.DuesRepayUpdateRecordExtExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.DuesRepayUpdateRecordExtExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
interface com.welab.loan.finance.mapper.FinanceRefundDetailExtMapper {
~ void batchInsert(List<FinanceRefundDetail>)
~ List<TrackExt> selectByDate(RefundParams)
~ List<InsuredTrackExt> sumInsuredAmountByDate(RefundParams)
~ List<TrackExt> selectBankByDate(List<String>,List<String>)
~ List<TrackExt> selectBankByGatewayType(List<String>,Byte)
~ List<TrackExt> selectBankForFaspayFeeByDate(List<String>)
~ List<TrackExt> selectDetailByDate(RefundParams)
~ List<TrackExt> getInsuredDetailAmountByDate(RefundParams)
~ List<TrackExt> selectByDateForSold(RefundParams)
}
class com.welab.loan.finance.test.tb.TbTest {
- TbRepaymentManager tbRepaymentManager
- BaseLoanService baseLoanService
- RechargeBusiService rechargeBusiService
- TbDisbursementQryExe tbDisbursementQryExe
- TbQueryService tbQueryService
+ void findRepamentList()
+ void testLoanDetail()
+ void testTbDetail()
+ void testRecharge()
+ void testDisbursedList()
+ void findPendRepayList()
+ void listRepayment()
+ void tbQueryTest()
}
class com.welab.loan.finance.vo.AmountExtVo {
- String loanNumber
- Long amount
- Long receivedAmount
- Date transTime
- String transId
}
class com.welab.loan.finance.dto.UvfDueDto {
- {static} long serialVersionUID
- String loanNumber
- String secondProCode
- String contractId
}
class com.welab.loan.finance.model.LoanPlansLogExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanPlansLogExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanPlansLogExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andDueIndexIsNull()
+ Criteria andDueIndexIsNotNull()
+ Criteria andDueIndexEqualTo(Integer)
+ Criteria andDueIndexNotEqualTo(Integer)
+ Criteria andDueIndexGreaterThan(Integer)
+ Criteria andDueIndexGreaterThanOrEqualTo(Integer)
+ Criteria andDueIndexLessThan(Integer)
+ Criteria andDueIndexLessThanOrEqualTo(Integer)
+ Criteria andDueIndexIn(List<Integer>)
+ Criteria andDueIndexNotIn(List<Integer>)
+ Criteria andDueIndexBetween(Integer,Integer)
+ Criteria andDueIndexNotBetween(Integer,Integer)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andSubPrincipalIsNull()
+ Criteria andSubPrincipalIsNotNull()
+ Criteria andSubPrincipalEqualTo(Long)
+ Criteria andSubPrincipalNotEqualTo(Long)
+ Criteria andSubPrincipalGreaterThan(Long)
+ Criteria andSubPrincipalGreaterThanOrEqualTo(Long)
+ Criteria andSubPrincipalLessThan(Long)
+ Criteria andSubPrincipalLessThanOrEqualTo(Long)
+ Criteria andSubPrincipalIn(List<Long>)
+ Criteria andSubPrincipalNotIn(List<Long>)
+ Criteria andSubPrincipalBetween(Long,Long)
+ Criteria andSubPrincipalNotBetween(Long,Long)
+ Criteria andSubServiceFeeIsNull()
+ Criteria andSubServiceFeeIsNotNull()
+ Criteria andSubServiceFeeEqualTo(Long)
+ Criteria andSubServiceFeeNotEqualTo(Long)
+ Criteria andSubServiceFeeGreaterThan(Long)
+ Criteria andSubServiceFeeGreaterThanOrEqualTo(Long)
+ Criteria andSubServiceFeeLessThan(Long)
+ Criteria andSubServiceFeeLessThanOrEqualTo(Long)
+ Criteria andSubServiceFeeIn(List<Long>)
+ Criteria andSubServiceFeeNotIn(List<Long>)
+ Criteria andSubServiceFeeBetween(Long,Long)
+ Criteria andSubServiceFeeNotBetween(Long,Long)
+ Criteria andSubFundInterestIsNull()
+ Criteria andSubFundInterestIsNotNull()
+ Criteria andSubFundInterestEqualTo(Long)
+ Criteria andSubFundInterestNotEqualTo(Long)
+ Criteria andSubFundInterestGreaterThan(Long)
+ Criteria andSubFundInterestGreaterThanOrEqualTo(Long)
+ Criteria andSubFundInterestLessThan(Long)
+ Criteria andSubFundInterestLessThanOrEqualTo(Long)
+ Criteria andSubFundInterestIn(List<Long>)
+ Criteria andSubFundInterestNotIn(List<Long>)
+ Criteria andSubFundInterestBetween(Long,Long)
+ Criteria andSubFundInterestNotBetween(Long,Long)
+ Criteria andSubAdminFeeIsNull()
+ Criteria andSubAdminFeeIsNotNull()
+ Criteria andSubAdminFeeEqualTo(Long)
+ Criteria andSubAdminFeeNotEqualTo(Long)
+ Criteria andSubAdminFeeGreaterThan(Long)
+ Criteria andSubAdminFeeGreaterThanOrEqualTo(Long)
+ Criteria andSubAdminFeeLessThan(Long)
+ Criteria andSubAdminFeeLessThanOrEqualTo(Long)
+ Criteria andSubAdminFeeIn(List<Long>)
+ Criteria andSubAdminFeeNotIn(List<Long>)
+ Criteria andSubAdminFeeBetween(Long,Long)
+ Criteria andSubAdminFeeNotBetween(Long,Long)
+ Criteria andSubLateFeeIsNull()
+ Criteria andSubLateFeeIsNotNull()
+ Criteria andSubLateFeeEqualTo(Long)
+ Criteria andSubLateFeeNotEqualTo(Long)
+ Criteria andSubLateFeeGreaterThan(Long)
+ Criteria andSubLateFeeGreaterThanOrEqualTo(Long)
+ Criteria andSubLateFeeLessThan(Long)
+ Criteria andSubLateFeeLessThanOrEqualTo(Long)
+ Criteria andSubLateFeeIn(List<Long>)
+ Criteria andSubLateFeeNotIn(List<Long>)
+ Criteria andSubLateFeeBetween(Long,Long)
+ Criteria andSubLateFeeNotBetween(Long,Long)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.LoanPlansLogExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanPlansLogExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
enum com.welab.loan.finance.enums.DueAndRepayImportStatusEnum {
+  IN_PROGRESS
+  DONE
- Integer status
- String desc
}
class com.welab.loan.finance.vo.ImportResVO {
- List<String> errorMsgList
- Integer successCount
}
class com.welab.loan.finance.controller.ContractController {
- BaseLoanService baseLoanService
- LoansService loansService
+ Response loanList(Long,String,LoanBackDto)
+ Response downLoad(List<String>)
}
class com.welab.loan.finance.core.loan.transform.TransformDuesImpl {
- PlanServiceImpl planService
- QueryDuesServiceImpl queryDuesService
- LoanDetailMapper loanDetailMapper
- LoanDetailExtendMapper extendMapper
- LoanCouponMapper loanCouponMapper
- LoanCouponDetailMapper loanCouponDetailMapper
- BaseMerchantService baseMerchantService
- LoanApplyPlansMapper loanApplyPlansMapper
- LoanPlansRelationMapper loanPlansRelationMapper
- CreditUserLoanMapper creditUserLoanMapper
- ILoanUserRepay loanUserRepay
- BaseLoanCodeService loanCodeService
- IVirtualAccount virtualAccount
- LoanCouponServiceImpl loanCouponService
- LoansService loansService
- ActivityDubboService activityDubboService
- BaseRabbitTemplate rabbitTemplate
- CreditUserAccountMapper creditUserAccountMapper
- CouponMultipleDecreaseExe couponMultipleDecreaseExe
- ProductService productService
- LoanDetailManager loanDetailManager
- FinanceRepaymentTrackManager financeRepaymentTrackManager
- BackstageConfigFacade backstageConfigFacade
- CPlanManager cPlanManager
- EPlanManager ePlanManager
- EPlanService ePlanService
- PartnerServiceFacade partnerServiceFacade
- AstraPayWalletServiceFacade astraPayWalletServiceFacade
- AhassRepaymentServiceFacade ahassRepaymentServiceFacade
- RebookCheckCmdExe rebookCheckCmdExe
- LoanCessieInfoService loanCessieInfoService
- BackstageConfigServiceFacade backstageConfigServiceFacade
- CreditLoanServiceFacade creditLoanServiceFacade
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- ApolloUtils apolloUtils
- LoanDetailExtendExtMapper loanDetailExtendExtMapper
- BaseRepaymentTrack baseRepaymentTrack
- BaseLoanRepaymentService baseLoanRepaymentService
+ List<CouponDues> findDuesByCoupon(String)
+ LoanDataDTO findDuesByCredit(Long,boolean)
- boolean switchIsOpen(PlansTypeEnum)
+ void handlePartnerInfo(EPlanApplyDTO,LoanInfoDTO,LoanTransDetailDTO,List<PartnerLogoVO>,String)
+ LoanTransDetailDTO findTransDetailByCredit(String)
+ String checkCustomrepayStatus(LoanDetail,LoanApplyPlans,Integer,LoansVO)
+ Response saveMultipleRepaymentV2(MulRepaymentDTO)
+ Response saveMultipleRepayment(MulRepaymentDTO)
+ void findCurRepayAmount(LoanInfoDTO,LoanDetail,List<Dues>)
+ void findCurRepayAmount(LoanInfoDTO,LoanDetail,LoanApplyPlans,List<Dues>)
+ Response checkPromotionCodeNew(MulRepaymentDTO,Map<String,LoanDetail>,List<Dues>)
- Response checkPromotionCode(MulLoanDTO,LoanDetail,List<Dues>)
- Long findCurRepayAmountByAmount(MulLoanDTO,LoanDetail,List<Dues>)
- void findLoanByCouponCustom(LoanInfoDTO,LoanDetail,List<Dues>)
- Set<Integer> findIgnoreDueIndexSet(LoanCoupon,LoanDetail,List<Dues>)
- Map<String,Long> findCouponDetailMap(List<LoanCouponDetail>)
- ActivityCodeResponseDTO useActivityCodeNew(AcitivityPromoCodeDTO)
- ActivityCodeResponseDTO findActivityCode(ActivityCodeRequestDTO)
- boolean findLoanByPlan(LoanDetail,LoanInfoDTO,List<Dues>,LoanApplyPlans)
- LoanCoupon findLoanCoupon(String)
- LoanPlansRelation findLoanPlansRelation(String)
- LoanApplyPlans findApplyPlan(String)
- List<LoanApplyPlans> findApplyPlanList(List<String>)
- String findMerchantProductName(String,String)
- LoanDetailExtend findLoanDetailExtend(String)
- List<LoanDetailExtend> findLoanDetailExtend(List<String>)
- List<LoanDetail> findLoanByUserId(Long)
- List<LoanDetail> findLoanByLoans(List<String>,Long)
- LoanDetail findLoan(String)
- List<LoanCouponDetail> findAllUserCouponByStatus(String,List<Byte>)
- CreditLoanDto findCreditUserLoan(String)
- CreditUserAccountDTO findCreditUserAccount(Long)
- List<VirtualAccountVO> checkVirtualAccount(List<VirtualAccountVO>,Long)
- void setRepaymentDate(LoanTransDetailDTO)
- Date getRepaymentDate(String,Integer)
- List<LoanDetail> handleLoansOrder(List<Dues>,List<LoanDetail>)
}
interface com.welab.loan.finance.mapper.AdvanceMsgListMapper {
~ long countByExample(AdvanceMsgListExample)
~ int deleteByExample(AdvanceMsgListExample)
~ int deleteByPrimaryKey(Long)
~ int insert(AdvanceMsgList)
~ int insertSelective(AdvanceMsgList)
~ List<AdvanceMsgList> selectByExample(AdvanceMsgListExample)
~ AdvanceMsgList selectByPrimaryKey(Long)
~ int updateByExampleSelective(AdvanceMsgList,AdvanceMsgListExample)
~ int updateByExample(AdvanceMsgList,AdvanceMsgListExample)
~ int updateByPrimaryKeySelective(AdvanceMsgList)
~ int updateByPrimaryKey(AdvanceMsgList)
}
class com.welab.loan.finance.app.command.coupon.CancelCouponCmdExe {
- BasePayService basePayService
- BaseRabbitTemplate rabbitTemplate
+ Response<Boolean> excute(CancelCouponCmd)
+ Response<Boolean> cancelCouponForUser(CancelCouponForUserCmd)
}
class com.welab.loan.finance.model.ext.PendingLendExt {
- Long id
- Long orgId
- String batchNo
- Long num
- Long amount
- String period
- BigDecimal adminRate
- Long adminFee
- String productCode
- String secondProdCode
- Byte lendType
- Boolean isHeadFee
- Integer fixAdminFee
- Byte preferentialType
- String disAdminFee
- Byte adminType
- Byte lendStatus
- String loanNumber
}
class com.welab.loan.finance.vo.CouponRepaymentVo {
- Long orgRepayAmount
- Long couponRepayAmount
}
class com.welab.loan.finance.model.ext.LoanRepayExt {
- Long id
- String loanNumber
- String period
- Long amount
- Date applyAt
- Long userId
- String userName
- String mobile
- String productCode
- Date lendAt
- Byte lendType
- Byte lendStatus
- Byte retryNum
- Byte repayStatus
- Date createAt
- Date updateAt
- Long fundId
- Integer num
- String cardNumber
- Long repayment
- Long actualRepayment
- Date repaymentTime
- Long storeId
- String scoreClass
- String branch
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getPeriod()
+ void setPeriod(String)
+ Long getAmount()
+ void setAmount(Long)
+ Date getApplyAt()
+ void setApplyAt(Date)
+ Long getUserId()
+ void setUserId(Long)
+ String getUserName()
+ void setUserName(String)
+ String getProductCode()
+ void setProductCode(String)
+ Date getLendAt()
+ void setLendAt(Date)
+ Byte getLendType()
+ void setLendType(Byte)
+ Byte getLendStatus()
+ void setLendStatus(Byte)
+ Byte getRetryNum()
+ void setRetryNum(Byte)
+ Byte getRepayStatus()
+ void setRepayStatus(Byte)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ String getCardNumber()
+ void setCardNumber(String)
+ Long getRepayment()
+ void setRepayment(Long)
+ Long getActualRepayment()
+ void setActualRepayment(Long)
+ Date getRepaymentTime()
+ void setRepaymentTime(Date)
+ String getMobile()
+ void setMobile(String)
+ Integer getNum()
+ void setNum(Integer)
+ Long getFundId()
+ void setFundId(Long)
+ Long getStoreId()
+ void setStoreId(Long)
+ String getScoreClass()
+ void setScoreClass(String)
+ String getBranch()
+ void setBranch(String)
}
class com.welab.loan.finance.app.manager.flow.FlowTaskServiceManager {
- BaseFlowTaskService baseFlowTaskService
- BaseBigFieldParamService baseBigFieldParamService
+ int addFlowTask(FlowTask)
+ int updateFlowTaskStatus(Long,Byte)
+ int updateFlowTask(FlowTask)
+ int updateFlowTaskStatus(List<Long>,Byte)
+ List<FlowTask> getRetryFlowTaskList(int,Integer)
}
interface com.welab.loan.finance.mapper.ext.CreditUserAccountChildExtMapper {
~ int updateSelective(CreditUserAccountChildExt)
}
class com.welab.loan.finance.app.base.credit.BaseCreditActivityAbTestGroupUserRelationService {
- CreditActivityAbTestGroupUserRelationExtMapper creditActivityAbTestGroupUserRelationExtMapper
+ List<CreditActivityAbTestGroupUserRelation> selectByTestGroupId(Long)
+ int insertSelective(CreditActivityAbTestGroupUserRelation)
+ boolean hasInTestGroup(CreditActivityAbTestGroupUserRelationExt)
+ int batchInsert(List<CreditActivityAbTestGroupUserRelation>)
}
class com.welab.loan.finance.core.dues.impl.HsoCostService {
- boolean isDiscount
- {static} String LOG_PREFIX
+ CostDetailDTO findCostDetail(CostReqDTO)
+ String costKey()
}
enum com.welab.loan.finance.enums.LoanDelayTypeEnum {
+  RECHARGE
+  LEND
- byte val
- String desc
- String name
+ {static} LoanDelayTypeEnum getLoanDelayType(Byte)
}
class com.welab.loan.finance.model.LoanTimeoutConfig {
- Long id
- String productCode
- Boolean whetherExistOrigin
- String origin
- Integer unconfirm
- Integer untake
+ Long getId()
+ void setId(Long)
+ String getProductCode()
+ void setProductCode(String)
+ Boolean getWhetherExistOrigin()
+ void setWhetherExistOrigin(Boolean)
+ String getOrigin()
+ void setOrigin(String)
+ Integer getUnconfirm()
+ void setUnconfirm(Integer)
+ Integer getUntake()
+ void setUntake(Integer)
}
class com.welab.loan.finance.model.ext.LateFeeDuesExt {
- Long id
- String loanId
- Integer dueIndex
- Long amount
- Long afterAmount
}
class com.welab.loan.finance.dto.PaymentDto {
- String loanNumber
- Long userId
- Long amount
- String bankCode
}
class com.welab.loan.finance.dto.SendRepaymentDTO {
- Long userId
- String code
- String loanNumber
- Long amount
- String repayConfig
- String promotionCode
- boolean isApp
- Long orgId
- Integer day
- boolean pro
- Long applyUserId
}
class com.welab.loan.finance.dto.LoanCouponDetailDTO {
- Long id
- Byte type
- Byte preferentialType
- String loanNumber
- Integer dueIndex
- String promotionCode
- Long discountPrincipal
- Long discountServiceFee
- Long discountFundInterest
- Long discountAdminFee
- Long discountLateFee
- Byte status
- Date createdAt
- Date updatedAt
- Long discountCarryingFee
- Long curPrincipal
- Long curServiceFee
- Long curFundInterest
- Long curAdminFee
- Long curLateFee
- Long curCarryingFee
- Long orgPrincipal
- Long orgServiceFee
- Long orgFundInterest
- Long orgAdminFee
- Long orgLateFee
- Long orgCarryingFee
}
class com.welab.loan.finance.job.SigapRepayJob {
- FinanceLendExtMapper financeLendExtMapper
- ApplicationService applicationService
+ void execute(ShardingContext)
+ UserProfileVO getUserProfiles(Long)
+ WorkProfileVO getWorkProfile(Long)
+ List quaryList(String)
+ SigapExcelExt transform(Object)
+ LinkedHashMap getExcelHead()
+ String getSubject(String)
+ void setEmailUser()
}
class com.welab.loan.finance.test.tb.FlexRepaymentImportCmdExeTest {
- FlexRepaymentImportCmdExe flexRepaymentImportCmdExe
+ void flexRepaymentImportCmdExe()
}
class com.welab.loan.finance.vo.request.RepaymentExcelVo {
- String loanNumber
- String amount
- String storeId
- Long userId
- String error
}
class com.welab.loan.finance.model.FinanceLend {
- Long id
- Long userId
- String loanNumber
- Long orgId
- Boolean isPayAdminfee
- Boolean isPayChannelfee
- Byte mode
- String mobile
- Long amount
- Long channelFee
- Long otherFee
- Long provisionFee
- Long astraFee
- Long surplusAmount
- Long receivedAmount
- String lendAccount
- String bankCode
- String receiptAccount
- String accountName
- Date createdAt
- Date updatedAt
- String transId
- String lendid
- Byte status
- Long fundId
- Byte lendType
- Long storeId
- Byte fundType
- String orderNo
- Long fundInterestFee
- Long serviceFee
- String carryExt
- String previousTransId
- Long afTransfer
- Date lendUpdatedAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Long getOrgId()
+ void setOrgId(Long)
+ Boolean getIsPayAdminfee()
+ void setIsPayAdminfee(Boolean)
+ Boolean getIsPayChannelfee()
+ void setIsPayChannelfee(Boolean)
+ Byte getMode()
+ void setMode(Byte)
+ String getMobile()
+ void setMobile(String)
+ Long getAmount()
+ void setAmount(Long)
+ Long getChannelFee()
+ void setChannelFee(Long)
+ Long getOtherFee()
+ void setOtherFee(Long)
+ Long getProvisionFee()
+ void setProvisionFee(Long)
+ Long getAstraFee()
+ void setAstraFee(Long)
+ Long getSurplusAmount()
+ void setSurplusAmount(Long)
+ Long getReceivedAmount()
+ void setReceivedAmount(Long)
+ String getLendAccount()
+ void setLendAccount(String)
+ String getBankCode()
+ void setBankCode(String)
+ String getReceiptAccount()
+ void setReceiptAccount(String)
+ String getAccountName()
+ void setAccountName(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getTransId()
+ void setTransId(String)
+ String getLendid()
+ void setLendid(String)
+ Byte getStatus()
+ void setStatus(Byte)
+ Long getFundId()
+ void setFundId(Long)
+ Byte getLendType()
+ void setLendType(Byte)
+ Long getStoreId()
+ void setStoreId(Long)
+ Byte getFundType()
+ void setFundType(Byte)
+ String getOrderNo()
+ void setOrderNo(String)
+ Long getFundInterestFee()
+ void setFundInterestFee(Long)
+ Long getServiceFee()
+ void setServiceFee(Long)
+ String getCarryExt()
+ void setCarryExt(String)
+ String getPreviousTransId()
+ void setPreviousTransId(String)
+ Long getAfTransfer()
+ void setAfTransfer(Long)
+ Date getLendUpdatedAt()
+ void setLendUpdatedAt(Date)
}
class com.welab.loan.finance.test.credit.UserTagRuleTest {
- CreditUserTagRuleService creditUserTagRuleService
- TagExpressInternalFunctionService tagExpressInternalFunction
- CreditUserTagService creditUserTagService
- CreditMigrateUserService creditSubTagService
- TagExpressInternalFunctionMapper tagExpressInternalFunctionMapper
- BaseCreditUserAccountService baseCreditUserAccountService
- ActivityDubboService activityDubboServiceImpl
+ void testRule()
+ void testRule2()
+ void testRuleAmount()
+ void useCode()
+ void rematchRule()
+ void migrateUserRuleTag()
+ void testRepaymentQry()
+ void testQry()
+ void testRuleById()
}
class com.welab.loan.finance.model.ext.TbLoanExt {
- {static} long serialVersionUID
- Long id
- Long userId
- Long parentUserId
- Date createdAt
- Date updatedAt
- Boolean deleted
- String partner
- String orderNo
- String loanNumber
- String batchNo
- String lendBatchNo
- String secondProdCode
- String contractNo
- Long amount
- String term
- String billingNo
- Date businessTime
- String docId
- String resId
- Long fundId
}
class com.welab.loan.finance.app.command.tb.lend.callback.TbLendCallbackService {
- TbLendNotifyService tbLendNotifyService
- BaseLoanDetailService baseLoanDetailService
- BaseFinanceLendNewService baseFinanceLendNewService
- BaseRabbitTemplate rabbitTemplate
+ void doCallback(TbLendCallbackCmd)
- void doLendSuccess(String,List<LoanDetail>)
}
class com.welab.loan.finance.model.LoanPlansRelation {
- Long id
- String loanNumber
- Long amount
- Long downPaymentAmount
- String period
- String oldLoanNumber
- String oldPeriod
- Long applyId
- Byte status
- Date fundSignAt
- Date createdAt
- Date updatedAt
- String remark
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Long getAmount()
+ void setAmount(Long)
+ Long getDownPaymentAmount()
+ void setDownPaymentAmount(Long)
+ String getPeriod()
+ void setPeriod(String)
+ String getOldLoanNumber()
+ void setOldLoanNumber(String)
+ String getOldPeriod()
+ void setOldPeriod(String)
+ Long getApplyId()
+ void setApplyId(Long)
+ Byte getStatus()
+ void setStatus(Byte)
+ Date getFundSignAt()
+ void setFundSignAt(Date)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getRemark()
+ void setRemark(String)
}
class com.welab.loan.finance.service.core.BaseFinanceRefundDetailService {
- FinanceRefundDetailMapper financeRefundDetailMapper
- FinanceRefundDetailExtMapper financeRefundDetailExtMapper
+ void insert(FinanceRefundDetail)
+ void insertBatch(List<FinanceRefundDetail>)
+ List<FinanceRefundDetail> listByTransId(String)
}
class com.welab.loan.finance.core.loan.repay.UserRepayAmountImpl {
- ILoanUserRepay loanUserRepay
- LoanDetailManager loanDetailManager
- LoanApplyPlansMapper loanApplyPlansMapper
- LoanPlansRelationMapper loanPlansRelationMapper
- IQueryDuesService queryDuesService
- IModLateService modLateService
- BaseLoanCouponService baseLoanCouponService
- TbDuesServiceHelper tbDuesServiceHelper
- TbDuesUpdateService tbDuesUpdateService
- BaseLoanDetailExtendService baseLoanDetailExtendService
+ Long findUserRepayAmountByUser(Long)
+ Long findUserRepayAmountByLoans(List<String>)
+ Long findUserRepayAmountByDues(LoanDetail,List<Dues>)
+ UserRepayDTO findUserRepayAmountByVa(Long,String)
+ List<UserRepayRangeDTO> findUserRepayAmountRangeByLoan(List<String>)
+ List<UserRepayRangeDTO> findUserRepayAmountRangeByLoan(List<String>,Date)
+ List<UserRepayRangeDTO> findUserRepayAmountRangeByLoan(List<String>,Date,Boolean)
+ List<String> findDefaultLoanByUser(Long)
+ List<String> findFilterDefaultLoanByUser(Long,Date)
+ boolean saveDefaultLateFeeLoanByLoans(List<String>,Date)
+ Long findDefaultLoanAmountByLoans(List<String>,Date)
# List<UserRepayRangeDTO> findNormalLoanPlanOrCouponCustomList(List<LoanDetail>,Map<String,List<Dues>>,Date)
- List<UserRepayRangeDTO> findNormalLoanPlanOrCouponCustomList(List<LoanDetail>,Map<String,List<Dues>>,Date,Boolean)
# List<UserRepayRangeDTO> findCreditLoanPlanOrCouponCustomList(List<LoanDetail>,Map<String,List<Dues>>,Date)
- List<UserRepayRangeDTO> findCreditLoanPlanOrCouponCustomList(List<LoanDetail>,Map<String,List<Dues>>,Date,Boolean)
# List<UserRepayRangeDTO> findCreditCouponCustomList(List<LoanDetail>,List<Dues>,Date)
- List<UserRepayRangeDTO> findCreditCouponCustomList(List<LoanDetail>,List<Dues>,Date,Boolean)
# UserRepayRangeDTO findLoanPlanOrCouponCustom(LoanDetail,List<Dues>,Date)
- UserRepayRangeDTO findLoanPlanOrCouponCustom(LoanDetail,List<Dues>,Date,Boolean)
# UserRepayRangeDTO findLoanByCouponCustom(LoanDetail,List<Dues>,Date)
+ UserRepayRangeDTO findLoanByCouponCustomByTravola(LoanDetail,List<Dues>)
- UserRepayRangeDTO findLoanByCouponCustom(LoanDetail,List<Dues>,Date,Boolean)
- String getRepayDueIndex(LoanDetail,Long)
- UserRepayRangeDTO findLoanByPlan(LoanDetail,List<Dues>,LoanApplyPlans)
- Long findNextRepayAmount(List<Dues>,Integer)
- LoanApplyPlans findApplyPlan(String)
- LoanPlansRelation findLoanPlansRelation(String)
}
class com.welab.loan.finance.app.service.credit.CreditActivityAbTestService {
- CreditActivityAbTestManager creditActivityAbTestManager
- BaseCreditActivityAbTestService baseCreditActivityAbTestService
- BaseCreditActivityAbTestGroupUserRelationService baseCreditActivityAbTestGroupUserRelationService
- BaseCreditActivityAbTestGroupService baseCreditActivityAbTestGroupService
- BaseCreditActivityAbTestGroupUserTagRelationService baseCreditActivityAbTestGroupUserTagRelationService
- BaseCreditBigFieldRelationService baseCreditBigFieldRelationService
- BaseCreditUserTagService baseCreditUserTagService
- ProductConfigServiceFacade productConfigServiceFacade
- BaseCreditUserInfoService baseCreditUserInfoService
- CreditAbTestHitDataQryExe creditAbTestHitDataQryExe
- CreditActivityImportUserIdManager creditActivityImportUserIdManager
- CreditAbTestUserCalculationManager creditAbTestUserCalculationManager
- UserServiceFacade userServiceFacade
- TenorSortListManager tenorSortListManager
~ {static} List<String> TRIGGER_UPDATE_REDIS_STATUS_LIST
~ {static} List<String> CAN_NOT_CHANGE_CONFIG
~ {static} List<String> VALID_ACTION_TYPE
~ {static} List<String> SHOW_FUND
+ List<String> getTagListByMatrixType(String)
+ CreditActivityAbTestBaseResponseVo getAbTestConfig(Long)
+ JSONObject getCreditUserTagByUserTags(List<String>,Long)
- List<CreditUserTagConfigDto> getCreditUserTagConfig(List<String>)
- JSONObject buildBaseConfigJsonObject(List<CreditUserTagConfigDto>,String)
~ JSONObject baseConfigControlGroupJson(List<CreditUserTagConfigDto>)
- void assembleSecondProductCode(List<String>,String,JSONObject)
~ JSONObject baseConfigTestGroupJson(String,JSONObject)
~ JSONObject testGroupFundingRateJson(String)
+ JSONObject buildFundRate(CreditActivityAbTestQueryVo)
+ JSONObject fundRateTestGroupJson(JSONObject,String,CreditActivityAbTestQueryVo)
+ JSONObject fundRateJsonByParams(String,String)
- String clV2FundRate(String,String,ProductRateConfigVO,JSONArray,String)
- void plFundRate(String,ProductRateConfigVO,JSONArray,String)
- String clV1FundRate(String,ProductRateConfigVO,JSONArray,String)
+ void doUpdateStatus(Long,String,Long)
- void canOperate(Long,String)
+ Long doSaveOrUpdateAbTest(CreditActivityAbTestSaveBaseRequestVo,Long)
- Long saveProcess(CreditActivityAbTestSaveBaseRequestVo,Long)
- void updateProcess(CreditActivityAbTestSaveBaseRequestVo)
- Long saveAbTestGroup(CreditActivityAbTestSaveGroupRequestVo,Long)
+ void preCondition(CreditActivityAbTestSaveGroupRequestVo)
- Long saveAbTest(CreditActivityAbTestSaveRequestVo,Long,Long)
+ CreditActivityAbTestUserVo getAbtestUserInfo(Long)
+ CreditActivityAbTestUserVo trialCalculationAbtestUser(CreditActivityAbTestUsertrialCalculationVo)
+ List<CreditActivityAbTestDataVo> getAbTestData(Long,Integer)
+ Response<String> importTestUserIds(MultipartFile)
+ {static} void main(String[])
+ Response<PageInfo<CreditActivityAbTestResponseVo>> getPageActivityInfo(CreditActivityAbTestRequestVo,Integer,Integer)
+ Response<PageInfo<CreditActivityAbTestGroupResponseVo>> getPageTestGroupInfo(CreditActivityAbTestRequestVo,Integer,Integer)
+ Response<CreditActivityAbTestCountStatusVo> countActivityStatus()
+ CreditActivityAbTestRateVo calculateAbTestRateVo(CreditActivityAbTestRateVo)
+ BigDecimal calculateServiceRate(String,JSONArray)
+ BigDecimal calculateAdminRate(String,JSONArray,String,BigDecimal)
}
class com.welab.loan.finance.test.dues.DuesQueryTest {
- DuesQueryService duesQueryService
- DuesService duesService
+ void getFPlanDues()
}
interface com.welab.loan.finance.mapper.CreditActivityAbTestGroupLoanRelationMapper {
~ long countByExample(CreditActivityAbTestGroupLoanRelationExample)
~ int deleteByExample(CreditActivityAbTestGroupLoanRelationExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditActivityAbTestGroupLoanRelation)
~ int insertSelective(CreditActivityAbTestGroupLoanRelation)
~ List<CreditActivityAbTestGroupLoanRelation> selectByExample(CreditActivityAbTestGroupLoanRelationExample)
~ CreditActivityAbTestGroupLoanRelation selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditActivityAbTestGroupLoanRelation,CreditActivityAbTestGroupLoanRelationExample)
~ int updateByExample(CreditActivityAbTestGroupLoanRelation,CreditActivityAbTestGroupLoanRelationExample)
~ int updateByPrimaryKeySelective(CreditActivityAbTestGroupLoanRelation)
~ int updateByPrimaryKey(CreditActivityAbTestGroupLoanRelation)
}
class com.welab.loan.finance.test.va.VATest {
- IVirtualAccount virtualAccount
- AccountService accountService
- CouponSyncVACmdExe couponSyncVACmdExe
- RechargeConsumer rechargeConsumer
- VACacheCleanCmdExe vACacheCleanCmdExe
- BaseVACacheRepaymentDataService baseVACacheRepaymentDataService
+ void testL()
+ void test()
+ void cleanInvalidDataTest()
+ void testMultiRepay()
+ void disCarryVatFee()
+ void testSyncVA()
+ void getBankCodeList()
}
interface com.welab.loan.finance.mapper.CreditActivityAbTestGroupUserRelationMapper {
~ long countByExample(CreditActivityAbTestGroupUserRelationExample)
~ int deleteByExample(CreditActivityAbTestGroupUserRelationExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditActivityAbTestGroupUserRelation)
~ int insertSelective(CreditActivityAbTestGroupUserRelation)
~ List<CreditActivityAbTestGroupUserRelation> selectByExample(CreditActivityAbTestGroupUserRelationExample)
~ CreditActivityAbTestGroupUserRelation selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditActivityAbTestGroupUserRelation,CreditActivityAbTestGroupUserRelationExample)
~ int updateByExample(CreditActivityAbTestGroupUserRelation,CreditActivityAbTestGroupUserRelationExample)
~ int updateByPrimaryKeySelective(CreditActivityAbTestGroupUserRelation)
~ int updateByPrimaryKey(CreditActivityAbTestGroupUserRelation)
}
class com.welab.loan.finance.common.DuesHelper {
+ {static} boolean isLaterFee(String)
+ {static} boolean isLaterFeeVAT(String)
+ {static} boolean isLaterFeeOrVAT(String)
+ {static} boolean isCarryingFee(String)
+ {static} boolean isCarryingFeeVAT(String)
+ {static} boolean isCarryingFeeOrVAT(String)
}
class com.welab.loan.finance.app.command.credit.UpdateOrInitCreditCmdExe {
- BaseCreditUserAccountService baseCreditUserAccountService
- FillingCreditManager fillingCreditManager
- CreditMigrateUserService creditMigrateUserService
- BaseCreditUpdateDetailService baseCreditUpdateDetailService
- CreditLoanAmountConfigServiceImpl creditLoanAmountConfigServiceImpl
- OprateAccountManager oprateAccountManager
- CreditNotifyManager creditNotifyManager
- UserServiceFacade userServiceFacade
- CreditAbTestUserCalculationManager creditAbTestUserCalculationManager
- CreditActivityAbTestManager creditActivityAbTestManager
- BaseCreditActivityAbTestService baseCreditActivityAbTestService
- UpdateOrInitCreditCmdExe getThis()
+ Response<Boolean> updateOrInitCreditForTransaction(UpdateCreditUserAccountVO)
+ boolean updateCreditLimit(UpdateCreditUserAccountVO,List<CreditUserAccountExt>,Map<String,Long>)
+ boolean initCreditLimit(UpdateCreditUserAccountVO,String,Map<String,Long>)
}
class com.welab.loan.finance.model.FinanceTrading {
- Long id
- String loanNumber
- Long orgId
- String outAccountNo
- String inAccountNo
- Integer type
- Long amount
- Byte status
- Long fundId
- Byte fundType
- String batchNo
- String orderId
- String remark
- Date createdAt
- Date updatedAt
- String merchantCode
- Date transactionCallBackTime
- String bankCode
- String fundTradingType
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Long getOrgId()
+ void setOrgId(Long)
+ String getOutAccountNo()
+ void setOutAccountNo(String)
+ String getInAccountNo()
+ void setInAccountNo(String)
+ Integer getType()
+ void setType(Integer)
+ Long getAmount()
+ void setAmount(Long)
+ Byte getStatus()
+ void setStatus(Byte)
+ Long getFundId()
+ void setFundId(Long)
+ Byte getFundType()
+ void setFundType(Byte)
+ String getBatchNo()
+ void setBatchNo(String)
+ String getOrderId()
+ void setOrderId(String)
+ String getRemark()
+ void setRemark(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getMerchantCode()
+ void setMerchantCode(String)
+ Date getTransactionCallBackTime()
+ void setTransactionCallBackTime(Date)
+ String getBankCode()
+ void setBankCode(String)
+ String getFundTradingType()
+ void setFundTradingType(String)
}
class com.welab.loan.finance.controller.ProductController {
- ProductService productService
- ProductConfigService productConfigService
- BaseLoanTimeoutConfig loanTimeoutConfig
- CreditLoanAmountConfigServiceImpl creditLoanAmountConfigServiceImpl
- ProductRateConfigService productRateConfigService
+ Response<PageInfo<ProductExtVO>> getProductPage(String,ProductDtoExt)
+ Response<PageInfo<ProductRateConfigExtVO>> getProductRateConfig(ProductRateConfigDtoExt)
+ Response updateProductConfig(Long,ProductRateConfigExtVO)
+ Response updateFundRateConfig(Long,FundRateConfigVO)
+ Response saveProduct(ProductVO)
+ Response<ProductRateConfigVO> getProductRateConfig(Long)
+ Response getProductConfig(String)
+ Response updateLoanTimeOutConfig(LoanTimeoutConfig)
+ Response refreshProductConfig()
}
class com.welab.loan.finance.model.CreditUserAccountChild {
- Long id
- Long accountId
- String secondProductCode
- String tenor
- Long sumMoney
- Long freezeMoney
- Long useMoney
- Date createdAt
- Date updatedAt
- Boolean deleted
+ Long getId()
+ void setId(Long)
+ Long getAccountId()
+ void setAccountId(Long)
+ String getSecondProductCode()
+ void setSecondProductCode(String)
+ String getTenor()
+ void setTenor(String)
+ Long getSumMoney()
+ void setSumMoney(Long)
+ Long getFreezeMoney()
+ void setFreezeMoney(Long)
+ Long getUseMoney()
+ void setUseMoney(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
}
class com.welab.loan.finance.app.service.credit.CreditUpdateForTagRule {
- BaseCreditUserAccountService baseCreditUserAccountService
- BaseCreditUpdateDetailService baseCreditUpdateDetailService
- OprateAccountManager oprateAccountManager
- FillingCreditManager fillingCreditManager
- CreditNotifyManager creditNotifyManager
- CreditActivityAbTestManager creditActivityAbTestManager
+ Response<Boolean> updateCreditForTransaction(UpdateCreditUserAccountVO)
}
class com.welab.loan.finance.facade.collect.OptUnityLogServiceFacade {
- OptUnityLogService optUnityLogService
+ PageInfo<OptUnityLogDto> listOptUnityLog(PageRequestDTO<ListOptUnityLogCmd>)
+ Response addOptUnityLog(AddOptUnityLogCmd)
}
class com.welab.loan.finance.core.dto.va.LoanUserDTO {
- List<String> list
- Long id
}
class com.welab.loan.finance.model.AbnormalRepaymentRecord {
- Long id
- String loanNumbers
- String repaymentParam
- Byte repaymentMethod
- Byte status
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getLoanNumbers()
+ void setLoanNumbers(String)
+ String getRepaymentParam()
+ void setRepaymentParam(String)
+ Byte getRepaymentMethod()
+ void setRepaymentMethod(Byte)
+ Byte getStatus()
+ void setStatus(Byte)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.utils.ReflectionUtil {
- <<Create>> ReflectionUtil()
+ {static} Field getField(Object,String)
- {static} Object[] getReflectionInfo(Object,String)
+ {static} Object getProperty(Object,String)
+ {static} void setProperty(Object,Object,String)
}
class com.welab.loan.finance.dto.LateFeeDto {
- String loanNumber
- Long lateFee
- Integer dueIndex
- Date start
- Date end
- String origin
- Long adminId
- String optName
- boolean isSynVa
}
class com.welab.loan.finance.dto.RepaymentScheduleInfoDTO {
- String loanNumber
- String productName
- String dueIndex
- BigDecimal outstandingBalance
- Date disbursedDate
- String disbursedBank
- BigDecimal amountDisbursed
- Integer dpd
- Date dueDate
- BigDecimal originalAmount
- BigDecimal amountDue
- BigDecimal lateFeeAmount
}
class com.welab.loan.finance.rabbitmq.syn.SynTransferConsumer {
- ILendTransferService lendTransferService
+ void onMessage(Message)
+ void execute(List<SynTransferDTO>)
}
class com.welab.loan.finance.service.core.BankConfigService {
- BankConfigMapper bankConfigMapper
+ String getBankConfig()
+ String getBankConfig(Long)
- byte getBankConfigKey(Long)
+ Response<List<BankConfigDTO>> listAllBankChannelConfig(Long)
+ PageInfo<BankConfig> getBankConfigByPage(int,int)
+ PageInfo<BankConfig> getBankConfigByPage(int,int,Long)
+ Response updateBankConfig(Integer,Integer,Integer)
+ void updateBankConfigById(Integer,Boolean)
+ BankConfig getBadDebt()
+ BankConfig getBadDebtV2()
+ boolean updateBadDebtV2ById(BankConfig)
+ BankConfig getIgnoreTenor()
+ List<BankConfig> selectByExample(BankConfigExample)
+ {static} boolean matchIgnoreTenor(BankConfig,String)
+ boolean getCouponRepayment()
+ List<BankConfig> findConfigByType(BankConfigTypeEnum)
+ boolean checkBriDelayLend()
+ List<String> findJomboTenor(String)
+ {static} void main(String[])
}
class com.welab.loan.finance.vo.response.SignHistoryVO {
- {static} long serialVersionUID
- Date date
- List<SignHistoryDetailVO> historyDetailList
}
interface com.welab.loan.finance.mapper.ext.LoanUvfDetailExtMapper {
~ long loanLendIngAmount()
~ Integer findDpdByContactId(String)
}
class com.welab.loan.finance.rabbitmq.LoanPlanConsumer {
- CreditUserAccountServiceImpl creditUserAccountServiceImpl
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- ApolloUtils apolloUtils
- FPlanOpenNotifyCmdExe fPlanOpenCmdExe
+ void fPlanColse(Message)
+ void fPlanOpen(Message)
}
class com.welab.loan.finance.test.credit.UpdateTagTest {
+ {static} void main(String[])
}
class com.welab.loan.finance.vo.ProductRateConfigExtendVO {
- Integer abTestGroupType
- Long abTestId
- String controlGroupSecondProdCode
}
class com.welab.loan.finance.dto.MulRepaymentDTO {
- List<MulLoanDTO> list
- String code
- Long amount
- Long userId
- String repayConfig
- Long orgId
- Integer actionType
- String partner
}
class com.welab.loan.finance.app.impl.CreditConfigImpl {
- BaseCreditUserTagService baseCreditUserTagService
+ CreditUserTagConfigDTO getTagProductConfig(CreditAccountTypeEnums,String)
+ List<String> getCurrentUsableTag()
+ List<String> getTestFlowTag()
}
interface com.welab.loan.finance.mapper.ext.TbLoanQueryMapper {
~ long countTbLoanQry(TbLoanQry)
}
class com.welab.loan.finance.core.dues.vat.CostServiceWrapper {
- VatCostProvider vatCostProvider
+ CostDetailDTO doWrap(boolean,CostReqDTO,CostDetailDTO)
- BigDecimal getCarryingAmount(boolean,BigDecimal)
- void doUpdateAmount(boolean,Due,BigDecimal,boolean)
}
class com.welab.loan.finance.app.manager.TbLoanManager {
+ BaseTbLoanService baseTbLoanService
+ MongoManager mongoManager
+ TbLoanDoc findOneTbLoanDoc(String)
+ List<TbLoan> listByLendBatchNo(String)
+ List<TbLoan> listByLendBatchNo(List<String>)
+ List<TbLoan> listByLendBatchNoAndAmount(List<String>,Long,boolean)
+ List<String> loanNumbersForTbUpdateDues(String)
}
class com.welab.loan.finance.service.impl.FinanceConfigServiceImpl {
- BaseFinanceConfigService baseFinanceConfigService
- JedisCluster jedisCluster
- SignMethodManager signMethodManager
- {static} String PREFIX
+ Response<FinanceConfigVO> getSignOneByKey(String)
+ Response<String> getUserNamePrefix()
+ Response<Integer> UpdateUserNamePrefix(String)
}
class com.welab.loan.finance.dto.cmd.tb.TbBatch {
- {static} long serialVersionUID
- Long orgId
- Long fundId
- String batchNo
- String transferAccount
- String bankCode
- List<String> loanNumberList
}
class com.welab.loan.finance.app.manager.TbRepaymentManager {
- BaseTbRepaymentService tbRepaymentService
- FundService fundService
- IQueryDuesService queryDuesService
- BaseLoanReversalService baseLoanReversalService
- BaseFinanceTrading financeTrading
+ PageInfo<TbRepaymentVO> list(TbRepaymentQry)
+ PageInfo<TbRepaymentVO> findRepaymentTrackList(TbRepaymentQry)
+ List<TbPendRepayVO> findPendRepayList(List<String>)
- int getTenor(String)
}
class com.welab.loan.finance.app.base.credit.BaseCreditActivityAbTestService {
- CreditActivityAbTestExtMapper creditActivityAbTestExtMapper
+ List<CreditActivityAbTest> getAbTestListByParams(CreditActivityAbTestDto)
+ int updateByPrimaryKeySelective(CreditActivityAbTest)
+ CreditActivityAbTest findOne(Long)
+ CreditActivityAbTest getLastestOne()
+ int insertSelective(CreditActivityAbTest)
+ List<CreditActivityAbTestDto> selectFitAbTestByParams()
+ List<CreditActivityAbTestExt> getActivityList(CreditActivityAbTestRequestVo)
+ List<CreditActivityAbTestExt> countActivityStatus()
}
class com.welab.loan.finance.service.core.BaseOperateLoanDetailExtendFlagHistoryService {
- OperateLoanDetailExtendFlagHistoryMapper operateLoanDetailExtendFlagHistoryMapper
+ void saveOperateHistory(OperateLoanDetailExtendFlagHistory)
}
interface com.welab.loan.finance.mapper.FinanceRefundDetailMapper {
~ long countByExample(FinanceRefundDetailExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FinanceRefundDetail)
~ int insertSelective(FinanceRefundDetail)
~ List<FinanceRefundDetail> selectByExample(FinanceRefundDetailExample)
~ FinanceRefundDetail selectByPrimaryKey(Long)
~ int updateByExampleSelective(FinanceRefundDetail,FinanceRefundDetailExample)
~ int updateByExample(FinanceRefundDetail,FinanceRefundDetailExample)
~ int updateByPrimaryKeySelective(FinanceRefundDetail)
~ int updateByPrimaryKey(FinanceRefundDetail)
}
enum com.welab.loan.finance.enums.LendStatusEnum {
+  PAYING
+  PAYERROR
+  PAYSUCCCESS
+  PAYFAILED
+  RESTRUCTURED
+  PENDING_REVERSAL
+  REVERSAL_SUCCESS
- Byte value
- String name
- String enName
- <<Create>> LendStatusEnum(int,String,String)
+ Byte getValue()
+ String getName()
+ String getEnName()
+ {static} String getLendStatusEnumStr(Byte)
+ {static} Map getStatusMap(boolean)
+ {static} List getStatusList(boolean)
+ {static} boolean getIsLendSucc(Byte)
}
class com.welab.loan.finance.model.LoanCreditRule {
- Long id
- String loanNumber
- Date createdAt
- String productRule
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ String getProductRule()
+ void setProductRule(String)
}
class com.welab.loan.finance.vo.ReportOverdueDaysVO {
- int overdueDays
- int numberLoans
}
class com.welab.loan.finance.app.command.repayment.RepaymentMakeupCmdExe {
- BaseSyncVaCacheInfoService baseSyncVaCacheInfoService
- BaseVACacheRepaymentDataService baseVACacheRepaymentDataService
- BaseUserAdvancePaymentService baseUserAdvancePaymentService
+ JSONObject matchRecord(String,Long,Long)
- JSONObject matchSyncCache(UserAdvancePayment)
}
class com.welab.loan.finance.Application {
- {static} Logger LOG
+ {static} void main(String[])
}
class com.welab.loan.finance.model.CreditUserLoan {
- Long id
- Long userId
- Long approvedAmount
- Long useMoney
- Long remainingAmount
- String userTag
- String loanNumber
- String productCode
- String secondProductCode
- String tenor
- String tenorStr
- String accountType
- String merchantCode
- Integer status
- Date cancelAt
- Boolean deleted
- Date createdAt
- Date updatedAt
- String previousTag
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ Long getApprovedAmount()
+ void setApprovedAmount(Long)
+ Long getUseMoney()
+ void setUseMoney(Long)
+ Long getRemainingAmount()
+ void setRemainingAmount(Long)
+ String getUserTag()
+ void setUserTag(String)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getProductCode()
+ void setProductCode(String)
+ String getSecondProductCode()
+ void setSecondProductCode(String)
+ String getTenor()
+ void setTenor(String)
+ String getTenorStr()
+ void setTenorStr(String)
+ String getAccountType()
+ void setAccountType(String)
+ String getMerchantCode()
+ void setMerchantCode(String)
+ Integer getStatus()
+ void setStatus(Integer)
+ Date getCancelAt()
+ void setCancelAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getPreviousTag()
+ void setPreviousTag(String)
}
class com.welab.loan.finance.dto.cmd.tb.TravelokaLendCallbackCmd {
- String batchNo
- String transId
}
class com.welab.loan.finance.dto.UvfLoanDocDto {
- String originUrl
- String fileName
}
enum com.welab.loan.finance.enums.ErrorResultEnum {
+  FAIL
+  SUCCESS
- String value
- String name
- String enName
- <<Create>> ErrorResultEnum(String,String,String)
+ boolean check(String)
+ {static} List getStatusList(boolean)
}
class com.welab.loan.finance.core.dto.dues.ActivityRateReqDTO {
- BigDecimal fundRate
- BigDecimal serviceRate
- BigDecimal adminRate
- BigDecimal lateRate
- BigDecimal provisionRate
+ <<Create>> ActivityRateReqDTO(BigDecimal,BigDecimal,BigDecimal)
+ <<Create>> ActivityRateReqDTO(BigDecimal,BigDecimal,BigDecimal,BigDecimal)
}
class com.welab.loan.finance.app.command.tb.dues.TbDuesUpdateService {
+ {static} int MAX_DAYS
+ {static} List<Long> EXCLUDE_ORG_ID
- TbDuesCreateService tbDuesCreateService
- BaseLoanDetailService loanDetailService
- BaseRabbitTemplate rabbitTemplate
- TbDuesServiceHelper tbDuesServiceHelper
+ void doUpdate(Date,Long)
+ void doUpdate(LoanDetail,Date)
+ void doRealUpdate(LoanDetail,Date,boolean)
}
class com.welab.loan.finance.dto.TbQueryUserDTO {
- {static} long serialVersionUID
- String partner
- String partnerUserNo
- String mobile
}
class com.welab.loan.finance.model.DuesRepayUpdateRecordExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> DuesRepayUpdateRecordExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.DuesRepayUpdateRecordExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andDocIdIsNull()
+ Criteria andDocIdIsNotNull()
+ Criteria andDocIdEqualTo(String)
+ Criteria andDocIdNotEqualTo(String)
+ Criteria andDocIdGreaterThan(String)
+ Criteria andDocIdGreaterThanOrEqualTo(String)
+ Criteria andDocIdLessThan(String)
+ Criteria andDocIdLessThanOrEqualTo(String)
+ Criteria andDocIdLike(String)
+ Criteria andDocIdNotLike(String)
+ Criteria andDocIdIn(List<String>)
+ Criteria andDocIdNotIn(List<String>)
+ Criteria andDocIdBetween(String,String)
+ Criteria andDocIdNotBetween(String,String)
+ Criteria andOperatorAdminIdIsNull()
+ Criteria andOperatorAdminIdIsNotNull()
+ Criteria andOperatorAdminIdEqualTo(Long)
+ Criteria andOperatorAdminIdNotEqualTo(Long)
+ Criteria andOperatorAdminIdGreaterThan(Long)
+ Criteria andOperatorAdminIdGreaterThanOrEqualTo(Long)
+ Criteria andOperatorAdminIdLessThan(Long)
+ Criteria andOperatorAdminIdLessThanOrEqualTo(Long)
+ Criteria andOperatorAdminIdIn(List<Long>)
+ Criteria andOperatorAdminIdNotIn(List<Long>)
+ Criteria andOperatorAdminIdBetween(Long,Long)
+ Criteria andOperatorAdminIdNotBetween(Long,Long)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Integer)
+ Criteria andStatusNotEqualTo(Integer)
+ Criteria andStatusGreaterThan(Integer)
+ Criteria andStatusGreaterThanOrEqualTo(Integer)
+ Criteria andStatusLessThan(Integer)
+ Criteria andStatusLessThanOrEqualTo(Integer)
+ Criteria andStatusIn(List<Integer>)
+ Criteria andStatusNotIn(List<Integer>)
+ Criteria andStatusBetween(Integer,Integer)
+ Criteria andStatusNotBetween(Integer,Integer)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.DuesRepayUpdateRecordExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.DuesRepayUpdateRecordExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.response.EPlanDuesVO {
- {static} long serialVersionUID
- Integer dueIndex
- Date dueDate
- Long amount
}
class com.welab.loan.finance.vo.response.DuesRepayMentVO {
- Integer dueIndex
- Date dueDate
- Boolean isClose
- Long totalAmount
- Byte planType
- Boolean isBule
- Integer amountType
}
class com.welab.loan.finance.app.manager.CollectionUserListMannger {
- BaseDuesService baseDuesService
- UserProfilesService userProfilesService
+ PageInfo<CollectionUserListVO> selectCollectionUserList(CollectionUserListQry)
}
interface com.welab.loan.finance.core.dues.vat.VatCost {
~ String dueType()
~ BigDecimal doCalc(BigDecimal,BigDecimal)
}
class com.welab.loan.finance.app.service.paybills.BniPayBillsService {
- String skipDescriptions
- Pattern vaPattern
+ String channel()
# List<BniPayBillsContext> parseData(MultipartFile)
- String getTrxIdOrVa(String)
- boolean isSkip(String)
}
class com.welab.loan.finance.app.service.paybills.BniPayBillsService$BniPayBillsContext {
- String postDate
- String valueDate
- String branch
- String journalNo
- String description
- String debit
- String credit
}
class com.welab.loan.finance.model.UVFRepossessRepaymentExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> UVFRepossessRepaymentExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.UVFRepossessRepaymentExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andApplyNoIsNull()
+ Criteria andApplyNoIsNotNull()
+ Criteria andApplyNoEqualTo(String)
+ Criteria andApplyNoNotEqualTo(String)
+ Criteria andApplyNoGreaterThan(String)
+ Criteria andApplyNoGreaterThanOrEqualTo(String)
+ Criteria andApplyNoLessThan(String)
+ Criteria andApplyNoLessThanOrEqualTo(String)
+ Criteria andApplyNoLike(String)
+ Criteria andApplyNoNotLike(String)
+ Criteria andApplyNoIn(List<String>)
+ Criteria andApplyNoNotIn(List<String>)
+ Criteria andApplyNoBetween(String,String)
+ Criteria andApplyNoNotBetween(String,String)
+ Criteria andCustomerNameIsNull()
+ Criteria andCustomerNameIsNotNull()
+ Criteria andCustomerNameEqualTo(String)
+ Criteria andCustomerNameNotEqualTo(String)
+ Criteria andCustomerNameGreaterThan(String)
+ Criteria andCustomerNameGreaterThanOrEqualTo(String)
+ Criteria andCustomerNameLessThan(String)
+ Criteria andCustomerNameLessThanOrEqualTo(String)
+ Criteria andCustomerNameLike(String)
+ Criteria andCustomerNameNotLike(String)
+ Criteria andCustomerNameIn(List<String>)
+ Criteria andCustomerNameNotIn(List<String>)
+ Criteria andCustomerNameBetween(String,String)
+ Criteria andCustomerNameNotBetween(String,String)
+ Criteria andSellingDateIsNull()
+ Criteria andSellingDateIsNotNull()
+ Criteria andSellingDateEqualTo(Date)
+ Criteria andSellingDateNotEqualTo(Date)
+ Criteria andSellingDateGreaterThan(Date)
+ Criteria andSellingDateGreaterThanOrEqualTo(Date)
+ Criteria andSellingDateLessThan(Date)
+ Criteria andSellingDateLessThanOrEqualTo(Date)
+ Criteria andSellingDateIn(List<Date>)
+ Criteria andSellingDateNotIn(List<Date>)
+ Criteria andSellingDateBetween(Date,Date)
+ Criteria andSellingDateNotBetween(Date,Date)
+ Criteria andSellingPriceIsNull()
+ Criteria andSellingPriceIsNotNull()
+ Criteria andSellingPriceEqualTo(Long)
+ Criteria andSellingPriceNotEqualTo(Long)
+ Criteria andSellingPriceGreaterThan(Long)
+ Criteria andSellingPriceGreaterThanOrEqualTo(Long)
+ Criteria andSellingPriceLessThan(Long)
+ Criteria andSellingPriceLessThanOrEqualTo(Long)
+ Criteria andSellingPriceIn(List<Long>)
+ Criteria andSellingPriceNotIn(List<Long>)
+ Criteria andSellingPriceBetween(Long,Long)
+ Criteria andSellingPriceNotBetween(Long,Long)
+ Criteria andProcessingFeeIsNull()
+ Criteria andProcessingFeeIsNotNull()
+ Criteria andProcessingFeeEqualTo(Long)
+ Criteria andProcessingFeeNotEqualTo(Long)
+ Criteria andProcessingFeeGreaterThan(Long)
+ Criteria andProcessingFeeGreaterThanOrEqualTo(Long)
+ Criteria andProcessingFeeLessThan(Long)
+ Criteria andProcessingFeeLessThanOrEqualTo(Long)
+ Criteria andProcessingFeeIn(List<Long>)
+ Criteria andProcessingFeeNotIn(List<Long>)
+ Criteria andProcessingFeeBetween(Long,Long)
+ Criteria andProcessingFeeNotBetween(Long,Long)
+ Criteria andBankPortionIsNull()
+ Criteria andBankPortionIsNotNull()
+ Criteria andBankPortionEqualTo(Long)
+ Criteria andBankPortionNotEqualTo(Long)
+ Criteria andBankPortionGreaterThan(Long)
+ Criteria andBankPortionGreaterThanOrEqualTo(Long)
+ Criteria andBankPortionLessThan(Long)
+ Criteria andBankPortionLessThanOrEqualTo(Long)
+ Criteria andBankPortionIn(List<Long>)
+ Criteria andBankPortionNotIn(List<Long>)
+ Criteria andBankPortionBetween(Long,Long)
+ Criteria andBankPortionNotBetween(Long,Long)
+ Criteria andFlagIncIsNull()
+ Criteria andFlagIncIsNotNull()
+ Criteria andFlagIncEqualTo(String)
+ Criteria andFlagIncNotEqualTo(String)
+ Criteria andFlagIncGreaterThan(String)
+ Criteria andFlagIncGreaterThanOrEqualTo(String)
+ Criteria andFlagIncLessThan(String)
+ Criteria andFlagIncLessThanOrEqualTo(String)
+ Criteria andFlagIncLike(String)
+ Criteria andFlagIncNotLike(String)
+ Criteria andFlagIncIn(List<String>)
+ Criteria andFlagIncNotIn(List<String>)
+ Criteria andFlagIncBetween(String,String)
+ Criteria andFlagIncNotBetween(String,String)
+ Criteria andKetIsNull()
+ Criteria andKetIsNotNull()
+ Criteria andKetEqualTo(String)
+ Criteria andKetNotEqualTo(String)
+ Criteria andKetGreaterThan(String)
+ Criteria andKetGreaterThanOrEqualTo(String)
+ Criteria andKetLessThan(String)
+ Criteria andKetLessThanOrEqualTo(String)
+ Criteria andKetLike(String)
+ Criteria andKetNotLike(String)
+ Criteria andKetIn(List<String>)
+ Criteria andKetNotIn(List<String>)
+ Criteria andKetBetween(String,String)
+ Criteria andKetNotBetween(String,String)
+ Criteria andCreateByIsNull()
+ Criteria andCreateByIsNotNull()
+ Criteria andCreateByEqualTo(String)
+ Criteria andCreateByNotEqualTo(String)
+ Criteria andCreateByGreaterThan(String)
+ Criteria andCreateByGreaterThanOrEqualTo(String)
+ Criteria andCreateByLessThan(String)
+ Criteria andCreateByLessThanOrEqualTo(String)
+ Criteria andCreateByLike(String)
+ Criteria andCreateByNotLike(String)
+ Criteria andCreateByIn(List<String>)
+ Criteria andCreateByNotIn(List<String>)
+ Criteria andCreateByBetween(String,String)
+ Criteria andCreateByNotBetween(String,String)
+ Criteria andBatchNoIsNull()
+ Criteria andBatchNoIsNotNull()
+ Criteria andBatchNoEqualTo(String)
+ Criteria andBatchNoNotEqualTo(String)
+ Criteria andBatchNoGreaterThan(String)
+ Criteria andBatchNoGreaterThanOrEqualTo(String)
+ Criteria andBatchNoLessThan(String)
+ Criteria andBatchNoLessThanOrEqualTo(String)
+ Criteria andBatchNoLike(String)
+ Criteria andBatchNoNotLike(String)
+ Criteria andBatchNoIn(List<String>)
+ Criteria andBatchNoNotIn(List<String>)
+ Criteria andBatchNoBetween(String,String)
+ Criteria andBatchNoNotBetween(String,String)
+ Criteria andContractIdIsNull()
+ Criteria andContractIdIsNotNull()
+ Criteria andContractIdEqualTo(String)
+ Criteria andContractIdNotEqualTo(String)
+ Criteria andContractIdGreaterThan(String)
+ Criteria andContractIdGreaterThanOrEqualTo(String)
+ Criteria andContractIdLessThan(String)
+ Criteria andContractIdLessThanOrEqualTo(String)
+ Criteria andContractIdLike(String)
+ Criteria andContractIdNotLike(String)
+ Criteria andContractIdIn(List<String>)
+ Criteria andContractIdNotIn(List<String>)
+ Criteria andContractIdBetween(String,String)
+ Criteria andContractIdNotBetween(String,String)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
}
class com.welab.loan.finance.model.UVFRepossessRepaymentExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.UVFRepossessRepaymentExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.dto.cmd.TappApplyCmd {
- String loanNumber
- Long lenderId
- String productCode
- String approvedSecondProdCode
- Long approvedAmount
- String approvedTenor
- Date applyAt
- Long applyAmount
- String applyTenor
- String applySecondProdCode
- Date approvedAt
- Long userId
- String name
- String mobile
- Integer disbursementMethodType
- String sourceId
- Long orgId
}
class com.welab.loan.finance.vo.tb.RepNotifyCmd {
- String loanNumber
- String repaymentAmount
- TBEnum tbEnum
- String userEmailTmplName
- String tbEmailTmplName
- String userAppTmplName
- String tbAppTmplName
}
class com.welab.loan.finance.model.LoanApplyRepaymentExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanApplyRepaymentExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanApplyRepaymentExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andApplyUserIdIsNull()
+ Criteria andApplyUserIdIsNotNull()
+ Criteria andApplyUserIdEqualTo(Long)
+ Criteria andApplyUserIdNotEqualTo(Long)
+ Criteria andApplyUserIdGreaterThan(Long)
+ Criteria andApplyUserIdGreaterThanOrEqualTo(Long)
+ Criteria andApplyUserIdLessThan(Long)
+ Criteria andApplyUserIdLessThanOrEqualTo(Long)
+ Criteria andApplyUserIdIn(List<Long>)
+ Criteria andApplyUserIdNotIn(List<Long>)
+ Criteria andApplyUserIdBetween(Long,Long)
+ Criteria andApplyUserIdNotBetween(Long,Long)
+ Criteria andDayIsNull()
+ Criteria andDayIsNotNull()
+ Criteria andDayEqualTo(Integer)
+ Criteria andDayNotEqualTo(Integer)
+ Criteria andDayGreaterThan(Integer)
+ Criteria andDayGreaterThanOrEqualTo(Integer)
+ Criteria andDayLessThan(Integer)
+ Criteria andDayLessThanOrEqualTo(Integer)
+ Criteria andDayIn(List<Integer>)
+ Criteria andDayNotIn(List<Integer>)
+ Criteria andDayBetween(Integer,Integer)
+ Criteria andDayNotBetween(Integer,Integer)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andExpireAtIsNull()
+ Criteria andExpireAtIsNotNull()
+ Criteria andExpireAtEqualTo(Date)
+ Criteria andExpireAtNotEqualTo(Date)
+ Criteria andExpireAtGreaterThan(Date)
+ Criteria andExpireAtGreaterThanOrEqualTo(Date)
+ Criteria andExpireAtLessThan(Date)
+ Criteria andExpireAtLessThanOrEqualTo(Date)
+ Criteria andExpireAtIn(List<Date>)
+ Criteria andExpireAtNotIn(List<Date>)
+ Criteria andExpireAtBetween(Date,Date)
+ Criteria andExpireAtNotBetween(Date,Date)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
}
class com.welab.loan.finance.model.LoanApplyRepaymentExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanApplyRepaymentExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.dto.cmd.tb.TbInvoice {
- {static} long serialVersionUID
- String loanNumber
- Long fundId
- Long amount
- Byte lendType
- String productCode
- String secondProdCode
- Byte productType
- Long orgId
- Long userId
- String userName
- String mobile
- String period
- String merchantOrderNo
- Date lendAt
- String jsonParam
}
class com.welab.loan.finance.service.other.disburse_tax.ToBDisburseTaxHandler {
- List<TBEnum> tbEnums
# List<DisburseTax> queryDisburseTax(Date,Date)
}
class com.welab.loan.finance.dto.FeeTypeDTO {
- Long provisionFee
- Long fundInterestFee
- Long fundInterestFeeWHT
- Long serviceFee
- Long serviceFeeVAT
- Long adminFee
- Long adminFeeVAT
- Long carryFee
- Long carryFeeVAT
- Long premiumFee
}
class com.welab.loan.finance.response.EPlanTryCalculationVO {
- {static} long serialVersionUID
- String oldLoanNumber
- String newLoanNumber
- Long minRepaymentAmount
- Long oldLoanNextRepaymentAmount
- Integer oldLoanDueIndex
- String partnerName
- String partnerLogoUrl
- String secondProdCode
- EPlanTryCalculationDetailVO ePlanTryCalculationDetail
}
class com.welab.loan.finance.model.CreditUserAccountStatusLogExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditUserAccountStatusLogExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditUserAccountStatusLogExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andCreditStatusIsNull()
+ Criteria andCreditStatusIsNotNull()
+ Criteria andCreditStatusEqualTo(String)
+ Criteria andCreditStatusNotEqualTo(String)
+ Criteria andCreditStatusGreaterThan(String)
+ Criteria andCreditStatusGreaterThanOrEqualTo(String)
+ Criteria andCreditStatusLessThan(String)
+ Criteria andCreditStatusLessThanOrEqualTo(String)
+ Criteria andCreditStatusLike(String)
+ Criteria andCreditStatusNotLike(String)
+ Criteria andCreditStatusIn(List<String>)
+ Criteria andCreditStatusNotIn(List<String>)
+ Criteria andCreditStatusBetween(String,String)
+ Criteria andCreditStatusNotBetween(String,String)
+ Criteria andOperateActionIsNull()
+ Criteria andOperateActionIsNotNull()
+ Criteria andOperateActionEqualTo(String)
+ Criteria andOperateActionNotEqualTo(String)
+ Criteria andOperateActionGreaterThan(String)
+ Criteria andOperateActionGreaterThanOrEqualTo(String)
+ Criteria andOperateActionLessThan(String)
+ Criteria andOperateActionLessThanOrEqualTo(String)
+ Criteria andOperateActionLike(String)
+ Criteria andOperateActionNotLike(String)
+ Criteria andOperateActionIn(List<String>)
+ Criteria andOperateActionNotIn(List<String>)
+ Criteria andOperateActionBetween(String,String)
+ Criteria andOperateActionNotBetween(String,String)
+ Criteria andFreezeReasonIsNull()
+ Criteria andFreezeReasonIsNotNull()
+ Criteria andFreezeReasonEqualTo(String)
+ Criteria andFreezeReasonNotEqualTo(String)
+ Criteria andFreezeReasonGreaterThan(String)
+ Criteria andFreezeReasonGreaterThanOrEqualTo(String)
+ Criteria andFreezeReasonLessThan(String)
+ Criteria andFreezeReasonLessThanOrEqualTo(String)
+ Criteria andFreezeReasonLike(String)
+ Criteria andFreezeReasonNotLike(String)
+ Criteria andFreezeReasonIn(List<String>)
+ Criteria andFreezeReasonNotIn(List<String>)
+ Criteria andFreezeReasonBetween(String,String)
+ Criteria andFreezeReasonNotBetween(String,String)
+ Criteria andOperateUserIdIsNull()
+ Criteria andOperateUserIdIsNotNull()
+ Criteria andOperateUserIdEqualTo(Long)
+ Criteria andOperateUserIdNotEqualTo(Long)
+ Criteria andOperateUserIdGreaterThan(Long)
+ Criteria andOperateUserIdGreaterThanOrEqualTo(Long)
+ Criteria andOperateUserIdLessThan(Long)
+ Criteria andOperateUserIdLessThanOrEqualTo(Long)
+ Criteria andOperateUserIdIn(List<Long>)
+ Criteria andOperateUserIdNotIn(List<Long>)
+ Criteria andOperateUserIdBetween(Long,Long)
+ Criteria andOperateUserIdNotBetween(Long,Long)
+ Criteria andOperateUserIsNull()
+ Criteria andOperateUserIsNotNull()
+ Criteria andOperateUserEqualTo(String)
+ Criteria andOperateUserNotEqualTo(String)
+ Criteria andOperateUserGreaterThan(String)
+ Criteria andOperateUserGreaterThanOrEqualTo(String)
+ Criteria andOperateUserLessThan(String)
+ Criteria andOperateUserLessThanOrEqualTo(String)
+ Criteria andOperateUserLike(String)
+ Criteria andOperateUserNotLike(String)
+ Criteria andOperateUserIn(List<String>)
+ Criteria andOperateUserNotIn(List<String>)
+ Criteria andOperateUserBetween(String,String)
+ Criteria andOperateUserNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.CreditUserAccountStatusLogExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.CreditUserAccountStatusLogExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.dto.CalculationTagAmountDTO {
- CreditUserTagTriggerMethodEnum triggerMethodEnum
- Long userId
- String tag
- String targetTag
- Boolean isAstra
- Long approveIncome
- Long estimatedMonthlyIncome
}
interface com.welab.loan.finance.mapper.CreditUserAccountInfoMapper {
~ long countByExample(CreditUserAccountInfoExample)
~ int deleteByExample(CreditUserAccountInfoExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditUserAccountInfo)
~ int insertSelective(CreditUserAccountInfo)
~ List<CreditUserAccountInfo> selectByExample(CreditUserAccountInfoExample)
~ CreditUserAccountInfo selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditUserAccountInfo,CreditUserAccountInfoExample)
~ int updateByExample(CreditUserAccountInfo,CreditUserAccountInfoExample)
~ int updateByPrimaryKeySelective(CreditUserAccountInfo)
~ int updateByPrimaryKey(CreditUserAccountInfo)
}
class com.welab.loan.finance.constant.FinanceConstant {
+ {static} String TRADING_TYPE_KEY
+ {static} String REDIS_KEY_REPAYMENT
+ {static} String REDIS_KEY_ACCOUNT
+ {static} String REDIS_KEY_TRANSFER
+ {static} String REDIS_KEY_LEND
+ {static} String CHANGE_BIND_BANK_KEY
+ {static} String IMPORT_BILLS_KEY
+ {static} String CESSIE_SOLD
+ {static} Long CHANNELFEE
+ {static} Long SERVICECHARGEFEE
+ {static} Long NONE_SERVICECHARGEFEE
+ {static} Long MAX_BNI_INTERBANK_AMOUNT
+ {static} int THRESHOLD_DAY
+ {static} Integer RECHARGECHANNEL
+ {static} Integer FPLAN_DAY
+ {static} Integer C1PLAN_MIN_DAY
+ {static} Integer C1PLAN_MAX_DAY
+ {static} Long VA_ADMIN_ID
+ {static} Integer C1PLAN_MAX_NUM
+ {static} BigDecimal DEFAULT_PLAN_RATIO
+ {static} BigDecimal DEFAULT_DOWN_PAYMENT_RATIO
+ {static} String DEFAULT_DOWN_PAYMENT_KEY
+ {static} BigDecimal DEFAULT_DOWN_PAYMENT_SHORT
+ {static} BigDecimal DEFAULT_DOWN_PAYMENT_LONG
+ {static} int DEFAULT_TB_PERIOD
+ {static} Map<String,BigDecimal> PLAN_SUB_RATE
+ {static} Map<String,String> PLAN_NEW_DUES_RATE
+ {static} String TRAVELOKA_PAYLATER_VA_NUMBER
+ {static} Long TRAVELOKA_PAYLATER_USER_ID
+ {static} String ADVCANCE_APK_MARKER
+ {static} Byte BCA_TRASFER_SOURCE_LEND
+ {static} Byte BCA_TRASFER_SOURCE_TRADING
+ {static} Byte BCA_TRASFER_SOURCE_LEND_BCAK
+ {static} Byte BCA_TRASFER_SOURCE_TRADING_BCAK
- <<Create>> FinanceConstant()
+ {static} String getPlanDiScountsRate(PlansTypeEnum,DueTypeEnum)
}
class com.welab.loan.finance.vo.repayment.UploadRepaymentExcelVO {
- Long userId
- String loanNumber
- String merchantOrderNo
- String secondProdCode
- String typeStr
- String fundName
- String transId
- String backTransId
- String orderNo
- Integer dueIndex
- String branch
- Long repaymentAmount
- Long lateFee
- Long overAmount
- Long principalFee
- Long adminFee
- Long fundInterestFee
- Long ifWht
- Long serviceFee
- Long fastPayFee
- Boolean isAdvance
- Boolean isCustom
- String cessie
- String buyerName
- Long couponLateFee
- Long couponAdminFee
- Long couponInterestFee
- Long couponPrincipal
- String promotionCode
- String channel
- String repaymentAt
- String actualRepaymentAt
- String receiptAccount
- String bankCode
- String originStr
- String planTypeStr
- String productType
- String merchantCode
- String merchantCategory
- Long payLaterProvisionFee
- String transType
- String flag
- String flagReason
}
class com.welab.loan.finance.vo.request.ReversalExcelVo {
- String transationNumber
- String reason
}
class com.welab.loan.finance.app.command.credit.CreditAccountTrackCmdExe {
- CreditMaxinstallCalculationManager creditMaxinstallCalculationManager
- CreditConditionService creditConditionService
- BaseCreditAccountTrackService baseCreditAccountTrackService
- CreditUserTagServiceImpl creditUserTagServiceImpl
- CreditLoanAmountConfigServiceImpl creditLoanAmountConfigServiceImpl
- CreditUserAccountService creditUserAccountService
# BaseCreditUserAccountChildService baseCreditUserAccountChildService
- BaseCreditUserTagService baseCreditUserTagService
- BaseLoanService baseLoanService
+ void execute(CreditAccountTrackCmd)
- void buildAccountTrackPL(CreditUserAccountVO,CreditAccountRemainingTrack,Map<String,TagProductVO>)
- void buildAccountTrackCL(CreditUserAccountVO,CreditAccountRemainingTrack,Map<String,TagProductVO>)
- Long getMaxTenorAvailableAmount(CreditUserAccountExt,TagProductVO,String)
- CreditAccountRemainingTrack buildAccountTrackPL(List<TagProductVO>,CreditAccountRemainingTrack)
- CreditAccountRemainingTrack buildAccountTrackCL(List<TagProductVO>,CreditAccountRemainingTrack)
}
class com.welab.loan.finance.vo.credit.CreditActivityAbTestResponseVo {
- Long id
- String activityId
- String scenarioName
- String weight
- List<String> matrix
- String testGroup
- String activityStatus
- Date startedTime
- Date endTime
- Long leftSecond
- Date runningOn
- JSONObject configContent
- String creatorBy
- Date launchTime
- Date terminatedTime
- String terminatedBy
- String description
}
class com.welab.loan.finance.service.core.BasePayService {
- Double customMinRate
- Long customMinAmount
- AccountService accountService
- InvoiceService invoiceService
- ApplicationService applicationService
- BaseDuesService baseDuesService
- BaseLoanService baseLoanService
- BaseLoanCodeService baseLoanCodeService
- ActivityDubboService activityDubboService
- LoanCouponServiceImpl loanCouponService
- DuesExtMapper duesExtMapper
- BaseLoanApplyPlansService baseLoanApplyPlansService
- IRepaymentService repaymentService
- ILoanUserRepay loanUserRepay
- BaseRabbitTemplate rabbitTemplate
- BaseLoanApplyRepaymentService loanApplyRepaymentService
- BackstageConfigFacade backstageConfigFacade
- VACacheCmdExe syncVACacheCmdExe
- CouponSyncVACmdExe couponSyncVACmdExe
+ Response transferXendit(PaymentDto)
+ Long getUserRepayAmount(String,Long)
+ List<VirtualAccountVO> sendUpdateAccountAmount(Long,Long,String)
+ InvoiceVO sendCreateInvoice(InvoiceDto)
+ InvoiceVO createInvoice(Long,String,String,Long)
+ VirtualAccountVO findUpdatePayAmount(Long,String,String,Long)
+ List<VirtualAccountVO> findUpdatePayAmountList(Long,String,String,Long)
+ List<VirtualAccountVO> findAllUpdatePayAmount(Long,String,Long)
+ void resetAccount(Long,String)
+ Response checkPromotionCode(LoanDetail,String,Long)
# ActivityCodeResponseDTO getActivityCode(ActivityCodeRequestDTO)
+ Response sendRepayment(SendRepaymentDTO)
+ void cancelCouponCodeForUser(Long)
+ void cancelCouponCode(String,String)
+ Date getExpiryDate(String,Long)
+ Response checkRepayAmount(String,Long)
+ Response checkRepayAmountByPlan(String,Long,PlansTypeEnum)
+ Response checkRepayAmountByPlan(String,Long,PlansTypeEnum,BigDecimal)
+ CustomRangeDTO findRepayAmount(String,PlansTypeEnum)
+ CustomRangeDTO findRepayAmount(String,OverdueDayDTO,PlansTypeEnum,BigDecimal)
+ long getMaxAsCustomMin(Long)
+ long getMaxAsCustomMin(Long,Double,long)
+ long getMinAsCustomMin(Long,Double,long)
+ Response checkRepayAmountOverDay(String,Long,OverdueDayDTO)
+ Response checkRepayAmountOverDay(String,Long,OverdueDayDTO,PlansTypeEnum)
+ Response checkRepayAmountOverDay(String,Long,OverdueDayDTO,PlansTypeEnum,BigDecimal)
+ {static} void main(String[])
}
class com.welab.loan.finance.core.dues.vat.impl.AdminFeeVatCost {
+ String dueType()
+ BigDecimal doCalc(BigDecimal,BigDecimal)
}
class com.welab.loan.finance.vo.request.RepayUnPayVO {
- Long unPayAmount
- boolean isPay
}
class com.welab.loan.finance.dto.qry.TbLoanCountQry {
- Long userId
- List<Byte> lendStatusList
- List<Byte> repayStatusList
}
class com.welab.loan.finance.test.tb.RestockTest {
- TbLoanService tbLoanService
- ToBAgreementService toBAgreementService
+ void createDues()
}
class com.welab.loan.finance.dto.plan.EPlanAmountDTO {
- {static} long serialVersionUID
- String loanNumber
- String origin
- String secondProductCode
- Integer index
- Long amountFundedAmount
- Long interestFunderAmount
- Long platformFeeAmount
- Long provisionFeeAmount
- Long lateFeeAmount
- Long totalOutstandingFeeAmount
- Long minNewLoanMonthlyPaymentAmount
- Long totalMinRepaymentAmount
- BigDecimal totalPrincipalAmount
- BigDecimal totalServiceFeeAmount
- Long newLoanPrincipalAmount
- Long newLoanMonthServiceFeeAmount
- BigDecimal amountFundedAmountDeduct
- Long includeAWDAAmount
}
class com.welab.loan.finance.controller.TravelokaController {
- ProductService productService
- LoanService loanService
- BaseFinanceLendService baseFinanceLendService
- BaseLoanService baseLoanService
- BaseFinanceLendService baseLendService
- FundService fundService
- ProductConfigServiceFacade productConfigServiceFacade
+ Response pageQueryCondition(String)
- void setSecondProductCode(String,Map<String,Object>)
+ Response repaymentTrackList(Long,String,RepaymentTracBackDto)
+ {static} Response repaymentTrackList(Long,Long,RepaymentTracBackDto,Boolean)
+ Response repaymentExport(Long,String,RepaymentTracBackDto,HttpServletResponse)
+ {static} Response repaymentExport(Long,Long,RepaymentTracBackDto,HttpServletResponse,Boolean)
+ Response duesList(Long,String,DuesReqDto)
+ {static} Response getDuesList(Long,Long,DuesReqDto,Boolean)
+ Response duesExport(Long,String,DuesReqDto)
+ {static} Response duesExport(Long,Long,DuesReqDto,Boolean)
+ Response disbursementList(Long,String,FinanceLendBackDto)
+ Response disbursementExport(Long,String,FinanceLendBackDto)
+ Response loanList(Long,String,LoanBackDto)
+ Response loanListExport(Long,String,LoanBackDto)
}
class com.welab.loan.finance.model.BigFieldParam {
- Long id
- Date createdAt
- Date updatedAt
- String content
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getContent()
+ void setContent(String)
}
class com.welab.loan.finance.model.ext.AdvanceMsgListExt {
- List<Byte> statuses
}
class com.welab.loan.finance.dto.tb.TravelokaDuesVO {
- String tenor
- String interestRate
~ List<Dues> duesList
- Date firstDueDate
- BigDecimal totalServiceFeeRate
}
interface com.welab.loan.finance.mapper.LoanUvfRepaymentMapper {
~ int countByExample(LoanUvfRepaymentExample)
~ int deleteByExample(LoanUvfRepaymentExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanUvfRepayment)
~ int insertSelective(LoanUvfRepayment)
~ List<LoanUvfRepayment> selectByExample(LoanUvfRepaymentExample)
~ LoanUvfRepayment selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanUvfRepayment,LoanUvfRepaymentExample)
~ int updateByExample(LoanUvfRepayment,LoanUvfRepaymentExample)
~ int updateByPrimaryKeySelective(LoanUvfRepayment)
~ int updateByPrimaryKey(LoanUvfRepayment)
}
class com.welab.loan.finance.model.LoanCouponDetail {
- Long id
- Byte type
- String loanNumber
- Integer dueIndex
- String promotionCode
- Long discountPrincipal
- Long discountServiceFee
- Long discountFundInterest
- Long discountAdminFee
- Long discountProvisionFee
- Long discountUpfrontServiceFee
- Long discountLateFee
- Long discountUpfrontFundInterestFee
- Long discountUpfrontProvisionFee
- Long discountUpfrontAdminFee
- Byte status
- Date createdAt
- Date updatedAt
- Long discountCarryingFee
+ Long getId()
+ void setId(Long)
+ Byte getType()
+ void setType(Byte)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Integer getDueIndex()
+ void setDueIndex(Integer)
+ String getPromotionCode()
+ void setPromotionCode(String)
+ Long getDiscountPrincipal()
+ void setDiscountPrincipal(Long)
+ Long getDiscountServiceFee()
+ void setDiscountServiceFee(Long)
+ Long getDiscountFundInterest()
+ void setDiscountFundInterest(Long)
+ Long getDiscountAdminFee()
+ void setDiscountAdminFee(Long)
+ Long getDiscountProvisionFee()
+ void setDiscountProvisionFee(Long)
+ Long getDiscountUpfrontServiceFee()
+ void setDiscountUpfrontServiceFee(Long)
+ Long getDiscountLateFee()
+ void setDiscountLateFee(Long)
+ Long getDiscountUpfrontFundInterestFee()
+ void setDiscountUpfrontFundInterestFee(Long)
+ Long getDiscountUpfrontProvisionFee()
+ void setDiscountUpfrontProvisionFee(Long)
+ Long getDiscountUpfrontAdminFee()
+ void setDiscountUpfrontAdminFee(Long)
+ Byte getStatus()
+ void setStatus(Byte)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Long getDiscountCarryingFee()
+ void setDiscountCarryingFee(Long)
}
class com.welab.loan.finance.core.loan.rest.VirtualAccountImpl {
- AccountService accountService
- ApplicationService applicationService
- BaseRabbitTemplate baseRabbitTemplate
- IUserRepayAmount userRepayAmount
- InvoiceService invoiceService
- BaseLoanUserRepayService loanUserRepayService
- VACacheCmdExe syncVACacheCmdExe
- ITbLoanDubboService iTbLoanDubboService
- CouponSyncVACmdExe couponSyncVACmdExe
+ List<VirtualAccountVO> findVirtualAccounts(SynAccountDTO)
+ InvoiceVO findInvoice(SynAccountDTO)
+ void asynBatchVirtualAccounts(List<SynAccountDTO>)
- void findSingleVirtualAccountList(List<SynAccountDTO>,List<SynAccountDTO>)
- List<VirtualAccountDto> findBatchVirtualAccountList(List<SynAccountDTO>,List<SynAccountDTO>)
- VirtualAccountDto findVirtualAccountByUserId(SynAccountDTO,List<SynAccountDTO>)
- InvoiceDto findInvoiceDtoByUserId(SynAccountDTO)
- UserRepayDTO findUserRepayAmount(SynAccountDTO)
- void batchAsyn(List<VirtualAccountDto>)
- UserProfileVO findUserProfiles(Long)
- TbUserVO findTbUserInfo(Long)
- InvoiceVO findSendInvoice(InvoiceDto)
- List<VirtualAccountVO> findSynVirtualAccount(VirtualAccountDto)
- void sendListMq(List<SynAccountDTO>)
}
class com.welab.loan.finance.dto.ScheduleAmountDto {
- Long amount
- String productCode
- String secondProdCode
- Long userId
- String promotionCode
- String mobile
- String origin
- Long fundId
- String riskLevel
- String tenor
- String previousLoan
- Integer abTestGroupType
- Long abTestId
- String controlGroupSecondProdCode
- Boolean insuranceSelect
- String loanNumber
}
class com.welab.loan.finance.model.FinanceConfig {
- Integer id
- Date createdAt
- Date updatedAt
- String category
- String key
- String value
- String createBy
- String updateBy
- Integer sort
- Boolean deleted
- Integer status
- String keyDesc
+ Integer getId()
+ void setId(Integer)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getCategory()
+ void setCategory(String)
+ String getKey()
+ void setKey(String)
+ String getValue()
+ void setValue(String)
+ String getCreateBy()
+ void setCreateBy(String)
+ String getUpdateBy()
+ void setUpdateBy(String)
+ Integer getSort()
+ void setSort(Integer)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ Integer getStatus()
+ void setStatus(Integer)
+ String getKeyDesc()
+ void setKeyDesc(String)
}
class com.welab.loan.finance.dto.CustomerLoanBackDto {
- String loanNumber
- Long userId
}
class com.welab.loan.finance.test.credit.migrate.MigrateControllerTest {
- CreditUserController creditUserController
+ void testTags()
}
enum com.welab.loan.finance.enums.mq.DirectMessageMetaInfoEnum {
+  FINANCE_E_PLAN_LOAN_STATUS_SYNC
+  FINANCE_REPAY_NOTIFY_COLLECTION
- MessageTypeEnum messageTypeEnum
+ String queueName
+ String bindExchangeName
+ String routingKey
+ String deadExchangeName
+ String deadRoutingKey
+ String tag
+ String listenerContainerFactoryBeanId
}
class com.welab.loan.finance.test.RebookTest {
- RebookTryCalculateService rebookTryCalculateService
- RebookDetailService rebookDetailService
- RebookCostService rebookCostService
- BaseLoanDetailService loanDetailService
- BaseLoanDetailExtendService loanDetailExtendService
- DuesService duesService
- RebookOldOrderCloseService rebookOldOrderCloseService
- BaseFinanceDuesService baseFinanceDuesService
- RebookApplyLimitCmdExe rebookApplyLimitCmdExe
- RebookCheckCmdExe rebookCheckCmdExe
- LoanInfoConsumer loanInfoConsumer
- CallbackEventImpl callbackEvent
- LendCallBackConsumer lendCallBackConsumer
+ void tryCalculateTest()
+ void getRebookDetailTest()
+ void rebookDuesTest()
+ void paymentSchedule()
+ void closeOldOrderTest()
+ void testRebookApplyLimit()
+ void testCheckUser()
+ void testCheckLoan()
+ void useCreditTest()
+ void afterTransfer()
+ void callBack()
}
class com.welab.loan.finance.app.command.tb.order.loandetail.TbLoanDetailBuilderProvider {
}
class com.welab.loan.finance.service.core.BaseRepaymentTrack {
- FinanceRepaymentTrackMapper mapper
- FinanceRepaymentTrackExtMapper mapperExt
- FifStoreService fifStoreService
- FundService fundService
- MerchantService merchantService
- BaseLoanReversalService baseLoanReversalService
- BaseLoanService baseLoanService
- BaseFinanceDuesService baseFinanceDuesService
- BaseRepaymentTrack baseRepaymentTrack
- WhtCostProvider whtCostProvider
- {static} Date WHT_DATE
- TbServiceFacade tbServiceFacade
- QueryTaskServiceFacade queryTaskServiceFacade
+ void saveTrack(FinanceRepaymentTrack)
+ List<FinanceRepaymentTrack> findFinanceRepaymentTrackByLoanNum(String)
+ List<FinanceRepaymentTrack> findRebookTrack(String)
+ List<FinanceRepaymentTrack> findFinanceRepaymentTrackByTransId(String)
+ FinanceRepaymentTrack findByTransId(String,String,Integer)
+ AmountExt findSumAmountByTransId(String,TransTypeEnum)
+ PageInfo<FinanceRepaymentTrack> findRepaymentTrackByPage(FinanceRepaymentTrackExample,int,int)
+ PageInfo<FinanceRepaymentTrackExt> findFinanceRepaymentTrackExtByPage(RepaymentTracBackDto)
+ PageInfo<FinanceRepaymentTrackExt> findFinanceRepaymentTrackExtByPageInfo(RepaymentTracBackDto)
+ void repaymentExport(RepaymentTracBackDto,Boolean)
+ Map transMap(RepaymentTracBackDto)
+ void translatedData(List<FinanceRepaymentTrackExt>)
- Map<String,MerchantDto> getMerchantInfo(List<FinanceRepaymentTrackExt>)
+ List<LoanTrack> selectOffRepayTrackByTime(Date,Date)
+ {static} void main(String[])
+ void batchInsertTrack(List<FinanceRepaymentTrack>)
+ void updatePlanTypeByTransId(String,Byte)
+ List<FinanceRepaymentTrack> findFinanceRepaymentTrackList(Long,Byte,Date,Date)
+ List<FinanceRepaymentTrack> findLastRepaymentTrack(Long)
+ List<AstrapayRepaymentExt> findFinanceRepaymentTrackListByMerchantCode(Long,Byte,List<String>,Date,Date)
+ List<String> findFinanceRepaymentTrackMerchantCode(Long,Byte,Date,Date)
+ FinanceRepaymentTrack findLastRepaymentTrack(String,Integer)
+ long countByTransId(String)
+ long countByLoanNumber(String)
+ FinanceRepaymentTrack findLastRepaymentTrack(String)
+ List<FinanceRepaymentTrack> findTbReversalRepaymentTrack(String,String)
+ TrackExt findOneCLRepaymentTrack(Long)
+ List<FinanceRepaymentTrack> findRepaymentTrackByOrderNos(List<String>,Byte)
}
class com.welab.loan.finance.core.dues.impl.TappCostService {
- boolean isDiscount
- {static} String LOG_PREFIX
+ CostDetailDTO findCostDetail(CostReqDTO)
+ String costKey()
}
class com.welab.loan.finance.vo.credit.CreditActivityAbTestUsertrialCalculationVo {
- String userIdDigitId2Redis
- String userTag
- String userIdLastNums
- Integer userGroupRuleType
}
class com.welab.loan.finance.model.CreditUserAccountInfoExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditUserAccountInfoExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditUserAccountInfoExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andIsMigrateIsNull()
+ Criteria andIsMigrateIsNotNull()
+ Criteria andIsMigrateEqualTo(Boolean)
+ Criteria andIsMigrateNotEqualTo(Boolean)
+ Criteria andIsMigrateGreaterThan(Boolean)
+ Criteria andIsMigrateGreaterThanOrEqualTo(Boolean)
+ Criteria andIsMigrateLessThan(Boolean)
+ Criteria andIsMigrateLessThanOrEqualTo(Boolean)
+ Criteria andIsMigrateIn(List<Boolean>)
+ Criteria andIsMigrateNotIn(List<Boolean>)
+ Criteria andIsMigrateBetween(Boolean,Boolean)
+ Criteria andIsMigrateNotBetween(Boolean,Boolean)
+ Criteria andIncomeIsNull()
+ Criteria andIncomeIsNotNull()
+ Criteria andIncomeEqualTo(Long)
+ Criteria andIncomeNotEqualTo(Long)
+ Criteria andIncomeGreaterThan(Long)
+ Criteria andIncomeGreaterThanOrEqualTo(Long)
+ Criteria andIncomeLessThan(Long)
+ Criteria andIncomeLessThanOrEqualTo(Long)
+ Criteria andIncomeIn(List<Long>)
+ Criteria andIncomeNotIn(List<Long>)
+ Criteria andIncomeBetween(Long,Long)
+ Criteria andIncomeNotBetween(Long,Long)
+ Criteria andTagIsNull()
+ Criteria andTagIsNotNull()
+ Criteria andTagEqualTo(String)
+ Criteria andTagNotEqualTo(String)
+ Criteria andTagGreaterThan(String)
+ Criteria andTagGreaterThanOrEqualTo(String)
+ Criteria andTagLessThan(String)
+ Criteria andTagLessThanOrEqualTo(String)
+ Criteria andTagLike(String)
+ Criteria andTagNotLike(String)
+ Criteria andTagIn(List<String>)
+ Criteria andTagNotIn(List<String>)
+ Criteria andTagBetween(String,String)
+ Criteria andTagNotBetween(String,String)
+ Criteria andSecondTagIsNull()
+ Criteria andSecondTagIsNotNull()
+ Criteria andSecondTagEqualTo(String)
+ Criteria andSecondTagNotEqualTo(String)
+ Criteria andSecondTagGreaterThan(String)
+ Criteria andSecondTagGreaterThanOrEqualTo(String)
+ Criteria andSecondTagLessThan(String)
+ Criteria andSecondTagLessThanOrEqualTo(String)
+ Criteria andSecondTagLike(String)
+ Criteria andSecondTagNotLike(String)
+ Criteria andSecondTagIn(List<String>)
+ Criteria andSecondTagNotIn(List<String>)
+ Criteria andSecondTagBetween(String,String)
+ Criteria andSecondTagNotBetween(String,String)
+ Criteria andApplyNoIsNull()
+ Criteria andApplyNoIsNotNull()
+ Criteria andApplyNoEqualTo(String)
+ Criteria andApplyNoNotEqualTo(String)
+ Criteria andApplyNoGreaterThan(String)
+ Criteria andApplyNoGreaterThanOrEqualTo(String)
+ Criteria andApplyNoLessThan(String)
+ Criteria andApplyNoLessThanOrEqualTo(String)
+ Criteria andApplyNoLike(String)
+ Criteria andApplyNoNotLike(String)
+ Criteria andApplyNoIn(List<String>)
+ Criteria andApplyNoNotIn(List<String>)
+ Criteria andApplyNoBetween(String,String)
+ Criteria andApplyNoNotBetween(String,String)
+ Criteria andApprovedAtIsNull()
+ Criteria andApprovedAtIsNotNull()
+ Criteria andApprovedAtEqualTo(Date)
+ Criteria andApprovedAtNotEqualTo(Date)
+ Criteria andApprovedAtGreaterThan(Date)
+ Criteria andApprovedAtGreaterThanOrEqualTo(Date)
+ Criteria andApprovedAtLessThan(Date)
+ Criteria andApprovedAtLessThanOrEqualTo(Date)
+ Criteria andApprovedAtIn(List<Date>)
+ Criteria andApprovedAtNotIn(List<Date>)
+ Criteria andApprovedAtBetween(Date,Date)
+ Criteria andApprovedAtNotBetween(Date,Date)
+ Criteria andTagUpdatedAtIsNull()
+ Criteria andTagUpdatedAtIsNotNull()
+ Criteria andTagUpdatedAtEqualTo(Date)
+ Criteria andTagUpdatedAtNotEqualTo(Date)
+ Criteria andTagUpdatedAtGreaterThan(Date)
+ Criteria andTagUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andTagUpdatedAtLessThan(Date)
+ Criteria andTagUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andTagUpdatedAtIn(List<Date>)
+ Criteria andTagUpdatedAtNotIn(List<Date>)
+ Criteria andTagUpdatedAtBetween(Date,Date)
+ Criteria andTagUpdatedAtNotBetween(Date,Date)
+ Criteria andLastUserIdNumIsNull()
+ Criteria andLastUserIdNumIsNotNull()
+ Criteria andLastUserIdNumEqualTo(Integer)
+ Criteria andLastUserIdNumNotEqualTo(Integer)
+ Criteria andLastUserIdNumGreaterThan(Integer)
+ Criteria andLastUserIdNumGreaterThanOrEqualTo(Integer)
+ Criteria andLastUserIdNumLessThan(Integer)
+ Criteria andLastUserIdNumLessThanOrEqualTo(Integer)
+ Criteria andLastUserIdNumIn(List<Integer>)
+ Criteria andLastUserIdNumNotIn(List<Integer>)
+ Criteria andLastUserIdNumBetween(Integer,Integer)
+ Criteria andLastUserIdNumNotBetween(Integer,Integer)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.CreditUserAccountInfoExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.CreditUserAccountInfoExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.app.command.plan.EPlanTryCalculationCmdExe {
- DuesService duesService
- BaseDuesService baseDuesService
- BaseLoanDetailService baseLoanDetailService
- PartnerServiceFacade partnerServiceFacade
- EPlanCheckCmdExe ePlanCheckCmdExe
- BaseLoanApplyPlansService baseLoanApplyPlansService
- BaseLoanPlansRelationService baseLoanPlansRelationService
- BaseLoanDetailExtendService loanDetailExtendService
- EPlanTryCostCmdExe ePlanTryCostCmdExe
+ Response<EPlanTryCalculationListVO> tryEplan(List<String>,Boolean)
+ Response<EPlanTryCalculationListVO> tryEplanForUser(Long,Boolean)
- EPlanTryCalculationListVO calculateTryRepaymentData(List<String>,Boolean)
- List<EPlanDuesVO> getEPlanOldLoanDuesList(String)
- List<EPlanDuesVO> getEPlanNewLoanDuesList(CostDetailDTO)
}
class com.welab.loan.finance.app.command.credit.CreditProductListQryExe {
+ List<TagProductVO> matchProduct(CreditUserAccountExt)
}
class com.welab.loan.finance.facade.message.MessageSmsFacade {
- MessageSmsService messageSmsService
# String appId
+ void sendLoanSuccessSmsToTb(TbUser,TbLoan,String,String,TBEnum)
}
class com.welab.loan.finance.test.BankConfigTest {
~ BankConfigService bankConfigService
+ void bankTest()
}
class com.welab.loan.finance.app.base.credit.BaseCreditLoanCancelService {
- CreditLoanCancelExtMapper creditLoanCancelExtMapper
+ int insertSelective(CreditLoanCancel)
+ List<CreditLoanCancel> selectByLoanNumbers(List<String>)
+ int batchInsert(List<CreditLoanCancel>)
+ int updateByExampleSelective(CreditLoanCancel)
+ List<CreditLoanCancel> getLoanCancelList(List<String>)
}
class com.welab.loan.finance.vo.request.Account {
- Long userId
- Long amount
- TypeEnum typeEnum
- String loanNum
- RepayOriginEnum repayOriginEnum
- String transId
- Long balanceAmount
- Boolean isAdvance
}
interface com.welab.loan.finance.mapper.CreditUserLoanMapper {
~ long countByExample(CreditUserLoanExample)
~ int deleteByExample(CreditUserLoanExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditUserLoan)
~ int insertSelective(CreditUserLoan)
~ List<CreditUserLoan> selectByExample(CreditUserLoanExample)
~ CreditUserLoan selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditUserLoan,CreditUserLoanExample)
~ int updateByExample(CreditUserLoan,CreditUserLoanExample)
~ int updateByPrimaryKeySelective(CreditUserLoan)
~ int updateByPrimaryKey(CreditUserLoan)
}
enum com.welab.loan.finance.enums.TradingStatusEnum {
+  INIT
+  SUCCESS
+  FAILURE
- byte val
- String desc
- String name
+ {static} TradingStatusEnum getEnum(Byte)
}
enum com.welab.loan.finance.enums.AscriptionTypeEnum {
+  LENDER
+  PLATFORMUSER
- String value
~ <<Create>> AscriptionTypeEnum(String)
+ String getValue()
+ {static} boolean existAscriptionType(String)
}
class com.welab.loan.finance.app.impl.loan.LoanServiceImpl {
- BaseLoanDetailService baseLoanDetailService
- BaseLoanMqService baseLoanMqService
- LoanUserRepayImpl loanUserRepayImpl
- IQueryDuesService iQueryDuesService
- GatewayLoanCancelCmdExe gatewayLoanCancelCmdExe
- BaseRabbitTemplate baseRabbitTemplate
- BaseFinanceLendService baseFinanceLendService
- LoanInfoConsumer loanInfoConsumer
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
- LoanOverdueInfoManager loanOverdueInfoManager
- LoansService loansService
- TransformDuesImpl transformDuesImpl
- PlanServiceImpl planService
+ Response<Boolean> createLoan(String)
+ Response<LoanDetailDto> findLoanDetailByLoanNumber(String)
+ Response<List<LoanDetailDto>> findLoanDetailByLoanNumbers(List<String>)
+ Response<List<LoanDetailExtendDto>> findLoanDetailExtendByLoanNumbers(List<String>)
+ Response<LoanDetailExtendDto> findLoanDetailExtendByLoanNumber(String)
+ Response<LoanDetailDto> findLoanDetailAndExtendByLoanNumber(String)
+ Response<Boolean> saveLoanMq(LoanMqDto)
+ Response<List<String>> findWaitingRepayLoansByUserId(Long)
+ Response<Long> getWaitingPayAmount(List<String>)
+ Response<Boolean> updateLendStatus(String,Byte)
+ Response<Boolean> gatewayLoanCancelDoCheck(List<String>)
+ Response<Byte> gatewayLoanCancelDoCancel(String)
+ Response<Integer> closeLoanHand(String)
+ Response<Integer> timeoutLoanHand(String)
+ Response<Map<Long,Integer>> getUserMaxDpd(UserMaxDpdQry)
+ Response<List<LoanOverdueInfoDTO>> findLoanOverDueInfoByLoanNumber(List<String>)
- int doCloseLoanHand(String)
- int doTimeoutLoanHand(String)
- Long countWaitPayAmount(List<String>)
+ Boolean isNormalUserAndRepaying(Long)
+ Boolean isPartionRepayment(String)
}
class com.welab.loan.finance.service.other.BackstageConfigFacade {
- com.welab.marketing.service.BackstageConfigService backstageConfigService
- CommonConfigService commonConfigService
+ String getCacheConfigValue(String)
+ String findBankStoreConfig()
+ String findBankStoreConfig(Long)
+ boolean getRebookABTest()
}
class com.welab.loan.finance.utils.PlanPtpNotifyUtils {
- {static} PlanConfig planConfig
- {static} RabbitTemplate rabbitTemplate
- {static} LoanPlansContractBusiService loanPlansContractBusiService
- <<Create>> PlanPtpNotifyUtils()
+ {static} PlanConfig.Config getPlanConfig(PlansTypeEnum)
+ {static} void repaymentPush(RepaymentPlanDTO)
+ {static} void applyPush(PlansTypeEnum,Long,Long)
+ {static} void sendPush(AppPushMsgDTO)
}
class com.welab.loan.finance.utils.PlanPtpNotifyUtils$RepaymentPlanDTO {
- PlansTypeEnum plansTypeEnum
- Long userId
- Long orgId
- String loanNumber
- Integer dueIndex
}
class com.welab.loan.finance.tools.DataRecoveryTest {
- FinanceRepaymentTrackMapper trackMapper
+ void repaymentTrack()
- void newAddRepaymentTrack(HashMap<String,String>,String)
}
class com.welab.loan.finance.test.dues.DuesDeductTest {
- MaucashRepaymentServiceImpl repaymentService
- BaseDuesService baseDuesService
+ void testTransformDeductDetail()
+ void testDeduct()
+ void testCalVatFee()
+ void testTry()
+ void testDuesDeduct()
}
class com.welab.loan.finance.service.business.LendBusiService {
- BaseFinanceLendService financeLendService
- LoanStatusNoticService loanStatusNoticService
# FundAccountInfoService fundAccountInfoService
- CreditUserAccountServiceImpl creditUserAccountServiceImpl
- ICallbackEvent iCallbackEvent
- BaseRabbitTemplate rabbitTemplate
- BaseFinanceTrading baseFinanceTrading
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- ApolloUtils apolloUtils
+ boolean payCallbackBase(DisbursementMqDto,Long)
+ boolean payCallbackBaseBy(DisbursementMqDto,Long,boolean)
- void sendMsg(DisbursementMqDto,FinanceLend,String,TypeEnum)
- void callMsgOnLine(String,DisbursementMqDto)
- void callMsgOffLine(String,Long,String)
+ TransferDto buildTransferDto(String,Long,String,String,TradingTypeEnum,String,String,Byte,Long)
}
class com.welab.loan.finance.model.mongo.TbLoanDoc {
- String partner
- String orderNo
- String loanNumber
- String mobile
- Long principal
- Long upfrontAD
- Long upfrontPV
- Long upfrontIF
- Long upfrontPF
- Long repayAD
- Long repayPV
- Long repayIF
- Long repayPF
- Double lfDayPercent
- Long amountDisbursed
- String tenor
- Long commercialFee
- String accountNo
- String bankName
- String to
- String disbursementTime
- String by
- String productCode
- String funder
- String disbursementCommand
- Long dpd
- Date actualDisbursementTime
- Date uploadDate
- Long outstandingAmount
}
class com.welab.loan.finance.app.manager.PayTaskManager {
- QueryTaskServiceFacade taskServiceFacade
- ITaskService iTaskService
- String loanNumberKey
+ List<String> importRetryTasks(Long,MultipartFile)
+ List<String> importRetryTaskStatus(Long,MultipartFile)
- List<String> handleData(List<Map>,Long)
- List<String> handData(Long,List<Map>)
}
interface com.welab.loan.finance.mapper.LoanReversalMapper {
~ int countByExample(LoanReversalExample)
~ int deleteByExample(LoanReversalExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanReversal)
~ int insertSelective(LoanReversal)
~ List<LoanReversal> selectByExample(LoanReversalExample)
~ LoanReversal selectByPrimaryKey(Long)
~ List<ReversalVo> getExportDataByTime(Date,Date)
~ int updateByExampleSelective(LoanReversal,LoanReversalExample)
~ int updateByExample(LoanReversal,LoanReversalExample)
~ int updateByPrimaryKeySelective(LoanReversal)
~ int updateByPrimaryKey(LoanReversal)
}
class com.welab.loan.finance.vo.FinanceTradingVO {
- Long id
- String loanNumber
- Long orgId
- String outAccountNo
- String inAccountNo
- Integer type
- Long amount
- Byte status
- Long fundId
- String fundName
- Byte fundType
- String payGatewayName
- String batchNo
- String orderId
- String remark
- Date createdAt
- Date updatedAt
}
class com.welab.loan.finance.app.command.repayment.DuesGoBackCmdExe {
- String vatPartRepaymentDate
- BaseDuesService baseDuesService
- VatRepaymentCostProvider costProvider
- BaseLoanCouponDetailService baseLoanCouponDetailService
- VatCostProvider vatCostProvider
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
- BaseLoanDetailService baseLoanDetailService
- FlexifitWhiteDubboService flexifitWhiteDubboService
- BaseRepaymentTrack baseRepaymentTrack
+ void duesGoBack(String,Long,Integer,Date)
+ void tbDeductDues(String,Long,Date,List<Dues>)
- Function<FinanceRepaymentTrack,Long> getAmountFunction(DueTypeEnum)
+ void doDueIndex(List<Dues>)
+ void doCalCarryFee(List<Dues>)
- Long calLateFee(List<Dues>)
+ void doCalVatFee(List<Dues>,boolean)
- void doCoupon(String,Integer,List<Dues>)
- Long getCouponAmount(LoanCouponDetail,DueTypeEnum)
- void doDeductDues(Long,Date,List<Dues>,Date)
+ List<Dues> addOverDueData(List<Dues>,Date)
- void generateVatDues(List<Dues>,boolean)
- boolean isFlexifitUser(Long)
- Dues generateDues(Date,Dues,List<Dues>,DueTypeEnum,Long)
- void doOverDueInfo(Dues,Long)
+ void updateOverDueInfo(Dues,Long)
}
class com.welab.loan.finance.app.manager.BNILoanPassKeyManager {
- JedisCluster jedisCluster
- Integer MAX_COUNT
- Boolean testSwitch
- {static} String HASH_PASS_LOAN_KEY
- {static} String MAX_PASS_PREFIX
- {static} String BNI_PASS_NONE_HANDLING_FEE_PREFIX
+ boolean putLoan(String)
+ boolean existLoan(String)
+ boolean loanNeedHandlingFee(String)
+ boolean canPutLoan()
}
class com.welab.loan.finance.vo.credit.CreditActivityAbTestExportVo {
- String fileName
- Date createdAt
- String createdBy
- String fileId
}
class com.welab.loan.finance.app.impl.userTag.UserTagServiceImpl {
- TagExpressInternalFunctionMapper tagExpressInternalFunctionMapper
+ Response<Long> disbursedCount(Map<String,Object>)
+ Response<Long> closeDueCount(Map<String,Object>)
+ Response<Long> closeLoanCount(Map<String,Object>)
+ Response<Long> repaymentAmount(Map<String,Object>)
+ Response<Long> repaymentCount(Map<String,Object>)
+ Response<Long> repaymentLoanNumberCount(Map<String,Object>)
+ Response<Long> getDpd(Map<String,Object>)
+ Response<Long> getFirstMaxDpd(Map<String,Object>)
+ Response<String> getLastSalaryDay(Long)
+ Response<List<Date>> getDueDateList(Map<String,Object>)
+ Response<Long> repaymentAfterApprovalCountNew(Map<String,Object>)
+ Response<Long> collectionPlanCount(Map<String,Object>)
+ Response<List<String>> getRepaymentLoanNumbers(Map<String,Object>)
+ Response<Long> getEplanLoanCount(Map<String,Object>)
+ Response<Date> getLastEplanCloseDate(Map<String,Object>)
}
class com.welab.loan.finance.model.CreditUserAccount {
- Long id
- String productCode
- String accountType
- Long userId
- Long useMoney
- Long sumMoney
- Long freezeMoney
- String creditStatus
- Boolean deleted
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getProductCode()
+ void setProductCode(String)
+ String getAccountType()
+ void setAccountType(String)
+ Long getUserId()
+ void setUserId(Long)
+ Long getUseMoney()
+ void setUseMoney(Long)
+ Long getSumMoney()
+ void setSumMoney(Long)
+ Long getFreezeMoney()
+ void setFreezeMoney(Long)
+ String getCreditStatus()
+ void setCreditStatus(String)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.test.BasePayServiceTest {
- BasePayService basePayService
+ void checkRepayAmount()
}
class com.welab.loan.finance.service.other.HsoService {
- BaseTbUserService baseTbUserService
- JedisCluster jedisCluster
- MongoManager mongoManager
- {static} String HSO_SELECTED_KEY
+ List<HomePageAhassInfoVO> findHomePageAhassList(Long)
- List<HomePageAhassInfoVO> buildHomePageAhassInfoVO(List<TbUser>)
+ Response saveSelectedStatus(Long,List<String>)
+ List<AhassLimitVO> ahassLimit(HsoLimitQry)
+ PageInfo<AhassLimitVO> ahassLimitPage(HsoLimitQry)
+ HttpServletResponse ahassLimitExport(HsoLimitQry,HttpServletResponse)
- List<AhassLimitVO> buildAhassLimitVO(List<TbUserCreditAmountDTO>)
- String ahassLimitVOSort(Integer)
- LinkedHashMap<String,String> excelHead()
}
class com.welab.loan.finance.core.dues.impl.CreditCostService {
- boolean isDiscount
+ CostDetailDTO findCostDetail(CostReqDTO)
+ String costKey()
}
class com.welab.loan.finance.core.dto.syn.SynTransferDTO {
- String loanNumber
- List<TradingTypeEnum> tradingType
- boolean auto
- boolean init
- TypeEnum typeEnum
- String secondProdCode
}
class com.welab.loan.finance.app.base.BaseLoanPlanRelationService {
- LoanPlansRelationExtMapper loanPlansRelationExtMapper
+ List<LoanPlansRelationDTO> getEffectiveEplanLoans(Long)
}
class com.welab.loan.finance.dto.CheckUnFinishedLoanDto {
- {static} long serialVersionUID
- String loanNumber
- Long userId
- Long orgId
- String newBankAccountNumber
}
class com.welab.loan.finance.test.SignMethodTest {
- SignMethodManager signMethodManager
+ void switchSgn()
+ void testHistoryList()
+ void testList()
}
class com.welab.loan.finance.dto.paylater.PayLaterLoanRspDTO {
- Long total
- List<PayLaterLoanDTO> data
}
class com.welab.loan.finance.model.LoanPlansLog {
- Long id
- String loanNumber
- Integer dueIndex
- Byte type
- Long subPrincipal
- Long subServiceFee
- Long subFundInterest
- Long subAdminFee
- Long subLateFee
- Byte status
- Date createdAt
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Integer getDueIndex()
+ void setDueIndex(Integer)
+ Byte getType()
+ void setType(Byte)
+ Long getSubPrincipal()
+ void setSubPrincipal(Long)
+ Long getSubServiceFee()
+ void setSubServiceFee(Long)
+ Long getSubFundInterest()
+ void setSubFundInterest(Long)
+ Long getSubAdminFee()
+ void setSubAdminFee(Long)
+ Long getSubLateFee()
+ void setSubLateFee(Long)
+ Byte getStatus()
+ void setStatus(Byte)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
}
interface com.welab.loan.finance.mapper.BusinessCalendarsMapper {
~ long countByExample(BusinessCalendarsExample)
~ int deleteByExample(BusinessCalendarsExample)
~ int deleteByPrimaryKey(Long)
~ int insert(BusinessCalendars)
~ int insertSelective(BusinessCalendars)
~ List<BusinessCalendars> selectByExample(BusinessCalendarsExample)
~ BusinessCalendars selectByPrimaryKey(Long)
~ int updateByExampleSelective(BusinessCalendars,BusinessCalendarsExample)
~ int updateByExample(BusinessCalendars,BusinessCalendarsExample)
~ int updateByPrimaryKeySelective(BusinessCalendars)
~ int updateByPrimaryKey(BusinessCalendars)
}
class com.welab.loan.finance.model.ext.CreditUserAccountInfoExt {
- Long lastId
- String creditStatus
- Boolean noBlack
}
enum com.welab.loan.finance.enums.TradingTypeEnum {
+  ADMIN_FEE
+  DISBURSEMENT
- int value
- String name
- String enName
- <<Create>> TradingTypeEnum(int,String,String)
}
class com.welab.loan.finance.config.DubboRemoteLogFilter {
- {static} Environment env
- {static} Boolean logSwitch
+ Result invoke(Invoker<?>,Invocation)
+ Boolean getLogSwitch()
+ void setLogSwitch(Boolean)
}
class com.welab.loan.finance.model.CreditActivityAbTestGroupLoanRelation {
- Long id
- Date createdAt
- Date updatedAt
- Long abTestId
- String loanNumber
- Long userId
- Byte groupType
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Long getAbTestId()
+ void setAbTestId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Long getUserId()
+ void setUserId(Long)
+ Byte getGroupType()
+ void setGroupType(Byte)
}
class com.welab.loan.finance.dto.loan.LoanDetailExtendDto {
- Long id
- String loanNumber
- Byte productType
- Byte adminType
- Boolean isHeadFee
- Boolean isQuery
- Integer fixAdminFee
- String fixFundInterest
- String provisionRate
- BigDecimal fundProvisionRate
- Byte fundInterestType
- BigDecimal astraRate
- BigDecimal mdrRate
- BigDecimal taxRate
- Byte preferentialType
- String disInterestFee
- String disAdminFee
- String disLateFee
- String disUpfrontFee
- String salaryDay
- String payDay
- String payCycle
- String transType
- String merchantProductCode
- String merchantCode
- String merchantOrderNo
- String buyerName
- String extend
- String ext
- Long fundInterest
- Long upfrontCarryFee
- Date createdAt
- String disProvisionFee
- String disFundInterestFee
- Byte flag
- String flagReason
- String rateExtend
- String tenorMin
- String tenorMax
- Byte isPremium
}
class com.welab.loan.finance.core.dto.DiscountDuesDTO {
- Long id
- String loanId
- Integer dueIndex
- Date dueDate
- String dueType
- Long amount
- Integer repayIndex
- Long settledAmount
- Long remainingAmount
- Long discountLateFee
- Long couponFee
- Boolean isClose
- Byte planType
- Boolean isLock
- Long subPlanAmount
- Long couponAmount
- Long orgAmount
- Long subAdvAmount
- Long orgId
+ Long findDiscountAmount()
}
class com.welab.loan.finance.app.command.tb.TbServiceImpl {
- TbInvoiceImportService invoiceImportService
- TbLendService lendService
- TbCancelLoanService tbCancelLoanService
- TravelokaPaylaterRepaymentService travelokaPaylaterRepaymentService
- BaseLoanDetailService baseLoanDetailService
- BaseLoanDetailExtendService loanDetailExtendService
+ Response doImport(List<TbInvoice>)
+ Response doBatchLend(TbBatch)
+ Response cancelLoan(List<String>)
+ Response doRepayment(List<TbRepaymentDTO>)
+ Response<TbLoanDetailRate> getRate(String)
}
interface com.welab.loan.finance.core.account.IAccountService {
~ void initAccount(Long)
~ Long getAccountAmount(Long)
~ boolean rechargeAccountAmount(Account)
~ boolean chargeAccountAmount(Account)
~ void findUserBalanceAndUpdate(Long)
}
class com.welab.loan.finance.service.impl.CouponServiceImpl {
- LoanCouponQryExe loanCouponQryExe
- CheckCouponLoansAbleExe checkCouponLoansAbleExe
- TryCouponInfoExe tryCouponInfoExe
- CancelCouponCmdExe cancelCouponCmdExe
+ Response<List<LoanCouponDTO>> listCoupon(LoanCouponQry)
+ Response<List<CouponLoansAbleDTO>> checkCouponLoansAble(CouponLoansAbleCmd)
+ Response<List<CouponLoansAbleDTO>> checkCouponLoansAbleForMarketing(CouponLoansAbleCmd)
+ Response<CouponRepaymentVo> tryCouponInfo(TryCouponInfoCmd)
+ Response<Boolean> cancelCoupon(CancelCouponCmd)
+ Response<Boolean> cancelCouponForUser(CancelCouponForUserCmd)
+ Response<Long> getTotalCouponInfo(List<String>)
}
class com.welab.loan.finance.test.LendReversalTest {
- LendReversalImportService lendReversalImportService
- CashLoanLendReversalJob cashLoanLendReversalJob
- PaylaterLendReversalJob paylaterLendReversalJob
- BimaLendReversalJob bimaLendReversalJob
- LendReversalService lendReversalService
- TransferConsumer transferConsumer
+ void importTest()
+ void cashLoanLendReversalJobTest()
+ void paylaterLendReversalJobTest()
+ void bimaLendReversalJobTest()
+ void callBack()
+ void doDeduct()
}
class com.welab.loan.finance.app.manager.LendCheckManager {
- BaseFinanceLendNewService baseFinanceLendNewService
+ Response<Void> check(LoanDetail,TbLoanDoc)
}
class com.welab.loan.finance.utils.excel.ExcelLog {
- Integer rowNum
- Object object
- String log
+ <<Create>> ExcelLog(Object,String)
+ <<Create>> ExcelLog(Object,String,Integer)
+ Integer getRowNum()
+ void setRowNum(Integer)
+ Object getObject()
+ void setObject(Object)
+ String getLog()
+ void setLog(String)
}
class com.welab.loan.finance.vo.RepaymentData {
- List<DuesVO> dues
- Long headFee
- Long adminFee
- Long channelFee
- Long totalAmount
- Long receivedAmount
- Long receivedAdminFee
}
interface com.welab.loan.finance.service.CreditUserAccountService {
~ List<CreditUserAccountDetailVO> findDetailByAccount(Long)
~ List<CreditUserAccountVO> findByUser(Long)
~ CreditUserAccountVO findByUserAndProductCode(Long,String)
~ CreditUserAccountVO findByUserActiveAndProductCode(Long,String)
~ Response<Boolean> updateOrInitCredit(UpdateCreditUserAccountVO)
~ Response<Boolean> cancelApplyCredit(CancelApplyCreditVO)
~ Response<Boolean> applyUseCredit(String)
~ Response<Boolean> quickUseCredit(QuickUseCreditVO)
~ Response<Boolean> restoreCredit(RestoreCreditVO)
~ Response<Boolean> freezeUser(CreditUserAccountStatusLogDTO)
~ Response<Boolean> delete(Long)
~ Response<CalculationTagAmountVO> creditCalculationByMonthlyIncome(QuotaByMonthlyIncomDTO)
~ Response<Boolean> unFreezeUser(CreditUserAccountStatusLogDTO)
~ Response<PageInfo<CreditUserAccountStatusLogDTO>> getFreezeLogList(PageRequestDTO<CreditUserAccountStatusLogDTO>)
~ CreditUserAccountVO findByUserInfo(Long,String)
~ Response<Boolean> useCredit(UseCreditVO)
~ Response<List<Long>> filterActiveUser(List<Long>)
}
interface com.welab.loan.finance.service.repayment.RepaymentTrackService {
~ TrackVo findLastRepaymentTrack(Long)
~ TrackVo findOneCLRepaymentTrack(Long)
}
class com.welab.loan.finance.core.aop.MapperLogAspect {
- MessageEmailFacade messageEmailFacade
- ApolloUtils apolloUtils
+ void mapperLog()
+ Object doAround(ProceedingJoinPoint)
+ void doAfterThrowing(Exception)
}
interface com.welab.loan.finance.app.command.tb.order.process.TbInvoicePostProcessService {
~ void doProcess(TbInvoice,LoanDetail)
}
class com.welab.loan.finance.vo.response.paybills.BillReverseInfoVO {
- {static} long serialVersionUID
- String loanNumber
- Integer dueIndex
- Long amount
- String transId
}
class com.welab.loan.finance.dto.paylater.MerchantTradingDTO {
- Long totalLoanAmount
- Long totalLoanCount
- Long totalCount
}
class com.welab.loan.finance.dto.paylater.MerchantRepaymentLoanDTO {
- String loanNumber
- String orderNo
- String merchantCode
- Byte origin
- String periods
- String repaymentAmount
- Date actualRepaymentAt
- String channel
- String merchantName
}
class com.welab.loan.finance.pool.ThreadPool {
- <<Create>> ThreadPool()
+ {static} void executor(Runnable)
+ {static} void submit(Runnable)
+ {static} Future<T> submit(Callable<T>)
}
class com.welab.loan.finance.job.DuesBackupJob {
- WelabSeaDynamicDbService welabSeaDynamicDbService
- BaseLoanDetailService baseLoanDetailService
- BaseDuesService baseDuesService
- long step
+ void execute(ShardingContext)
# void execute(ThreadPoolExecutor,DuesBackupModel,List<Exception>)
# DuesBackupModel buildModel(String,long,long)
}
class com.welab.loan.finance.service.impl.PayLaterServiceImpl {
- ProductConfigServiceFacade productConfigServiceFacade
- PayLaterExtMapper payLaterExtMapper
- CreditUserAccountService creditUserAccountService
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- BaseDuesService duesService
- ConfigsService configsService
- ApolloUtils apolloUtils
- {static} Map<String,List<Byte>> orderStatusMap
- {static} String PENDING
- {static} String NORMAL
- {static} String SETTLED
- {static} String OVERDUE
- {static} String CANCELED
- {static} String ACTIVE
+ CalServiceFeeRspDTO findApplyServiceFee(CalServiceFeeReqDTO)
+ PageInfo<List<Map<String,Object>>> selectPayLaterLoan(QueryPayLaterLoanVo)
+ Response<PayLaterLimitRspDTO> getLimit(PayLaterLimitReqDTO)
+ Response<PayLaterLoanRspDTO> queryLoans(PayLaterLoanReqDTO)
- boolean containsOrderStatus(String,Byte)
}
class com.welab.loan.finance.service.other.disburse_tax.MaucashDisburseTaxHandler {
# List<DisburseTax> queryDisburseTax(Date,Date)
}
class com.welab.loan.finance.model.FinanceRefund {
- Long id
- String dateStr
- Byte status
- Long amount
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getDateStr()
+ void setDateStr(String)
+ Byte getStatus()
+ void setStatus(Byte)
+ Long getAmount()
+ void setAmount(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.dto.qry.MerchantLoanQry {
- boolean queryCount
- String sourceId
- String merchantCodes
- String mobile
- String name
- Date beginTime
- Date endTime
- String status
}
class com.welab.loan.finance.test.advance.AdvanceTest {
- LoanService loanService
- LoansService loanSService
+ void advance()
+ void site()
}
interface com.welab.loan.finance.mapper.ext.FinanceTradingExtMapper {
~ long countByExample(Map)
~ List<TransferExt> selectByExample(Map)
~ List<FinanceTradingExt> totalAlfamartLend(Map<String,Object>)
~ List<FinanceTradingExt> getListAlfamartLend(Map<String,Object>)
~ List<FinanceTradingExt> getAlfamatLiteLend(Map<String,Object>)
~ List<Map<String,Object>> getPayLaterTrading(Map<String,Object>)
~ List<FinanceTradingExt> getNeedTransferPremiumLoans(Map<String,Object>)
~ List<String> queryHaveTransferPremium(Map<String,Object>)
~ List<FinanceTrading> selectBcaTransfer(Map)
}
class com.welab.loan.finance.model.UserAdvancePaymentExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> UserAdvancePaymentExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.UserAdvancePaymentExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andUuidIsNull()
+ Criteria andUuidIsNotNull()
+ Criteria andUuidEqualTo(String)
+ Criteria andUuidNotEqualTo(String)
+ Criteria andUuidGreaterThan(String)
+ Criteria andUuidGreaterThanOrEqualTo(String)
+ Criteria andUuidLessThan(String)
+ Criteria andUuidLessThanOrEqualTo(String)
+ Criteria andUuidLike(String)
+ Criteria andUuidNotLike(String)
+ Criteria andUuidIn(List<String>)
+ Criteria andUuidNotIn(List<String>)
+ Criteria andUuidBetween(String,String)
+ Criteria andUuidNotBetween(String,String)
+ Criteria andBankCodeIsNull()
+ Criteria andBankCodeIsNotNull()
+ Criteria andBankCodeEqualTo(String)
+ Criteria andBankCodeNotEqualTo(String)
+ Criteria andBankCodeGreaterThan(String)
+ Criteria andBankCodeGreaterThanOrEqualTo(String)
+ Criteria andBankCodeLessThan(String)
+ Criteria andBankCodeLessThanOrEqualTo(String)
+ Criteria andBankCodeLike(String)
+ Criteria andBankCodeNotLike(String)
+ Criteria andBankCodeIn(List<String>)
+ Criteria andBankCodeNotIn(List<String>)
+ Criteria andBankCodeBetween(String,String)
+ Criteria andBankCodeNotBetween(String,String)
+ Criteria andRepaymentAmountIsNull()
+ Criteria andRepaymentAmountIsNotNull()
+ Criteria andRepaymentAmountEqualTo(Long)
+ Criteria andRepaymentAmountNotEqualTo(Long)
+ Criteria andRepaymentAmountGreaterThan(Long)
+ Criteria andRepaymentAmountGreaterThanOrEqualTo(Long)
+ Criteria andRepaymentAmountLessThan(Long)
+ Criteria andRepaymentAmountLessThanOrEqualTo(Long)
+ Criteria andRepaymentAmountIn(List<Long>)
+ Criteria andRepaymentAmountNotIn(List<Long>)
+ Criteria andRepaymentAmountBetween(Long,Long)
+ Criteria andRepaymentAmountNotBetween(Long,Long)
+ Criteria andTrxUuidIsNull()
+ Criteria andTrxUuidIsNotNull()
+ Criteria andTrxUuidEqualTo(String)
+ Criteria andTrxUuidNotEqualTo(String)
+ Criteria andTrxUuidGreaterThan(String)
+ Criteria andTrxUuidGreaterThanOrEqualTo(String)
+ Criteria andTrxUuidLessThan(String)
+ Criteria andTrxUuidLessThanOrEqualTo(String)
+ Criteria andTrxUuidLike(String)
+ Criteria andTrxUuidNotLike(String)
+ Criteria andTrxUuidIn(List<String>)
+ Criteria andTrxUuidNotIn(List<String>)
+ Criteria andTrxUuidBetween(String,String)
+ Criteria andTrxUuidNotBetween(String,String)
+ Criteria andSyncCacheIdIsNull()
+ Criteria andSyncCacheIdIsNotNull()
+ Criteria andSyncCacheIdEqualTo(Long)
+ Criteria andSyncCacheIdNotEqualTo(Long)
+ Criteria andSyncCacheIdGreaterThan(Long)
+ Criteria andSyncCacheIdGreaterThanOrEqualTo(Long)
+ Criteria andSyncCacheIdLessThan(Long)
+ Criteria andSyncCacheIdLessThanOrEqualTo(Long)
+ Criteria andSyncCacheIdIn(List<Long>)
+ Criteria andSyncCacheIdNotIn(List<Long>)
+ Criteria andSyncCacheIdBetween(Long,Long)
+ Criteria andSyncCacheIdNotBetween(Long,Long)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.UserAdvancePaymentExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.UserAdvancePaymentExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.response.CustomerBeanVo {
- UserProfileVO user
- List<FinanceUserBankcardVo> bank
}
class com.welab.loan.finance.vo.request.PageToBAgreementParamReq {
- String partner
- String mobile
- String tbLoanNumber
- int pageNum
- int pageSize
}
class com.welab.loan.finance.controller.CreditReLoanController {
- CreditReLoanImportCmdExe creditReLoanImportCmdExe
- BaseCreditReLoanService baseCreditReLoanService
+ Response<ImportResVO> creditReLoanImport(Long,CreditReLoanImportVO)
+ Response<PageInfo<CreditReLoan>> list(CreditReLoanQryVO)
}
interface com.welab.loan.finance.mapper.FinanceDuesMapper {
~ long countByExample(FinanceDuesExample)
~ int deleteByExample(FinanceDuesExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FinanceDues)
~ int insertSelective(FinanceDues)
~ int findDpdByTransId(String)
~ List<FinanceDues> selectByExample(FinanceDuesExample)
~ FinanceDues selectByPrimaryKey(Long)
~ int updateByExampleSelective(FinanceDues,FinanceDuesExample)
~ int updateByExample(FinanceDues,FinanceDuesExample)
~ int updateByPrimaryKeySelective(FinanceDues)
~ int updateByPrimaryKey(FinanceDues)
}
interface com.welab.loan.finance.mapper.ReportDetailContractMapper {
~ int countByExample(ReportDetailContractExample)
~ int deleteByExample(ReportDetailContractExample)
~ int deleteByPrimaryKey(Long)
~ int insert(ReportDetailContract)
~ int insertSelective(ReportDetailContract)
~ List<ReportDetailContract> selectByExample(ReportDetailContractExample)
~ ReportDetailContract selectByPrimaryKey(Long)
~ int updateByExampleSelective(ReportDetailContract,ReportDetailContractExample)
~ int updateByExample(ReportDetailContract,ReportDetailContractExample)
~ int updateByPrimaryKeySelective(ReportDetailContract)
~ int updateByPrimaryKey(ReportDetailContract)
}
enum com.welab.loan.finance.enums.RepaymentMethodEnum {
+  HIT_CACHE
+  NORMAL_CACHE
- byte method
- String value
~ <<Create>> RepaymentMethodEnum(byte,String)
+ byte getMethod()
+ String getValue()
}
class com.welab.loan.finance.vo.repayment.CouponAmountVO {
- Integer dueIndex
- Long couponLateFee
- Long couponAdminFee
- Long couponInterestFee
- Long couponPrincipal
}
class com.welab.loan.finance.service.business.lend.CashFlowStatusService {
- BaseLoanDetailService baseLoanDetailService
- LoanDetailExtendExtMapper loanDetailExtendExtMapper
- FinanceTradingMapper financeTradingMapper
+ void updateToPendingRecharge(String,TradingTypeEnum)
+ void updateToBniEscrowNewBni(String,TradingTypeEnum)
+ void updateToNewBcaToBcaDisb(String,TradingTypeEnum)
+ void resetCashFlowStatus(String)
- void doUpdateCashFlowStatus(String,TradingTypeEnum,CashFlowStatusEnum)
}
class com.welab.loan.finance.service.core.BaseAbnormalRepaymentRecordService {
- AbnormalRepaymentRecordMapper mapper
+ void save(AbnormalRepaymentRecord)
+ boolean updateStatus(AbnormalRepaymentRecord)
+ void init(AbnormalRepaymentRecord)
+ List<AbnormalRepaymentRecord> getTodayRecord(AbnormalRepaymentStatusEnum)
}
interface com.welab.loan.finance.mapper.LoanCodeMapper {
~ long countByExample(LoanCodeExample)
~ int deleteByExample(LoanCodeExample)
~ int deleteByPrimaryKey(String)
~ int insert(LoanCode)
~ int insertSelective(LoanCode)
~ List<LoanCode> selectByExample(LoanCodeExample)
~ LoanCode selectByPrimaryKey(String)
~ int updateByExampleSelective(LoanCode,LoanCodeExample)
~ int updateByExample(LoanCode,LoanCodeExample)
~ int updateByPrimaryKeySelective(LoanCode)
~ int updateByPrimaryKey(LoanCode)
}
class com.welab.loan.finance.core.dto.ProductAllFeeDTO {
}
interface com.welab.loan.finance.mapper.CreditUserAccountStatusLogMapper {
~ long countByExample(CreditUserAccountStatusLogExample)
~ int deleteByExample(CreditUserAccountStatusLogExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditUserAccountStatusLog)
~ int insertSelective(CreditUserAccountStatusLog)
~ List<CreditUserAccountStatusLog> selectByExample(CreditUserAccountStatusLogExample)
~ CreditUserAccountStatusLog selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditUserAccountStatusLog,CreditUserAccountStatusLogExample)
~ int updateByExample(CreditUserAccountStatusLog,CreditUserAccountStatusLogExample)
~ int updateByPrimaryKeySelective(CreditUserAccountStatusLog)
~ int updateByPrimaryKey(CreditUserAccountStatusLog)
}
class com.welab.loan.finance.core.dto.va.UserRepayRangeDTO {
- String loanNumber
- Long curAmount
- Long nextAmount
- Long orgId
}
class com.welab.loan.finance.service.business.ModLendTypeBusiService {
- LoanDetailMapper loanDetailMapper
- LoanDetailExtMapper loanDetailExtMapper
- LoanDelayMapper loanDelayMapper
- FinanceTradingMapper financeTradingMapper
- FinanceLendMapper financeLendMapper
- BaseLoanCodeService baseLoanCodeService
- PayService payService
+ Response updateLoanLendType(String,TypeEnum)
# Response updateOffLineToOnLine(String,TypeEnum)
# Response updateOnLineToOffLine(String,TypeEnum)
- boolean modRestSign(String,TypeEnum)
- void cancelTrading(String)
- Response verify(String,TypeEnum)
- LoanDetail findLoan(String)
- FinanceLend findLend(String)
- FinanceTrading findTrading(String,TradingTypeEnum)
}
class com.welab.loan.finance.model.LoanUvfRepaymentExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanUvfRepaymentExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanUvfRepaymentExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andOrgIdIsNull()
+ Criteria andOrgIdIsNotNull()
+ Criteria andOrgIdEqualTo(Long)
+ Criteria andOrgIdNotEqualTo(Long)
+ Criteria andOrgIdGreaterThan(Long)
+ Criteria andOrgIdGreaterThanOrEqualTo(Long)
+ Criteria andOrgIdLessThan(Long)
+ Criteria andOrgIdLessThanOrEqualTo(Long)
+ Criteria andOrgIdIn(List<Long>)
+ Criteria andOrgIdNotIn(List<Long>)
+ Criteria andOrgIdBetween(Long,Long)
+ Criteria andOrgIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andApplyNoIsNull()
+ Criteria andApplyNoIsNotNull()
+ Criteria andApplyNoEqualTo(String)
+ Criteria andApplyNoNotEqualTo(String)
+ Criteria andApplyNoGreaterThan(String)
+ Criteria andApplyNoGreaterThanOrEqualTo(String)
+ Criteria andApplyNoLessThan(String)
+ Criteria andApplyNoLessThanOrEqualTo(String)
+ Criteria andApplyNoLike(String)
+ Criteria andApplyNoNotLike(String)
+ Criteria andApplyNoIn(List<String>)
+ Criteria andApplyNoNotIn(List<String>)
+ Criteria andApplyNoBetween(String,String)
+ Criteria andApplyNoNotBetween(String,String)
+ Criteria andBranchIdIsNull()
+ Criteria andBranchIdIsNotNull()
+ Criteria andBranchIdEqualTo(String)
+ Criteria andBranchIdNotEqualTo(String)
+ Criteria andBranchIdGreaterThan(String)
+ Criteria andBranchIdGreaterThanOrEqualTo(String)
+ Criteria andBranchIdLessThan(String)
+ Criteria andBranchIdLessThanOrEqualTo(String)
+ Criteria andBranchIdLike(String)
+ Criteria andBranchIdNotLike(String)
+ Criteria andBranchIdIn(List<String>)
+ Criteria andBranchIdNotIn(List<String>)
+ Criteria andBranchIdBetween(String,String)
+ Criteria andBranchIdNotBetween(String,String)
+ Criteria andContractIdIsNull()
+ Criteria andContractIdIsNotNull()
+ Criteria andContractIdEqualTo(String)
+ Criteria andContractIdNotEqualTo(String)
+ Criteria andContractIdGreaterThan(String)
+ Criteria andContractIdGreaterThanOrEqualTo(String)
+ Criteria andContractIdLessThan(String)
+ Criteria andContractIdLessThanOrEqualTo(String)
+ Criteria andContractIdLike(String)
+ Criteria andContractIdNotLike(String)
+ Criteria andContractIdIn(List<String>)
+ Criteria andContractIdNotIn(List<String>)
+ Criteria andContractIdBetween(String,String)
+ Criteria andContractIdNotBetween(String,String)
+ Criteria andRepaymentAtIsNull()
+ Criteria andRepaymentAtIsNotNull()
+ Criteria andRepaymentAtEqualTo(Date)
+ Criteria andRepaymentAtNotEqualTo(Date)
+ Criteria andRepaymentAtGreaterThan(Date)
+ Criteria andRepaymentAtGreaterThanOrEqualTo(Date)
+ Criteria andRepaymentAtLessThan(Date)
+ Criteria andRepaymentAtLessThanOrEqualTo(Date)
+ Criteria andRepaymentAtIn(List<Date>)
+ Criteria andRepaymentAtNotIn(List<Date>)
+ Criteria andRepaymentAtBetween(Date,Date)
+ Criteria andRepaymentAtNotBetween(Date,Date)
+ Criteria andUserNameIsNull()
+ Criteria andUserNameIsNotNull()
+ Criteria andUserNameEqualTo(String)
+ Criteria andUserNameNotEqualTo(String)
+ Criteria andUserNameGreaterThan(String)
+ Criteria andUserNameGreaterThanOrEqualTo(String)
+ Criteria andUserNameLessThan(String)
+ Criteria andUserNameLessThanOrEqualTo(String)
+ Criteria andUserNameLike(String)
+ Criteria andUserNameNotLike(String)
+ Criteria andUserNameIn(List<String>)
+ Criteria andUserNameNotIn(List<String>)
+ Criteria andUserNameBetween(String,String)
+ Criteria andUserNameNotBetween(String,String)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andPeriodIsNull()
+ Criteria andPeriodIsNotNull()
+ Criteria andPeriodEqualTo(Integer)
+ Criteria andPeriodNotEqualTo(Integer)
+ Criteria andPeriodGreaterThan(Integer)
+ Criteria andPeriodGreaterThanOrEqualTo(Integer)
+ Criteria andPeriodLessThan(Integer)
+ Criteria andPeriodLessThanOrEqualTo(Integer)
+ Criteria andPeriodIn(List<Integer>)
+ Criteria andPeriodNotIn(List<Integer>)
+ Criteria andPeriodBetween(Integer,Integer)
+ Criteria andPeriodNotBetween(Integer,Integer)
+ Criteria andSeqNoIsNull()
+ Criteria andSeqNoIsNotNull()
+ Criteria andSeqNoEqualTo(String)
+ Criteria andSeqNoNotEqualTo(String)
+ Criteria andSeqNoGreaterThan(String)
+ Criteria andSeqNoGreaterThanOrEqualTo(String)
+ Criteria andSeqNoLessThan(String)
+ Criteria andSeqNoLessThanOrEqualTo(String)
+ Criteria andSeqNoLike(String)
+ Criteria andSeqNoNotLike(String)
+ Criteria andSeqNoIn(List<String>)
+ Criteria andSeqNoNotIn(List<String>)
+ Criteria andSeqNoBetween(String,String)
+ Criteria andSeqNoNotBetween(String,String)
+ Criteria andInstallmentAmountIsNull()
+ Criteria andInstallmentAmountIsNotNull()
+ Criteria andInstallmentAmountEqualTo(Long)
+ Criteria andInstallmentAmountNotEqualTo(Long)
+ Criteria andInstallmentAmountGreaterThan(Long)
+ Criteria andInstallmentAmountGreaterThanOrEqualTo(Long)
+ Criteria andInstallmentAmountLessThan(Long)
+ Criteria andInstallmentAmountLessThanOrEqualTo(Long)
+ Criteria andInstallmentAmountIn(List<Long>)
+ Criteria andInstallmentAmountNotIn(List<Long>)
+ Criteria andInstallmentAmountBetween(Long,Long)
+ Criteria andInstallmentAmountNotBetween(Long,Long)
+ Criteria andTotalAmountIsNull()
+ Criteria andTotalAmountIsNotNull()
+ Criteria andTotalAmountEqualTo(Long)
+ Criteria andTotalAmountNotEqualTo(Long)
+ Criteria andTotalAmountGreaterThan(Long)
+ Criteria andTotalAmountGreaterThanOrEqualTo(Long)
+ Criteria andTotalAmountLessThan(Long)
+ Criteria andTotalAmountLessThanOrEqualTo(Long)
+ Criteria andTotalAmountIn(List<Long>)
+ Criteria andTotalAmountNotIn(List<Long>)
+ Criteria andTotalAmountBetween(Long,Long)
+ Criteria andTotalAmountNotBetween(Long,Long)
+ Criteria andRepaymentAmountIsNull()
+ Criteria andRepaymentAmountIsNotNull()
+ Criteria andRepaymentAmountEqualTo(Long)
+ Criteria andRepaymentAmountNotEqualTo(Long)
+ Criteria andRepaymentAmountGreaterThan(Long)
+ Criteria andRepaymentAmountGreaterThanOrEqualTo(Long)
+ Criteria andRepaymentAmountLessThan(Long)
+ Criteria andRepaymentAmountLessThanOrEqualTo(Long)
+ Criteria andRepaymentAmountIn(List<Long>)
+ Criteria andRepaymentAmountNotIn(List<Long>)
+ Criteria andRepaymentAmountBetween(Long,Long)
+ Criteria andRepaymentAmountNotBetween(Long,Long)
+ Criteria andCollectionFeeIsNull()
+ Criteria andCollectionFeeIsNotNull()
+ Criteria andCollectionFeeEqualTo(Long)
+ Criteria andCollectionFeeNotEqualTo(Long)
+ Criteria andCollectionFeeGreaterThan(Long)
+ Criteria andCollectionFeeGreaterThanOrEqualTo(Long)
+ Criteria andCollectionFeeLessThan(Long)
+ Criteria andCollectionFeeLessThanOrEqualTo(Long)
+ Criteria andCollectionFeeIn(List<Long>)
+ Criteria andCollectionFeeNotIn(List<Long>)
+ Criteria andCollectionFeeBetween(Long,Long)
+ Criteria andCollectionFeeNotBetween(Long,Long)
+ Criteria andLateFeeIsNull()
+ Criteria andLateFeeIsNotNull()
+ Criteria andLateFeeEqualTo(Long)
+ Criteria andLateFeeNotEqualTo(Long)
+ Criteria andLateFeeGreaterThan(Long)
+ Criteria andLateFeeGreaterThanOrEqualTo(Long)
+ Criteria andLateFeeLessThan(Long)
+ Criteria andLateFeeLessThanOrEqualTo(Long)
+ Criteria andLateFeeIn(List<Long>)
+ Criteria andLateFeeNotIn(List<Long>)
+ Criteria andLateFeeBetween(Long,Long)
+ Criteria andLateFeeNotBetween(Long,Long)
+ Criteria andOutstandingAmountIsNull()
+ Criteria andOutstandingAmountIsNotNull()
+ Criteria andOutstandingAmountEqualTo(Long)
+ Criteria andOutstandingAmountNotEqualTo(Long)
+ Criteria andOutstandingAmountGreaterThan(Long)
+ Criteria andOutstandingAmountGreaterThanOrEqualTo(Long)
+ Criteria andOutstandingAmountLessThan(Long)
+ Criteria andOutstandingAmountLessThanOrEqualTo(Long)
+ Criteria andOutstandingAmountIn(List<Long>)
+ Criteria andOutstandingAmountNotIn(List<Long>)
+ Criteria andOutstandingAmountBetween(Long,Long)
+ Criteria andOutstandingAmountNotBetween(Long,Long)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Long)
+ Criteria andFundIdNotEqualTo(Long)
+ Criteria andFundIdGreaterThan(Long)
+ Criteria andFundIdGreaterThanOrEqualTo(Long)
+ Criteria andFundIdLessThan(Long)
+ Criteria andFundIdLessThanOrEqualTo(Long)
+ Criteria andFundIdIn(List<Long>)
+ Criteria andFundIdNotIn(List<Long>)
+ Criteria andFundIdBetween(Long,Long)
+ Criteria andFundIdNotBetween(Long,Long)
+ Criteria andServiceFeePayIsNull()
+ Criteria andServiceFeePayIsNotNull()
+ Criteria andServiceFeePayEqualTo(Long)
+ Criteria andServiceFeePayNotEqualTo(Long)
+ Criteria andServiceFeePayGreaterThan(Long)
+ Criteria andServiceFeePayGreaterThanOrEqualTo(Long)
+ Criteria andServiceFeePayLessThan(Long)
+ Criteria andServiceFeePayLessThanOrEqualTo(Long)
+ Criteria andServiceFeePayIn(List<Long>)
+ Criteria andServiceFeePayNotIn(List<Long>)
+ Criteria andServiceFeePayBetween(Long,Long)
+ Criteria andServiceFeePayNotBetween(Long,Long)
+ Criteria andFundAmountPayIsNull()
+ Criteria andFundAmountPayIsNotNull()
+ Criteria andFundAmountPayEqualTo(Long)
+ Criteria andFundAmountPayNotEqualTo(Long)
+ Criteria andFundAmountPayGreaterThan(Long)
+ Criteria andFundAmountPayGreaterThanOrEqualTo(Long)
+ Criteria andFundAmountPayLessThan(Long)
+ Criteria andFundAmountPayLessThanOrEqualTo(Long)
+ Criteria andFundAmountPayIn(List<Long>)
+ Criteria andFundAmountPayNotIn(List<Long>)
+ Criteria andFundAmountPayBetween(Long,Long)
+ Criteria andFundAmountPayNotBetween(Long,Long)
+ Criteria andLateFeeUnpayIsNull()
+ Criteria andLateFeeUnpayIsNotNull()
+ Criteria andLateFeeUnpayEqualTo(Long)
+ Criteria andLateFeeUnpayNotEqualTo(Long)
+ Criteria andLateFeeUnpayGreaterThan(Long)
+ Criteria andLateFeeUnpayGreaterThanOrEqualTo(Long)
+ Criteria andLateFeeUnpayLessThan(Long)
+ Criteria andLateFeeUnpayLessThanOrEqualTo(Long)
+ Criteria andLateFeeUnpayIn(List<Long>)
+ Criteria andLateFeeUnpayNotIn(List<Long>)
+ Criteria andLateFeeUnpayBetween(Long,Long)
+ Criteria andLateFeeUnpayNotBetween(Long,Long)
+ Criteria andOutstandingLoanIsNull()
+ Criteria andOutstandingLoanIsNotNull()
+ Criteria andOutstandingLoanEqualTo(Long)
+ Criteria andOutstandingLoanNotEqualTo(Long)
+ Criteria andOutstandingLoanGreaterThan(Long)
+ Criteria andOutstandingLoanGreaterThanOrEqualTo(Long)
+ Criteria andOutstandingLoanLessThan(Long)
+ Criteria andOutstandingLoanLessThanOrEqualTo(Long)
+ Criteria andOutstandingLoanIn(List<Long>)
+ Criteria andOutstandingLoanNotIn(List<Long>)
+ Criteria andOutstandingLoanBetween(Long,Long)
+ Criteria andOutstandingLoanNotBetween(Long,Long)
+ Criteria andTransferAmountIsNull()
+ Criteria andTransferAmountIsNotNull()
+ Criteria andTransferAmountEqualTo(Long)
+ Criteria andTransferAmountNotEqualTo(Long)
+ Criteria andTransferAmountGreaterThan(Long)
+ Criteria andTransferAmountGreaterThanOrEqualTo(Long)
+ Criteria andTransferAmountLessThan(Long)
+ Criteria andTransferAmountLessThanOrEqualTo(Long)
+ Criteria andTransferAmountIn(List<Long>)
+ Criteria andTransferAmountNotIn(List<Long>)
+ Criteria andTransferAmountBetween(Long,Long)
+ Criteria andTransferAmountNotBetween(Long,Long)
+ Criteria andOperatorIdIsNull()
+ Criteria andOperatorIdIsNotNull()
+ Criteria andOperatorIdEqualTo(Long)
+ Criteria andOperatorIdNotEqualTo(Long)
+ Criteria andOperatorIdGreaterThan(Long)
+ Criteria andOperatorIdGreaterThanOrEqualTo(Long)
+ Criteria andOperatorIdLessThan(Long)
+ Criteria andOperatorIdLessThanOrEqualTo(Long)
+ Criteria andOperatorIdIn(List<Long>)
+ Criteria andOperatorIdNotIn(List<Long>)
+ Criteria andOperatorIdBetween(Long,Long)
+ Criteria andOperatorIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andTermIsNull()
+ Criteria andTermIsNotNull()
+ Criteria andTermEqualTo(String)
+ Criteria andTermNotEqualTo(String)
+ Criteria andTermGreaterThan(String)
+ Criteria andTermGreaterThanOrEqualTo(String)
+ Criteria andTermLessThan(String)
+ Criteria andTermLessThanOrEqualTo(String)
+ Criteria andTermLike(String)
+ Criteria andTermNotLike(String)
+ Criteria andTermIn(List<String>)
+ Criteria andTermNotIn(List<String>)
+ Criteria andTermBetween(String,String)
+ Criteria andTermNotBetween(String,String)
+ Criteria andActualTotalAmountIsNull()
+ Criteria andActualTotalAmountIsNotNull()
+ Criteria andActualTotalAmountEqualTo(Long)
+ Criteria andActualTotalAmountNotEqualTo(Long)
+ Criteria andActualTotalAmountGreaterThan(Long)
+ Criteria andActualTotalAmountGreaterThanOrEqualTo(Long)
+ Criteria andActualTotalAmountLessThan(Long)
+ Criteria andActualTotalAmountLessThanOrEqualTo(Long)
+ Criteria andActualTotalAmountIn(List<Long>)
+ Criteria andActualTotalAmountNotIn(List<Long>)
+ Criteria andActualTotalAmountBetween(Long,Long)
+ Criteria andActualTotalAmountNotBetween(Long,Long)
+ Criteria andActualInterestAmountIsNull()
+ Criteria andActualInterestAmountIsNotNull()
+ Criteria andActualInterestAmountEqualTo(Long)
+ Criteria andActualInterestAmountNotEqualTo(Long)
+ Criteria andActualInterestAmountGreaterThan(Long)
+ Criteria andActualInterestAmountGreaterThanOrEqualTo(Long)
+ Criteria andActualInterestAmountLessThan(Long)
+ Criteria andActualInterestAmountLessThanOrEqualTo(Long)
+ Criteria andActualInterestAmountIn(List<Long>)
+ Criteria andActualInterestAmountNotIn(List<Long>)
+ Criteria andActualInterestAmountBetween(Long,Long)
+ Criteria andActualInterestAmountNotBetween(Long,Long)
+ Criteria andActualPrincipalAmountIsNull()
+ Criteria andActualPrincipalAmountIsNotNull()
+ Criteria andActualPrincipalAmountEqualTo(Long)
+ Criteria andActualPrincipalAmountNotEqualTo(Long)
+ Criteria andActualPrincipalAmountGreaterThan(Long)
+ Criteria andActualPrincipalAmountGreaterThanOrEqualTo(Long)
+ Criteria andActualPrincipalAmountLessThan(Long)
+ Criteria andActualPrincipalAmountLessThanOrEqualTo(Long)
+ Criteria andActualPrincipalAmountIn(List<Long>)
+ Criteria andActualPrincipalAmountNotIn(List<Long>)
+ Criteria andActualPrincipalAmountBetween(Long,Long)
+ Criteria andActualPrincipalAmountNotBetween(Long,Long)
+ Criteria andActualOutstandingLoanIsNull()
+ Criteria andActualOutstandingLoanIsNotNull()
+ Criteria andActualOutstandingLoanEqualTo(Long)
+ Criteria andActualOutstandingLoanNotEqualTo(Long)
+ Criteria andActualOutstandingLoanGreaterThan(Long)
+ Criteria andActualOutstandingLoanGreaterThanOrEqualTo(Long)
+ Criteria andActualOutstandingLoanLessThan(Long)
+ Criteria andActualOutstandingLoanLessThanOrEqualTo(Long)
+ Criteria andActualOutstandingLoanIn(List<Long>)
+ Criteria andActualOutstandingLoanNotIn(List<Long>)
+ Criteria andActualOutstandingLoanBetween(Long,Long)
+ Criteria andActualOutstandingLoanNotBetween(Long,Long)
+ Criteria andSecondProdCodeIsNull()
+ Criteria andSecondProdCodeIsNotNull()
+ Criteria andSecondProdCodeEqualTo(String)
+ Criteria andSecondProdCodeNotEqualTo(String)
+ Criteria andSecondProdCodeGreaterThan(String)
+ Criteria andSecondProdCodeGreaterThanOrEqualTo(String)
+ Criteria andSecondProdCodeLessThan(String)
+ Criteria andSecondProdCodeLessThanOrEqualTo(String)
+ Criteria andSecondProdCodeLike(String)
+ Criteria andSecondProdCodeNotLike(String)
+ Criteria andSecondProdCodeIn(List<String>)
+ Criteria andSecondProdCodeNotIn(List<String>)
+ Criteria andSecondProdCodeBetween(String,String)
+ Criteria andSecondProdCodeNotBetween(String,String)
+ Criteria andMgsPortionIsNull()
+ Criteria andMgsPortionIsNotNull()
+ Criteria andMgsPortionEqualTo(BigDecimal)
+ Criteria andMgsPortionNotEqualTo(BigDecimal)
+ Criteria andMgsPortionGreaterThan(BigDecimal)
+ Criteria andMgsPortionGreaterThanOrEqualTo(BigDecimal)
+ Criteria andMgsPortionLessThan(BigDecimal)
+ Criteria andMgsPortionLessThanOrEqualTo(BigDecimal)
+ Criteria andMgsPortionIn(List<BigDecimal>)
+ Criteria andMgsPortionNotIn(List<BigDecimal>)
+ Criteria andMgsPortionBetween(BigDecimal,BigDecimal)
+ Criteria andMgsPortionNotBetween(BigDecimal,BigDecimal)
+ Criteria andMgsPortionRateIsNull()
+ Criteria andMgsPortionRateIsNotNull()
+ Criteria andMgsPortionRateEqualTo(BigDecimal)
+ Criteria andMgsPortionRateNotEqualTo(BigDecimal)
+ Criteria andMgsPortionRateGreaterThan(BigDecimal)
+ Criteria andMgsPortionRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andMgsPortionRateLessThan(BigDecimal)
+ Criteria andMgsPortionRateLessThanOrEqualTo(BigDecimal)
+ Criteria andMgsPortionRateIn(List<BigDecimal>)
+ Criteria andMgsPortionRateNotIn(List<BigDecimal>)
+ Criteria andMgsPortionRateBetween(BigDecimal,BigDecimal)
+ Criteria andMgsPortionRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andPortionIsNull()
+ Criteria andPortionIsNotNull()
+ Criteria andPortionEqualTo(BigDecimal)
+ Criteria andPortionNotEqualTo(BigDecimal)
+ Criteria andPortionGreaterThan(BigDecimal)
+ Criteria andPortionGreaterThanOrEqualTo(BigDecimal)
+ Criteria andPortionLessThan(BigDecimal)
+ Criteria andPortionLessThanOrEqualTo(BigDecimal)
+ Criteria andPortionIn(List<BigDecimal>)
+ Criteria andPortionNotIn(List<BigDecimal>)
+ Criteria andPortionBetween(BigDecimal,BigDecimal)
+ Criteria andPortionNotBetween(BigDecimal,BigDecimal)
+ Criteria andPortionRateIsNull()
+ Criteria andPortionRateIsNotNull()
+ Criteria andPortionRateEqualTo(BigDecimal)
+ Criteria andPortionRateNotEqualTo(BigDecimal)
+ Criteria andPortionRateGreaterThan(BigDecimal)
+ Criteria andPortionRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andPortionRateLessThan(BigDecimal)
+ Criteria andPortionRateLessThanOrEqualTo(BigDecimal)
+ Criteria andPortionRateIn(List<BigDecimal>)
+ Criteria andPortionRateNotIn(List<BigDecimal>)
+ Criteria andPortionRateBetween(BigDecimal,BigDecimal)
+ Criteria andPortionRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andInterestDiscountIsNull()
+ Criteria andInterestDiscountIsNotNull()
+ Criteria andInterestDiscountEqualTo(Long)
+ Criteria andInterestDiscountNotEqualTo(Long)
+ Criteria andInterestDiscountGreaterThan(Long)
+ Criteria andInterestDiscountGreaterThanOrEqualTo(Long)
+ Criteria andInterestDiscountLessThan(Long)
+ Criteria andInterestDiscountLessThanOrEqualTo(Long)
+ Criteria andInterestDiscountIn(List<Long>)
+ Criteria andInterestDiscountNotIn(List<Long>)
+ Criteria andInterestDiscountBetween(Long,Long)
+ Criteria andInterestDiscountNotBetween(Long,Long)
+ Criteria andApprovedByIsNull()
+ Criteria andApprovedByIsNotNull()
+ Criteria andApprovedByEqualTo(String)
+ Criteria andApprovedByNotEqualTo(String)
+ Criteria andApprovedByGreaterThan(String)
+ Criteria andApprovedByGreaterThanOrEqualTo(String)
+ Criteria andApprovedByLessThan(String)
+ Criteria andApprovedByLessThanOrEqualTo(String)
+ Criteria andApprovedByLike(String)
+ Criteria andApprovedByNotLike(String)
+ Criteria andApprovedByIn(List<String>)
+ Criteria andApprovedByNotIn(List<String>)
+ Criteria andApprovedByBetween(String,String)
+ Criteria andApprovedByNotBetween(String,String)
}
class com.welab.loan.finance.model.LoanUvfRepaymentExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanUvfRepaymentExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.test.track.TrackTest {
- TrackServiceImpl trackServiceImpl
- FundService fundService
+ void test()
+ void test1()
}
class com.welab.loan.finance.model.RechargeLogExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> RechargeLogExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.RechargeLogExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andRechargeTypeIsNull()
+ Criteria andRechargeTypeIsNotNull()
+ Criteria andRechargeTypeEqualTo(String)
+ Criteria andRechargeTypeNotEqualTo(String)
+ Criteria andRechargeTypeGreaterThan(String)
+ Criteria andRechargeTypeGreaterThanOrEqualTo(String)
+ Criteria andRechargeTypeLessThan(String)
+ Criteria andRechargeTypeLessThanOrEqualTo(String)
+ Criteria andRechargeTypeLike(String)
+ Criteria andRechargeTypeNotLike(String)
+ Criteria andRechargeTypeIn(List<String>)
+ Criteria andRechargeTypeNotIn(List<String>)
+ Criteria andRechargeTypeBetween(String,String)
+ Criteria andRechargeTypeNotBetween(String,String)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
+ Criteria andOperatorUserIdIsNull()
+ Criteria andOperatorUserIdIsNotNull()
+ Criteria andOperatorUserIdEqualTo(Long)
+ Criteria andOperatorUserIdNotEqualTo(Long)
+ Criteria andOperatorUserIdGreaterThan(Long)
+ Criteria andOperatorUserIdGreaterThanOrEqualTo(Long)
+ Criteria andOperatorUserIdLessThan(Long)
+ Criteria andOperatorUserIdLessThanOrEqualTo(Long)
+ Criteria andOperatorUserIdIn(List<Long>)
+ Criteria andOperatorUserIdNotIn(List<Long>)
+ Criteria andOperatorUserIdBetween(Long,Long)
+ Criteria andOperatorUserIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.RechargeLogExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.RechargeLogExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.dto.UserUnsettledLoanDto {
- Long userId
- String loanNumber
- Date unsettledDueDayNo1
- Integer maxDpd
- BigDecimal actualDueAmount
- BigDecimal unsettledLateFeesNo1
- BigDecimal divFeesNo1
- BigDecimal outstandingBalance
- Integer remainingTenor
- Integer totalBillTenor
- Date repaymentTime
- BigDecimal repaymentAmount
}
class com.welab.loan.finance.model.FinanceRefundExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FinanceRefundExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FinanceRefundExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andDateStrIsNull()
+ Criteria andDateStrIsNotNull()
+ Criteria andDateStrEqualTo(String)
+ Criteria andDateStrNotEqualTo(String)
+ Criteria andDateStrGreaterThan(String)
+ Criteria andDateStrGreaterThanOrEqualTo(String)
+ Criteria andDateStrLessThan(String)
+ Criteria andDateStrLessThanOrEqualTo(String)
+ Criteria andDateStrLike(String)
+ Criteria andDateStrNotLike(String)
+ Criteria andDateStrIn(List<String>)
+ Criteria andDateStrNotIn(List<String>)
+ Criteria andDateStrBetween(String,String)
+ Criteria andDateStrNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.FinanceRefundExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FinanceRefundExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.dto.EPlanTryDueDto {
- String loanNumber
- BigDecimal dpRate
}
class com.welab.loan.finance.exception.PayGatewayException {
- {static} long serialVersionUID
+ <<Create>> PayGatewayException(Integer)
+ <<Create>> PayGatewayException(Integer,String)
+ <<Create>> PayGatewayException(ResponsCodeType.UserResponsCodeTypeEnum)
}
class com.welab.loan.finance.app.impl.LoanQueryServiceImpl {
- LoanQryExe loanQryExe
- BaseLoanDetailService baseLoanDetailService
+ Response<PageInfo<RepaymentLoanDTO>> findRepaymentLoans(LoanQry)
+ Response<Long> countLoanQry(LoanQry)
+ Response<Long> sumUnFinishLoanAmount(UnFinishLoanAmountQry)
+ Response<Map<String,Boolean>> isDisbursed(List<String>)
+ Long countClMc(Long,Date,Date,Integer)
}
class com.welab.loan.finance.service.core.BaseLoanService {
- LoanDetailMapper loanDetailMapper
- LoanDetailExtendMapper loanDetailExtendMapper
- LoanDetailExtMapper loanDetailExtMapper
- DuesExtMapper duesExtMapper
- FinanceRepaymentTrackExtMapper trackMapperExt
- FinanceRepaymentTrackMapper trackMapper
- FinanceLendMapper financeLendMapper
- UserProfilesService userProfilesService
- FundService fundService
- ApplicationService applicationService
- LoanCouponMapper loanCouponMapper
- BaseLoanDetailService baseLoanDetailService
- FinanceUserBankcardSevice bankcardSevice
- BaseLoanDetailExtendService baseLoanDetailExtendService
- LoanOverdueInfoMapper loanOverdueInfoMapper
- EPlanService ePlanService
- LoanCouponDetailMapper couponDetailMapper
- MerchantService merchantService
- BaseFinanceDuesService baseFinanceDuesService
- BaseTbUserService baseTbUserService
- BaseRepaymentTrack baseRepaymentTrack
- LoanOverdueInfoExtMapper loanOverdueInfoExtMapper
- BaseLoanApplyPlansService loanApplyPlansService
- TbServiceFacade tbServiceFacade
- WhtCostProvider whtCostProvider
- BaseLoanOverdueInfoService overdueInfoService
- Integer overdueDays
- MongodbFileService mongodbFileService
+ Integer insertLoanDetail(LoanDetail)
+ Integer updateLoanDetailByKey(LoanDetail)
+ Integer updateByLoanNumber(String,LoanDetail)
+ Integer updateLabelByLoanNumber(String,String,Date)
+ int updateDetailById(LoanDetail)
+ LoanDetail findLoan(String)
+ List<LoanDetail> findLoan(List<String>)
+ long countLoan(String)
+ LoanDetailExtend findLoanDetailExtend(String)
+ int updateLoanDetailExtendById(LoanDetailExtend)
+ int updateLoanDetailExtendByLoanNumber(LoanDetailExtend)
+ Response checkCustomAmount(LoanDetail,Long)
+ boolean updateLoanOverdue(DuesExt,Long)
+ long countLoanByUserId(Long)
+ long countLoanDetailByExample(LoanDetailExample)
+ LoanDetail findLoanDetailById(Long)
+ List<LoanDetail> findLoanDetailByUserId(Long)
+ List findAdvanceLoanByList(int,int,long)
+ int updateByExample(LoanDetail,LoanDetailExample)
+ PageInfo<LoanDetail> findLoanListByPage(LoanBackDto)
+ PageInfo findLoanListExtByPage(LoanBackDto)
# Long getLiteFundInterest(String,String)
+ Map<String,Object> transLoanMap(LoanBackDto)
- Map buildMap(LoanBackDto)
+ String loanExport(LoanBackDto,Map<String,String>,String,Byte)
+ String loanExport(LoanBackDto,LinkedHashMap<String,String>,String)
- void setFinanceDueData(List<LoanDetailExt>)
- void assembleData(LoanDetailExt)
- void translatedData(List<LoanDetailExt>)
+ Page findRepaymentListExtByPage(DuesBackDto)
+ List<LoanDetail> selectLoanTimeOut(String,int,int,Integer,Integer,Boolean,String)
+ Long countLoanTimeOut(String,int,int,Boolean,String)
+ List<LoanDetail> selectLoanOffTimeOut(String,int,Integer,Integer,Integer,Boolean,String)
+ Long countLoanOffTimeOut(String,int,Integer,Boolean,String)
+ List<LoanSign> selectOffLineSignByTime(Date,Date)
+ List<LoanSign> selectOffLineLendByTime(Date,Date,List<Byte>)
+ LoanDayExt selectLoanDay(String)
+ LoanDayExt selectLoanDayByUserId(Long)
+ LoanDayExt selectLoanDayByUserId(Long,Byte)
+ long selectLoanByUserIdDay(Long,Date)
+ List<LoanDayExt> selectUserDay(Long)
+ FinanceLend findLend(String)
+ LoanDetailBeanVo findLoanDetailByIdOrLoanNum(Long,String)
- void assemableTravelokaUserInfo(LoanDetailBeanVo,LoanDetail)
- LoanCouponDetail findLendCouponDetail(String)
+ List<CreditHistoryLoanExt> findCreditHistoryLoanByUserId(Long,List<Integer>)
+ LoanDetail getLast(Long)
+ Long countMaumodalLoanTimeOut(String,int,int,Boolean)
+ List<LoanDetail> selectMaumodalLoanTimeOut(String,int,int,Integer,Integer,Boolean)
}
class com.welab.loan.finance.dto.CalcOriginExtCfgDTO {
- Long tenorStep
- String tenorMin
- String tenorMax
}
class com.welab.loan.finance.dto.OverdueDayDTO {
- Integer dueIndex
- Integer minOverdueDay
- Integer maxOverdueDay
}
class com.welab.loan.finance.helper.ProductCodeHelper {
+ {static} boolean isCreditBySecondProduct(String)
+ {static} boolean isCreditByLoanNumber(String)
+ {static} boolean isPaylateByProductCode(String)
+ {static} boolean isTappBySecondProduct(String)
+ {static} boolean isTappByLoanNumber(String)
+ {static} boolean isHsoByLoanNumber(String)
+ {static} boolean isAopByLoanNumber(String)
+ {static} boolean isNSSigapBySecondPro(String)
+ {static} boolean isBimaBySecondPro(String)
+ {static} boolean isBimaLongBySecondPro(String)
+ {static} boolean isTravelokaBySecondPro(String)
+ {static} boolean isRestockBySecondPro(String)
+ {static} boolean isFlexifitByProductCode(String)
+ {static} boolean isSigapBySecondPro(String)
+ {static} boolean isPaylateByLoanNumber(String)
+ {static} boolean isCashLoanByLoanNumber(String)
+ {static} Byte getProductType(String)
+ {static} boolean isMaumodalBySecondPro(String)
+ {static} boolean isMaumodalByLoanNumber(String)
}
class com.welab.loan.finance.service.impl.LoanUserTelServiceImpl {
- LoanDetailMapper loanDetailMapper
- BaseCreditUserAccountService baseCreditUserAccountService
+ Response<Integer> loanUserTelMod(Long,String)
}
enum com.welab.loan.finance.enums.BankConfigTypeEnum {
+  REPAY_CHANNEL
+  PLATFORM_RATE
+  LOAN_IGNORE
+  CUSTOM_COUPON
+  BRI_DELAY_LEND
+  PLATFORM_RATE_V2
+  JOMBO_TENOR
+  REPAY_CHANNEL_MAUMODAL
- byte key
- String value
- <<Create>> BankConfigTypeEnum(byte,String)
}
class com.welab.loan.finance.vo.response.TbUserImportResVO {
- List<String> errorMsg
- List<T> successData
}
class com.welab.loan.finance.app.command.plan.EPlanApplyCmdExe {
- PlanService planService
- EPlanCheckCmdExe ePlanCheckCmdExe
- EPlanCalculationCmdExe ePlanCalculationCmdExe
# BaseRabbitTemplate baseRabbitTemplate
- MessageProducer messageProducer
+ Response applyEPlan(TryEPlanDTO)
}
class com.welab.loan.finance.app.command.tb.lend.transfer.impl.TrioTransferService {
+ {static} String FACILITY_FEE
+ {static} String FACILITY_FEE_VAT
- TbPayService tbPayService
- BaseFundAccountService baseFundAccountService
- IFundMatchService iFundMatchService
- RateService rateService
- BaseLoanDetailService baseLoanDetailService
- VatRepaymentCostProvider vatRepaymentCostProvider
- BaseFinanceLendService financeLendService
+ void doCreateTransferTrading(TbBatch,Long)
- HashMap<String,Long> getTotalFacilityFee(TbBatch)
# String getPrefix()
+ String getKey()
}
interface com.welab.loan.finance.service.repayment.IRepaymentService {
~ Response<Long> getMaxRepaymentAmountByParams(Long,Date,Date)
~ Response<Long> getMaxRepaymentAmountOldByParams(Long,Date,Date)
}
class com.welab.loan.finance.rabbitmq.UserAdvancePaymentConsumer {
- UserAdvancePaymentCmdExe advancePaymentCmdExe
+ void onMessage(Message)
}
class com.welab.loan.finance.test.credit.UpdateTag2Test {
+ {static} void main(String[])
}
class com.welab.loan.finance.model.FinanceUserAccountBalanceBakExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FinanceUserAccountBalanceBakExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FinanceUserAccountBalanceBakExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andBalanceAmountIsNull()
+ Criteria andBalanceAmountIsNotNull()
+ Criteria andBalanceAmountEqualTo(Long)
+ Criteria andBalanceAmountNotEqualTo(Long)
+ Criteria andBalanceAmountGreaterThan(Long)
+ Criteria andBalanceAmountGreaterThanOrEqualTo(Long)
+ Criteria andBalanceAmountLessThan(Long)
+ Criteria andBalanceAmountLessThanOrEqualTo(Long)
+ Criteria andBalanceAmountIn(List<Long>)
+ Criteria andBalanceAmountNotIn(List<Long>)
+ Criteria andBalanceAmountBetween(Long,Long)
+ Criteria andBalanceAmountNotBetween(Long,Long)
}
class com.welab.loan.finance.model.FinanceUserAccountBalanceBakExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FinanceUserAccountBalanceBakExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.test.credit.ImportAstra {
- {static} JdbcTemplate jdbcTemplate
+ {static} T queryForObject(String,Class<T>)
+ {static} void main(String[])
}
class com.welab.loan.finance.model.FinanceErrorExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FinanceErrorExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FinanceErrorExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andOrgIdIsNull()
+ Criteria andOrgIdIsNotNull()
+ Criteria andOrgIdEqualTo(Long)
+ Criteria andOrgIdNotEqualTo(Long)
+ Criteria andOrgIdGreaterThan(Long)
+ Criteria andOrgIdGreaterThanOrEqualTo(Long)
+ Criteria andOrgIdLessThan(Long)
+ Criteria andOrgIdLessThanOrEqualTo(Long)
+ Criteria andOrgIdIn(List<Long>)
+ Criteria andOrgIdNotIn(List<Long>)
+ Criteria andOrgIdBetween(Long,Long)
+ Criteria andOrgIdNotBetween(Long,Long)
+ Criteria andSeqNumIsNull()
+ Criteria andSeqNumIsNotNull()
+ Criteria andSeqNumEqualTo(String)
+ Criteria andSeqNumNotEqualTo(String)
+ Criteria andSeqNumGreaterThan(String)
+ Criteria andSeqNumGreaterThanOrEqualTo(String)
+ Criteria andSeqNumLessThan(String)
+ Criteria andSeqNumLessThanOrEqualTo(String)
+ Criteria andSeqNumLike(String)
+ Criteria andSeqNumNotLike(String)
+ Criteria andSeqNumIn(List<String>)
+ Criteria andSeqNumNotIn(List<String>)
+ Criteria andSeqNumBetween(String,String)
+ Criteria andSeqNumNotBetween(String,String)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(String)
+ Criteria andTypeNotEqualTo(String)
+ Criteria andTypeGreaterThan(String)
+ Criteria andTypeGreaterThanOrEqualTo(String)
+ Criteria andTypeLessThan(String)
+ Criteria andTypeLessThanOrEqualTo(String)
+ Criteria andTypeLike(String)
+ Criteria andTypeNotLike(String)
+ Criteria andTypeIn(List<String>)
+ Criteria andTypeNotIn(List<String>)
+ Criteria andTypeBetween(String,String)
+ Criteria andTypeNotBetween(String,String)
+ Criteria andLoanNumIsNull()
+ Criteria andLoanNumIsNotNull()
+ Criteria andLoanNumEqualTo(String)
+ Criteria andLoanNumNotEqualTo(String)
+ Criteria andLoanNumGreaterThan(String)
+ Criteria andLoanNumGreaterThanOrEqualTo(String)
+ Criteria andLoanNumLessThan(String)
+ Criteria andLoanNumLessThanOrEqualTo(String)
+ Criteria andLoanNumLike(String)
+ Criteria andLoanNumNotLike(String)
+ Criteria andLoanNumIn(List<String>)
+ Criteria andLoanNumNotIn(List<String>)
+ Criteria andLoanNumBetween(String,String)
+ Criteria andLoanNumNotBetween(String,String)
+ Criteria andSourceIsNull()
+ Criteria andSourceIsNotNull()
+ Criteria andSourceEqualTo(String)
+ Criteria andSourceNotEqualTo(String)
+ Criteria andSourceGreaterThan(String)
+ Criteria andSourceGreaterThanOrEqualTo(String)
+ Criteria andSourceLessThan(String)
+ Criteria andSourceLessThanOrEqualTo(String)
+ Criteria andSourceLike(String)
+ Criteria andSourceNotLike(String)
+ Criteria andSourceIn(List<String>)
+ Criteria andSourceNotIn(List<String>)
+ Criteria andSourceBetween(String,String)
+ Criteria andSourceNotBetween(String,String)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andIsHanderIsNull()
+ Criteria andIsHanderIsNotNull()
+ Criteria andIsHanderEqualTo(String)
+ Criteria andIsHanderNotEqualTo(String)
+ Criteria andIsHanderGreaterThan(String)
+ Criteria andIsHanderGreaterThanOrEqualTo(String)
+ Criteria andIsHanderLessThan(String)
+ Criteria andIsHanderLessThanOrEqualTo(String)
+ Criteria andIsHanderLike(String)
+ Criteria andIsHanderNotLike(String)
+ Criteria andIsHanderIn(List<String>)
+ Criteria andIsHanderNotIn(List<String>)
+ Criteria andIsHanderBetween(String,String)
+ Criteria andIsHanderNotBetween(String,String)
+ Criteria andResultIsNull()
+ Criteria andResultIsNotNull()
+ Criteria andResultEqualTo(String)
+ Criteria andResultNotEqualTo(String)
+ Criteria andResultGreaterThan(String)
+ Criteria andResultGreaterThanOrEqualTo(String)
+ Criteria andResultLessThan(String)
+ Criteria andResultLessThanOrEqualTo(String)
+ Criteria andResultLike(String)
+ Criteria andResultNotLike(String)
+ Criteria andResultIn(List<String>)
+ Criteria andResultNotIn(List<String>)
+ Criteria andResultBetween(String,String)
+ Criteria andResultNotBetween(String,String)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.FinanceErrorExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FinanceErrorExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.app.base.credit.BaseCreditBigFieldRelationService {
- CreditBigFieldRelationMapper creditBigFieldRelationMapper
+ CreditBigFieldRelation findOneById(Long)
+ int insertSelective(CreditBigFieldRelation)
+ int updateByPrimaryKeySelective(CreditBigFieldRelation)
}
class com.welab.loan.finance.model.AdvanceMsgListExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> AdvanceMsgListExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.AdvanceMsgListExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andAppMessageIdIsNull()
+ Criteria andAppMessageIdIsNotNull()
+ Criteria andAppMessageIdEqualTo(Long)
+ Criteria andAppMessageIdNotEqualTo(Long)
+ Criteria andAppMessageIdGreaterThan(Long)
+ Criteria andAppMessageIdGreaterThanOrEqualTo(Long)
+ Criteria andAppMessageIdLessThan(Long)
+ Criteria andAppMessageIdLessThanOrEqualTo(Long)
+ Criteria andAppMessageIdIn(List<Long>)
+ Criteria andAppMessageIdNotIn(List<Long>)
+ Criteria andAppMessageIdBetween(Long,Long)
+ Criteria andAppMessageIdNotBetween(Long,Long)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.AdvanceMsgListExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.AdvanceMsgListExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.dto.FinanceErrorBackDto {
- String seqNum
- String type
- String startTime
- String endTime
- String loanNumber
}
class com.welab.loan.finance.response.EPlanTryCalculationListVO {
- {static} long serialVersionUID
- Long totalMinRepaymentAmount
- Long totalServiceFeeAmount
- Long totalPrincipalAmount
- Date firstDueDate
- List<EPlanTryCalculationVO> ePlanTryCalculationList
}
class com.welab.loan.finance.dto.cmd.CancelCouponForUserCmd {
- String promotionCode
- Long userId
}
class com.welab.loan.finance.controller.TestCenterController {
~ Boolean mock
- RechargeBusiService rechargeBusiService
- BaseDuesService baseDuesService
- void check()
+ Response repaymentDuesIndex(String)
+ Response repayment(Long,TestRepaymentVo)
}
class com.welab.loan.finance.app.manager.AdvanceRepaymentManager {
+ String getProduct(String)
}
class com.welab.loan.finance.response.LoanDetailVo {
- Long id
- String loanNumber
- String period
- Long amount
- Date applyAt
- Long userId
- String userName
- String mobile
- String productCode
- String secondProdCode
- Date lendAt
- Byte lendType
- Byte lendStatus
- Byte retryNum
- Byte repayStatus
- Boolean isAdvance
- Long advanceAmount
- Long customAmount
- String riskLevel
- String scoreClass
- BigDecimal fundInterestRate
- BigDecimal serviceFeeRate
- BigDecimal adminRate
- BigDecimal lateRate
- BigDecimal advanceRate
- String label
- Date advanceTime
- Date labelUpdateAt
- Long overAmount
- Date approvedAt
- Date fundAt
- Long applyAmount
- String applyPeriod
- Long adminFee
- Date timeOut
- Long repayDueAmount
- Long fundId
- String promotionCode
- Date labelExpiredAt
- Boolean isSign
- String sourceId
- String payDay
- String payCycle
- String cessie
- String buyerName
- String loanTransfer
- String previousLoan
- Byte bizType
- Long premiumAmount
- Date acceptedAt
}
class com.welab.loan.finance.dto.qry.LoanQry {
- Long userId
- List<Byte> productTypeList
- List<Byte> lendStatusList
- List<Byte> repayStatusList
- Integer userType
- List<String> periodList
- Date applyAtStart
- Date applyAtEnd
- Date lendAtStart
- Date lendAtEnd
}
class com.welab.loan.finance.model.FinanceConfigExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FinanceConfigExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FinanceConfigExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Integer)
+ Criteria andIdNotEqualTo(Integer)
+ Criteria andIdGreaterThan(Integer)
+ Criteria andIdGreaterThanOrEqualTo(Integer)
+ Criteria andIdLessThan(Integer)
+ Criteria andIdLessThanOrEqualTo(Integer)
+ Criteria andIdIn(List<Integer>)
+ Criteria andIdNotIn(List<Integer>)
+ Criteria andIdBetween(Integer,Integer)
+ Criteria andIdNotBetween(Integer,Integer)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andCategoryIsNull()
+ Criteria andCategoryIsNotNull()
+ Criteria andCategoryEqualTo(String)
+ Criteria andCategoryNotEqualTo(String)
+ Criteria andCategoryGreaterThan(String)
+ Criteria andCategoryGreaterThanOrEqualTo(String)
+ Criteria andCategoryLessThan(String)
+ Criteria andCategoryLessThanOrEqualTo(String)
+ Criteria andCategoryLike(String)
+ Criteria andCategoryNotLike(String)
+ Criteria andCategoryIn(List<String>)
+ Criteria andCategoryNotIn(List<String>)
+ Criteria andCategoryBetween(String,String)
+ Criteria andCategoryNotBetween(String,String)
+ Criteria andKeyIsNull()
+ Criteria andKeyIsNotNull()
+ Criteria andKeyEqualTo(String)
+ Criteria andKeyNotEqualTo(String)
+ Criteria andKeyGreaterThan(String)
+ Criteria andKeyGreaterThanOrEqualTo(String)
+ Criteria andKeyLessThan(String)
+ Criteria andKeyLessThanOrEqualTo(String)
+ Criteria andKeyLike(String)
+ Criteria andKeyNotLike(String)
+ Criteria andKeyIn(List<String>)
+ Criteria andKeyNotIn(List<String>)
+ Criteria andKeyBetween(String,String)
+ Criteria andKeyNotBetween(String,String)
+ Criteria andValueIsNull()
+ Criteria andValueIsNotNull()
+ Criteria andValueEqualTo(String)
+ Criteria andValueNotEqualTo(String)
+ Criteria andValueGreaterThan(String)
+ Criteria andValueGreaterThanOrEqualTo(String)
+ Criteria andValueLessThan(String)
+ Criteria andValueLessThanOrEqualTo(String)
+ Criteria andValueLike(String)
+ Criteria andValueNotLike(String)
+ Criteria andValueIn(List<String>)
+ Criteria andValueNotIn(List<String>)
+ Criteria andValueBetween(String,String)
+ Criteria andValueNotBetween(String,String)
+ Criteria andCreateByIsNull()
+ Criteria andCreateByIsNotNull()
+ Criteria andCreateByEqualTo(String)
+ Criteria andCreateByNotEqualTo(String)
+ Criteria andCreateByGreaterThan(String)
+ Criteria andCreateByGreaterThanOrEqualTo(String)
+ Criteria andCreateByLessThan(String)
+ Criteria andCreateByLessThanOrEqualTo(String)
+ Criteria andCreateByLike(String)
+ Criteria andCreateByNotLike(String)
+ Criteria andCreateByIn(List<String>)
+ Criteria andCreateByNotIn(List<String>)
+ Criteria andCreateByBetween(String,String)
+ Criteria andCreateByNotBetween(String,String)
+ Criteria andUpdateByIsNull()
+ Criteria andUpdateByIsNotNull()
+ Criteria andUpdateByEqualTo(String)
+ Criteria andUpdateByNotEqualTo(String)
+ Criteria andUpdateByGreaterThan(String)
+ Criteria andUpdateByGreaterThanOrEqualTo(String)
+ Criteria andUpdateByLessThan(String)
+ Criteria andUpdateByLessThanOrEqualTo(String)
+ Criteria andUpdateByLike(String)
+ Criteria andUpdateByNotLike(String)
+ Criteria andUpdateByIn(List<String>)
+ Criteria andUpdateByNotIn(List<String>)
+ Criteria andUpdateByBetween(String,String)
+ Criteria andUpdateByNotBetween(String,String)
+ Criteria andSortIsNull()
+ Criteria andSortIsNotNull()
+ Criteria andSortEqualTo(Integer)
+ Criteria andSortNotEqualTo(Integer)
+ Criteria andSortGreaterThan(Integer)
+ Criteria andSortGreaterThanOrEqualTo(Integer)
+ Criteria andSortLessThan(Integer)
+ Criteria andSortLessThanOrEqualTo(Integer)
+ Criteria andSortIn(List<Integer>)
+ Criteria andSortNotIn(List<Integer>)
+ Criteria andSortBetween(Integer,Integer)
+ Criteria andSortNotBetween(Integer,Integer)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Integer)
+ Criteria andStatusNotEqualTo(Integer)
+ Criteria andStatusGreaterThan(Integer)
+ Criteria andStatusGreaterThanOrEqualTo(Integer)
+ Criteria andStatusLessThan(Integer)
+ Criteria andStatusLessThanOrEqualTo(Integer)
+ Criteria andStatusIn(List<Integer>)
+ Criteria andStatusNotIn(List<Integer>)
+ Criteria andStatusBetween(Integer,Integer)
+ Criteria andStatusNotBetween(Integer,Integer)
+ Criteria andKeyDescIsNull()
+ Criteria andKeyDescIsNotNull()
+ Criteria andKeyDescEqualTo(String)
+ Criteria andKeyDescNotEqualTo(String)
+ Criteria andKeyDescGreaterThan(String)
+ Criteria andKeyDescGreaterThanOrEqualTo(String)
+ Criteria andKeyDescLessThan(String)
+ Criteria andKeyDescLessThanOrEqualTo(String)
+ Criteria andKeyDescLike(String)
+ Criteria andKeyDescNotLike(String)
+ Criteria andKeyDescIn(List<String>)
+ Criteria andKeyDescNotIn(List<String>)
+ Criteria andKeyDescBetween(String,String)
+ Criteria andKeyDescNotBetween(String,String)
}
class com.welab.loan.finance.model.FinanceConfigExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FinanceConfigExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.controller.OverdueController {
- DuesServiceImpl duesService
+ void overduesSchedule(String)
+ void test(String,Integer)
+ void dues(String,String)
}
class com.welab.loan.finance.test.qlexpress.QLExpressTest {
+ Map aaa(Map)
+ {static} void main(String[])
}
class com.welab.loan.finance.vo.response.UfiMotorImportErrorVO {
- {static} long serialVersionUID
- String applyNo
- String contractId
- String errorReason
- Boolean isUfiMotor
}
class com.welab.loan.finance.app.base.BaseInsuranceRecordService {
- InsuranceRecordMapper insuranceRecordMapper
- InsuranceRecordExtMapper insuranceRecordExtMapper
+ int countByGroupName(String)
+ int insertInsuranceRecord(InsuranceRecord)
+ List<InsuranceRecord> queryInsuranceRecordList(String)
+ InsuranceRecord queryByGroupName(String)
}
class com.welab.loan.finance.test.amin.LoanServiceTest {
- LoanService loanService
- CreditUserAccountService creditUserAccountService
+ void findLoanListExtByPage()
+ void saveFlag()
+ void restoreCredit()
}
class com.welab.loan.finance.dto.LoanAmountVo {
- Long principal
- Long serviceFee
- Long fundInterest
- Long adminFee
- Long lateCharges
- Long overAmount
}
class com.welab.loan.finance.dto.paylater.CreditUserAccountDTO {
- {static} long serialVersionUID
- Long userId
- String productCode
- String accountType
- List<String> secondProductCodeList
- String previousLoan
}
class com.welab.loan.finance.vo.request.OverDuesReq {
- String loanNumber
- Long principal
- String secondProdCode
- Date dueDate
- BigDecimal amount
- BigDecimal lateRate
- Long dueAdminFee
- Boolean isHeadFee
- String tenor
- Integer dueIndex
- Long maxOver
- Byte planType
- Long lastAmount
- Long lastMaxOver
- Integer realDueIndex
- Integer lastRealDueIndex
+ {static} OverDuesReq buildOverDues(Dues,LoanDetail,Boolean,Integer)
+ {static} OverDuesReq buildOverDues(DuesExt,LoanDetail,Boolean,Integer)
+ void buildPlanOverDues(DuesExt)
+ boolean findLastDueIndex()
+ BigDecimal findMaxOverAmount()
}
class com.welab.loan.finance.dto.UserCardDTO {
- Long id
- Date createAt
- Date updateAt
- Long userId
- String userName
- String bankAccountNumber
- String bankCode
- String bankAccountHolderName
- Byte isUsed
- String bankName
}
class com.welab.loan.finance.core.dues.impl.TbDefaultCostService {
+ CostDetailDTO findCostDetail(CostReqDTO)
- Due calcCostItem(DueTypeEnum,String,BigDecimal,BigDecimal,int)
- Due buildDue(DueTypeEnum,String,BigDecimal,String)
+ String costKey()
}
abstract class com.welab.loan.finance.core.overdue.AbstractCalLateFee {
- LoanDetailMapper loanDetailMapper
- LoanDetailExtendMapper extendMapper
- DuesExtMapper duesExtMapper
- LoanApplyPlansMapper applyPlansMapper
- LoanDuesConfigMapper duesConfigMapper
- IQueryDuesService queryDuesService
- DuesCalculationMapper calculationMapper
- FlexifitWhiteDubboService flexifitWhiteDubboService
- BaseLoanDetailService baseLoanDetailService
- VatCostProvider vatCostProvider
- BaseDuesService baseDuesService
- LoanDiscountMapper loanDiscountMapper
- VatRepaymentCostProvider vatRepaymentCostProvider
+ boolean findIsLong(LoanDetail)
+ boolean skipMatch(LoanLateReqDTO)
+ OverdueFeeVO findCurLateFee(LoanLateReqDTO)
+ CreditLateDTO findMaxLateFeeByCredit(String,Integer)
+ void findSetLoanLateReq(LoanLateReqDTO)
- void findSetLoanLateReqByCredit(LoanLateReqDTO)
- void findSetLoanLateReqByMost(LoanLateReqDTO)
+ LoanDetail findLoan(String)
+ LoanDetailExtend findLoanExtend(String)
+ Dues findDuesByLimit(String,Integer)
+ LoanApplyPlans findLoanApplyPlans(String)
+ LoanDuesConfig findLoanDuesConfig(String,Integer)
+ DuesExt findOverAmountDues(String,Integer)
+ DuesExt findMuchOverAmountDues(String,Integer)
- Long calTotalMaxLateFee(String)
- long calAvailableLateFee(String,long,Integer,List<LateFeeDuesExt>)
- long getDisPlanLateAmount(List<DiscountDTO>,List<Dues>)
}
class com.welab.loan.finance.model.SignMethodOperateHistory {
- Long id
- String secondProdCode
- Integer beforeSigningMethod
- Integer afterSigningMethod
- String beforeAmountFunded
- String afterAmountFunded
- Integer beforeAutoOtp
- Integer afterAutoOtp
- Long adminId
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getSecondProdCode()
+ void setSecondProdCode(String)
+ Integer getBeforeSigningMethod()
+ void setBeforeSigningMethod(Integer)
+ Integer getAfterSigningMethod()
+ void setAfterSigningMethod(Integer)
+ String getBeforeAmountFunded()
+ void setBeforeAmountFunded(String)
+ String getAfterAmountFunded()
+ void setAfterAmountFunded(String)
+ Integer getBeforeAutoOtp()
+ void setBeforeAutoOtp(Integer)
+ Integer getAfterAutoOtp()
+ void setAfterAutoOtp(Integer)
+ Long getAdminId()
+ void setAdminId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
abstract class com.welab.loan.finance.app.command.plan.AbstractPlan {
}
class com.welab.loan.finance.app.manager.dues.MaumodalDuesManager {
- BaseLoanDetailService baseLoanDetailService
- RateService rateService
- BaseDuesService baseDuesService
- BaseLoanDetailExtendService baseLoanDetailExtendService
+ Response<TryCalDuesVO> tryCalDues(ScheduleAmountDto)
+ Response<RepayDuesVO> getCalDues(String)
- void buildTryDuesCalculator(String,String,String,String,CostReqDTO,LoanDetail)
}
class com.welab.loan.finance.app.service.flow.repaymentback.RefundBackCompont {
- RepaymentGoBackManager repaymentGoBackManager
+ FlowTaskNodeEnum flowTaskNode()
# void process(RepaymentBackFlowContext)
}
interface com.welab.loan.finance.mapper.FinanceUserThirdpartyAccountMapper {
~ long countByExample(FinanceUserThirdpartyAccountExample)
~ int deleteByExample(FinanceUserThirdpartyAccountExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FinanceUserThirdpartyAccount)
~ int insertSelective(FinanceUserThirdpartyAccount)
~ List<FinanceUserThirdpartyAccount> selectByExample(FinanceUserThirdpartyAccountExample)
~ FinanceUserThirdpartyAccount selectByPrimaryKey(Long)
~ int updateByExampleSelective(FinanceUserThirdpartyAccount,FinanceUserThirdpartyAccountExample)
~ int updateByExample(FinanceUserThirdpartyAccount,FinanceUserThirdpartyAccountExample)
~ int updateByPrimaryKeySelective(FinanceUserThirdpartyAccount)
~ int updateByPrimaryKey(FinanceUserThirdpartyAccount)
}
class com.welab.loan.finance.dto.LoanTransDetailDTO {
- String period
- Date dueDate
- Long repayAmount
- String status
- Long lateFee
- Long repayAmountNoLateFee
- boolean isCredit
- String loanNumber
- Long amount
- String state
- Integer overdueDay
- Integer curDueIndex
- Integer totalDueIndex
- List<TransItemDTO> list
- String productName
- Integer item
- Long transAmount
- Date transDate
- String transId
- Long allAmount
- Date applyDate
- Date approvedDate
- Boolean allowCplan
- Byte applyType
- Long customRepayAmount
- String customRepayStatus
- String partnerLogoUrl
- String partnerName
}
class com.welab.loan.finance.service.core.BaseCreditUserTagService {
- CreditUserTagConfigMapper creditUserTagConfigMapper
- CreditUserTagHistoryMapper creditUserTagHistoryMapper
- CreditLoanAmountConfigServiceImpl creditLoanAmountConfigServiceImpl
- JedisCluster jedisCluster
+ Boolean updateTag(CreditUserTagConfig)
- void saveSecondProductMapTag(CreditUserTagConfig,CreditUserTagConfig)
- boolean isChange(CreditUserTagConfig,CreditUserTagConfig)
- void updateTag(CreditUserTagConfig,CreditUserTagHistory)
+ CreditUserTagConfig getOne(String,String)
+ List<CreditUserTagConfig> getAll()
+ List<CreditUserTagConfig> getTagConfigByTag(String)
+ CreditUserTagConfig getTagConfigById(Long)
+ void addTagData(CreditUserTagConfig)
+ List<CreditUserTagConfig> getAll(String)
+ List<String> getTestFlowTag()
}
class com.welab.loan.finance.model.LoanMq {
- Integer id
- Date createdAt
- String content
+ Integer getId()
+ void setId(Integer)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ String getContent()
+ void setContent(String)
}
interface com.welab.loan.finance.mapper.ext.TbLoanExtMapper {
~ List<TbLoanVO> list(TravelokaLoanQry)
~ Long count(TravelokaLoanQry)
~ List<HsoLoanVO> hsoLoanList(HsoLoanQry)
~ List<String> loanNumbersForTbUpdateDues(String)
~ int updateLendAt(String)
}
class com.welab.loan.finance.vo.request.ReversalVo {
- String transId
- String loanNumber
- Long reversedAmount
- String user
- String reason
- Long userId
+ <<Create>> ReversalVo(String,Long,String,String,Long)
+ <<Create>> ReversalVo(String,Long,String,Long)
}
class com.welab.loan.finance.dto.FinanceRepaymentTrackDto {
- Long id
- String loanNumber
- Integer dueIndex
- Date repaymentAt
- Byte type
- Long repaymentAmount
- Long operatorId
- Date createdAt
- Date updateAt
- Boolean isAdvance
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Integer getDueIndex()
+ void setDueIndex(Integer)
+ Date getRepaymentAt()
+ void setRepaymentAt(Date)
+ Byte getType()
+ void setType(Byte)
+ Long getRepaymentAmount()
+ void setRepaymentAmount(Long)
+ Long getOperatorId()
+ void setOperatorId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ Boolean getIsAdvance()
+ void setIsAdvance(Boolean)
}
class com.welab.loan.finance.dto.plan.TryCPlanDetailParamDTO {
- {static} long serialVersionUID
- String loanNumber
- Double disLateFeeRatio
}
class com.welab.loan.finance.controller.InsuranceRecordController {
- InsuranceRecordService insuranceRecordService
+ Response uploadInsuranceInfo(Long,MultipartFile,MultipartFile,String)
+ Response<PageInfo<InsuranceRecordRespVO>> getInsuranceGroupList(Integer,Integer,String)
+ Response downloadGroupFile(HttpServletResponse,String)
}
class com.welab.loan.finance.vo.credit.CreditActivityAbTestSaveBaseRequestVo {
- Boolean isSave
- CreditActivityAbTestSaveRequestVo creditActivityAbTestSaveRequestVo
- CreditActivityAbTestSaveGroupRequestVo creditActivityAbTestSaveGroupRequestVo
}
interface com.welab.loan.finance.mapper.ext.InsuranceRecordExtMapper {
~ int insert(InsuranceRecord)
}
class com.welab.loan.finance.test.credit.activity.ApplyUseCredit {
- com.welab.loan.finance.service.credit.CreditUserAccountServiceImpl CreditUserAccountServiceImpl
- DuesServiceImpl duesService
+ void run()
+ void testOrder()
}
class com.welab.loan.finance.test.LendTest {
- BaseFinanceLendService lendService
- BaseLoanService baseLoanService
- BaseUserBankCardService baseUserBankCardService
- PayService payService
- FundService fundService
- LendService lendService1
- LoanService loanService
- LendManager lendManager
- BaseFinanceTrading baseFinanceTrading
+ void callLend()
+ void lend()
+ void lendByOther()
+ void transFee()
+ void testB()
+ void testSwitch()
+ void testDownloadPendingLendLoans()
+ void testTrading()
}
interface com.welab.loan.finance.mapper.FinanceFundMapper {
~ long countByExample(FinanceFundExample)
~ int deleteByExample(FinanceFundExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FinanceFund)
~ int insertSelective(FinanceFund)
~ List<FinanceFund> selectByExample(FinanceFundExample)
~ FinanceFund selectByPrimaryKey(Long)
~ int updateByExampleSelective(FinanceFund,FinanceFundExample)
~ int updateByExample(FinanceFund,FinanceFundExample)
~ int updateByPrimaryKeySelective(FinanceFund)
~ int updateByPrimaryKey(FinanceFund)
}
class com.welab.loan.finance.model.LoanCode {
- String loanCode
- Long userId
- Byte status
- String loanNum
- Byte type
- Date createAt
- Date updateAt
- Boolean isUser
+ String getLoanCode()
+ void setLoanCode(String)
+ Long getUserId()
+ void setUserId(Long)
+ Byte getStatus()
+ void setStatus(Byte)
+ String getLoanNum()
+ void setLoanNum(String)
+ Byte getType()
+ void setType(Byte)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ Boolean getIsUser()
+ void setIsUser(Boolean)
}
class com.welab.loan.finance.test.fplan.FplanTest {
- FPlanOpenNotifyCmdExe fPlanOpenNotifyCmdExe
- TryApplyFPlanCmdExcute tryApplyFPlanCmdExcute
- ApplyFPlanCmdExcute applyFPlanCmdExcute
- FPlanDuesQryExcute fPlanDuesQryExcute
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
- OverdueQueryService overdueQueryService
+ void fplanOpen()
+ void applyFPlanCmdExcute()
+ void tryApplyFPlanCmd()
+ void fPlanDuesQryExcute()
}
class com.welab.loan.finance.vo.request.PlanCalculatorReq {
- String loanNumber
- BigDecimal amount
- String secondProdCode
- String tenor
- BigDecimal fundInterestRate
- BigDecimal serviceFeeRate
- BigDecimal fundProvisionRate
- Date dueDate
- Integer dueIndex
- BigDecimal approvalAmount
- Long orgServiceFee
- Integer payDay
}
class com.welab.loan.finance.dto.plan.TryCPlanParamDTO {
- {static} long serialVersionUID
- Integer ptpDay
- Integer reason
- String otpName
- Long minRepaymentTotalAmount
- List<TryCPlanDetailParamDTO> tryCPlanDetailParamList
}
class com.welab.loan.finance.vo.CreditReLoanImportVO {
- Long importUserId
- MultipartFile file
}
class com.welab.loan.finance.app.base.BaseNsQueryService {
- NsQueryExtMapper nsQueryExtMapper
+ List<NsLoanManagementVO> loanList(NsLoanListQry)
+ List<NsRepaymentVO> repaymentList(NsRepaymentListQry)
+ List<NsDueVO> dueList(NsDueListQry)
}
enum com.welab.loan.finance.enums.DueTypeEnum {
+  MANAGEMENT_FEE
+  MANAGEMENT_FEE_VAT
+  FUND_INTEREST
+  PROVISION_FEE
+  SERVICE_FEE
+  SERVICE_FEE_VAT
+  OVERDUE_INTEREST
+  OVERDUE_INTEREST_VAT
+  PRINCIPAL
+  CARRYING_FEE_VAT
+  CARRYING_FEE
+  HANDLING_FEE
+  INTEREST
+  HEAD_FEE
+  ASTRA_FEE
- String value
- Integer index
+ {static} Map<String,String> VAT_MAP
+ {static} Map<String,String> DUE_TYPE_MAP
+ {static} List<String> CARRYING_FEE_LIST
+ {static} List<String> LATE_FEE_LIST
+ {static} List<String> SERVICE_FEE_LIST
+ {static} List<String> ADMIN_FEE_LIST
+ {static} List<String> NO_CAL_CARRY_FEE_DUE_TYPE_LIST
~ <<Create>> DueTypeEnum(String,Integer)
+ String getValue()
+ Integer getIndex()
+ {static} boolean existDueType(String)
+ {static} boolean isInterest(String)
+ {static} boolean isInterestByCredit(String)
+ {static} DueTypeEnum findDueType(String)
+ {static} Integer getLateRepayIndex(boolean)
+ {static} Boolean isVATFee(String)
+ {static} String getDueTypeByVATFee(String)
+ {static} boolean isIncludedVATFee(String)
}
class com.welab.loan.finance.app.manager.DuesManger {
- BaseDuesService baseDuesService
+ long sumRepaymentForNow(String)
+ Map<String,Long> getRemainingAmount(QueryRemainingAmountDTO)
}
class com.welab.loan.finance.rabbitmq.syn.InvalidAdvLetterConsumer {
- BaseAdvanceMsgListService advanceMsgListService
- AdvanceRepaymentInvalidationCmdExe advanceRepaymentInvalidationCmdExe
+ void onMessage(Message)
+ void invalidNoEnableAdvLetter(Message)
+ void execute(List<InvalidAdvLetterDTO>)
}
class com.welab.loan.finance.rabbitmq.CreditOldUserChangeConsumer {
- CreditUserAccountInfoService creditUserAccountInfoService
- CreditUserTagRuleService creditUserTagRuleService
+ void onMessage(Message)
}
class com.welab.loan.finance.rabbitmq.LendCallBackConsumer {
- LendBusiService lendBusiService
+ void onMessage(Message)
- void callBack(String)
}
class com.welab.loan.finance.app.base.BaseCreditUpdateDetailService {
- CreditUpdateDetailMapper creditUpdateDetailMapper
+ void saveLog(Long,String)
}
class com.welab.loan.finance.vo.response.paybills.BillRechargeInfoVO {
- {static} long serialVersionUID
- String loanNumber
- List<Integer> termList
- String billNumber
- Date paymentDate
- String trxIdOrVa
}
class com.welab.loan.finance.facade.paygateway.QueryTaskServiceFacade {
- QueryTaskService queryTaskService
+ Response<PageInfo> queryTaskByPage(QueryTaskDto)
+ Response<Void> retryTask(QueryTaskDto)
+ Response<List<TaskVO>> queryFailureTasks(List<String>)
+ Response<List<TaskVO>> queryPayingFailureTasks(List<String>)
}
class com.welab.loan.finance.message.MessageAppFacadeTest {
- MessageAppFacade messageAppFacade
+ void sendTemplateAppMsg()
}
interface com.welab.loan.finance.service.PayLaterService {
~ CalServiceFeeRspDTO findApplyServiceFee(CalServiceFeeReqDTO)
~ Response<PayLaterLimitRspDTO> getLimit(PayLaterLimitReqDTO)
~ Response<PayLaterLoanRspDTO> queryLoans(PayLaterLoanReqDTO)
}
class com.welab.loan.finance.model.LoanDetail {
- Long id
- String loanNumber
- Long orgId
- String period
- Long amount
- Date applyAt
- Long userId
- String userName
- String mobile
- String productCode
- Date lendAt
- Byte lendType
- Byte lendStatus
- Byte retryNum
- Byte repayStatus
- Date createAt
- Date updateAt
- Boolean isAdvance
- Long advanceAmount
- Long customAmount
- String riskLevel
- String scoreClass
- BigDecimal interestRate
- BigDecimal fundInterestRate
- BigDecimal serviceFeeRate
- BigDecimal adminRate
- BigDecimal lateRate
- BigDecimal advanceRate
- String label
- Date advanceTime
- Date labelUpdateAt
- Long overAmount
- Date approvedAt
- Date fundAt
- String applySecondCode
- Long applyAmount
- String applyPeriod
- String secondProdCode
- Byte productType
- Long adminFee
- Date fundSignAt
- Date timeOut
- Long fundId
- Long repayDueAmount
- String promotionCode
- Date labelExpiredAt
- Boolean isSign
- Boolean isSkip
- String origin
- String sourceId
- String specialPromotion
- String loanTransfer
- String previousLoan
- Integer userType
- Byte bizType
- String batchNo
- Date acceptedAt
+ String getBatchNo()
+ void setBatchNo(String)
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Long getOrgId()
+ void setOrgId(Long)
+ String getPeriod()
+ void setPeriod(String)
+ Long getAmount()
+ void setAmount(Long)
+ Date getApplyAt()
+ void setApplyAt(Date)
+ Long getUserId()
+ void setUserId(Long)
+ String getUserName()
+ void setUserName(String)
+ String getMobile()
+ void setMobile(String)
+ String getProductCode()
+ void setProductCode(String)
+ Date getLendAt()
+ void setLendAt(Date)
+ Byte getLendType()
+ void setLendType(Byte)
+ Byte getLendStatus()
+ void setLendStatus(Byte)
+ Byte getRetryNum()
+ void setRetryNum(Byte)
+ Byte getRepayStatus()
+ void setRepayStatus(Byte)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ Boolean getIsAdvance()
+ void setIsAdvance(Boolean)
+ Long getAdvanceAmount()
+ void setAdvanceAmount(Long)
+ Long getCustomAmount()
+ void setCustomAmount(Long)
+ String getRiskLevel()
+ void setRiskLevel(String)
+ String getScoreClass()
+ void setScoreClass(String)
+ BigDecimal getInterestRate()
+ void setInterestRate(BigDecimal)
+ BigDecimal getFundInterestRate()
+ void setFundInterestRate(BigDecimal)
+ BigDecimal getServiceFeeRate()
+ void setServiceFeeRate(BigDecimal)
+ BigDecimal getAdminRate()
+ void setAdminRate(BigDecimal)
+ BigDecimal getLateRate()
+ void setLateRate(BigDecimal)
+ BigDecimal getAdvanceRate()
+ void setAdvanceRate(BigDecimal)
+ String getLabel()
+ void setLabel(String)
+ Date getAdvanceTime()
+ void setAdvanceTime(Date)
+ Date getLabelUpdateAt()
+ void setLabelUpdateAt(Date)
+ Long getOverAmount()
+ void setOverAmount(Long)
+ Date getApprovedAt()
+ void setApprovedAt(Date)
+ Date getFundAt()
+ void setFundAt(Date)
+ String getApplySecondCode()
+ void setApplySecondCode(String)
+ Long getApplyAmount()
+ void setApplyAmount(Long)
+ String getApplyPeriod()
+ void setApplyPeriod(String)
+ String getSecondProdCode()
+ void setSecondProdCode(String)
+ Byte getProductType()
+ void setProductType(Byte)
+ Long getAdminFee()
+ void setAdminFee(Long)
+ Date getFundSignAt()
+ void setFundSignAt(Date)
+ Date getTimeOut()
+ void setTimeOut(Date)
+ Long getFundId()
+ void setFundId(Long)
+ Long getRepayDueAmount()
+ void setRepayDueAmount(Long)
+ String getPromotionCode()
+ void setPromotionCode(String)
+ Date getLabelExpiredAt()
+ void setLabelExpiredAt(Date)
+ Boolean getIsSign()
+ void setIsSign(Boolean)
+ Boolean getIsSkip()
+ void setIsSkip(Boolean)
+ String getOrigin()
+ void setOrigin(String)
+ String getSourceId()
+ void setSourceId(String)
+ String getSpecialPromotion()
+ void setSpecialPromotion(String)
+ String getLoanTransfer()
+ void setLoanTransfer(String)
+ String getPreviousLoan()
+ void setPreviousLoan(String)
+ Integer getUserType()
+ void setUserType(Integer)
+ Byte getBizType()
+ void setBizType(Byte)
+ Date getAcceptedAt()
+ void setAcceptedAt(Date)
}
class com.welab.loan.finance.dto.paylater.CreditHistoryLoanReqDTO {
- Long userId
- List<Integer> productTypeList
}
class com.welab.loan.finance.service.business.rebook.RebookServiceImpl {
- RebookTryCalculateService rebookTryCalculateService
- RebookDetailService rebookDetailService
- RebookCheckCmdExe rebookCheckCmdExe
- RebookApplyLimitCmdExe rebookApplyLimitCmdExe
- RebookOldOrderCloseService rebookOldOrderCloseService
- BackstageConfigServiceFacade backstageConfigServiceFacade
- BackstageConfigFacade backstageConfigFacade
+ Response<CalculatorAmountVo> tryCalculate(ScheduleAmountDto)
+ Response<RebookDetailVO> showRebookDetail(ScheduleAmountDto)
+ Response<RebookCheckVO> checkRebookAuthForUser(Long)
+ Response<RebookCheckVO> checkRebookAuthForLoan(String)
+ Response<List<RebookApplyLimitVO>> getRebookApplyLimit(String)
+ Response<Boolean> checkUserExistSigningRebook(Long)
+ void closeOldOrder(String,String)
}
class com.welab.loan.finance.dto.cmd.tb.TbLoanImportCmd {
- {static} long serialVersionUID
- String partner
- Long adminId
- MultipartFile file
- MultipartFile[] files
}
enum com.welab.loan.finance.enums.ErrorTypeEnum {
+  disbursementError
+  repaymentError
+  accountError
- String value
- String name
- String enName
- <<Create>> ErrorTypeEnum(String,String,String)
+ String getValue()
+ String getName()
+ String getEnName()
+ boolean check(String)
+ {static} List getStatusList(boolean)
}
class com.welab.loan.finance.service.core.BaseFinanceTrading {
- FinanceTradingMapper mapper
- FinanceTradingExtMapper extMapper
- FundService fundService
+ int insert(FinanceTrading)
+ FinanceTrading selectTrading(String,TradingTypeEnum)
+ List<FinanceTrading> selectTrading(TradingTypeEnum,Date,Date)
+ List<FinanceTrading> selectTradings(String,List<Integer>)
+ long countTrading(String,TradingTypeEnum,TradingStatusEnum)
+ List<FinanceTrading> findTrading(TradingTypeEnum,Date,Date)
+ FinanceTrading selectTrading(String)
+ List<FinanceTrading> selectTradingByBatch(String)
+ int updateTradingById(FinanceTrading)
+ FinanceTrading selectTradingById(long)
+ int updateTradingByExample(FinanceTrading,FinanceTradingExample)
+ long countTradingByExample(FinanceTradingExample)
+ long countByLoanNumber(String)
+ PageInfo<TransferExt> selectPageByExample(TransferLoanDto)
+ Map transLoanMap(TransferLoanDto)
+ void tranData(List<TransferExt>,Map<Long,FundAccountInfoDTO>)
+ void transferExportList(TransferLoanDto,String)
}
enum com.welab.loan.finance.enums.PlanTriggerTypeEnum {
+  APP_TRIGGER
+  COLLECTION_TRIGGER
- byte val
- String desc
}
class com.welab.loan.finance.service.business.event.dto.TradingDto {
- String loanNumber
- TradingTypeEnum tradingType
}
class com.welab.loan.finance.model.LoanApplyPlansExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanApplyPlansExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanApplyPlansExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andDueIndexIsNull()
+ Criteria andDueIndexIsNotNull()
+ Criteria andDueIndexEqualTo(Integer)
+ Criteria andDueIndexNotEqualTo(Integer)
+ Criteria andDueIndexGreaterThan(Integer)
+ Criteria andDueIndexGreaterThanOrEqualTo(Integer)
+ Criteria andDueIndexLessThan(Integer)
+ Criteria andDueIndexLessThanOrEqualTo(Integer)
+ Criteria andDueIndexIn(List<Integer>)
+ Criteria andDueIndexNotIn(List<Integer>)
+ Criteria andDueIndexBetween(Integer,Integer)
+ Criteria andDueIndexNotBetween(Integer,Integer)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andTriggerTypeIsNull()
+ Criteria andTriggerTypeIsNotNull()
+ Criteria andTriggerTypeEqualTo(Byte)
+ Criteria andTriggerTypeNotEqualTo(Byte)
+ Criteria andTriggerTypeGreaterThan(Byte)
+ Criteria andTriggerTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTriggerTypeLessThan(Byte)
+ Criteria andTriggerTypeLessThanOrEqualTo(Byte)
+ Criteria andTriggerTypeIn(List<Byte>)
+ Criteria andTriggerTypeNotIn(List<Byte>)
+ Criteria andTriggerTypeBetween(Byte,Byte)
+ Criteria andTriggerTypeNotBetween(Byte,Byte)
+ Criteria andApplyUserIdIsNull()
+ Criteria andApplyUserIdIsNotNull()
+ Criteria andApplyUserIdEqualTo(Long)
+ Criteria andApplyUserIdNotEqualTo(Long)
+ Criteria andApplyUserIdGreaterThan(Long)
+ Criteria andApplyUserIdGreaterThanOrEqualTo(Long)
+ Criteria andApplyUserIdLessThan(Long)
+ Criteria andApplyUserIdLessThanOrEqualTo(Long)
+ Criteria andApplyUserIdIn(List<Long>)
+ Criteria andApplyUserIdNotIn(List<Long>)
+ Criteria andApplyUserIdBetween(Long,Long)
+ Criteria andApplyUserIdNotBetween(Long,Long)
+ Criteria andReasonIsNull()
+ Criteria andReasonIsNotNull()
+ Criteria andReasonEqualTo(Long)
+ Criteria andReasonNotEqualTo(Long)
+ Criteria andReasonGreaterThan(Long)
+ Criteria andReasonGreaterThanOrEqualTo(Long)
+ Criteria andReasonLessThan(Long)
+ Criteria andReasonLessThanOrEqualTo(Long)
+ Criteria andReasonIn(List<Long>)
+ Criteria andReasonNotIn(List<Long>)
+ Criteria andReasonBetween(Long,Long)
+ Criteria andReasonNotBetween(Long,Long)
+ Criteria andDisDownPaymentRatioIsNull()
+ Criteria andDisDownPaymentRatioIsNotNull()
+ Criteria andDisDownPaymentRatioEqualTo(BigDecimal)
+ Criteria andDisDownPaymentRatioNotEqualTo(BigDecimal)
+ Criteria andDisDownPaymentRatioGreaterThan(BigDecimal)
+ Criteria andDisDownPaymentRatioGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisDownPaymentRatioLessThan(BigDecimal)
+ Criteria andDisDownPaymentRatioLessThanOrEqualTo(BigDecimal)
+ Criteria andDisDownPaymentRatioIn(List<BigDecimal>)
+ Criteria andDisDownPaymentRatioNotIn(List<BigDecimal>)
+ Criteria andDisDownPaymentRatioBetween(BigDecimal,BigDecimal)
+ Criteria andDisDownPaymentRatioNotBetween(BigDecimal,BigDecimal)
+ Criteria andDisAdminFeeRatioIsNull()
+ Criteria andDisAdminFeeRatioIsNotNull()
+ Criteria andDisAdminFeeRatioEqualTo(BigDecimal)
+ Criteria andDisAdminFeeRatioNotEqualTo(BigDecimal)
+ Criteria andDisAdminFeeRatioGreaterThan(BigDecimal)
+ Criteria andDisAdminFeeRatioGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisAdminFeeRatioLessThan(BigDecimal)
+ Criteria andDisAdminFeeRatioLessThanOrEqualTo(BigDecimal)
+ Criteria andDisAdminFeeRatioIn(List<BigDecimal>)
+ Criteria andDisAdminFeeRatioNotIn(List<BigDecimal>)
+ Criteria andDisAdminFeeRatioBetween(BigDecimal,BigDecimal)
+ Criteria andDisAdminFeeRatioNotBetween(BigDecimal,BigDecimal)
+ Criteria andDisServiceFeeRatioIsNull()
+ Criteria andDisServiceFeeRatioIsNotNull()
+ Criteria andDisServiceFeeRatioEqualTo(BigDecimal)
+ Criteria andDisServiceFeeRatioNotEqualTo(BigDecimal)
+ Criteria andDisServiceFeeRatioGreaterThan(BigDecimal)
+ Criteria andDisServiceFeeRatioGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisServiceFeeRatioLessThan(BigDecimal)
+ Criteria andDisServiceFeeRatioLessThanOrEqualTo(BigDecimal)
+ Criteria andDisServiceFeeRatioIn(List<BigDecimal>)
+ Criteria andDisServiceFeeRatioNotIn(List<BigDecimal>)
+ Criteria andDisServiceFeeRatioBetween(BigDecimal,BigDecimal)
+ Criteria andDisServiceFeeRatioNotBetween(BigDecimal,BigDecimal)
+ Criteria andDisPrincipalRatioIsNull()
+ Criteria andDisPrincipalRatioIsNotNull()
+ Criteria andDisPrincipalRatioEqualTo(BigDecimal)
+ Criteria andDisPrincipalRatioNotEqualTo(BigDecimal)
+ Criteria andDisPrincipalRatioGreaterThan(BigDecimal)
+ Criteria andDisPrincipalRatioGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisPrincipalRatioLessThan(BigDecimal)
+ Criteria andDisPrincipalRatioLessThanOrEqualTo(BigDecimal)
+ Criteria andDisPrincipalRatioIn(List<BigDecimal>)
+ Criteria andDisPrincipalRatioNotIn(List<BigDecimal>)
+ Criteria andDisPrincipalRatioBetween(BigDecimal,BigDecimal)
+ Criteria andDisPrincipalRatioNotBetween(BigDecimal,BigDecimal)
+ Criteria andDisLateFeeRatioIsNull()
+ Criteria andDisLateFeeRatioIsNotNull()
+ Criteria andDisLateFeeRatioEqualTo(BigDecimal)
+ Criteria andDisLateFeeRatioNotEqualTo(BigDecimal)
+ Criteria andDisLateFeeRatioGreaterThan(BigDecimal)
+ Criteria andDisLateFeeRatioGreaterThanOrEqualTo(BigDecimal)
+ Criteria andDisLateFeeRatioLessThan(BigDecimal)
+ Criteria andDisLateFeeRatioLessThanOrEqualTo(BigDecimal)
+ Criteria andDisLateFeeRatioIn(List<BigDecimal>)
+ Criteria andDisLateFeeRatioNotIn(List<BigDecimal>)
+ Criteria andDisLateFeeRatioBetween(BigDecimal,BigDecimal)
+ Criteria andDisLateFeeRatioNotBetween(BigDecimal,BigDecimal)
+ Criteria andMinRepaymentAmountIsNull()
+ Criteria andMinRepaymentAmountIsNotNull()
+ Criteria andMinRepaymentAmountEqualTo(Long)
+ Criteria andMinRepaymentAmountNotEqualTo(Long)
+ Criteria andMinRepaymentAmountGreaterThan(Long)
+ Criteria andMinRepaymentAmountGreaterThanOrEqualTo(Long)
+ Criteria andMinRepaymentAmountLessThan(Long)
+ Criteria andMinRepaymentAmountLessThanOrEqualTo(Long)
+ Criteria andMinRepaymentAmountIn(List<Long>)
+ Criteria andMinRepaymentAmountNotIn(List<Long>)
+ Criteria andMinRepaymentAmountBetween(Long,Long)
+ Criteria andMinRepaymentAmountNotBetween(Long,Long)
+ Criteria andDayIsNull()
+ Criteria andDayIsNotNull()
+ Criteria andDayEqualTo(Integer)
+ Criteria andDayNotEqualTo(Integer)
+ Criteria andDayGreaterThan(Integer)
+ Criteria andDayGreaterThanOrEqualTo(Integer)
+ Criteria andDayLessThan(Integer)
+ Criteria andDayLessThanOrEqualTo(Integer)
+ Criteria andDayIn(List<Integer>)
+ Criteria andDayNotIn(List<Integer>)
+ Criteria andDayBetween(Integer,Integer)
+ Criteria andDayNotBetween(Integer,Integer)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andExpireAtIsNull()
+ Criteria andExpireAtIsNotNull()
+ Criteria andExpireAtEqualTo(Date)
+ Criteria andExpireAtNotEqualTo(Date)
+ Criteria andExpireAtGreaterThan(Date)
+ Criteria andExpireAtGreaterThanOrEqualTo(Date)
+ Criteria andExpireAtLessThan(Date)
+ Criteria andExpireAtLessThanOrEqualTo(Date)
+ Criteria andExpireAtIn(List<Date>)
+ Criteria andExpireAtNotIn(List<Date>)
+ Criteria andExpireAtBetween(Date,Date)
+ Criteria andExpireAtNotBetween(Date,Date)
+ Criteria andOptNameIsNull()
+ Criteria andOptNameIsNotNull()
+ Criteria andOptNameEqualTo(String)
+ Criteria andOptNameNotEqualTo(String)
+ Criteria andOptNameGreaterThan(String)
+ Criteria andOptNameGreaterThanOrEqualTo(String)
+ Criteria andOptNameLessThan(String)
+ Criteria andOptNameLessThanOrEqualTo(String)
+ Criteria andOptNameLike(String)
+ Criteria andOptNameNotLike(String)
+ Criteria andOptNameIn(List<String>)
+ Criteria andOptNameNotIn(List<String>)
+ Criteria andOptNameBetween(String,String)
+ Criteria andOptNameNotBetween(String,String)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
}
class com.welab.loan.finance.model.LoanApplyPlansExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanApplyPlansExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.test.coupon.LoanCouponTest {
- LoanCouponService loanCouponService
+ void listCoupon()
+ void checkCouponLoansAbleForMarketing()
+ void tryCouponInfo()
}
interface com.welab.loan.finance.service.business.lend.ITransferService {
~ Long getRechargeFee(Long,String)
~ boolean buildTransfer(String,TradingTypeEnum)
~ void sendTransfer(String,TradingTypeEnum)
~ boolean transfer(TransferDto)
~ void sendTransfer(TransferCmd)
}
class com.welab.loan.finance.dto.CessieDpdRspDTO {
- String loanNumber
- Integer overdueDays
}
class com.welab.loan.finance.controller.CreditLoanCancelController {
- CreditLoanCancelService creditLoanCancelService
+ Response repaymentImport(Long,MultipartFile)
+ Response<PageInfo<CreditLoanCancelVo>> getLoanCancelList(Integer,Integer,String)
}
interface com.welab.loan.finance.mapper.CreditReLoanMapper {
~ long countByExample(CreditReLoanExample)
~ int deleteByExample(CreditReLoanExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditReLoan)
~ int insertSelective(CreditReLoan)
~ List<CreditReLoan> selectByExample(CreditReLoanExample)
~ CreditReLoan selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditReLoan,CreditReLoanExample)
~ int updateByExample(CreditReLoan,CreditReLoanExample)
~ int updateByPrimaryKeySelective(CreditReLoan)
~ int updateByPrimaryKey(CreditReLoan)
}
interface com.welab.loan.finance.mapper.CreditBigFieldRelationMapper {
~ long countByExample(CreditBigFieldRelationExample)
~ int deleteByExample(CreditBigFieldRelationExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditBigFieldRelation)
~ int insertSelective(CreditBigFieldRelation)
~ List<CreditBigFieldRelation> selectByExampleWithBLOBs(CreditBigFieldRelationExample)
~ List<CreditBigFieldRelation> selectByExample(CreditBigFieldRelationExample)
~ CreditBigFieldRelation selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditBigFieldRelation,CreditBigFieldRelationExample)
~ int updateByExampleWithBLOBs(CreditBigFieldRelation,CreditBigFieldRelationExample)
~ int updateByExample(CreditBigFieldRelation,CreditBigFieldRelationExample)
~ int updateByPrimaryKeySelective(CreditBigFieldRelation)
~ int updateByPrimaryKeyWithBLOBs(CreditBigFieldRelation)
~ int updateByPrimaryKey(CreditBigFieldRelation)
}
interface com.welab.loan.finance.service.UserTransService {
~ Response<PageInfo<RepaymentTrackVo>> findUserTransByPage(Long,int,int)
~ Response<PageInfo<RepaymentTrackVo>> findUserTransByPage(UserTransDTO)
~ Response<AmountExtVo> findUserTransByTransId(String,boolean)
}
interface com.welab.loan.finance.service.userTag.IUserTagService {
~ Response<Long> disbursedCount(Map<String,Object>)
~ Response<Long> closeDueCount(Map<String,Object>)
~ Response<Long> closeLoanCount(Map<String,Object>)
~ Response<Long> repaymentAmount(Map<String,Object>)
~ Response<Long> repaymentCount(Map<String,Object>)
~ Response<Long> repaymentLoanNumberCount(Map<String,Object>)
~ Response<Long> getDpd(Map<String,Object>)
~ Response<Long> getFirstMaxDpd(Map<String,Object>)
~ Response<String> getLastSalaryDay(Long)
~ Response<List<Date>> getDueDateList(Map<String,Object>)
~ Response<Long> repaymentAfterApprovalCountNew(Map<String,Object>)
~ Response<Long> collectionPlanCount(Map<String,Object>)
~ Response<List<String>> getRepaymentLoanNumbers(Map<String,Object>)
~ Response<Long> getEplanLoanCount(Map<String,Object>)
~ Response<Date> getLastEplanCloseDate(Map<String,Object>)
}
class com.welab.loan.finance.model.CreditUserAccountChildExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditUserAccountChildExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditUserAccountChildExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andAccountIdIsNull()
+ Criteria andAccountIdIsNotNull()
+ Criteria andAccountIdEqualTo(Long)
+ Criteria andAccountIdNotEqualTo(Long)
+ Criteria andAccountIdGreaterThan(Long)
+ Criteria andAccountIdGreaterThanOrEqualTo(Long)
+ Criteria andAccountIdLessThan(Long)
+ Criteria andAccountIdLessThanOrEqualTo(Long)
+ Criteria andAccountIdIn(List<Long>)
+ Criteria andAccountIdNotIn(List<Long>)
+ Criteria andAccountIdBetween(Long,Long)
+ Criteria andAccountIdNotBetween(Long,Long)
+ Criteria andSecondProductCodeIsNull()
+ Criteria andSecondProductCodeIsNotNull()
+ Criteria andSecondProductCodeEqualTo(String)
+ Criteria andSecondProductCodeNotEqualTo(String)
+ Criteria andSecondProductCodeGreaterThan(String)
+ Criteria andSecondProductCodeGreaterThanOrEqualTo(String)
+ Criteria andSecondProductCodeLessThan(String)
+ Criteria andSecondProductCodeLessThanOrEqualTo(String)
+ Criteria andSecondProductCodeLike(String)
+ Criteria andSecondProductCodeNotLike(String)
+ Criteria andSecondProductCodeIn(List<String>)
+ Criteria andSecondProductCodeNotIn(List<String>)
+ Criteria andSecondProductCodeBetween(String,String)
+ Criteria andSecondProductCodeNotBetween(String,String)
+ Criteria andTenorIsNull()
+ Criteria andTenorIsNotNull()
+ Criteria andTenorEqualTo(String)
+ Criteria andTenorNotEqualTo(String)
+ Criteria andTenorGreaterThan(String)
+ Criteria andTenorGreaterThanOrEqualTo(String)
+ Criteria andTenorLessThan(String)
+ Criteria andTenorLessThanOrEqualTo(String)
+ Criteria andTenorLike(String)
+ Criteria andTenorNotLike(String)
+ Criteria andTenorIn(List<String>)
+ Criteria andTenorNotIn(List<String>)
+ Criteria andTenorBetween(String,String)
+ Criteria andTenorNotBetween(String,String)
+ Criteria andSumMoneyIsNull()
+ Criteria andSumMoneyIsNotNull()
+ Criteria andSumMoneyEqualTo(Long)
+ Criteria andSumMoneyNotEqualTo(Long)
+ Criteria andSumMoneyGreaterThan(Long)
+ Criteria andSumMoneyGreaterThanOrEqualTo(Long)
+ Criteria andSumMoneyLessThan(Long)
+ Criteria andSumMoneyLessThanOrEqualTo(Long)
+ Criteria andSumMoneyIn(List<Long>)
+ Criteria andSumMoneyNotIn(List<Long>)
+ Criteria andSumMoneyBetween(Long,Long)
+ Criteria andSumMoneyNotBetween(Long,Long)
+ Criteria andFreezeMoneyIsNull()
+ Criteria andFreezeMoneyIsNotNull()
+ Criteria andFreezeMoneyEqualTo(Long)
+ Criteria andFreezeMoneyNotEqualTo(Long)
+ Criteria andFreezeMoneyGreaterThan(Long)
+ Criteria andFreezeMoneyGreaterThanOrEqualTo(Long)
+ Criteria andFreezeMoneyLessThan(Long)
+ Criteria andFreezeMoneyLessThanOrEqualTo(Long)
+ Criteria andFreezeMoneyIn(List<Long>)
+ Criteria andFreezeMoneyNotIn(List<Long>)
+ Criteria andFreezeMoneyBetween(Long,Long)
+ Criteria andFreezeMoneyNotBetween(Long,Long)
+ Criteria andUseMoneyIsNull()
+ Criteria andUseMoneyIsNotNull()
+ Criteria andUseMoneyEqualTo(Long)
+ Criteria andUseMoneyNotEqualTo(Long)
+ Criteria andUseMoneyGreaterThan(Long)
+ Criteria andUseMoneyGreaterThanOrEqualTo(Long)
+ Criteria andUseMoneyLessThan(Long)
+ Criteria andUseMoneyLessThanOrEqualTo(Long)
+ Criteria andUseMoneyIn(List<Long>)
+ Criteria andUseMoneyNotIn(List<Long>)
+ Criteria andUseMoneyBetween(Long,Long)
+ Criteria andUseMoneyNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
}
class com.welab.loan.finance.model.CreditUserAccountChildExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.CreditUserAccountChildExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.core.dues.impl.PaylaterCostService {
- boolean isDiscount
+ CostDetailDTO findCostDetail(CostReqDTO)
+ String costKey()
}
class com.welab.loan.finance.service.core.BaseLevenshteinScoreService {
- LevenshteinScoreMapper levenshteinScoreMapper
+ void add(LevenshteinScore)
+ LevenshteinScore selectLastByUserId(Long)
}
class com.welab.loan.finance.app.base.credit.BaseCreditAbtestExportService {
- CreditAbtestExportMapper creditAbtestExportMapper
+ int addDownLoadRecord(CreditAbtestExport)
+ List<CreditAbtestExport> findExportList(Long)
}
class com.welab.loan.finance.app.service.flow.repaymentback.tb.TbCreditUserAccountBackCompont {
- RepaymentGoBackManager repaymentGoBackManager
+ FlowTaskNodeEnum flowTaskNode()
# void process(RepaymentBackFlowContext)
}
interface com.welab.loan.finance.mapper.TbLendBatchMapper {
~ int countByExample(TbLendBatchExample)
~ int deleteByExample(TbLendBatchExample)
~ int deleteByPrimaryKey(Long)
~ int insert(TbLendBatch)
~ int insertSelective(TbLendBatch)
~ List<TbLendBatch> selectByExample(TbLendBatchExample)
~ TbLendBatch selectByPrimaryKey(Long)
~ int updateByExampleSelective(TbLendBatch,TbLendBatchExample)
~ int updateByExample(TbLendBatch,TbLendBatchExample)
~ int updateByPrimaryKeySelective(TbLendBatch)
~ int updateByPrimaryKey(TbLendBatch)
}
class com.welab.loan.finance.service.business.rebook.RebookDetailService {
- RebookTryCalculateService rebookTryCalculateService
- BaseDuesService baseDuesService
- BaseLoanDetailExtendService baseLoanDetailExtendService
+ RebookDetailVO showRebookDetail(ScheduleAmountDto)
- RebookDetailVO.NewOrder buildNewOrder(ScheduleAmountDto)
- RebookDetailVO.OldOrder buildOldOrder(ScheduleAmountDto)
- Date getFirstDueDate(String,String)
}
class com.welab.loan.finance.core.dto.DiscountDTO {
- Integer dueIndex
- Long principalDiscount
- Long adminFeeDiscount
- Long fundInterestDiscount
- Long serviceFeeDiscount
- Long lateFeeDiscount
- String promotionCode
- Long principalPlanDiscount
- Long adminFeePlanDiscount
- Long fundInterestPlanDiscount
- Long serviceFeePlanDiscount
- Long lateFeePlanDiscount
}
class com.welab.loan.finance.facade.credit.CreditUserAccountServiceFacade {
- CreditUserAccountService creditUserAccountService
+ Response<Boolean> canDeduct(Long,String,String,Long)
+ Response<Boolean> useCredit(UseCreditVO)
+ CreditUserAccountDTO findOneByParams(String,String,Long)
+ Boolean doAllRestoreCredit(String,Boolean,LoanPlansRelationDTO)
+ Boolean cancelCreditLoans(List<String>)
+ List<CreditUserAccountVO> findByUser(Long)
+ CreditUserAccountVO findByUserAndProductCode(Long,String)
+ Boolean cancelApplyCredit(CancelApplyCreditVO)
+ Boolean restoreCredit(RestoreCreditVO)
+ Boolean freezeUser(CreditUserAccountStatusLogDTO)
+ Boolean unFreezeUser(CreditUserAccountStatusLogDTO)
+ CreditUserAccountVO findByUserInfo(Long,String)
+ Response<Boolean> retracementCredit(List<RetracementCreditDTO>)
}
class com.welab.loan.finance.model.UvfFileLoan {
- Long id
- Date createTime
- Date updatedAt
- Boolean deleted
- String taskId
- String jumlahBpkb
- String namaPemilikBpkb
- String tglBpkb
- String noBpkb
- String buktiKepemilikan
- String alamatDealer
- String namaDealer
- String tglAngs1Dd
- String biayaLainnyaYangDikreditkan
- String biayaAsuransuJiwa
- String biayaAsuransiKendaraan
- String netDp
- String noPk
- String tenorAwal
- String pokokAwal
- String periodePembayaran
- String caraBayarLain
- String biayaLain
- String kodePaket
- String pembayaranPremi
- String premiAsuransi
- String jenisAsuransi
- String alamat2Asuransi
- String alamat1Asuransi
- String alamatAsuransi
- String namaPtAsuransi
- String nilaiAgunan
- String kondisiAgunan
- String bungaBank
- String bunga
- String angsuranBank
- String angsuranDebitur
- String addm
- String costBank
- String cost
- String jumlahAngsuran
- String tglAngsuran
- String tglValid
- String tglPk
- String noPinjaman
- String jenisPenggunaanKredit
- String kategoriDebiturUmkm
- String alamatEmailDebiturPerorangan
- String kodeBidangUsahaSlik
- String kodeJenisPenggunaaan
- String takeoverDari
- String golonganKredit
- String perjanjianPisahHarta
- String tanggalLahirPasangan
- String namaPasanganSesuaiId
- String noKtpPasangan
- String statusPerkawinanDebitur
- String jumlahTanggungan
- String penghasilan
- String alamatTempatBekerja
- String identitas
- String tempatLahirSesuaiDati
- String namaDebiturTanpaSingkatan
- String kodeCabang
- String dati2
- String tempatPendirianPerusahaan
- String tglAkteAkhir
- String noAkteAkhir
- String tglAkteAwal
- String noAkte
- String bidangUsaha
- String tempatBekerja
- String sandiPekerjaan
- String namaGadisIbuKandung
- String jenisKelamin
- String kodePos
- String kecamatan
- String kelurahan
- String noTelepon
- String kodeArea
- String noPasport
- String golonganDebitur
- String keteranganStatus
- String status
- String namaAlias
- String tempatLahir
- String tanggalLahir
- String noKtpId
- String noNpwp
- String alamatDebitur
- String usaha
- String kota
- String alamatCabang
- String namaCabangMultifinance
- String namaMultiFinance
- String cifNama
- String cilinder
- String thnRakit
- String thnMotor
- String warna
- String nomes
- String norang
- String nopol
- String ketModel
- String kdJenis
- String kdMerk
- String nomorPinjaman
+ Long getId()
+ void setId(Long)
+ Date getCreateTime()
+ void setCreateTime(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ String getTaskId()
+ void setTaskId(String)
+ String getJumlahBpkb()
+ void setJumlahBpkb(String)
+ String getNamaPemilikBpkb()
+ void setNamaPemilikBpkb(String)
+ String getTglBpkb()
+ void setTglBpkb(String)
+ String getNoBpkb()
+ void setNoBpkb(String)
+ String getBuktiKepemilikan()
+ void setBuktiKepemilikan(String)
+ String getAlamatDealer()
+ void setAlamatDealer(String)
+ String getNamaDealer()
+ void setNamaDealer(String)
+ String getTglAngs1Dd()
+ void setTglAngs1Dd(String)
+ String getBiayaLainnyaYangDikreditkan()
+ void setBiayaLainnyaYangDikreditkan(String)
+ String getBiayaAsuransuJiwa()
+ void setBiayaAsuransuJiwa(String)
+ String getBiayaAsuransiKendaraan()
+ void setBiayaAsuransiKendaraan(String)
+ String getNetDp()
+ void setNetDp(String)
+ String getNoPk()
+ void setNoPk(String)
+ String getTenorAwal()
+ void setTenorAwal(String)
+ String getPokokAwal()
+ void setPokokAwal(String)
+ String getPeriodePembayaran()
+ void setPeriodePembayaran(String)
+ String getCaraBayarLain()
+ void setCaraBayarLain(String)
+ String getBiayaLain()
+ void setBiayaLain(String)
+ String getKodePaket()
+ void setKodePaket(String)
+ String getPembayaranPremi()
+ void setPembayaranPremi(String)
+ String getPremiAsuransi()
+ void setPremiAsuransi(String)
+ String getJenisAsuransi()
+ void setJenisAsuransi(String)
+ String getAlamat2Asuransi()
+ void setAlamat2Asuransi(String)
+ String getAlamat1Asuransi()
+ void setAlamat1Asuransi(String)
+ String getAlamatAsuransi()
+ void setAlamatAsuransi(String)
+ String getNamaPtAsuransi()
+ void setNamaPtAsuransi(String)
+ String getNilaiAgunan()
+ void setNilaiAgunan(String)
+ String getKondisiAgunan()
+ void setKondisiAgunan(String)
+ String getBungaBank()
+ void setBungaBank(String)
+ String getBunga()
+ void setBunga(String)
+ String getAngsuranBank()
+ void setAngsuranBank(String)
+ String getAngsuranDebitur()
+ void setAngsuranDebitur(String)
+ String getAddm()
+ void setAddm(String)
+ String getCostBank()
+ void setCostBank(String)
+ String getCost()
+ void setCost(String)
+ String getJumlahAngsuran()
+ void setJumlahAngsuran(String)
+ String getTglAngsuran()
+ void setTglAngsuran(String)
+ String getTglValid()
+ void setTglValid(String)
+ String getTglPk()
+ void setTglPk(String)
+ String getNoPinjaman()
+ void setNoPinjaman(String)
+ String getJenisPenggunaanKredit()
+ void setJenisPenggunaanKredit(String)
+ String getKategoriDebiturUmkm()
+ void setKategoriDebiturUmkm(String)
+ String getAlamatEmailDebiturPerorangan()
+ void setAlamatEmailDebiturPerorangan(String)
+ String getKodeBidangUsahaSlik()
+ void setKodeBidangUsahaSlik(String)
+ String getKodeJenisPenggunaaan()
+ void setKodeJenisPenggunaaan(String)
+ String getTakeoverDari()
+ void setTakeoverDari(String)
+ String getGolonganKredit()
+ void setGolonganKredit(String)
+ String getPerjanjianPisahHarta()
+ void setPerjanjianPisahHarta(String)
+ String getTanggalLahirPasangan()
+ void setTanggalLahirPasangan(String)
+ String getNamaPasanganSesuaiId()
+ void setNamaPasanganSesuaiId(String)
+ String getNoKtpPasangan()
+ void setNoKtpPasangan(String)
+ String getStatusPerkawinanDebitur()
+ void setStatusPerkawinanDebitur(String)
+ String getJumlahTanggungan()
+ void setJumlahTanggungan(String)
+ String getPenghasilan()
+ void setPenghasilan(String)
+ String getAlamatTempatBekerja()
+ void setAlamatTempatBekerja(String)
+ String getIdentitas()
+ void setIdentitas(String)
+ String getTempatLahirSesuaiDati()
+ void setTempatLahirSesuaiDati(String)
+ String getNamaDebiturTanpaSingkatan()
+ void setNamaDebiturTanpaSingkatan(String)
+ String getKodeCabang()
+ void setKodeCabang(String)
+ String getDati2()
+ void setDati2(String)
+ String getTempatPendirianPerusahaan()
+ void setTempatPendirianPerusahaan(String)
+ String getTglAkteAkhir()
+ void setTglAkteAkhir(String)
+ String getNoAkteAkhir()
+ void setNoAkteAkhir(String)
+ String getTglAkteAwal()
+ void setTglAkteAwal(String)
+ String getNoAkte()
+ void setNoAkte(String)
+ String getBidangUsaha()
+ void setBidangUsaha(String)
+ String getTempatBekerja()
+ void setTempatBekerja(String)
+ String getSandiPekerjaan()
+ void setSandiPekerjaan(String)
+ String getNamaGadisIbuKandung()
+ void setNamaGadisIbuKandung(String)
+ String getJenisKelamin()
+ void setJenisKelamin(String)
+ String getKodePos()
+ void setKodePos(String)
+ String getKecamatan()
+ void setKecamatan(String)
+ String getKelurahan()
+ void setKelurahan(String)
+ String getNoTelepon()
+ void setNoTelepon(String)
+ String getKodeArea()
+ void setKodeArea(String)
+ String getNoPasport()
+ void setNoPasport(String)
+ String getGolonganDebitur()
+ void setGolonganDebitur(String)
+ String getKeteranganStatus()
+ void setKeteranganStatus(String)
+ String getStatus()
+ void setStatus(String)
+ String getNamaAlias()
+ void setNamaAlias(String)
+ String getTempatLahir()
+ void setTempatLahir(String)
+ String getTanggalLahir()
+ void setTanggalLahir(String)
+ String getNoKtpId()
+ void setNoKtpId(String)
+ String getNoNpwp()
+ void setNoNpwp(String)
+ String getAlamatDebitur()
+ void setAlamatDebitur(String)
+ String getUsaha()
+ void setUsaha(String)
+ String getKota()
+ void setKota(String)
+ String getAlamatCabang()
+ void setAlamatCabang(String)
+ String getNamaCabangMultifinance()
+ void setNamaCabangMultifinance(String)
+ String getNamaMultiFinance()
+ void setNamaMultiFinance(String)
+ String getCifNama()
+ void setCifNama(String)
+ String getCilinder()
+ void setCilinder(String)
+ String getThnRakit()
+ void setThnRakit(String)
+ String getThnMotor()
+ void setThnMotor(String)
+ String getWarna()
+ void setWarna(String)
+ String getNomes()
+ void setNomes(String)
+ String getNorang()
+ void setNorang(String)
+ String getNopol()
+ void setNopol(String)
+ String getKetModel()
+ void setKetModel(String)
+ String getKdJenis()
+ void setKdJenis(String)
+ String getKdMerk()
+ void setKdMerk(String)
+ String getNomorPinjaman()
+ void setNomorPinjaman(String)
}
class com.welab.loan.finance.model.CreditActivityAbTestGroupUserTagRelationExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditActivityAbTestGroupUserTagRelationExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditActivityAbTestGroupUserTagRelationExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andTestGroupIdIsNull()
+ Criteria andTestGroupIdIsNotNull()
+ Criteria andTestGroupIdEqualTo(Long)
+ Criteria andTestGroupIdNotEqualTo(Long)
+ Criteria andTestGroupIdGreaterThan(Long)
+ Criteria andTestGroupIdGreaterThanOrEqualTo(Long)
+ Criteria andTestGroupIdLessThan(Long)
+ Criteria andTestGroupIdLessThanOrEqualTo(Long)
+ Criteria andTestGroupIdIn(List<Long>)
+ Criteria andTestGroupIdNotIn(List<Long>)
+ Criteria andTestGroupIdBetween(Long,Long)
+ Criteria andTestGroupIdNotBetween(Long,Long)
+ Criteria andUserTagIsNull()
+ Criteria andUserTagIsNotNull()
+ Criteria andUserTagEqualTo(String)
+ Criteria andUserTagNotEqualTo(String)
+ Criteria andUserTagGreaterThan(String)
+ Criteria andUserTagGreaterThanOrEqualTo(String)
+ Criteria andUserTagLessThan(String)
+ Criteria andUserTagLessThanOrEqualTo(String)
+ Criteria andUserTagLike(String)
+ Criteria andUserTagNotLike(String)
+ Criteria andUserTagIn(List<String>)
+ Criteria andUserTagNotIn(List<String>)
+ Criteria andUserTagBetween(String,String)
+ Criteria andUserTagNotBetween(String,String)
+ Criteria andTestGroupUserCountIsNull()
+ Criteria andTestGroupUserCountIsNotNull()
+ Criteria andTestGroupUserCountEqualTo(Integer)
+ Criteria andTestGroupUserCountNotEqualTo(Integer)
+ Criteria andTestGroupUserCountGreaterThan(Integer)
+ Criteria andTestGroupUserCountGreaterThanOrEqualTo(Integer)
+ Criteria andTestGroupUserCountLessThan(Integer)
+ Criteria andTestGroupUserCountLessThanOrEqualTo(Integer)
+ Criteria andTestGroupUserCountIn(List<Integer>)
+ Criteria andTestGroupUserCountNotIn(List<Integer>)
+ Criteria andTestGroupUserCountBetween(Integer,Integer)
+ Criteria andTestGroupUserCountNotBetween(Integer,Integer)
+ Criteria andTotalUserCountIsNull()
+ Criteria andTotalUserCountIsNotNull()
+ Criteria andTotalUserCountEqualTo(Integer)
+ Criteria andTotalUserCountNotEqualTo(Integer)
+ Criteria andTotalUserCountGreaterThan(Integer)
+ Criteria andTotalUserCountGreaterThanOrEqualTo(Integer)
+ Criteria andTotalUserCountLessThan(Integer)
+ Criteria andTotalUserCountLessThanOrEqualTo(Integer)
+ Criteria andTotalUserCountIn(List<Integer>)
+ Criteria andTotalUserCountNotIn(List<Integer>)
+ Criteria andTotalUserCountBetween(Integer,Integer)
+ Criteria andTotalUserCountNotBetween(Integer,Integer)
}
class com.welab.loan.finance.model.CreditActivityAbTestGroupUserTagRelationExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.CreditActivityAbTestGroupUserTagRelationExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
interface com.welab.loan.finance.mapper.LendReversalRepaymentMapper {
~ long countByExample(LendReversalRepaymentExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LendReversalRepayment)
~ int insertSelective(LendReversalRepayment)
~ List<LendReversalRepayment> selectByExample(LendReversalRepaymentExample)
~ LendReversalRepayment selectByPrimaryKey(Long)
~ int updateByExampleSelective(LendReversalRepayment,LendReversalRepaymentExample)
~ int updateByExample(LendReversalRepayment,LendReversalRepaymentExample)
~ int updateByPrimaryKeySelective(LendReversalRepayment)
~ int updateByPrimaryKey(LendReversalRepayment)
}
class com.welab.loan.finance.vo.RebookDetailVO {
- OldOrder oldOrder
- NewOrder newOrder
}
class com.welab.loan.finance.vo.RebookDetailVO$OldOrder {
- Long principal
- String tenrRatio
- Long remainingAmount
- Date nextDueDate
}
class com.welab.loan.finance.vo.RebookDetailVO$NewOrder {
- Long applyAmount
- String tenrRatio
- Long remainingAmount
- Long perRepayAmount
- Long receivedAmount
- Date firstDueDate
- Long premiumAmount
}
interface com.welab.loan.finance.service.business.lend.IBatchTransferService {
~ List<FinanceTradingExt> findBatchTransfer(Date,Date)
~ void sendBatchTransfer(Date,Date,TradingTypeEnum)
~ boolean sendAlfamartTransfer(String,List<FinanceTradingExt>)
~ void sendHandlingTransfer(Long,String)
~ int buildTransaction(String,TradingTypeEnum,Object,String)
}
interface com.welab.loan.finance.mapper.LoanCouponDetailMapper {
~ long countByExample(LoanCouponDetailExample)
~ int deleteByExample(LoanCouponDetailExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanCouponDetail)
~ int insertSelective(LoanCouponDetail)
~ List<LoanCouponDetail> selectByExample(LoanCouponDetailExample)
~ LoanCouponDetail selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanCouponDetail,LoanCouponDetailExample)
~ int updateByExample(LoanCouponDetail,LoanCouponDetailExample)
~ int updateByPrimaryKeySelective(LoanCouponDetail)
~ int updateByPrimaryKey(LoanCouponDetail)
}
class com.welab.loan.finance.app.service.credit.loan.SigapLoanService {
- SigapDubboService sigapDubboService
+ List<TagProductVO> processLoan(CreditUserAccountExt,Map<String,TagProductVO>)
}
interface com.welab.loan.finance.mapper.LoanPlansRelationMapper {
~ long countByExample(LoanPlansRelationExample)
~ int deleteByExample(LoanPlansRelationExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanPlansRelation)
~ int insertSelective(LoanPlansRelation)
~ List<LoanPlansRelation> selectByExample(LoanPlansRelationExample)
~ LoanPlansRelation selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanPlansRelation,LoanPlansRelationExample)
~ int updateByExample(LoanPlansRelation,LoanPlansRelationExample)
~ int updateByPrimaryKeySelective(LoanPlansRelation)
~ int updateByPrimaryKey(LoanPlansRelation)
}
class com.welab.loan.finance.test.BankTest {
~ FinanceUserBankcardSevice financeUserBankcardSevice
- ValidatorService validatorService
+ void saveTest()
+ void checkUnFinishedLoan()
+ void changeBindCard()
+ void saveUserBankCard()
+ void vali()
+ void lockTest()
}
class com.welab.loan.finance.test.excel.ExcelTest2 {
+ {static} void main(String[])
}
class com.welab.loan.finance.core.dto.va.UserRepayAmountDTO {
- String loanNumber
- Long amount
- Long curAmount
- Long nextAmount
- Long orgId
}
class com.welab.loan.finance.model.LoanReversalExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanReversalExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanReversalExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andTransIdIsNull()
+ Criteria andTransIdIsNotNull()
+ Criteria andTransIdEqualTo(String)
+ Criteria andTransIdNotEqualTo(String)
+ Criteria andTransIdGreaterThan(String)
+ Criteria andTransIdGreaterThanOrEqualTo(String)
+ Criteria andTransIdLessThan(String)
+ Criteria andTransIdLessThanOrEqualTo(String)
+ Criteria andTransIdLike(String)
+ Criteria andTransIdNotLike(String)
+ Criteria andTransIdIn(List<String>)
+ Criteria andTransIdNotIn(List<String>)
+ Criteria andTransIdBetween(String,String)
+ Criteria andTransIdNotBetween(String,String)
+ Criteria andBackTransIdIsNull()
+ Criteria andBackTransIdIsNotNull()
+ Criteria andBackTransIdEqualTo(String)
+ Criteria andBackTransIdNotEqualTo(String)
+ Criteria andBackTransIdGreaterThan(String)
+ Criteria andBackTransIdGreaterThanOrEqualTo(String)
+ Criteria andBackTransIdLessThan(String)
+ Criteria andBackTransIdLessThanOrEqualTo(String)
+ Criteria andBackTransIdLike(String)
+ Criteria andBackTransIdNotLike(String)
+ Criteria andBackTransIdIn(List<String>)
+ Criteria andBackTransIdNotIn(List<String>)
+ Criteria andBackTransIdBetween(String,String)
+ Criteria andBackTransIdNotBetween(String,String)
+ Criteria andReasonIsNull()
+ Criteria andReasonIsNotNull()
+ Criteria andReasonEqualTo(String)
+ Criteria andReasonNotEqualTo(String)
+ Criteria andReasonGreaterThan(String)
+ Criteria andReasonGreaterThanOrEqualTo(String)
+ Criteria andReasonLessThan(String)
+ Criteria andReasonLessThanOrEqualTo(String)
+ Criteria andReasonLike(String)
+ Criteria andReasonNotLike(String)
+ Criteria andReasonIn(List<String>)
+ Criteria andReasonNotIn(List<String>)
+ Criteria andReasonBetween(String,String)
+ Criteria andReasonNotBetween(String,String)
+ Criteria andAdminIdIsNull()
+ Criteria andAdminIdIsNotNull()
+ Criteria andAdminIdEqualTo(Long)
+ Criteria andAdminIdNotEqualTo(Long)
+ Criteria andAdminIdGreaterThan(Long)
+ Criteria andAdminIdGreaterThanOrEqualTo(Long)
+ Criteria andAdminIdLessThan(Long)
+ Criteria andAdminIdLessThanOrEqualTo(Long)
+ Criteria andAdminIdIn(List<Long>)
+ Criteria andAdminIdNotIn(List<Long>)
+ Criteria andAdminIdBetween(Long,Long)
+ Criteria andAdminIdNotBetween(Long,Long)
+ Criteria andNoteIsNull()
+ Criteria andNoteIsNotNull()
+ Criteria andNoteEqualTo(String)
+ Criteria andNoteNotEqualTo(String)
+ Criteria andNoteGreaterThan(String)
+ Criteria andNoteGreaterThanOrEqualTo(String)
+ Criteria andNoteLessThan(String)
+ Criteria andNoteLessThanOrEqualTo(String)
+ Criteria andNoteLike(String)
+ Criteria andNoteNotLike(String)
+ Criteria andNoteIn(List<String>)
+ Criteria andNoteNotIn(List<String>)
+ Criteria andNoteBetween(String,String)
+ Criteria andNoteNotBetween(String,String)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andBatchIdIsNull()
+ Criteria andBatchIdIsNotNull()
+ Criteria andBatchIdEqualTo(String)
+ Criteria andBatchIdNotEqualTo(String)
+ Criteria andBatchIdGreaterThan(String)
+ Criteria andBatchIdGreaterThanOrEqualTo(String)
+ Criteria andBatchIdLessThan(String)
+ Criteria andBatchIdLessThanOrEqualTo(String)
+ Criteria andBatchIdLike(String)
+ Criteria andBatchIdNotLike(String)
+ Criteria andBatchIdIn(List<String>)
+ Criteria andBatchIdNotIn(List<String>)
+ Criteria andBatchIdBetween(String,String)
+ Criteria andBatchIdNotBetween(String,String)
}
class com.welab.loan.finance.model.LoanReversalExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanReversalExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.test.OverdueQueryServiceTest {
- OverdueQueryService overdueQueryService
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
+ void query2()
+ void selectCollectionUserList()
+ void testQry()
}
class com.welab.loan.finance.dto.OverDuesDto {
- String loanNumber
- String label
- boolean isTag
}
class com.welab.loan.finance.test.LoanDetailTest {
- BaseLoanDetailService baseLoanDetailService
+ void testUpdateByLoanNumber()
}
class com.welab.loan.finance.dto.qry.FPlanDuesQry {
- Long userId
- List<String> loanNumberList
}
class com.welab.loan.finance.dto.cmd.tb.RestockLendCallbackCmd {
- String batchNo
- String transId
}
class com.welab.loan.finance.dto.DuesBackDto {
- String loanNumber
- String mobile
- Byte repayStatus
- Long userId
- Byte lendType
}
abstract class com.welab.loan.finance.job.AbstractLendReversalJob {
+ {static} String LOCK_KEY
- ThreadLocal<Map<Long,Account>> accountCache
- JedisCluster jedisCluster
# LendReversalMapper lendReversalMapper
- FinanceTradingMapper financeTradingMapper
# FundAccountInfoService fundAccountInfoService
- BaseFundAccountService baseFundAccountService
# LendBusiService lendBusiService
# LendReversalService lendReversalService
# IFundMatchService fundMatchService
# BaseLoanDetailExtendService loanDetailExtendService
# BaseBcaTransferService baseBcaTransferService
# BcaTransferService bcaTransferService
- BaseFinanceLendService baseFinanceLendService
+ void execute(ShardingContext)
+ void doProcess(ReversalGroup)
# {abstract}String getOrderPrefix()
# {abstract}ReversalBill buildReversalBill(ReversalGroup)
- List<LendReversal> findLendReversalList(String)
- Collection<ReversalGroup> doGroupByFundId(List<LendReversal>)
# List<FinanceTrading> findFinanceTradingList(List<String>)
# Account findAccountWithCache(Long)
- void updateReversalStatusAndReversalBatchNo(ReversalBill)
# FinanceTrading buildFinanceTrading(Long,String,Long,TradingTypeEnum,String,String)
- void insertFinanceTrading(ReversalBill)
# void insertBcaTransfer(List<String>,List<FinanceTrading>)
- Map<String,FinanceTrading> getBcaTrading(List<String>,List<FinanceTrading>)
# void doBackAmountFromBca(List<String>,List<FinanceTrading>)
# void updateToSuccessIfAmountLessThanZero(FinanceTrading)
# FinanceTrading selectOne(List<FinanceTrading>)
}
class com.welab.loan.finance.job.AbstractLendReversalJob$ReversalGroup {
~ Long fundId
~ List<String> loanNumberList
~ List<Long> lendReversalIdList
+ <<Create>> ReversalGroup(Long)
+ void addLoanNumber(String)
+ void addLendReversalId(Long)
}
class com.welab.loan.finance.job.AbstractLendReversalJob$ReversalBill {
~ Long fundId
~ String loanNumber
~ Byte gatewayType
~ FinanceTrading firstTrading
~ List<Long> lendReversalIdList
~ List<FinanceTrading> tradingList
}
class com.welab.loan.finance.job.AbstractLendReversalJob$Account {
~ Byte gatewayType
~ String fundAccountNo
~ String loansAccountNo
~ String awadAccountNo
~ String vatAccountNo
}
class com.welab.loan.finance.controller.FundController {
- FundService fundService
+ Response findFundInfoByPage(FundAccountRequestDTO)
+ Response fundConfig()
+ Response findFundInfoExtByPage(FundAccountRequestDTO)
+ Response update(FundAccountInfoDTO)
+ Response downloadPendingLendLoans(Long,Long)
}
class com.welab.loan.finance.test.credit.CreditMaxinstallTest {
- CreditMaxinstallCalculationManager creditMaxinstallCalculationManager
+ void testInstallment()
}
class com.welab.loan.finance.app.command.tb.repayment.TravelokaPaylaterRepaymentService {
- BaseRepaymentTrack repaymentTrack
- BaseLoanDetailService loanDetailService
- BaseDuesService duesService
- VatRepaymentCostProvider vatRepaymentCostProvider
- LoanCouponServiceImpl loanCouponService
- IAccountService accountService
- IUserRepayAmount iUserRepayAmount
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
+ void doRepayment(List<TbRepaymentDTO>)
- void validateRepayAmount(TbRepaymentDTO)
- Long getrealRepayAmount(TbRepaymentDTO)
- void doRealRepayment(TbRepaymentDTO)
- void insertLoanCoupon(TbRepaymentDTO,LoanDetail,List<Dues>)
- void insertOrUpdateLateFeeDues(TbRepaymentDTO,BigDecimal,List<Dues>)
- void updateDues(Dues,BigDecimal,Long)
- void insertDues(DueTypeEnum,BigDecimal,Long,Dues)
- Dues getDues(List<Dues>,DueTypeEnum)
- LoanDetail validateBiz(TbRepaymentDTO)
}
class com.welab.loan.finance.app.manager.LoanOverdueInfoManager {
- LoanOverdueInfoExtMapper loanOverdueInfoExtMapper
- DuesCalculationMapper duesCalculationMapper
- CalculatorOverdueJob calculatorOverdueJob
- IVirtualAccount virtualAccount
- BaseLoanDetailService baseLoanDetailService
+ int currentMaxOverdueDay(String)
+ void reCalOverDue(List<String>,Long)
}
class com.welab.loan.finance.app.command.plan.EPlanCalculationCmdExe {
- DuesService duesService
- BaseLoanDetailService baseLoanDetailService
- EPlanTryCostCmdExe ePlanTryCostCmdExe
- BaseLoanApplyPlansService baseLoanApplyPlansService
- BaseLoanPlansRelationService baseLoanPlansRelationService
- EPlanCheckCmdExe ePlanCheckCmdExe
+ Response<CalEPlanAmountDTO> tryEPlanForCollection(TryEPlanDTO)
+ Response<EContractInfoVO> tryEPlanForContract(String)
- CalEPlanAmountDTO calculateRepaymentData(TryEPlanDTO)
+ Response<RepaymentVO> tryRepayInfo(RepayInfoDto)
}
class com.welab.loan.finance.jackson.CopyTest {
+ void copy()
}
interface com.welab.loan.finance.service.RepaymentService {
~ PageBean queryRepaymentPage(RepaymentTracBackDto)
~ Response sendRepayment(SendRepaymentDTO)
~ Response saveMultipleRepayment(List<MultipleRepaymenDTO>)
~ List<CouponDues> findDuesByCoupon(String)
~ LoanDataDTO findDuesByCredit(Long,Boolean)
~ LoanDataDTO findDuesByCredit(Long,Integer,Boolean)
~ LoanTransDetailDTO findTransDetailByCredit(String)
~ Response saveMultipleRepaymentV2(MulRepaymentDTO)
~ String findBankConfig(Long)
~ String findBankConfig()
~ Response transferXendit(PaymentDto)
~ Response checkRepayAmount(String,Long)
~ Integer verifySignUp(String)
~ Response<List<BankConfigDTO>> listAllBankChannelConfig()
~ Response<List<BankConfigDTO>> listAllBankChannelConfig(Long)
~ Response updateBankConfig(List<BankConfigDTO>)
~ Response updateLateFee(Long)
~ Response getRepayConfig(RepayConfigVO)
}
class com.welab.loan.finance.test.RepaymentTest {
~ DuesService duesService
- TrackService trackService
- RechargeBusiService rechargeBusiService
+ void confirmRepayment()
+ void testF()
+ void multiRepayment()
}
interface com.welab.loan.finance.mapper.LendReversalMapper {
~ long countByExample(LendReversalExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LendReversal)
~ int batchInsert(List<LendReversal>)
~ int insertSelective(LendReversal)
~ List<LendReversal> selectByExample(LendReversalExample)
~ LendReversal selectByPrimaryKey(Long)
~ int updateByExampleSelective(LendReversal,LendReversalExample)
~ int updateByExample(LendReversal,LendReversalExample)
~ int updateByPrimaryKeySelective(LendReversal)
~ int updateByPrimaryKey(LendReversal)
~ int updateReversalStatusAndReversalBatchNo(Byte,String,List<Long>)
~ List<LendReversalVo> getExportDataByTime(Date,Date)
}
class com.welab.loan.finance.model.TbLoan {
- Long id
- Date createdAt
- Date updatedAt
- Boolean deleted
- String partner
- String orderNo
- String loanNumber
- String batchNo
- String lendBatchNo
- Long userId
- String secondProdCode
- String contractNo
- Long amount
- String term
- String billingNo
- Date businessTime
- String docId
- String resId
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ String getPartner()
+ void setPartner(String)
+ String getOrderNo()
+ void setOrderNo(String)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getBatchNo()
+ void setBatchNo(String)
+ String getLendBatchNo()
+ void setLendBatchNo(String)
+ Long getUserId()
+ void setUserId(Long)
+ String getSecondProdCode()
+ void setSecondProdCode(String)
+ String getContractNo()
+ void setContractNo(String)
+ Long getAmount()
+ void setAmount(Long)
+ String getTerm()
+ void setTerm(String)
+ String getBillingNo()
+ void setBillingNo(String)
+ Date getBusinessTime()
+ void setBusinessTime(Date)
+ String getDocId()
+ void setDocId(String)
+ String getResId()
+ void setResId(String)
}
class com.welab.loan.finance.response.CalculatorAmount {
- String type
- String tenor
- Integer enable
- Integer dueIndex
- Long adminFee
- Long orgAdminFee
- Long upfrontFee
- Long orgUpfrontFee
- Long interestFee
- Long orgInterestFee
- Long receivedAmount
- Long payable
- Long orgPayable
- Long repayAmount
- Long disLendAmount
- List<Date> dueDates
- Long premiumAmount
+ void discountCalculate()
}
class com.welab.loan.finance.dto.cmd.NsDueListQry {
}
class com.welab.loan.finance.model.ext.CreditActivityAbTestExt {
- String userTag
- String secondProductCode
- String tenorStr
- String accountType
- Integer groupType
- String matrix
- Integer statusCount
- Integer userCount
}
abstract class com.welab.loan.finance.app.manager.credit.product.AbstractCreditProductListManager {
# CreditLoanAmountConfigServiceImpl creditLoanAmountConfigServiceImpl
# CreditConditionService creditConditionService
# BaseCreditUserLoanService baseCreditUserLoanService
# CreditMaxinstallCalculationManager creditMaxinstallCalculationManager
+ {static} AbstractCreditProductListManager getLoanService(CreditProductServiceEnum)
+ List<TagProductVO> matchProduct(CreditUserAccountExt)
~ {abstract}List<TagProductVO> matchProductForCreditType(CreditUserAccountExt,Map<String,TagProductVO>)
# void sort(List<TagProductVO>)
}
enum com.welab.loan.finance.app.manager.credit.product.CreditProductServiceEnum {
+  CL
+  PL
- String beanName
+ {static} CreditProductServiceEnum getSevice(String)
}
class com.welab.loan.finance.model.ext.VatInitLoanDues {
- Long userId
}
class com.welab.loan.finance.vo.TbLoanVO {
- String mobile
- Date createdAt
- String partner
- String orderNo
- String loanNumber
- Long userId
- String docId
- Date businessTime
- String resId
- String gadaMobile
- Long orgId
- Long amount
- BigDecimal lateRate
- Long lendAmount
- String tenorMax
- String bankCode
- String bankName
- Date lendAt
- String secondProdCode
- Long fundId
- String fundName
- Date uploadDate
- Long dpd
- Long outStandingAmount
- Date actualLendAt
- Byte lendStatus
- String lendStatusStr
}
interface com.welab.loan.finance.mapper.UvfFileRepaymentDetailMapper {
~ int countByExample(UvfFileRepaymentDetailExample)
~ int deleteByExample(UvfFileRepaymentDetailExample)
~ int deleteByPrimaryKey(Long)
~ int insert(UvfFileRepaymentDetail)
~ int insertSelective(UvfFileRepaymentDetail)
~ List<UvfFileRepaymentDetail> selectByExample(UvfFileRepaymentDetailExample)
~ UvfFileRepaymentDetail selectByPrimaryKey(Long)
~ int updateByExampleSelective(UvfFileRepaymentDetail,UvfFileRepaymentDetailExample)
~ int updateByExample(UvfFileRepaymentDetail,UvfFileRepaymentDetailExample)
~ int updateByPrimaryKeySelective(UvfFileRepaymentDetail)
~ int updateByPrimaryKey(UvfFileRepaymentDetail)
}
class com.welab.loan.finance.model.Dues {
- Long id
- String loanId
- Long orgId
- Integer dueIndex
- Date dueDate
- String dueType
- Long amount
- Integer repayIndex
- Long settledAmount
- Long remainingAmount
- String capitalCode
- String isAdvanced
- String isKantouFee
- Long discountLateFee
- Long couponFee
- Date createdAt
- Date updatedAt
- Boolean isClose
- Byte planType
- Long lateFeeAmount
- Long overAmount
- Boolean isLock
- Boolean isRecalculate
- String creditTag
+ Long getId()
+ void setId(Long)
+ String getLoanId()
+ void setLoanId(String)
+ Long getOrgId()
+ void setOrgId(Long)
+ Integer getDueIndex()
+ void setDueIndex(Integer)
+ Date getDueDate()
+ void setDueDate(Date)
+ String getDueType()
+ void setDueType(String)
+ Long getAmount()
+ void setAmount(Long)
+ Integer getRepayIndex()
+ void setRepayIndex(Integer)
+ Long getSettledAmount()
+ void setSettledAmount(Long)
+ Long getRemainingAmount()
+ void setRemainingAmount(Long)
+ String getCapitalCode()
+ void setCapitalCode(String)
+ String getIsAdvanced()
+ void setIsAdvanced(String)
+ String getIsKantouFee()
+ void setIsKantouFee(String)
+ Long getDiscountLateFee()
+ void setDiscountLateFee(Long)
+ Long getCouponFee()
+ void setCouponFee(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getIsClose()
+ void setIsClose(Boolean)
+ Byte getPlanType()
+ void setPlanType(Byte)
+ Long getLateFeeAmount()
+ void setLateFeeAmount(Long)
+ Long getOverAmount()
+ void setOverAmount(Long)
+ Boolean getIsLock()
+ void setIsLock(Boolean)
+ Boolean getIsRecalculate()
+ void setIsRecalculate(Boolean)
+ String getCreditTag()
+ void setCreditTag(String)
}
interface com.welab.loan.finance.mapper.OverdueMapper {
~ int countByExample(OverdueExample)
~ int deleteByExample(OverdueExample)
~ int deleteByPrimaryKey(Long)
~ int insert(Overdue)
~ int insertSelective(Overdue)
~ List<Overdue> selectByExample(OverdueExample)
~ Overdue selectByPrimaryKey(Long)
~ int updateByExampleSelective(Overdue,OverdueExample)
~ int updateByExample(Overdue,OverdueExample)
~ int updateByPrimaryKeySelective(Overdue)
~ int updateByPrimaryKey(Overdue)
}
interface com.welab.loan.finance.mapper.LoanUvfTradeMapper {
~ int countByExample(LoanUvfTradeExample)
~ int deleteByExample(LoanUvfTradeExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanUvfTrade)
~ int insertSelective(LoanUvfTrade)
~ List<LoanUvfTrade> selectByExample(LoanUvfTradeExample)
~ LoanUvfTrade selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanUvfTrade,LoanUvfTradeExample)
~ int updateByExample(LoanUvfTrade,LoanUvfTradeExample)
~ int updateByPrimaryKeySelective(LoanUvfTrade)
~ int updateByPrimaryKey(LoanUvfTrade)
}
class com.welab.loan.finance.core.overdue.CalLateFeeConfig {
- {static} Map<String,ICalLateFee> lateFeeHashMap
- List<ICalLateFee> lateFeeServiceList
+ void init()
+ {static} ICalLateFee findCalLateFeeByProdCode(String)
+ {static} ICalLateFee findCalLateFeeByGroup(Boolean)
}
class com.welab.loan.finance.app.base.va_sync.BaseVACacheRepaymentDataService {
- String TABLENAME
- MongoTemplateExt mongoTemplateExt
+ void saveVaCache(JSONObject)
+ JSONObject findBySyncVaId(Long)
+ void updateStatus(Long)
+ void cleanNoSuccess(Long)
+ void cleanInvalidData(List<SyncVaCacheInfo>)
}
class com.welab.loan.finance.dto.cmd.CheckCPlanCustomAmountCmd {
- Long amount
- List<String> loanNumbers
- Long userId
}
class com.welab.loan.finance.app.base.BaseLendReversalService {
- LendReversalMapper lendReversalMapper
+ List<LendReversal> listAll()
+ LendReversal getByLoanNumber(String)
+ List<LendReversalVo> listByTransDate(Date,Date)
}
class com.welab.loan.finance.service.core.BaseCreditUserAccountService {
- CreditUserAccountInfoExtMapper creditUserAccountInfoExtMapper
- CreditUserAccountExtMapper creditUserAccountExtMapper
- CreditUserAccountStatusLogMapper creditUserAccountStatusLogMapper
+ CreditUserAccountExt findOneForUpdate(Long,String,String)
+ List<CreditUserAccountExt> findList(Long,String)
+ List<CreditUserAccountExt> findList(CreditUserAccountExt)
+ CreditUserAccountExt findOne(Long,String,String)
+ CreditUserAccountExt findOne(Long,Boolean,String,String)
+ CreditUserAccountExt findOneByAccountId(Long)
+ CreditUserAccountExt findOne(Long)
+ CreditUserAccountExt findOne(Long,Boolean)
+ boolean save(CreditUserAccountExt)
+ List<CreditUserAccountExt> findList(List<Long>)
+ PageInfo<CreditUserAccount> findPage(CreditUserAccountReq)
+ List<CreditUserAccountExt> findListForUpdate(Long)
+ boolean updateMoney(CreditUserAccountExt)
+ Boolean freezeUser(CreditUserAccountStatusLog)
+ void updateInfoByExampleSelective(CreditUserAccountInfo)
+ List<CreditUserAccountStatusLog> findFreezeLogList(CreditUserAccountStatusLogDTO)
+ CreditUserAccountInfo getAccountInfo(Long)
+ void saveUserAccountInfo(CreditUserAccountInfo)
+ boolean checkUserAccountStatus(Long)
}
class com.welab.loan.finance.response.AstraPayInfoVo {
- String phoneNumber
- String userName
- List<AstraPayInfoDueVo> dueVoList
- String transaction
}
class com.welab.loan.finance.test.LoanInfoTest {
- LoanInfoConsumer loanInfoConsumer
+ void handle()
}
class com.welab.loan.finance.utils.ErrorUtils {
- {static} Logger LOG
+ {static} void addError(String,ErrorTypeEnum,String,String)
+ {static} String buildExceptionInfo(Throwable)
}
class com.welab.loan.finance.job.LoanRefundJob {
- int PAGESIZE
- FinanceRepaymentTrackExtMapper financeRepaymentTrackExtMapper
- BaseFinanceRefundService baseFinanceRefundService
- BaseFinanceRefundDetailService baseFinanceRefundDetailService
+ void execute(ShardingContext)
+ void handle(String)
+ Long done_T_bca(String)
+ Long done_D_plus_3(String)
- Long done_D_plus_1(String)
- Long done_T_plus_1(String)
- Long done_T_plus_2(String)
- Long done_T_plus_4(String)
- Long doneBank(String,Map)
+ {static} void main(String[])
}
class com.welab.loan.finance.app.manager.credit.FillingCreditManager {
- BaseCreditUserAccountService baseCreditUserAccountService
- SigapDubboService sigapDubboService
- CreditUserTagHelper creditUserTagHelper
+ Map<String,Long> fillingCredit(UpdateCreditUserAccountVO)
}
enum com.welab.loan.finance.enums.CreditUserLoanStatusEnum {
+  APPLY
+  USE
+  CANCEL
+  CLOSE
+  TIME_OUT
- Integer status
- String name
- <<Create>> CreditUserLoanStatusEnum(int,String)
+ Integer getStatus()
}
class com.welab.loan.finance.job.LoanOffLineLendJob {
- BaseLoanService baseLoanService
- ApplicationService applicationService
- FifStoreService fifStoreService
- Map<Long,FifBranchDTO> cacheStore
- Integer index
+ void execute(ShardingContext)
+ UserProfileVO getUserInfo(Long)
+ List quaryList(String)
+ LoanSign transform(Object)
+ LinkedHashMap getExcelHead()
+ String getSubject(String)
+ void setEmailUser()
}
interface com.welab.loan.finance.mapper.FinanceLendMapper {
~ long countByExample(FinanceLendExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FinanceLend)
~ int insertSelective(FinanceLend)
~ List<FinanceLend> selectByExample(FinanceLendExample)
~ FinanceLend selectByPrimaryKey(Long)
~ int updateByExampleSelective(FinanceLend,FinanceLendExample)
~ int updateByExample(FinanceLend,FinanceLendExample)
~ int updateByPrimaryKeySelective(FinanceLend)
~ int updateByPrimaryKey(FinanceLend)
}
enum com.welab.loan.finance.enums.WaitStatusEnum {
+  FUND_SIGN
+  SIGN_REJECT
+  PAYLATER_WAIT_LOAN
- Integer value
- String name
- <<Create>> WaitStatusEnum(int,String)
+ Integer getValue()
+ String getName()
}
class com.welab.loan.finance.test.credit.FreezeTest {
+ {static} void main(String[])
}
interface com.welab.loan.finance.mapper.FinanceUserBankcardLogMapper {
~ long countByExample(FinanceUserBankcardLogExample)
~ int deleteByExample(FinanceUserBankcardLogExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FinanceUserBankcardLog)
~ int insertSelective(FinanceUserBankcardLog)
~ List<FinanceUserBankcardLog> selectByExample(FinanceUserBankcardLogExample)
~ FinanceUserBankcardLog selectByPrimaryKey(Long)
~ int updateByExampleSelective(FinanceUserBankcardLog,FinanceUserBankcardLogExample)
~ int updateByExample(FinanceUserBankcardLog,FinanceUserBankcardLogExample)
~ int updateByPrimaryKeySelective(FinanceUserBankcardLog)
~ int updateByPrimaryKey(FinanceUserBankcardLog)
}
class com.welab.loan.finance.app.manager.TbUserManager {
- BaseTbUserService baseTbUserService
+ MongoManager mongoManager
- TbUserService tbUserService
+ long findParterUserIdBy(String)
}
class com.welab.loan.finance.dto.cmd.tb.TravelokaLoanQry {
- Long adminId
- String partner
- Long orgId
- List<Long> orgIds
- String orderNo
- String loanNumber
- String mobile
- Date disbursementTimeStart
- Date disbursementTimeEnd
- Date uploadDateStart
- Date uploadDateEnd
- boolean isCountQuery
- List<Integer> lendStatusList
}
class com.welab.loan.finance.dto.qry.TbCreditUserAccountQry {
- Long userId
- String partner
- String partnerUserNo
}
class com.welab.loan.finance.app.command.repayment.DuesAndRepaySaveCmdExe {
- BaseDuesService baseDuesService
- VatRepaymentCostProvider vatRepaymentCostProvider
- BaseLoanDetailService baseLoanDetailService
- BaseRepaymentTrack baseRepaymentTrackService
- BaseDuesAndRepayImportUpdateService importUpdateService
- BaseDuesAndRepayImportUpdateService updateService
- LoanCouponServiceImpl loanCouponService
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
- CreditUserAccountService creditUserAccountService
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- BaseRabbitTemplate baseRabbitTemplate
- LoansFacade loansFacade
- BaseLoanDetailExtendService loanDetailExtendService
- ApolloUtils apolloUtils
+ Response doSave(Long,DuesAndRepaymentOperateVO)
- void doCheck(DuesAndRepaymentVO)
- DuesAndRepaymentVO doAnalyticalData(DuesAndRepaymentOperateVO)
- void doSetAmount(UploadDuesExcelVO,Dues)
- void doSyncVirtualAccount(LoanDetail)
- void doRestoreCredit(LoanDetail)
- void doSyncFinanceDues(LoanDetail)
- boolean doUpdateLoanStatus(LoanDetail,DuesAndRepaymentVO)
- void doSaveLoanOverDueInfo(DuesAndRepaymentVO)
- void doSaveRecordExt(DuesAndRepaymentOperateVO,Long)
- Long doSaveRecord(Long,DuesAndRepaymentOperateVO)
- void doSaveDuesList(String,List<UploadDuesExcelVO>)
- void addProvisionFeeDues(List<Dues>,UploadDuesExcelVO,Map<String,Dues>)
- void addFundInterestDues(List<Dues>,UploadDuesExcelVO,Map<String,Dues>)
- void addPrincipalDues(List<Dues>,UploadDuesExcelVO,Map<String,Dues>)
- void addCarringFeeDues(List<Dues>,UploadDuesExcelVO,Map<String,Dues>)
- void addServiceFeeDues(List<Dues>,UploadDuesExcelVO,Map<String,Dues>)
- void addLateFeeDues(List<Dues>,UploadDuesExcelVO,Map<String,Dues>,Date)
- void addAdminDues(List<Dues>,UploadDuesExcelVO,Map<String,Dues>)
- List<FinanceRepaymentTrack> doSaveRepaymentList(List<UploadRepaymentExcelVO>)
- Long calVatFee(FinanceRepaymentTrack,FinanceRepaymentTrack)
- void doSendRepayment(FinanceRepaymentTrack)
- Byte matchPlan(String,String)
- long calVatFee(Long,DueTypeEnum)
- {static} Dues buildDues(Long,Long,Long,DueTypeEnum)
- Dues newLateFeeDues(UploadDuesExcelVO,Long,Long,Long,Long)
- Dues newLateFeeVatDues(Dues,Long,Long,Long)
- void saveCoupon(UploadRepaymentExcelVO)
}
class com.welab.loan.finance.app.service.tb.ToBAgreementService {
- BaseToBLoanAgreementService baseToBLoanAgreementService
- AgreementCmdExe agreementCmdExe
- MessageSmsService messageSmsService
- BaseTbLoanService baseTbLoanService
- TbSignUpKeyManager tbSignUpKeyManager
- JedisCluster jedisCluster
+ Response<PageInfo<ToBAgreementVO>> list(PageToBAgreementParamReq)
- List<ToBAgreementVO> buildToBAgreementVO(List<ToBAgreementDoc>)
+ Response downLoad(Long)
+ Response downLoadByLoan(String)
+ boolean exist(String)
+ Integer verifySignUp(String)
+ Response tbSigning(TbAgreementSignReq)
+ Response<String> ahassAgreementView(String)
}
class com.welab.loan.finance.app.service.product.ProductRateConfigService {
- JedisCluster jedisCluster
- ProductConfigServiceFacade productConfigServiceFacade
- CreditTagConfigServiceFacade creditTagConfigServiceFacade
+ PageInfo<ProductRateConfigExtVO> getProductRateConfig(ProductRateConfigDtoExt)
}
class com.welab.loan.finance.dto.cmd.TbRepaymentQry {
- Long adminId
- {static} long serialVersionUID
- Long orgId
- String orderNumber
- String loanNumber
- Long fundId
- Date repaymentStartTime
- Date repaymentEndTime
- String partner
- Long userId
- String invoiceNo
- String billingNo
- Date startDueDate
- Date endDueDate
- List<String> loanNumberList
}
interface com.welab.loan.finance.mapper.ext.BcaTransferExtMapper {
~ void batchInsert(List<BcaTransfer>)
~ List<BcaTransferExt> selectLendLastTransfer(Map)
~ List<BcaTransferExt> selectTradingLastTransfer(Map)
~ void resetCreatedAtTime(Date)
}
class com.welab.loan.finance.service.core.BaseFinanceError {
- FinanceErrorMapper financeErrorMapper
+ int delete(String)
+ int insert(String,ErrorTypeEnum,String,String)
+ int updateErrorById(Long,String,String)
+ FinanceError findErrorById(Long)
+ int insertFinanceError(FinanceError)
+ PageInfo<FinanceError> findFinanceErrorByPage(FinanceErrorBackDto)
}
class com.welab.loan.finance.core.config.MultiServiceConfiguration {
+ void doAnnotation()
+ {static} T getService(Long,ServiceTypeEnum)
+ {static} T getService(String,ServiceTypeEnum)
}
class com.welab.loan.finance.dto.BankConfigDTO {
- Integer id
- String keyn
- String value
- Boolean isEnable
}
class com.welab.loan.finance.service.business.repayment.TransformDuesService {
- <<Create>> TransformDuesService()
+ {static} List<T> findSortTransformDuesList(List<T>,Comparator<? super T>)
+ {static} List<Dues> findRepaymentDues(List<Dues>)
+ {static} List<Dues> findRepaymentDues(List<Dues>,Date)
+ {static} List<T> findRepaymentDues(List<T>,String)
+ {static} List<Dues> findRepaymentDuesByDueDate(List<Dues>)
+ {static} List<Dues> findRepaymentDuesByDueDate(List<Dues>,Date)
+ {static} List<DiscountDuesDTO> findRepaymentDuesDTO(List<DiscountDuesDTO>)
- {static} List<Dues> findDefaultRepaymentDuesByDueDate(List<Dues>,Date)
- {static} List<DiscountDuesDTO> findRepaymentDuesDTO(List<DiscountDuesDTO>,Date)
- {static} List<Dues> findRepaymentDuesByDate(List<Dues>,Date)
+ {static} Long findRepaymentAmount(List<Dues>,boolean)
+ {static} Long calLateFee(List<Dues>)
+ {static} List<TransItemDTO> findRepaymentAmountByLoan(List<Dues>,Boolean,boolean)
- {static} List<TransItemDTO> findRepaymentAmountByDueIndex(List<Dues>,Boolean,boolean)
+ {static} List<TransItemDTO> findRepaymentAmountByDueIndex(List<Dues>)
+ {static} Map<Integer,TransItemDTO> findRepaymentAmountMapByDueIndex(List<Dues>)
+ {static} List<LoanAmountDTO> findRepaymentAmountByList(List<Dues>,boolean)
+ {static} List<LoanAmountDTO> calLateFeeByList(List<Dues>)
+ {static} List<Dues> findFilterDuesListByExclude(List<Dues>,List<String>,Boolean)
+ {static} List<Dues> findFilterDuesListByInclude(List<Dues>,List<String>,Boolean)
- {static} List<Dues> findFilterDuesListByDefault(List<Dues>,List<String>,List<String>,Boolean)
- {static} boolean findFilterDuesList(Dues,List<String>,List<String>,Date,Boolean)
+ {static} List<CouponDues> findTransformMergeInterest(List<CouponDues>)
+ {static} List<DiscountDuesDTO> findTransformDiscountDues(List<Dues>)
+ {static} List<Dues> findTransformDues(List<DiscountDuesDTO>)
+ {static} DuesMergeDTO findTransformMergeDiscountDuesByDues(List<DiscountDuesDTO>)
+ {static} Map<Integer,DuesMergeDTO> findTransformMergeDuesByDueIndex(List<Dues>)
+ {static} DuesMergeDTO findTransformMergeDuesByDues(List<Dues>)
+ {static} DuesMergeDTO findTransformMergeDuesByDuesBool(List<Dues>,boolean)
+ {static} DuesMergeDTO findTransformMergeDuesByDue(List<Due>)
+ {static} List<LoanCouponDetail> findMergeCouponDetailByDues(List<DiscountDuesDTO>,String)
+ {static} DuesMergeDTO transformMergeDuesByDeduct(List<DeductItemDTO>)
+ {static} DuesMergeDTO transformMergeDuesByDeduct(List<DeductItemDTO>,boolean)
+ {static} DuesMergeDTO transformMergeDuesByPlan(List<LoanPlansLog>)
+ {static} DuesMergeDTO transformMergeDuesByCoupon(List<LoanCouponDetail>)
+ {static} boolean matchNowRepaymentByDues(Dues,Integer,Date,Date)
- {static} boolean matchNowRepaymentByDis(DiscountDuesDTO,Integer,Date,Date)
+ {static} boolean matchOverLate(Date,Date)
+ {static} boolean matchOverLateByNow(Date,Date)
+ {static} int findOverDay(Date)
+ {static} int findOverDay(Date,Date)
- {static} void findSetMergeDuesByDeduct(String,Long,DuesMergeDTO)
- {static} boolean findSetMergeCouponByDiscount(DiscountDuesDTO,LoanCouponDetail)
}
abstract class com.welab.loan.finance.service.business.lend.AbstractLendService {
- PayService payService
- FinanceLendMapper financeLendMapper
- ApplicationService applicationService
# IFundMatchService fundMatchService
- BaseFinanceTrading baseFinanceTrading
- LoanTransactionMapper loanTransactionMapper
- BankConfigService bankConfigService
- FinanceTradingExtMapper financeTradingExtMapper
- BaseRabbitTemplate baseRabbitTemplate
# BaseFinanceLendService baseFinanceLendService
- JedisCluster jedisCluster
- LendManager lendManager
- CashFlowStatusService cashFlowStatusService
- BaseLoanDetailService baseLoanDetailService
# void beforeLend(String,TypeEnum,LendModeEnum)
+ Response<Map> doSendLend(String,TypeEnum,LendModeEnum)
+ Response<Map> payLend(FinanceLend)
+ Response<Map> sendLend(String,TypeEnum,LendModeEnum)
# void beforeTransaction(String,TradingTypeEnum,Object,String)
# {abstract}Response verifyData(String,TypeEnum,LendModeEnum)
+ FinanceLend buildLend(String,TypeEnum,LendModeEnum)
# {abstract}FinanceLend buildLendRecord(String,TypeEnum,LendModeEnum,boolean)
# FinanceLend findFinanceLend(String,LendModeEnum)
# PayingDto buildPayingDto(FinanceLend)
+ PayingVO payLend(PayingDto)
+ PayingVO getWithdrawalCode(String,Long,Long)
# long countLend(String,LendModeEnum)
# FinanceLend findLend(String,LendModeEnum)
+ Long getRechargeFee(Long,String)
# {abstract}Long getLoanFundId(String)
+ boolean buildTransfer(String,TradingTypeEnum)
# boolean beforeSendTransfer(String,TradingTypeEnum)
# boolean beforeRefundTransfer(String,TradingTypeEnum)
# boolean beforeDelayRefundTransfer(String,TradingTypeEnum)
# boolean intercept(String,LoanDelayTypeEnum)
# boolean briOnlineIntercept(String,LoanDelayTypeEnum)
+ void sendTransfer(String,TradingTypeEnum)
+ boolean transfer(TransferDto)
# void extendTrading(FinanceTrading)
# void extendTransfer(TransferDto,TransferAmountDto)
# boolean buildTransferData(String,FinanceTrading,TradingTypeEnum)
# TransferDto buildTransferDto(FinanceTrading,TradingTypeEnum)
+ void repairTransfer(String,TradingTypeEnum)
+ {abstract}Boolean repairLoan(String,LendModeEnum)
+ void repairLend(String,LendModeEnum)
+ List<FinanceTradingExt> findBatchTransfer(Date,Date)
+ void sendBatchTransfer(Date,Date,TradingTypeEnum)
# long countBatchTransfer(Date,TradingTypeEnum)
- FinanceTrading buildBatchTransfer(Date,Date,TradingTypeEnum)
+ boolean sendAlfamartTransfer(String,List<FinanceTradingExt>)
+ void sendHandlingTransfer(Long,String)
+ int buildTransaction(String,TradingTypeEnum,Object,String)
+ void sendTransfer(TransferCmd)
}
interface com.welab.loan.finance.mapper.LoanTransactionMapper {
~ long countByExample(LoanTransactionExample)
~ int deleteByExample(LoanTransactionExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanTransaction)
~ int insertSelective(LoanTransaction)
~ List<LoanTransaction> selectByExample(LoanTransactionExample)
~ LoanTransaction selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanTransaction,LoanTransactionExample)
~ int updateByExample(LoanTransaction,LoanTransactionExample)
~ int updateByPrimaryKeySelective(LoanTransaction)
~ int updateByPrimaryKey(LoanTransaction)
}
class com.welab.loan.finance.facade.marketing.AhassRepaymentServiceFacade {
- AhassRepaymentService ahassRepaymentService
+ List<AhassRepaymentVo> getAhassRepaymentChannelStatus()
+ void updateAhassRepaymentChannelStatus(List<AhassRepaymentDto>)
}
class com.welab.loan.finance.core.dto.transform.LoanAmountDTO {
- String loanNumber
- Long amount
}
class com.welab.loan.finance.rabbitmq.syn.SynCouponConsumer {
- ILendRepayDuesCoupon repayDuesCoupon
+ void onMessage(Message)
+ void execute(List<SynCouponDTO>)
+ void repaymentCoupon(List<SynCouponDTO>)
+ void lendCoupon(List<SynCouponDTO>)
}
class com.welab.loan.finance.model.Overdue {
- Long id
- String loanNumber
- Integer dueIndex
- Date dueDate
- Date overDate
- Long overdueAmount
- Date createAt
- Date updateAt
- Long overPrincipal
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Integer getDueIndex()
+ void setDueIndex(Integer)
+ Date getDueDate()
+ void setDueDate(Date)
+ Date getOverDate()
+ void setOverDate(Date)
+ Long getOverdueAmount()
+ void setOverdueAmount(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ Long getOverPrincipal()
+ void setOverPrincipal(Long)
}
class com.welab.loan.finance.job.FlexifitResignJob {
- FlexifitWhiteDubboService flexifitWhiteDubboService
- BaseRabbitTemplate rabbitTemplate
+ void execute(ShardingContext)
}
class com.welab.loan.finance.dto.tb.TbRepaymentDTO {
- {static} long serialVersionUID
- String transId
- String loanNumber
- Integer dueIndex
- Date actualRepaymentAt
- Long principal
- Long serviceFee
- Long lateFee
- Long disPrincipal
- Long disServiceFee
- Long disLateFee
- Long userId
}
class com.welab.loan.finance.facade.marketing.BackstageConfigServiceFacade {
- BackstageConfigService backstageConfigService
+ String getConfigSwitch()
+ boolean switchIsOpen(PlansTypeEnum)
- boolean getSwitchConfig(String)
}
class com.welab.loan.finance.utils.ConfigUtils {
- {static} Logger LOG
- <<Create>> ConfigUtils()
+ {static} String getConfigFile(String)
+ {static} Object getRepayConfig(String,boolean,boolean)
+ {static} List<Map<String,String>> getRepayBankCode(String)
+ {static} List<BankVO> findBankGroup(String)
+ {static} List<Map<String,String>> getRepayBankCode(String,String)
+ {static} List<BankVO> findBankGroup(String,String)
+ {static} Object getRepayConfig(String,String,boolean,boolean)
+ {static} JSONArray getRepayConfig(String,String,boolean,String,String,ActivityCodeResponseDTO)
- {static} boolean isSupport(ActivityCodeResponseDTO,String)
+ {static} boolean compareVersion(String,String)
}
class com.welab.loan.finance.core.dto.transform.LoanDataDTO {
- List<LoanInfoDTO> list
- Long totalAmount
- Boolean isAllowApplyCPlan
- Byte planType
- Long planExpiredTime
}
class com.welab.loan.finance.job.PermataTransferJob {
- BaseFinanceTrading baseFinanceTrading
# IFundMatchService fundMatchService
- LendBusiService lendBusiService
- PayService payService
- {static} String BNI_AWDA_ACCOUNT
- {static} String PERMATA_AWDA_ACCOUNT
+ void execute(ShardingContext)
- FinanceTrading buildTrading(long,Date)
- void asyncTransfer(FinanceTrading,Byte)
- TransferDto buildTransferDto(FinanceTrading,Byte)
}
class com.welab.loan.finance.app.command.repayment.TravelokaPaylaterVaSyncCmdExe {
- BaseFinanceDuesService baseFinanceDuesService
- JedisCluster jedisCluster
- AccountService accountService
+ void doSync()
+ void syncVa()
}
interface com.welab.loan.finance.mapper.ext.LoanDetailExtendExtMapper {
~ Long sumFundInterestByUserId(Long)
~ LoanDetailExt findUseCreditVOByLoanNum(String)
~ int updateRepayDueIndexByLoanNumber(String,String)
~ int updateCashFlowStatusByLoanNumber(Byte,String)
}
class com.welab.loan.finance.vo.CollectionUserListVO {
- {static} long serialVersionUID
- Long id
- Long userId
- String mobile
- Long repaymentAmount
- Long overdueAmount
- Long overdueFeeAmount
- Long overduePrincipalAmount
- Long overdueAdminAmount
- Long overdueInterestAmount
- Long overdueCarryingAmount
- Long overdueProvisionAmount
- Long unRepaymentAmount
- Long unRepayPrincipalAmount
- Long repayDueAmount
- Integer overdueDay
- String productCode
- Date fristDueDate
- Long unRepanymentUnOverdueAmount
- Long sumAmount
- Long originalRepanymentAmount
- Long dpd
}
class com.welab.loan.finance.dto.LoanDataDTO {
- List<LoanInfoDTO> list
- Long totalAmount
- Byte planType
- Long planExpiredTime
- String customRepayStatus
- Boolean isAllowApplyCPlan
- Boolean isContainCollectionCPlan
- Byte applyType
- Boolean isAllowApplyEPlan
- Integer planStatus
}
class com.welab.loan.finance.service.core.BaseFinanceLendService {
- FinanceLendMapper financeLendMapper
- FinanceLendExtMapper financeLendExtMapper
- FifStoreService fifStoreService
- FundService fundService
- BaseLoanDetailService baseLoanDetailService
- MerchantService merchantService
- PartnerOrderServiceFacade partnerOrderServiceFacade
- BaseFinanceTrading baseFinanceTrading
- QueryTaskService queryTaskService
- BaseFinanceTradingService financeTradingService
+ int insertSelective(FinanceLend)
+ FinanceLend findLendById(Long)
+ int deleteById(Long)
+ FinanceLend financeLendByLendId(String)
+ int updateById(FinanceLend)
+ FinanceLend findByLoanNum(String)
+ void updateLendTimeOut(String)
+ FinanceLend findByLoanNumberAndMode(String,Byte,String)
+ long countByExample(FinanceLendExample)
+ List<FinanceLend> selectByExample(FinanceLendExample)
+ int updateByPrimaryKeySelective(FinanceLend)
+ int updateByExampleSelective(FinanceLend,FinanceLendExample)
+ List<LendStaticExt> findLendStatic(Map<String,Object>)
+ PageInfo<FinanceLendExt> findFinanceLendExtByPage(FinanceLendBackDto)
+ void lendExport(FinanceLendBackDto,String)
+ Map transLendMap(FinanceLendBackDto)
+ void translatedData(List<FinanceLendExt>,boolean)
- String getThirdparty(String)
- String getThirdpartyForPaylater(String)
+ Long findUnCloseCreditTotalAmount(String,String)
+ List<FinanceLend> financeLendList(List<String>)
}
class com.welab.loan.finance.vo.credit.CreditActivityAbTestBaseResponseVo {
- CreditActivityAbTestResponseVo creditActivityAbTestResponseVo
- CreditActivityAbTestGroupResponseVo creditActivityAbTestGroupResponseVo
}
class com.welab.loan.finance.vo.CPlanContractVO {
- String loanNumber
- String url
- String contractName
}
class com.welab.loan.finance.core.lock.RedisLockAspect {
- JedisCluster jedisCluster
+ void pointcut()
+ Object around(JoinPoint,RedisLock)
+ String getLockKey(RedisLock,Signature,Object[])
+ Map<String,Object> getLockValue(Signature,Object[])
+ String getLockKeyStr(String,Map<String,Object>)
+ Object getObjectValue(String[],int,int,Object)
+ void release(JedisLock)
+ {static} void main(String[])
}
class com.welab.loan.finance.model.FlowTaskTrack {
- Long id
- Long flowTaskId
- String taskParam
- String stage
- Byte status
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getFlowTaskId()
+ void setFlowTaskId(Long)
+ String getTaskParam()
+ void setTaskParam(String)
+ String getStage()
+ void setStage(String)
+ Byte getStatus()
+ void setStatus(Byte)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.service.core.BaseFinanceConfigService {
- FinanceConfigMapper financeConfigMapper
+ int save(FinanceConfig)
+ List<FinanceConfig> listByIds(List<Integer>)
+ FinanceConfig getOneByKey(String,String)
+ List<FinanceConfig> getListByCategory(String)
+ List<FinanceConfig> getListByExample(FinanceConfigExample)
+ int updateByCategoryAndKey(String,String,String)
}
interface com.welab.loan.finance.mapper.CreditProxyIncomeLogMapper {
~ long countByExample(CreditProxyIncomeLogExample)
~ int deleteByExample(CreditProxyIncomeLogExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditProxyIncomeLog)
~ int insertSelective(CreditProxyIncomeLog)
~ List<CreditProxyIncomeLog> selectByExample(CreditProxyIncomeLogExample)
~ CreditProxyIncomeLog selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditProxyIncomeLog,CreditProxyIncomeLogExample)
~ int updateByExample(CreditProxyIncomeLog,CreditProxyIncomeLogExample)
~ int updateByPrimaryKeySelective(CreditProxyIncomeLog)
~ int updateByPrimaryKey(CreditProxyIncomeLog)
}
class com.welab.loan.finance.response.EPlanTryCalculationDetailVO {
- {static} long serialVersionUID
- Long newLoanTotalPrincipalAmount
- Long newLoanMonthServiceFeeAmount
- Integer oldLoanDueIndex
- Long oldLoanNextRepaymentAmount
- List<EPlanDuesVO> ePlanOldLoanDuesList
}
class com.welab.loan.finance.service.impl.CreditUserTagRuleDelayTriggerServiceImpl {
- CreditUserTagRuleDelayTriggerExtMapper delayTriggerExtMapper
- CreditUserTagRuleDelayTriggerMapper delayTriggerMapper
+ List<CreditUserTagRuleDelayTrigger> getDelayTriggerList(Map<String,Object>)
+ int updateCreditUserTagRuleDelayTrigger(CreditUserTagRuleDelayTrigger)
+ int saveSingleAvailable(CreditUserTagRuleDelayTrigger)
+ int updateUserDelayTriggerExpire(CreditUserTagRuleDelayTrigger)
}
class com.welab.loan.finance.controller.ApplicationController {
# Boolean pro
- BaseUserBankCardService baseUserBankCardService
- DuesService duesService
- FinanceUserBankcardSevice financeUserBankcardSevice
- BasePayService basePayService
- BankConfigService bankConfigService
- BankService bankService
- PlanServiceImpl planService
- ITransformDues transformDues
- LoanCouponService loanCouponService
- CPlanService cPlanService
- BackstageConfigFacade backstageConfigFacade
- CheckCPlanCustomAmountCmdExe checkCPlanCustomAmountCmdExe
- QueryCPlanAmountCmdExe queryCPlanAmountCmdExe
- ApplyCPlanCmdExe applyCPlanCmdExe
- CreateCPlanContractCmdExe createCPlanContractCmdExe
- TryRepayCPlanCmdExe tryRepayCPlanCmdExe
+ Response getAmountCalculate(Long,String,String,String,Long,String,String)
+ Response getV2AmountCalculate(Long,String,String,String,String,Long,String,String)
+ Response getBankCard(Long,Long)
+ Response saveBankCard(Long,Long,String,FinanceUserBankcardDto)
+ Response changeBindCard(Long,Long,String,FinanceUserBankcardDto)
+ Response getDues(String)
+ Response getDuesByUserId(Long)
+ Response getTransDetailByLoan(Long,String)
+ Response multipleRepayment(Long,MulRepaymentDTO)
+ Response createDues(String)
+ Response getBankStoreList()
+ Response transferXendit(Long,PaymentDto)
+ Response repayAmountCheck(Long,String,String,Long)
+ Response repayAmountCheckForCPlan(Long,CheckCPlanCustomAmountCmd)
+ Response getBankStep(Long,String,String,String,Long,String)
+ Response cancelCouponCode(Long,String,String)
+ Response cancelCouponCodeV2(Long,String)
+ Response repayApplyPlan(Long,ApplyPlanDTO)
+ Response repayApplyCPlan(Long,ApplyCPlanCmd)
+ Response tryRepayPlan(Long,String,String,Long)
+ Response tryRepayCPlan(Long,TryRepayCPlanCmd)
+ Response tryRepayCPlanDetail(Long,String,String,Long)
+ Response tryRepayPlanDetail(Long,String,String,Long)
+ Response queryRepayAmount(Long,String,String)
+ Response<CustomRangeDTO> queryRepayAmountForCPlan(QueryCPlanAmountCmd)
+ Response createC1PlanContract(Long,Long,CreateC1ContractCmd)
+ Response createCPlanContracts(Long,Long,CreateCPlanContractCmd)
+ Response getC1PlanContract(Long,Long,String,String,Integer)
+ Response sendC1Push(Long,Long,String,String)
+ Response<FPlansContractDTO> getFPlanContract(String)
}
class com.welab.loan.finance.app.base.BaseLoanCouponService {
- LoanCouponMapper loanCouponMapper
- LoanCouponDetailMapper loanCouponDetailMapper
+ LoanCoupon findLoanCoupon(String)
+ List<LoanCoupon> findLoanCouponList(List<String>)
+ List<LoanCouponDetail> findAllUserCoupon(String)
+ List<LoanCouponDetail> findUnUseCoupon()
}
class com.welab.loan.finance.test.coupon.TransformDuesTest {
- ITransformDues iTransformDues
+ void saveMultipleRepayment()
+ void findTransDetailByCredit()
}
class com.welab.loan.finance.utils.ObjectUtil {
+ {static} boolean isAllFieldNull(Object)
+ {static} Collector<T,?,List<T>> toSortedList(Comparator<? super T>)
+ {static} void main(String[])
}
class com.welab.loan.finance.model.LoanTimeoutConfigExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanTimeoutConfigExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanTimeoutConfigExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andProductCodeIsNull()
+ Criteria andProductCodeIsNotNull()
+ Criteria andProductCodeEqualTo(String)
+ Criteria andProductCodeNotEqualTo(String)
+ Criteria andProductCodeGreaterThan(String)
+ Criteria andProductCodeGreaterThanOrEqualTo(String)
+ Criteria andProductCodeLessThan(String)
+ Criteria andProductCodeLessThanOrEqualTo(String)
+ Criteria andProductCodeLike(String)
+ Criteria andProductCodeNotLike(String)
+ Criteria andProductCodeIn(List<String>)
+ Criteria andProductCodeNotIn(List<String>)
+ Criteria andProductCodeBetween(String,String)
+ Criteria andProductCodeNotBetween(String,String)
+ Criteria andWhetherExistOriginIsNull()
+ Criteria andWhetherExistOriginIsNotNull()
+ Criteria andWhetherExistOriginEqualTo(Boolean)
+ Criteria andWhetherExistOriginNotEqualTo(Boolean)
+ Criteria andWhetherExistOriginGreaterThan(Boolean)
+ Criteria andWhetherExistOriginGreaterThanOrEqualTo(Boolean)
+ Criteria andWhetherExistOriginLessThan(Boolean)
+ Criteria andWhetherExistOriginLessThanOrEqualTo(Boolean)
+ Criteria andWhetherExistOriginIn(List<Boolean>)
+ Criteria andWhetherExistOriginNotIn(List<Boolean>)
+ Criteria andWhetherExistOriginBetween(Boolean,Boolean)
+ Criteria andWhetherExistOriginNotBetween(Boolean,Boolean)
+ Criteria andOriginIsNull()
+ Criteria andOriginIsNotNull()
+ Criteria andOriginEqualTo(String)
+ Criteria andOriginNotEqualTo(String)
+ Criteria andOriginGreaterThan(String)
+ Criteria andOriginGreaterThanOrEqualTo(String)
+ Criteria andOriginLessThan(String)
+ Criteria andOriginLessThanOrEqualTo(String)
+ Criteria andOriginLike(String)
+ Criteria andOriginNotLike(String)
+ Criteria andOriginIn(List<String>)
+ Criteria andOriginNotIn(List<String>)
+ Criteria andOriginBetween(String,String)
+ Criteria andOriginNotBetween(String,String)
+ Criteria andUnconfirmIsNull()
+ Criteria andUnconfirmIsNotNull()
+ Criteria andUnconfirmEqualTo(Integer)
+ Criteria andUnconfirmNotEqualTo(Integer)
+ Criteria andUnconfirmGreaterThan(Integer)
+ Criteria andUnconfirmGreaterThanOrEqualTo(Integer)
+ Criteria andUnconfirmLessThan(Integer)
+ Criteria andUnconfirmLessThanOrEqualTo(Integer)
+ Criteria andUnconfirmIn(List<Integer>)
+ Criteria andUnconfirmNotIn(List<Integer>)
+ Criteria andUnconfirmBetween(Integer,Integer)
+ Criteria andUnconfirmNotBetween(Integer,Integer)
+ Criteria andUntakeIsNull()
+ Criteria andUntakeIsNotNull()
+ Criteria andUntakeEqualTo(Integer)
+ Criteria andUntakeNotEqualTo(Integer)
+ Criteria andUntakeGreaterThan(Integer)
+ Criteria andUntakeGreaterThanOrEqualTo(Integer)
+ Criteria andUntakeLessThan(Integer)
+ Criteria andUntakeLessThanOrEqualTo(Integer)
+ Criteria andUntakeIn(List<Integer>)
+ Criteria andUntakeNotIn(List<Integer>)
+ Criteria andUntakeBetween(Integer,Integer)
+ Criteria andUntakeNotBetween(Integer,Integer)
}
class com.welab.loan.finance.model.LoanTimeoutConfigExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanTimeoutConfigExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.job.LoanTimeOutJob {
- int pageSize
- BaseLoanService baseLoanService
- BaseLoanTimeoutConfig baseTimeoutConfigService
- LoanStatusNoticService loanStatusNoticService
- PayService payService
- CreditUserAccountService creditUserAccountService
- BaseRabbitTemplate rabbitTemplate
- BaseCreditUserLoanService baseCreditUserLoanService
- BaseCreditUserAccountService baseCreditUserAccountService
- ApolloUtils apolloUtils
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- CreditLoanServiceFacade creditLoanServiceFacade
+ void execute(ShardingContext)
- void handleMaumodalLoan(String,int,Integer,boolean)
- void handleLoan(String,int,Integer,Boolean,String)
+ void handleOffLoan(String,int,Integer,Boolean,String)
- void handleDetail(List<LoanDetail>,Integer,boolean)
- boolean checkAlfmartCode(LoanDetail,TimeoutTypeEnum)
- void disableAlfmartCode(List<String>)
- void restoreCredit(List<String>)
- void cancelCode(List<String>)
- void creditUserLoanHandle(LoanDetail)
}
class com.welab.loan.finance.core.dues.impl.TbTravelokaPayLaterCostService {
- TbServiceFacade tbServiceFacade
- BaseLoanDetailService baseLoanDetailService
- BaseLoanDetailExtendService baseLoanDetailExtendService
- VatRepaymentCostProvider vatRepaymentCostProvider
+ CostDetailDTO findCostDetail(CostReqDTO)
+ String costKey()
}
class com.welab.loan.finance.job.CreditUserTagRuleDelayTriggerJob {
- CreditUserTagRuleDelayTriggerServiceImpl creditUserTagRuleDelayTriggerService
- CreditUserTagRuleService creditUserTagRuleService
+ void execute(ShardingContext)
- void doJob(List<CreditUserTagRuleDelayTrigger>)
- String buildKey(CreditUserTagTriggerMethodEnum,Long)
}
class com.welab.loan.finance.service.business.repayment.ModDuesServiceImpl {
- IQueryDuesService queryDuesService
+ boolean saveGoBackRepaymentDues(String,Date)
+ boolean saveGoBackRepaymentDues(LoanDetail,LoanDetailExtend,Date)
}
class com.welab.loan.finance.facade.fund.FundLoansServiceFacade {
- FundLoansService fundLoansService
+ Long matchFund(FundLoansDTO)
}
class com.welab.loan.finance.app.manager.repayment.RepaymentGoBackManager {
- BaseLoanRepaymentService baseLoanRepaymentService
- BaseRepaymentTrack baseRepaymentTrack
- BaseFinanceRefundDetailService baseFinanceRefundDetailService
- BaseDuesService baseDuesService
- CreditUserAccountServiceImpl creditUserAccountService
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- BaseLoanDetailService baseLoanDetailService
- LoansFacade loansFacade
- BaseFinanceDuesService baseFinanceDuesService
- BaseAdvanceMsgListService baseAdvanceMsgListService
- ITbCreditUserAccountService tbCreditUserAccountService
- DuesGoBackCmdExe duesGoBackCmdExe
- TbDuesUpdateService tbDuesUpdateService
- ApolloUtils apolloUtils
- ITbLoanDubboService tbLoanDubboService
- BaseLoanDetailExtendService baseLoanDetailExtendService
+ void duesGoBack(String)
+ void tbDuesGoBack(String)
+ void creditUserAccountGoBack(List<LoanRepayment>)
+ void tbCreditUserAccountGoBack(String,List<LoanRepayment>)
+ void syncFinanceDues(List<LoanRepayment>)
+ void loanStateBack(List<LoanRepayment>)
+ void tbLoanStateBack(List<LoanRepayment>)
+ void refundGoBack(String)
+ void repaymentTrackGoBack(String)
+ void tbDuesGoBack(String,Integer,String,Long,Date)
- void backDues(List<Dues>,Long)
}
class com.welab.loan.finance.service.impl.RechargeLogServiceImpl {
- RechargeLogMapper rechargeLogMapper
+ int insertRechargeLog(RechargeLog)
}
class com.welab.loan.finance.model.LoanApplyRepayment {
- Long id
- String loanNumber
- Byte type
- Long applyUserId
- Integer day
- Byte status
- Date createdAt
- Date updatedAt
- Date expireAt
- String remark
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Byte getType()
+ void setType(Byte)
+ Long getApplyUserId()
+ void setApplyUserId(Long)
+ Integer getDay()
+ void setDay(Integer)
+ Byte getStatus()
+ void setStatus(Byte)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Date getExpireAt()
+ void setExpireAt(Date)
+ String getRemark()
+ void setRemark(String)
}
class com.welab.loan.finance.core.dues.impl.EplanTryCalculateCostService {
- boolean isDiscount
+ CostDetailDTO findCostDetail(CostReqDTO)
+ String costKey()
}
class com.welab.loan.finance.dto.TbUserCreditAmountDTO {
- Long userId
- String name
- String mobile
- String email
- String docId
- String partnerUserNo
- Long useMoney
- Long residueMoney
- Long sumMoney
}
interface com.welab.loan.finance.mapper.CreditUpdateDetailMapper {
~ int deleteByPrimaryKey(Long)
~ int insert(CreditUpdateDetail)
~ int insertSelective(CreditUpdateDetail)
~ CreditUpdateDetail selectByPrimaryKey(Long)
~ int updateByPrimaryKeySelective(CreditUpdateDetail)
~ int updateByPrimaryKey(CreditUpdateDetail)
}
class com.welab.loan.finance.app.base.BaseInsuranceDetailService {
- InsuranceDetailMapper insuranceDetailMapper
- InsuranceDetailExtMapper insuranceDetailExtMapper
+ List<InsuranceDetail> queryByLoanNumberAndType(List<InsuranceDetail>)
+ int insertSelective(InsuranceDetail)
+ List<InsuranceDetail> queryByInsuranceRecordIds(List<Long>)
}
class com.welab.loan.finance.core.loan.lend.LendTransferServiceImpl {
- LoanDetailMapper loanDetailMapper
- LoanDetailExtendMapper loanDetailExtendMapper
- BaseUserAccountService baseUserAccountService
- BaseRabbitTemplate rabbitTemplate
+ void sendSingleTransfer(SynTransferDTO)
+ void sendBatchTransfer(List<SynTransferDTO>)
+ boolean check(SynTransferDTO)
+ void beforeTransfer(SynTransferDTO,LoanDetail)
- void lendList(List<SynTransferDTO>)
- void rechargeList(List<SynTransferDTO>)
- void beforeSignTime(LoanDetail)
- void beforeVa(LoanDetail)
- void beforeInitAccount(LoanDetail)
- void beforeSignByDdm(LoanDetail)
- LoanDetail findLoan(String)
- LoanDetailExtend findLoanDetailExtend(String)
}
class com.welab.loan.finance.vo.TestRepaymentVo {
- Integer dueIndex
}
class com.welab.loan.finance.test.credit.CreditCancelTest {
- CreditLoanCancelService creditLoanCancelService
- BaseCreditLoanCancelService baseCreditLoanCancelService
+ void testLoanCancel()
}
class com.welab.loan.finance.model.FinanceFundExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FinanceFundExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FinanceFundExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
# void addCriterionForJDBCTime(String,Date,String)
# void addCriterionForJDBCTime(String,List<Date>,String)
# void addCriterionForJDBCTime(String,Date,Date,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andFundNameIsNull()
+ Criteria andFundNameIsNotNull()
+ Criteria andFundNameEqualTo(String)
+ Criteria andFundNameNotEqualTo(String)
+ Criteria andFundNameGreaterThan(String)
+ Criteria andFundNameGreaterThanOrEqualTo(String)
+ Criteria andFundNameLessThan(String)
+ Criteria andFundNameLessThanOrEqualTo(String)
+ Criteria andFundNameLike(String)
+ Criteria andFundNameNotLike(String)
+ Criteria andFundNameIn(List<String>)
+ Criteria andFundNameNotIn(List<String>)
+ Criteria andFundNameBetween(String,String)
+ Criteria andFundNameNotBetween(String,String)
+ Criteria andFundCodeIsNull()
+ Criteria andFundCodeIsNotNull()
+ Criteria andFundCodeEqualTo(String)
+ Criteria andFundCodeNotEqualTo(String)
+ Criteria andFundCodeGreaterThan(String)
+ Criteria andFundCodeGreaterThanOrEqualTo(String)
+ Criteria andFundCodeLessThan(String)
+ Criteria andFundCodeLessThanOrEqualTo(String)
+ Criteria andFundCodeLike(String)
+ Criteria andFundCodeNotLike(String)
+ Criteria andFundCodeIn(List<String>)
+ Criteria andFundCodeNotIn(List<String>)
+ Criteria andFundCodeBetween(String,String)
+ Criteria andFundCodeNotBetween(String,String)
+ Criteria andPhoneIsNull()
+ Criteria andPhoneIsNotNull()
+ Criteria andPhoneEqualTo(String)
+ Criteria andPhoneNotEqualTo(String)
+ Criteria andPhoneGreaterThan(String)
+ Criteria andPhoneGreaterThanOrEqualTo(String)
+ Criteria andPhoneLessThan(String)
+ Criteria andPhoneLessThanOrEqualTo(String)
+ Criteria andPhoneLike(String)
+ Criteria andPhoneNotLike(String)
+ Criteria andPhoneIn(List<String>)
+ Criteria andPhoneNotIn(List<String>)
+ Criteria andPhoneBetween(String,String)
+ Criteria andPhoneNotBetween(String,String)
+ Criteria andAddressIsNull()
+ Criteria andAddressIsNotNull()
+ Criteria andAddressEqualTo(String)
+ Criteria andAddressNotEqualTo(String)
+ Criteria andAddressGreaterThan(String)
+ Criteria andAddressGreaterThanOrEqualTo(String)
+ Criteria andAddressLessThan(String)
+ Criteria andAddressLessThanOrEqualTo(String)
+ Criteria andAddressLike(String)
+ Criteria andAddressNotLike(String)
+ Criteria andAddressIn(List<String>)
+ Criteria andAddressNotIn(List<String>)
+ Criteria andAddressBetween(String,String)
+ Criteria andAddressNotBetween(String,String)
+ Criteria andLicenseNumIsNull()
+ Criteria andLicenseNumIsNotNull()
+ Criteria andLicenseNumEqualTo(String)
+ Criteria andLicenseNumNotEqualTo(String)
+ Criteria andLicenseNumGreaterThan(String)
+ Criteria andLicenseNumGreaterThanOrEqualTo(String)
+ Criteria andLicenseNumLessThan(String)
+ Criteria andLicenseNumLessThanOrEqualTo(String)
+ Criteria andLicenseNumLike(String)
+ Criteria andLicenseNumNotLike(String)
+ Criteria andLicenseNumIn(List<String>)
+ Criteria andLicenseNumNotIn(List<String>)
+ Criteria andLicenseNumBetween(String,String)
+ Criteria andLicenseNumNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andOrgTypeIsNull()
+ Criteria andOrgTypeIsNotNull()
+ Criteria andOrgTypeEqualTo(String)
+ Criteria andOrgTypeNotEqualTo(String)
+ Criteria andOrgTypeGreaterThan(String)
+ Criteria andOrgTypeGreaterThanOrEqualTo(String)
+ Criteria andOrgTypeLessThan(String)
+ Criteria andOrgTypeLessThanOrEqualTo(String)
+ Criteria andOrgTypeLike(String)
+ Criteria andOrgTypeNotLike(String)
+ Criteria andOrgTypeIn(List<String>)
+ Criteria andOrgTypeNotIn(List<String>)
+ Criteria andOrgTypeBetween(String,String)
+ Criteria andOrgTypeNotBetween(String,String)
+ Criteria andFundTypeIsNull()
+ Criteria andFundTypeIsNotNull()
+ Criteria andFundTypeEqualTo(String)
+ Criteria andFundTypeNotEqualTo(String)
+ Criteria andFundTypeGreaterThan(String)
+ Criteria andFundTypeGreaterThanOrEqualTo(String)
+ Criteria andFundTypeLessThan(String)
+ Criteria andFundTypeLessThanOrEqualTo(String)
+ Criteria andFundTypeLike(String)
+ Criteria andFundTypeNotLike(String)
+ Criteria andFundTypeIn(List<String>)
+ Criteria andFundTypeNotIn(List<String>)
+ Criteria andFundTypeBetween(String,String)
+ Criteria andFundTypeNotBetween(String,String)
+ Criteria andLegalTypeIsNull()
+ Criteria andLegalTypeIsNotNull()
+ Criteria andLegalTypeEqualTo(String)
+ Criteria andLegalTypeNotEqualTo(String)
+ Criteria andLegalTypeGreaterThan(String)
+ Criteria andLegalTypeGreaterThanOrEqualTo(String)
+ Criteria andLegalTypeLessThan(String)
+ Criteria andLegalTypeLessThanOrEqualTo(String)
+ Criteria andLegalTypeLike(String)
+ Criteria andLegalTypeNotLike(String)
+ Criteria andLegalTypeIn(List<String>)
+ Criteria andLegalTypeNotIn(List<String>)
+ Criteria andLegalTypeBetween(String,String)
+ Criteria andLegalTypeNotBetween(String,String)
+ Criteria andLegalNameIsNull()
+ Criteria andLegalNameIsNotNull()
+ Criteria andLegalNameEqualTo(String)
+ Criteria andLegalNameNotEqualTo(String)
+ Criteria andLegalNameGreaterThan(String)
+ Criteria andLegalNameGreaterThanOrEqualTo(String)
+ Criteria andLegalNameLessThan(String)
+ Criteria andLegalNameLessThanOrEqualTo(String)
+ Criteria andLegalNameLike(String)
+ Criteria andLegalNameNotLike(String)
+ Criteria andLegalNameIn(List<String>)
+ Criteria andLegalNameNotIn(List<String>)
+ Criteria andLegalNameBetween(String,String)
+ Criteria andLegalNameNotBetween(String,String)
+ Criteria andLegalNumIsNull()
+ Criteria andLegalNumIsNotNull()
+ Criteria andLegalNumEqualTo(String)
+ Criteria andLegalNumNotEqualTo(String)
+ Criteria andLegalNumGreaterThan(String)
+ Criteria andLegalNumGreaterThanOrEqualTo(String)
+ Criteria andLegalNumLessThan(String)
+ Criteria andLegalNumLessThanOrEqualTo(String)
+ Criteria andLegalNumLike(String)
+ Criteria andLegalNumNotLike(String)
+ Criteria andLegalNumIn(List<String>)
+ Criteria andLegalNumNotIn(List<String>)
+ Criteria andLegalNumBetween(String,String)
+ Criteria andLegalNumNotBetween(String,String)
+ Criteria andLoanStartIsNull()
+ Criteria andLoanStartIsNotNull()
+ Criteria andLoanStartEqualTo(Date)
+ Criteria andLoanStartNotEqualTo(Date)
+ Criteria andLoanStartGreaterThan(Date)
+ Criteria andLoanStartGreaterThanOrEqualTo(Date)
+ Criteria andLoanStartLessThan(Date)
+ Criteria andLoanStartLessThanOrEqualTo(Date)
+ Criteria andLoanStartIn(List<Date>)
+ Criteria andLoanStartNotIn(List<Date>)
+ Criteria andLoanStartBetween(Date,Date)
+ Criteria andLoanStartNotBetween(Date,Date)
+ Criteria andLoanEndIsNull()
+ Criteria andLoanEndIsNotNull()
+ Criteria andLoanEndEqualTo(Date)
+ Criteria andLoanEndNotEqualTo(Date)
+ Criteria andLoanEndGreaterThan(Date)
+ Criteria andLoanEndGreaterThanOrEqualTo(Date)
+ Criteria andLoanEndLessThan(Date)
+ Criteria andLoanEndLessThanOrEqualTo(Date)
+ Criteria andLoanEndIn(List<Date>)
+ Criteria andLoanEndNotIn(List<Date>)
+ Criteria andLoanEndBetween(Date,Date)
+ Criteria andLoanEndNotBetween(Date,Date)
+ Criteria andLoanModeIsNull()
+ Criteria andLoanModeIsNotNull()
+ Criteria andLoanModeEqualTo(String)
+ Criteria andLoanModeNotEqualTo(String)
+ Criteria andLoanModeGreaterThan(String)
+ Criteria andLoanModeGreaterThanOrEqualTo(String)
+ Criteria andLoanModeLessThan(String)
+ Criteria andLoanModeLessThanOrEqualTo(String)
+ Criteria andLoanModeLike(String)
+ Criteria andLoanModeNotLike(String)
+ Criteria andLoanModeIn(List<String>)
+ Criteria andLoanModeNotIn(List<String>)
+ Criteria andLoanModeBetween(String,String)
+ Criteria andLoanModeNotBetween(String,String)
+ Criteria andRepaymentStartIsNull()
+ Criteria andRepaymentStartIsNotNull()
+ Criteria andRepaymentStartEqualTo(Date)
+ Criteria andRepaymentStartNotEqualTo(Date)
+ Criteria andRepaymentStartGreaterThan(Date)
+ Criteria andRepaymentStartGreaterThanOrEqualTo(Date)
+ Criteria andRepaymentStartLessThan(Date)
+ Criteria andRepaymentStartLessThanOrEqualTo(Date)
+ Criteria andRepaymentStartIn(List<Date>)
+ Criteria andRepaymentStartNotIn(List<Date>)
+ Criteria andRepaymentStartBetween(Date,Date)
+ Criteria andRepaymentStartNotBetween(Date,Date)
+ Criteria andRepaymentEndIsNull()
+ Criteria andRepaymentEndIsNotNull()
+ Criteria andRepaymentEndEqualTo(Date)
+ Criteria andRepaymentEndNotEqualTo(Date)
+ Criteria andRepaymentEndGreaterThan(Date)
+ Criteria andRepaymentEndGreaterThanOrEqualTo(Date)
+ Criteria andRepaymentEndLessThan(Date)
+ Criteria andRepaymentEndLessThanOrEqualTo(Date)
+ Criteria andRepaymentEndIn(List<Date>)
+ Criteria andRepaymentEndNotIn(List<Date>)
+ Criteria andRepaymentEndBetween(Date,Date)
+ Criteria andRepaymentEndNotBetween(Date,Date)
+ Criteria andRepaymentModeIsNull()
+ Criteria andRepaymentModeIsNotNull()
+ Criteria andRepaymentModeEqualTo(String)
+ Criteria andRepaymentModeNotEqualTo(String)
+ Criteria andRepaymentModeGreaterThan(String)
+ Criteria andRepaymentModeGreaterThanOrEqualTo(String)
+ Criteria andRepaymentModeLessThan(String)
+ Criteria andRepaymentModeLessThanOrEqualTo(String)
+ Criteria andRepaymentModeLike(String)
+ Criteria andRepaymentModeNotLike(String)
+ Criteria andRepaymentModeIn(List<String>)
+ Criteria andRepaymentModeNotIn(List<String>)
+ Criteria andRepaymentModeBetween(String,String)
+ Criteria andRepaymentModeNotBetween(String,String)
+ Criteria andIsApproveIsNull()
+ Criteria andIsApproveIsNotNull()
+ Criteria andIsApproveEqualTo(String)
+ Criteria andIsApproveNotEqualTo(String)
+ Criteria andIsApproveGreaterThan(String)
+ Criteria andIsApproveGreaterThanOrEqualTo(String)
+ Criteria andIsApproveLessThan(String)
+ Criteria andIsApproveLessThanOrEqualTo(String)
+ Criteria andIsApproveLike(String)
+ Criteria andIsApproveNotLike(String)
+ Criteria andIsApproveIn(List<String>)
+ Criteria andIsApproveNotIn(List<String>)
+ Criteria andIsApproveBetween(String,String)
+ Criteria andIsApproveNotBetween(String,String)
+ Criteria andPaymentMethodIsNull()
+ Criteria andPaymentMethodIsNotNull()
+ Criteria andPaymentMethodEqualTo(String)
+ Criteria andPaymentMethodNotEqualTo(String)
+ Criteria andPaymentMethodGreaterThan(String)
+ Criteria andPaymentMethodGreaterThanOrEqualTo(String)
+ Criteria andPaymentMethodLessThan(String)
+ Criteria andPaymentMethodLessThanOrEqualTo(String)
+ Criteria andPaymentMethodLike(String)
+ Criteria andPaymentMethodNotLike(String)
+ Criteria andPaymentMethodIn(List<String>)
+ Criteria andPaymentMethodNotIn(List<String>)
+ Criteria andPaymentMethodBetween(String,String)
+ Criteria andPaymentMethodNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.FinanceFundExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FinanceFundExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
abstract class com.welab.loan.finance.core.dues.AbstractCostService {
+ BigDecimal findServiceFee(BigDecimal,BigDecimal)
+ LoanProperty findLoanProperty(BigDecimal,String,boolean)
+ ActivityRateRspDTO findActivityRuleByDefault(CostReqDTO,boolean)
+ Date findRepayDate(Date)
+ boolean isLongV1PlanB(int,FeeDdmDTO,boolean,String)
+ FeeDdmDTO findSetFeeByDdm(CostReqDTO,ActivityRateRspDTO)
+ AdminFeeResp findAdminFeeByDefault(CostReqDTO,LoanProperty,ActivityRateRspDTO)
# BigDecimal setDefault(BigDecimal)
+ {static} Integer updatePayDayFrom1To2(String,Integer)
}
class com.welab.loan.finance.model.ext.LoanDayExt {
- String loanNumber
- Integer overDay
- Integer closeDay
- Integer totalDay
}
class com.welab.loan.finance.dto.cmd.tb.InvoiceCmd {
- {static} long serialVersionUID
- String merchantCode
- String customerCode
- String orderNo
- Long invoiceAmount
- Date invoiceDate
}
class com.welab.loan.finance.helper.DuesHelper {
+ {static} int DEFAULT_SCALE
+ {static} BigDecimal calcAmount(BigDecimal,BigDecimal,int)
+ {static} BigDecimal caclPerAmount(BigDecimal,int)
+ {static} BigDecimal caclVat(BigDecimal,BigDecimal)
+ {static} BigDecimal calcResidualAmount(BigDecimal,BigDecimal,int)
+ {static} List<String> getDueDateList(String,int,String,Date)
+ {static} boolean isCarryFee(String)
}
interface com.welab.loan.finance.service.LoanCouponService {
~ Response<List<LoanCouponDTO>> listCoupon(LoanCouponQry)
~ Response<List<CouponLoansAbleDTO>> checkCouponLoansAble(CouponLoansAbleCmd)
~ Response<List<CouponLoansAbleDTO>> checkCouponLoansAbleForMarketing(CouponLoansAbleCmd)
~ Response<CouponRepaymentVo> tryCouponInfo(TryCouponInfoCmd)
~ Response<Boolean> cancelCoupon(CancelCouponCmd)
~ Response<Boolean> cancelCouponForUser(CancelCouponForUserCmd)
~ Response<Long> getTotalCouponInfo(List<String>)
}
class com.welab.loan.finance.facade.credit.CreditTagConfigServiceFacade {
- CreditTagConfigService creditTagConfigService
+ List<CreditUserTagConfigDTO> getTagConfigByTag(String)
}
interface com.welab.loan.finance.mapper.SignMethodOperateHistoryMapper {
~ long countByExample(SignMethodOperateHistoryExample)
~ int deleteByPrimaryKey(Long)
~ int insert(SignMethodOperateHistory)
~ int insertSelective(SignMethodOperateHistory)
~ List<SignMethodOperateHistory> selectByExample(SignMethodOperateHistoryExample)
~ SignMethodOperateHistory selectByPrimaryKey(Long)
~ int updateByExampleSelective(SignMethodOperateHistory,SignMethodOperateHistoryExample)
~ int updateByExample(SignMethodOperateHistory,SignMethodOperateHistoryExample)
~ int updateByPrimaryKeySelective(SignMethodOperateHistory)
~ int updateByPrimaryKey(SignMethodOperateHistory)
}
class com.welab.loan.finance.model.UvfFileRepaymentDetailExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> UvfFileRepaymentDetailExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.UvfFileRepaymentDetailExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateTimeIsNull()
+ Criteria andCreateTimeIsNotNull()
+ Criteria andCreateTimeEqualTo(Date)
+ Criteria andCreateTimeNotEqualTo(Date)
+ Criteria andCreateTimeGreaterThan(Date)
+ Criteria andCreateTimeGreaterThanOrEqualTo(Date)
+ Criteria andCreateTimeLessThan(Date)
+ Criteria andCreateTimeLessThanOrEqualTo(Date)
+ Criteria andCreateTimeIn(List<Date>)
+ Criteria andCreateTimeNotIn(List<Date>)
+ Criteria andCreateTimeBetween(Date,Date)
+ Criteria andCreateTimeNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andTaskIdIsNull()
+ Criteria andTaskIdIsNotNull()
+ Criteria andTaskIdEqualTo(String)
+ Criteria andTaskIdNotEqualTo(String)
+ Criteria andTaskIdGreaterThan(String)
+ Criteria andTaskIdGreaterThanOrEqualTo(String)
+ Criteria andTaskIdLessThan(String)
+ Criteria andTaskIdLessThanOrEqualTo(String)
+ Criteria andTaskIdLike(String)
+ Criteria andTaskIdNotLike(String)
+ Criteria andTaskIdIn(List<String>)
+ Criteria andTaskIdNotIn(List<String>)
+ Criteria andTaskIdBetween(String,String)
+ Criteria andTaskIdNotBetween(String,String)
+ Criteria andNoKontrakIsNull()
+ Criteria andNoKontrakIsNotNull()
+ Criteria andNoKontrakEqualTo(String)
+ Criteria andNoKontrakNotEqualTo(String)
+ Criteria andNoKontrakGreaterThan(String)
+ Criteria andNoKontrakGreaterThanOrEqualTo(String)
+ Criteria andNoKontrakLessThan(String)
+ Criteria andNoKontrakLessThanOrEqualTo(String)
+ Criteria andNoKontrakLike(String)
+ Criteria andNoKontrakNotLike(String)
+ Criteria andNoKontrakIn(List<String>)
+ Criteria andNoKontrakNotIn(List<String>)
+ Criteria andNoKontrakBetween(String,String)
+ Criteria andNoKontrakNotBetween(String,String)
+ Criteria andEffBuIsNull()
+ Criteria andEffBuIsNotNull()
+ Criteria andEffBuEqualTo(String)
+ Criteria andEffBuNotEqualTo(String)
+ Criteria andEffBuGreaterThan(String)
+ Criteria andEffBuGreaterThanOrEqualTo(String)
+ Criteria andEffBuLessThan(String)
+ Criteria andEffBuLessThanOrEqualTo(String)
+ Criteria andEffBuLike(String)
+ Criteria andEffBuNotLike(String)
+ Criteria andEffBuIn(List<String>)
+ Criteria andEffBuNotIn(List<String>)
+ Criteria andEffBuBetween(String,String)
+ Criteria andEffBuNotBetween(String,String)
+ Criteria andTglTransaksiIsNull()
+ Criteria andTglTransaksiIsNotNull()
+ Criteria andTglTransaksiEqualTo(String)
+ Criteria andTglTransaksiNotEqualTo(String)
+ Criteria andTglTransaksiGreaterThan(String)
+ Criteria andTglTransaksiGreaterThanOrEqualTo(String)
+ Criteria andTglTransaksiLessThan(String)
+ Criteria andTglTransaksiLessThanOrEqualTo(String)
+ Criteria andTglTransaksiLike(String)
+ Criteria andTglTransaksiNotLike(String)
+ Criteria andTglTransaksiIn(List<String>)
+ Criteria andTglTransaksiNotIn(List<String>)
+ Criteria andTglTransaksiBetween(String,String)
+ Criteria andTglTransaksiNotBetween(String,String)
+ Criteria andPokokIsNull()
+ Criteria andPokokIsNotNull()
+ Criteria andPokokEqualTo(String)
+ Criteria andPokokNotEqualTo(String)
+ Criteria andPokokGreaterThan(String)
+ Criteria andPokokGreaterThanOrEqualTo(String)
+ Criteria andPokokLessThan(String)
+ Criteria andPokokLessThanOrEqualTo(String)
+ Criteria andPokokLike(String)
+ Criteria andPokokNotLike(String)
+ Criteria andPokokIn(List<String>)
+ Criteria andPokokNotIn(List<String>)
+ Criteria andPokokBetween(String,String)
+ Criteria andPokokNotBetween(String,String)
+ Criteria andBungaIsNull()
+ Criteria andBungaIsNotNull()
+ Criteria andBungaEqualTo(String)
+ Criteria andBungaNotEqualTo(String)
+ Criteria andBungaGreaterThan(String)
+ Criteria andBungaGreaterThanOrEqualTo(String)
+ Criteria andBungaLessThan(String)
+ Criteria andBungaLessThanOrEqualTo(String)
+ Criteria andBungaLike(String)
+ Criteria andBungaNotLike(String)
+ Criteria andBungaIn(List<String>)
+ Criteria andBungaNotIn(List<String>)
+ Criteria andBungaBetween(String,String)
+ Criteria andBungaNotBetween(String,String)
+ Criteria andDendaIsNull()
+ Criteria andDendaIsNotNull()
+ Criteria andDendaEqualTo(String)
+ Criteria andDendaNotEqualTo(String)
+ Criteria andDendaGreaterThan(String)
+ Criteria andDendaGreaterThanOrEqualTo(String)
+ Criteria andDendaLessThan(String)
+ Criteria andDendaLessThanOrEqualTo(String)
+ Criteria andDendaLike(String)
+ Criteria andDendaNotLike(String)
+ Criteria andDendaIn(List<String>)
+ Criteria andDendaNotIn(List<String>)
+ Criteria andDendaBetween(String,String)
+ Criteria andDendaNotBetween(String,String)
+ Criteria andAdminPretermIsNull()
+ Criteria andAdminPretermIsNotNull()
+ Criteria andAdminPretermEqualTo(String)
+ Criteria andAdminPretermNotEqualTo(String)
+ Criteria andAdminPretermGreaterThan(String)
+ Criteria andAdminPretermGreaterThanOrEqualTo(String)
+ Criteria andAdminPretermLessThan(String)
+ Criteria andAdminPretermLessThanOrEqualTo(String)
+ Criteria andAdminPretermLike(String)
+ Criteria andAdminPretermNotLike(String)
+ Criteria andAdminPretermIn(List<String>)
+ Criteria andAdminPretermNotIn(List<String>)
+ Criteria andAdminPretermBetween(String,String)
+ Criteria andAdminPretermNotBetween(String,String)
+ Criteria andPenaltyFifBuIsNull()
+ Criteria andPenaltyFifBuIsNotNull()
+ Criteria andPenaltyFifBuEqualTo(String)
+ Criteria andPenaltyFifBuNotEqualTo(String)
+ Criteria andPenaltyFifBuGreaterThan(String)
+ Criteria andPenaltyFifBuGreaterThanOrEqualTo(String)
+ Criteria andPenaltyFifBuLessThan(String)
+ Criteria andPenaltyFifBuLessThanOrEqualTo(String)
+ Criteria andPenaltyFifBuLike(String)
+ Criteria andPenaltyFifBuNotLike(String)
+ Criteria andPenaltyFifBuIn(List<String>)
+ Criteria andPenaltyFifBuNotIn(List<String>)
+ Criteria andPenaltyFifBuBetween(String,String)
+ Criteria andPenaltyFifBuNotBetween(String,String)
+ Criteria andTotalIsNull()
+ Criteria andTotalIsNotNull()
+ Criteria andTotalEqualTo(String)
+ Criteria andTotalNotEqualTo(String)
+ Criteria andTotalGreaterThan(String)
+ Criteria andTotalGreaterThanOrEqualTo(String)
+ Criteria andTotalLessThan(String)
+ Criteria andTotalLessThanOrEqualTo(String)
+ Criteria andTotalLike(String)
+ Criteria andTotalNotLike(String)
+ Criteria andTotalIn(List<String>)
+ Criteria andTotalNotIn(List<String>)
+ Criteria andTotalBetween(String,String)
+ Criteria andTotalNotBetween(String,String)
}
class com.welab.loan.finance.model.UvfFileRepaymentDetailExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.UvfFileRepaymentDetailExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.FinanceTradingExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FinanceTradingExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FinanceTradingExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andOrgIdIsNull()
+ Criteria andOrgIdIsNotNull()
+ Criteria andOrgIdEqualTo(Long)
+ Criteria andOrgIdNotEqualTo(Long)
+ Criteria andOrgIdGreaterThan(Long)
+ Criteria andOrgIdGreaterThanOrEqualTo(Long)
+ Criteria andOrgIdLessThan(Long)
+ Criteria andOrgIdLessThanOrEqualTo(Long)
+ Criteria andOrgIdIn(List<Long>)
+ Criteria andOrgIdNotIn(List<Long>)
+ Criteria andOrgIdBetween(Long,Long)
+ Criteria andOrgIdNotBetween(Long,Long)
+ Criteria andOutAccountNoIsNull()
+ Criteria andOutAccountNoIsNotNull()
+ Criteria andOutAccountNoEqualTo(String)
+ Criteria andOutAccountNoNotEqualTo(String)
+ Criteria andOutAccountNoGreaterThan(String)
+ Criteria andOutAccountNoGreaterThanOrEqualTo(String)
+ Criteria andOutAccountNoLessThan(String)
+ Criteria andOutAccountNoLessThanOrEqualTo(String)
+ Criteria andOutAccountNoLike(String)
+ Criteria andOutAccountNoNotLike(String)
+ Criteria andOutAccountNoIn(List<String>)
+ Criteria andOutAccountNoNotIn(List<String>)
+ Criteria andOutAccountNoBetween(String,String)
+ Criteria andOutAccountNoNotBetween(String,String)
+ Criteria andInAccountNoIsNull()
+ Criteria andInAccountNoIsNotNull()
+ Criteria andInAccountNoEqualTo(String)
+ Criteria andInAccountNoNotEqualTo(String)
+ Criteria andInAccountNoGreaterThan(String)
+ Criteria andInAccountNoGreaterThanOrEqualTo(String)
+ Criteria andInAccountNoLessThan(String)
+ Criteria andInAccountNoLessThanOrEqualTo(String)
+ Criteria andInAccountNoLike(String)
+ Criteria andInAccountNoNotLike(String)
+ Criteria andInAccountNoIn(List<String>)
+ Criteria andInAccountNoNotIn(List<String>)
+ Criteria andInAccountNoBetween(String,String)
+ Criteria andInAccountNoNotBetween(String,String)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Integer)
+ Criteria andTypeNotEqualTo(Integer)
+ Criteria andTypeGreaterThan(Integer)
+ Criteria andTypeGreaterThanOrEqualTo(Integer)
+ Criteria andTypeLessThan(Integer)
+ Criteria andTypeLessThanOrEqualTo(Integer)
+ Criteria andTypeIn(List<Integer>)
+ Criteria andTypeNotIn(List<Integer>)
+ Criteria andTypeBetween(Integer,Integer)
+ Criteria andTypeNotBetween(Integer,Integer)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Long)
+ Criteria andFundIdNotEqualTo(Long)
+ Criteria andFundIdGreaterThan(Long)
+ Criteria andFundIdGreaterThanOrEqualTo(Long)
+ Criteria andFundIdLessThan(Long)
+ Criteria andFundIdLessThanOrEqualTo(Long)
+ Criteria andFundIdIn(List<Long>)
+ Criteria andFundIdNotIn(List<Long>)
+ Criteria andFundIdBetween(Long,Long)
+ Criteria andFundIdNotBetween(Long,Long)
+ Criteria andFundTypeIsNull()
+ Criteria andFundTypeIsNotNull()
+ Criteria andFundTypeEqualTo(Byte)
+ Criteria andFundTypeNotEqualTo(Byte)
+ Criteria andFundTypeGreaterThan(Byte)
+ Criteria andFundTypeGreaterThanOrEqualTo(Byte)
+ Criteria andFundTypeLessThan(Byte)
+ Criteria andFundTypeLessThanOrEqualTo(Byte)
+ Criteria andFundTypeIn(List<Byte>)
+ Criteria andFundTypeNotIn(List<Byte>)
+ Criteria andFundTypeBetween(Byte,Byte)
+ Criteria andFundTypeNotBetween(Byte,Byte)
+ Criteria andBatchNoIsNull()
+ Criteria andBatchNoIsNotNull()
+ Criteria andBatchNoEqualTo(String)
+ Criteria andBatchNoNotEqualTo(String)
+ Criteria andBatchNoGreaterThan(String)
+ Criteria andBatchNoGreaterThanOrEqualTo(String)
+ Criteria andBatchNoLessThan(String)
+ Criteria andBatchNoLessThanOrEqualTo(String)
+ Criteria andBatchNoLike(String)
+ Criteria andBatchNoNotLike(String)
+ Criteria andBatchNoIn(List<String>)
+ Criteria andBatchNoNotIn(List<String>)
+ Criteria andBatchNoBetween(String,String)
+ Criteria andBatchNoNotBetween(String,String)
+ Criteria andOrderIdIsNull()
+ Criteria andOrderIdIsNotNull()
+ Criteria andOrderIdEqualTo(String)
+ Criteria andOrderIdNotEqualTo(String)
+ Criteria andOrderIdGreaterThan(String)
+ Criteria andOrderIdGreaterThanOrEqualTo(String)
+ Criteria andOrderIdLessThan(String)
+ Criteria andOrderIdLessThanOrEqualTo(String)
+ Criteria andOrderIdLike(String)
+ Criteria andOrderIdNotLike(String)
+ Criteria andOrderIdIn(List<String>)
+ Criteria andOrderIdNotIn(List<String>)
+ Criteria andOrderIdBetween(String,String)
+ Criteria andOrderIdNotBetween(String,String)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andMerchantCodeIsNull()
+ Criteria andMerchantCodeIsNotNull()
+ Criteria andMerchantCodeEqualTo(String)
+ Criteria andMerchantCodeNotEqualTo(String)
+ Criteria andMerchantCodeGreaterThan(String)
+ Criteria andMerchantCodeGreaterThanOrEqualTo(String)
+ Criteria andMerchantCodeLessThan(String)
+ Criteria andMerchantCodeLessThanOrEqualTo(String)
+ Criteria andMerchantCodeLike(String)
+ Criteria andMerchantCodeNotLike(String)
+ Criteria andMerchantCodeIn(List<String>)
+ Criteria andMerchantCodeNotIn(List<String>)
+ Criteria andMerchantCodeBetween(String,String)
+ Criteria andMerchantCodeNotBetween(String,String)
+ Criteria andTransactionCallBackTimeIsNull()
+ Criteria andTransactionCallBackTimeIsNotNull()
+ Criteria andTransactionCallBackTimeEqualTo(Date)
+ Criteria andTransactionCallBackTimeNotEqualTo(Date)
+ Criteria andTransactionCallBackTimeGreaterThan(Date)
+ Criteria andTransactionCallBackTimeGreaterThanOrEqualTo(Date)
+ Criteria andTransactionCallBackTimeLessThan(Date)
+ Criteria andTransactionCallBackTimeLessThanOrEqualTo(Date)
+ Criteria andTransactionCallBackTimeIn(List<Date>)
+ Criteria andTransactionCallBackTimeNotIn(List<Date>)
+ Criteria andTransactionCallBackTimeBetween(Date,Date)
+ Criteria andTransactionCallBackTimeNotBetween(Date,Date)
+ Criteria andBankCodeIsNull()
+ Criteria andBankCodeIsNotNull()
+ Criteria andBankCodeEqualTo(String)
+ Criteria andBankCodeNotEqualTo(String)
+ Criteria andBankCodeGreaterThan(String)
+ Criteria andBankCodeGreaterThanOrEqualTo(String)
+ Criteria andBankCodeLessThan(String)
+ Criteria andBankCodeLessThanOrEqualTo(String)
+ Criteria andBankCodeLike(String)
+ Criteria andBankCodeNotLike(String)
+ Criteria andBankCodeIn(List<String>)
+ Criteria andBankCodeNotIn(List<String>)
+ Criteria andBankCodeBetween(String,String)
+ Criteria andBankCodeNotBetween(String,String)
+ Criteria andFundTradingTypeIsNull()
+ Criteria andFundTradingTypeIsNotNull()
+ Criteria andFundTradingTypeEqualTo(String)
+ Criteria andFundTradingTypeNotEqualTo(String)
+ Criteria andFundTradingTypeGreaterThan(String)
+ Criteria andFundTradingTypeGreaterThanOrEqualTo(String)
+ Criteria andFundTradingTypeLessThan(String)
+ Criteria andFundTradingTypeLessThanOrEqualTo(String)
+ Criteria andFundTradingTypeLike(String)
+ Criteria andFundTradingTypeNotLike(String)
+ Criteria andFundTradingTypeIn(List<String>)
+ Criteria andFundTradingTypeNotIn(List<String>)
+ Criteria andFundTradingTypeBetween(String,String)
+ Criteria andFundTradingTypeNotBetween(String,String)
}
class com.welab.loan.finance.model.FinanceTradingExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FinanceTradingExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.OperateLoanDetailExtendFlagHistory {
- Long id
- String loanNumber
- Boolean deleted
- Long createBy
- Long updateBy
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ Long getCreateBy()
+ void setCreateBy(Long)
+ Long getUpdateBy()
+ void setUpdateBy(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.service.core.BaseLoanApplyPlansService {
- LoanApplyPlansMapper loanApplyPlansMapper
- LoanApplyPlansExtMapper loanApplyPlansExtMapper
- LoanPlansRelationMapper loanPlansRelationMapper
+ boolean savePlan(LoanApplyPlans)
+ boolean savePlanRelation(LoanPlansRelation)
+ LoanApplyPlans findDiscountPlanMap(String,PlansTypeEnum)
+ LoanApplyPlans findDiscountPlanMap(String,PlansTypeEnum,Boolean)
+ List<LoanPlansRelation> findLoanPlansRelation(String,String,byte)
+ List<LoanApplyPlans> findLoanApplyPlans(String,byte,byte)
+ List<LoanApplyPlans> findLoanApplyPlansAndTriggerType(String,byte,byte,Byte)
+ List<LoanApplyPlans> findLoanApplyPlansList(List<String>,byte,byte)
+ List<LoanApplyPlans> findLoanApplyPlansList(List<String>,byte,List<Byte>)
+ boolean savePlan(String,PlansTypeEnum)
+ boolean cancelPlan(String,Integer,List<PlansTypeEnum>,String)
+ boolean checkPlan(String,PlansTypeEnum,boolean)
- LoanApplyPlansExample buildStatusExample(String,PlansStatusEnum,PlansTypeEnum)
+ long countPlanByApply(String,List<Byte>)
+ long countByExample(LoanApplyPlansExample)
+ List<LoanApplyPlans> selectByExample(LoanApplyPlansExample)
+ List<LoanPlansRelation> selectRelationByExample(LoanPlansRelationExample)
+ boolean deleteByExample(LoanApplyPlansExample)
+ long countLoanPlansRelation(String)
+ List<LoanApplyPlansExt> selectPTPList(PlansTypeEnum,int)
+ List<String> findPlanByUserId(Long)
+ List<LoanApplyPlans> findPlanByUserId(Long,PlansTypeEnum)
+ long countByExample(Long,List<Byte>,byte,Date)
+ List<LoanApplyPlans> findUnUseApplyPlans(Date)
+ long countByLoanNumber(String,Byte,Byte)
+ int countByUserIdAndStatusAndTriggerType(Long,Byte,Byte)
+ boolean hasCollectionPlan(String,List<Integer>)
}
class com.welab.loan.finance.app.manager.TbSignUpKeyManager {
- JedisCluster jedisCluster
- {static} String PREFIX
- {static} Integer SECONDS
- String url
- Integer expireDate
- AgreementCmdExe agreementCmdExe
+ String getSignUpKey(TbUser,TbLoan)
+ Boolean checkSignUpKey(String)
+ Map getValue(String)
+ Boolean delSignUpKey(String)
+ void putAgreementUrl(String,String)
+ String getAgreementUrl(String)
}
class com.welab.loan.finance.model.OverdueExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> OverdueExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.OverdueExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andDueIndexIsNull()
+ Criteria andDueIndexIsNotNull()
+ Criteria andDueIndexEqualTo(Integer)
+ Criteria andDueIndexNotEqualTo(Integer)
+ Criteria andDueIndexGreaterThan(Integer)
+ Criteria andDueIndexGreaterThanOrEqualTo(Integer)
+ Criteria andDueIndexLessThan(Integer)
+ Criteria andDueIndexLessThanOrEqualTo(Integer)
+ Criteria andDueIndexIn(List<Integer>)
+ Criteria andDueIndexNotIn(List<Integer>)
+ Criteria andDueIndexBetween(Integer,Integer)
+ Criteria andDueIndexNotBetween(Integer,Integer)
+ Criteria andDueDateIsNull()
+ Criteria andDueDateIsNotNull()
+ Criteria andDueDateEqualTo(Date)
+ Criteria andDueDateNotEqualTo(Date)
+ Criteria andDueDateGreaterThan(Date)
+ Criteria andDueDateGreaterThanOrEqualTo(Date)
+ Criteria andDueDateLessThan(Date)
+ Criteria andDueDateLessThanOrEqualTo(Date)
+ Criteria andDueDateIn(List<Date>)
+ Criteria andDueDateNotIn(List<Date>)
+ Criteria andDueDateBetween(Date,Date)
+ Criteria andDueDateNotBetween(Date,Date)
+ Criteria andOverDateIsNull()
+ Criteria andOverDateIsNotNull()
+ Criteria andOverDateEqualTo(Date)
+ Criteria andOverDateNotEqualTo(Date)
+ Criteria andOverDateGreaterThan(Date)
+ Criteria andOverDateGreaterThanOrEqualTo(Date)
+ Criteria andOverDateLessThan(Date)
+ Criteria andOverDateLessThanOrEqualTo(Date)
+ Criteria andOverDateIn(List<Date>)
+ Criteria andOverDateNotIn(List<Date>)
+ Criteria andOverDateBetween(Date,Date)
+ Criteria andOverDateNotBetween(Date,Date)
+ Criteria andOverdueAmountIsNull()
+ Criteria andOverdueAmountIsNotNull()
+ Criteria andOverdueAmountEqualTo(Long)
+ Criteria andOverdueAmountNotEqualTo(Long)
+ Criteria andOverdueAmountGreaterThan(Long)
+ Criteria andOverdueAmountGreaterThanOrEqualTo(Long)
+ Criteria andOverdueAmountLessThan(Long)
+ Criteria andOverdueAmountLessThanOrEqualTo(Long)
+ Criteria andOverdueAmountIn(List<Long>)
+ Criteria andOverdueAmountNotIn(List<Long>)
+ Criteria andOverdueAmountBetween(Long,Long)
+ Criteria andOverdueAmountNotBetween(Long,Long)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andOverPrincipalIsNull()
+ Criteria andOverPrincipalIsNotNull()
+ Criteria andOverPrincipalEqualTo(Long)
+ Criteria andOverPrincipalNotEqualTo(Long)
+ Criteria andOverPrincipalGreaterThan(Long)
+ Criteria andOverPrincipalGreaterThanOrEqualTo(Long)
+ Criteria andOverPrincipalLessThan(Long)
+ Criteria andOverPrincipalLessThanOrEqualTo(Long)
+ Criteria andOverPrincipalIn(List<Long>)
+ Criteria andOverPrincipalNotIn(List<Long>)
+ Criteria andOverPrincipalBetween(Long,Long)
+ Criteria andOverPrincipalNotBetween(Long,Long)
}
class com.welab.loan.finance.model.OverdueExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.OverdueExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.test.credit.CustomerTest {
- CreditUserTagServiceImpl creditUserTagServiceImpl
- CreditUserTagServiceImpl tagService
+ void getCredit()
+ void getProduct()
}
class com.welab.loan.finance.dto.CreditAccountTrackCmd {
- {static} long serialVersionUID
- Long userId
- String loanNumber
- CreditAccountTrackTypeEnum type
- String transId
}
interface com.welab.loan.finance.app.command.tb.order.loandetail.TbLoanDetailBuilder {
~ void doBuild(TbInvoice,ProductRateConfigVO,LoanDetail)
~ void doBuild(TbInvoice,ProductRateConfigVO,LoanDetailExtend)
}
class com.welab.loan.finance.dto.PaymentScheduleDto {
- Long userId
- String loanNumber
- Long amount
- String tenor
- String productCode
- String secondProdCode
- Integer payDay
- Date loanDate
- String promotionCode
}
class com.welab.loan.finance.model.CreditUserTagRuleDelayTrigger {
- Long id
- String triggerMethod
- Long userId
- Date triggerTime
- Byte status
- String remark
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getTriggerMethod()
+ void setTriggerMethod(String)
+ Long getUserId()
+ void setUserId(Long)
+ Date getTriggerTime()
+ void setTriggerTime(Date)
+ Byte getStatus()
+ void setStatus(Byte)
+ String getRemark()
+ void setRemark(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.facade.approval.ApprovalWhitelistUserServiceFacade {
- ApprovalWhitelistUserService approvalWhitelistUserService
+ ApprovalWhitelistUserDTO getByMobile(String)
}
class com.welab.loan.finance.vo.request.UvfChannellingLoanReq {
- String companyId
}
class com.welab.loan.finance.dto.tb.TbRepaymentNotifyDTO {
- {static} long serialVersionUID
- String loanNumber
- Long repaymentAmount
- Date repaymentTime
- Long userId
- Boolean isClose
- Boolean isOverDue
- Long amount
}
class com.welab.loan.finance.service.impl.MerchantTradingServiceImpl {
- BaseMerchantTradingService baseMerchantTradingService
- MongodbFileService mongodbFileService
- MerchantServiceFacade merchantServiceFacade
- PartnerOrderServiceFacade partnerOrderServiceFacade
+ Response<MerchantTradingDTO> queryMerchantTradingInfor(MerchantTradingQry)
+ Response<PageInfo<MerchantLoanDTO>> queryMerchantLoans(MerchantLoanQry)
+ Response<Boolean> asynExportMerchantLoans(ExportMerchantLoanCmd)
+ Response<PageInfo<MerchantRepaymentLoanDTO>> queryMerchantRepaymentLoans(MerchantRepaymentQry)
+ List<MerchantRepaymentLoanDTO> buildMerchantRepaymentLoan(List<MerchantRepaymentLoanDTO>)
+ Response<Boolean> asynExportMerchantRepaymentLoans(MerchantRepaymentQry)
- LinkedHashMap<String,String> getExcelHeadMap()
- LinkedHashMap<String,String> excelHead()
- List<MerchantRepaymentLoanDTO> buildMerchantRepaymentLoanDTO(List<MerchantRepaymentLoanDTO>)
}
interface com.welab.loan.finance.service.LoanTimeoutConfigService {
~ LoanTimeoutConfigVo getByProductCode(String)
~ LoanTimeoutConfigVo getByProductCode(String,String)
}
interface com.welab.loan.finance.enums.LoanDetailExtendEnum {
}
enum com.welab.loan.finance.enums.IsPremium {
+  YES
+  NO
- Integer value
- String desc
}
class com.welab.loan.finance.response.ResponsCodeType {
+ {static} String BANKCARD_CHECK_FAIL
+ {static} String BANKCARD_CHECK_NAME_DIFF
+ {static} String BANKCARD_CHECK_PADING
+ {static} String BANKCARD_CHECK_REPEAT
+ {static} String LEND_LOAN_NUMBER_IS_NULL
+ {static} String LEND_LOAN_NUMBER_NOT_EXIST
+ {static} String LEND_LOAN_NUMBER_USER_BANK_NOT_EXIST
+ {static} String LEND_LOAN_NUMBER_SAVE_ERROR
+ {static} String LEND_LOAN_NUMBER_PAY_FAIL
+ {static} String LEND_LOAN_NUMBER_PAY_ERROR
+ {static} String LEND_AMOUNT_PAY_ERROR
+ {static} String LEND_ORDER_REPEATS
+ {static} String LEND_TYPE_ERROR
+ {static} String LEND_SUCC_QRY_ERROR
+ {static} String LEND_OFFLINE_STORE_NOT_EMPTY
- {static} String LEND_FUND_NOT_EMPTY
- {static} String LEND_LOAN_CODE_NOT_EMPTY
- {static} String LEND_STATUS_TYPE_ERROR
- {static} String LEND_FUND_MATCHE_ERROR
- {static} String LEND_FUNDID_IS_NULL
- {static} String LEND_ADMINFEE_IS_NULL
- {static} String LEND_LOAN_NUMBER_NOT_ALLOW
- {static} String LEND_CHANNEL_IS_NULL
- {static} String LEND_ALFMART_CODE_ERROR
- {static} String LEND_ONLINE_CANNOT_CHANGE_BANKCARD
- {static} String RECHARGE_ONLINE_CANNOT_CHANGE_BANKCARD
- {static} String LEND_RECHARGE_CODE_ERROR
+ {static} String REPAYMENT_OFFLINE_FAIL
+ {static} String REPAYMENT_OFFLINE_CLOSE
+ {static} String REPAYMENT_NUMBER_ERROR
+ {static} String REPAYMENT_PAY_ACCOUNT_ERROR
+ {static} String VAILD_BANK_NUMBER
+ {static} String REVERSAL_ERROR
+ {static} String REPAYMENT_DUES_NOT_EXIST
+ {static} String LEND_NOW_REPAYMENT
+ {static} String REPAYMENT_AMOUNT_ERROR
+ {static} String REPAYMENT_AMOUNT_NOT_EMPTY
+ {static} String REPAYMENT_AMOUNT_NOT_INTEGER
+ {static} String REPAYMENT_FIF_STORE_IS_COLSE
+ {static} String REPAYMENT_AMOUNT_SAVE_FAIL
+ {static} String REPAYMENT_VA_ERROR
+ {static} String REPAYMENT_ASTRAPAY_ERROR
+ {static} String REPAYMENT_OFFLINE_CODE_ERROR
+ {static} String REPAYMENT_ONLINE_CODE_ERROR
+ {static} String REPAYMENT_ISCOLSE
+ {static} String REPAYMENT_CUSTOM_MIN_ERROR
+ {static} String REDIS_REPAYMENT_LOCK
+ {static} String LOAN_REPAYMENT_STATUS_ERROR
+ {static} String LOAN_REPAYMENT_DATE_NOT_EMPTY
+ {static} String REPAYMENT_C1PLAN_NO_REASON
+ {static} String REPAYMENT_C1PLAN_NO_MATCH
+ {static} String ADVANCE_REPAYMENT_AMOUNT_ERROR
+ {static} String FPLAN_NOT_CUSTOM_AMOUNT
- {static} String PAY_LATER_INSUFFICIENT_AVAILABILITY
- {static} String INSUFFICIENT_AVAILABLE_CREDIT
- {static} String ACCOUNT_INACTIVE
+ {static} String MULTIPLE_REPAYMENT_ERROR
+ {static} String NO_BANK_NUMBER
+ {static} String MUST_UPLOAD_ID_AND_BANK
+ {static} String BINDING_AUTH_CHECK_FAILD
+ {static} String USER_BANKD_ACCOUNT_EXIST_ERROR
- {static} String BANK_ACCOUND_NUMBER_LENGTH_ERROR
+ {static} String AMOUNT_NOT_NULL
+ {static} String LOAN_NUMBER_TYPE_NOT_SUPPORT
+ {static} String E_PLAN_TRY_CALCULATION_ERROR
+ {static} String OVER_DUE_DAY_MUST_THAN_30
+ {static} String E_PLAN_NO_TRIGGER
+ {static} String E_NEW_ORDER_PRINCIPAL_MUST
+ {static} String MDR_FEE_RATE_QUERY_FAILED
+ {static} String CONTRACT_NOT_SIGNED
+ {static} String E_PLAN_APPLY_NOT_FUND
+ {static} String C_PLAN_JOIN_ERROR
+ {static} String C_PLAN_USER_JOIN_ERROR
}
enum com.welab.loan.finance.response.UserResponsCodeTypeEnum {
+  BANKCARD_CHECK_FAIL
+  BANKCARD_CHECK_NAME_DIFF
+  BANKCARD_CHECK_PADING
+  BANKCARD_CHECK_REPEAT
+  LEND_LOAN_NUMBER_IS_NULL
+  LEND_LOAN_NUMBER_NOT_EXIST
+  LEND_LOAN_NUMBER_USER_BANK_NOT_EXIST
+  LEND_LOAN_NUMBER_SAVE_ERROR
+  LEND_LOAN_NUMBER_PAY_FAIL
+  LEND_LOAN_NUMBER_PAY_ERROR
+  LEND_AMOUNT_PAY_ERROR
+  LEND_ORDER_REPEATS
+  LEND_TYPE_ERROR
+  LEND_SUCC_QRY_ERROR
+  LEND_NOW_REPAYMENT
+  LEND_OFFLINE_STORE_NOT_EMPTY
+  LEND_FUND_NOT_EMPTY
+  LEND_LOAN_CODE_NOT_EMPTY
+  LEND_STATUS_TYPE_ERROR
+  LEND_FUND_MATCHE_ERROR
+  LEND_FUNDID_IS_NULL
+  LEND_ADMINFEE_IS_NULL
+  LEND_LOAN_NUMBER_NOT_ALLOW
+  LEND_CHANNEL_IS_NULL
+  LEND_ALFMART_CODE_ERROR
+  LEND_ONLINE_CANNOT_CHANGE_BANKCARD
+  RECHARGE_ONLINE_CANNOT_CHANGE_BANKCARD
+  NO_BANK_NUMBER
+  LEND_RECHARGE_CODE_ERROR
+  REPAYMENT_OFFLINE_FAIL
+  REPAYMENT_OFFLINE_CLOSE
+  REPAYMENT_NUMBER_ERROR
+  REPAYMENT_DUES_NOT_EXIST
+  REPAYMENT_AMOUNT_ERROR
+  REPAYMENT_PAY_ACCOUNT_ERROR
+  REPAYMENT_AMOUNT_NOT_EMPTY
+  REPAYMENT_AMOUNT_SAVE_FAIL
+  REPAYMENT_AMOUNT_NOT_INTEGER
+  REPAYMENT_FIF_STORE_IS_COLSE
+  REPAYMENT_VA_ERROR
+  REPAYMENT_OFFLINE_CODE_ERROR
+  REPAYMENT_ONLINE_CODE_ERROR
+  REPAYMENT_ISCOLSE
+  REPAYMENT_CUSTOM_MIN_ERROR
+  REPAYMENT_C1PLAN_NO_REASON
+  REPAYMENT_C1PLAN_NO_MATCH
+  REDIS_REPAYMENT_LOCK
+  LOAN_REPAYMENT_DATE_NOT_EMPTY
+  ADVANCE_REPAYMENT_AMOUNT_ERROR
+  FPLAN_NOT_CUSTOM_AMOUNT
+  MULTIPLE_REPAYMENT_ERROR
+  INSUFFICIENT_AVAILABLE_CREDIT
+  ACCOUNT_INACTIVE
+  VAILD_BANK_NUMBER
+  REVERSAL_ERROR
+  LOAN_REPAYMENT_STATUS_ERROR
+  PAY_LATER_INSUFFICIENT_AVAILABILITY
+  MUST_UPLOAD_ID_AND_BANK
+  BINDING_AUTH_CHECK_FAILD
+  USER_BANKD_ACCOUNT_EXIST_ERROR
+  BANK_ACCOUND_NUMBER_LENGTH_ERROR
+  AMOUNT_NOT_NULL
+  LOAN_NUMBER_TYPE_NOT_SUPPORT
+  E_PLAN_TRY_CALCULATION_ERROR
+  OVER_DUE_DAY_MUST_THAN_30
+  E_PLAN_NO_TRIGGE
+  E_PLAN_APPLY_NOT_FUND
+  E_NEW_ORDER_PRINCIPAL_MUST
+  REPAYMENT_ASTRAPAY_ERROR
+  MDR_FEE_RATE_QUERY_FAILED
+  CONTRACT_NOT_SIGNED
+  C_PLAN_JOIN_ERROR
+  C_PLAN_USER_JOIN_ERROR
- Integer code
- String message
- <<Create>> UserResponsCodeTypeEnum(Integer,String)
+ Integer getCode()
+ String getMessage()
}
interface com.welab.loan.finance.service.business.repayment.IQueryDuesService {
~ List<Dues> findAllDues(String,Boolean)
~ List<Dues> findAllDuesNoMerge(List<String>,Boolean)
~ List<Dues> findAllDuesNoMerge(String,Boolean)
~ List<Dues> findAllDues(List<String>,Boolean)
~ List<Dues> findDuesByType(String,Integer,String)
~ List<Dues> findDuesByTypeNoMerge(String,Integer,String)
~ Dues findDuesByTypeLimit(String,Integer,String)
~ List<Dues> findRepaymentDues(String)
~ Dues findDuesByLimit(String)
~ Dues findOneDuesExample(DuesExample)
~ DuesMapper getDuesMapper()
}
enum com.welab.loan.finance.enums.DuesNameEnum {
+  REMAININGAMOUNT
+  SETTLEDAMOUNT
+  AMOUNT
- String name
~ <<Create>> DuesNameEnum(String)
}
abstract class com.welab.loan.finance.service.business.repayment.AbstractRepaymentService {
- ApplicationService applicationService
# IFundMatchService fundMatchService
- JedisCluster jedisCluster
- LoanStatusNoticService loanStatusNoticService
- BaseFinanceDuesService baseFinanceDuesService
- FundService fundService
- AccountService accountService
# ActivityDubboService activityDubboService
# ActivityDubboServiceFacade activityDubboServiceFacade
- BankConfigService bankConfigService
- BaseRabbitTemplate rabbitTemplate
- VACacheCmdExe syncVACacheCmdExe
- CouponSyncVACmdExe couponSyncVACmdExe
- MessageProducer messageProducer
+ boolean chargeback(RepaymentCallReq)
# {abstract}boolean repaymentCharge(RepaymentCallReq)
# void afterRepayment(RepaymentCallReq)
# void loanStatusNotice(LoanStatusNoticDTO)
# void repayNotifyCollection(RepayTrackVo)
+ {abstract}RestAccountDto checkRestAccount(String)
+ boolean countCheckRestAccount(String)
+ void restAccount(String)
+ void restAccount(String,Long)
+ void restUserAccount(String,Long)
# List<VirtualAccountVO> saveVirtualAccounts(VirtualAccountDto)
# boolean findCustomCouponRepay()
+ {static} Long getNewPlanSubAmount(Dues,PlansTypeEnum,Map<String,BigDecimal>)
+ {static} Dues getNewPlanSubDues(Dues,PlansTypeEnum,Map<String,BigDecimal>)
+ {static} DuesExtItem getNewPlanSubDuesExt(DuesExtItem,PlansTypeEnum,Map<String,BigDecimal>)
+ {static} Long getNewPlanSubAmount(CouponDues,PlansTypeEnum,int,Date,Map<String,BigDecimal>)
}
class com.welab.loan.finance.vo.response.LoanPlansContractVO {
- String loanNumber
- Integer dueIndex
- String url
}
class com.welab.loan.finance.dto.qry.LoanCouponQry {
+ Long userId
}
class com.welab.loan.finance.vo.TbRepaymentVO {
- {static} long serialVersionUID
- String transId
- String orderNo
- Long userId
- String loanNumber
- Long fundId
- String fundName
- String origin
- String transactionType
- String secondProdCode
- Integer dueIndex
- String repaymentChannel
- Long fastPayFee
- Long lateFee
- String productType
- Long amountApproved
- Long adminFee
- Long provisionFee
- Long fundInterestFee
- Long serviceFee
- Long channelFee
- Date repaymentTime
- Long repaymentAmount
- Date actualRepaymentAt
- String receiptAccount
- String bankCode
- Long overAmount
- Boolean isOverdue
- Byte planType
- Byte torigin
- Long orgId
- String transType
- Long principalFee
- Byte type
- String backTransId
- String invoiceNo
- String billingNo
- String partner
+ {static} Map getExportMap(String)
}
class com.welab.loan.finance.service.business.rebook.RebookOldOrderCloseService {
- LoanDetailMapper loanDetailMapper
- BaseLoanDetailService loanDetailService
- LoansFacade loansFacade
- CreditUserAccountService creditUserAccountService
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- BaseLoanUserRepayService baseLoanUserRepayService
- BaseRabbitTemplate baseRabbitTemplate
- BaseDuesService baseDuesService
- FinanceRepaymentTrackMapper repaymentTrackMapper
# FundAccountInfoService fundAccountInfoService
- FundService fundService
- ApolloUtils apolloUtils
+ void closeOldOrder(String,String)
+ void closeOldOrder2(String)
- void closeLoans(String)
- void closeLoanDetail(String,long)
- LoanDetail getLoanDetail(String)
- void closeAndSyncDues(String)
- void synDuesData(String)
+ void synAccount(Long)
# String getFundAccount(Long)
- void insertRepaymentTrackAndNotifyFund(LoanDetail)
- void notifyFund(FinanceRepaymentTrack)
}
class com.welab.loan.finance.service.business.rebook.RebookTryCalculateService {
- DuesService duesService
- BaseLoanDetailService baseLoanDetailService
- BaseDuesService baseDuesService
+ CalculatorAmountVo tryCalculate(ScheduleAmountDto)
- long calcReadAmount(String,Long,DuesDetailExt)
- long calcInterestFee(String,CalculatorAmountVo,DuesDetailExt)
- long calcPayable(String,Long,CalculatorAmountVo)
- long calcRepayAmount(String,CalculatorAmountVo)
- void baseValidate(ScheduleAmountDto)
- Long getOldFundId(String)
- DuesDetailExt remaingAmountStat(String)
}
class com.welab.loan.finance.model.ext.DuesAmountExt {
- Long id
- Long userId
- Long orgId
- String sourceId
- String loanId
- String productCode
- String secondProdCode
- Integer dueIndex
- Date dueDate
- Long fundId
- String period
- Boolean isClose
- Byte planType
- Long serviceFeeAmount
- Long serviceFeePay
- Long serviceFeeUnPay
- Long provisionFeeAmount
- Long provisionFeePay
- Long provisionFeeUnPay
- Long fundInterestAmount
- Long fundInterestPay
- Long fundInterestUnPay
- Long principalAmount
- Long principalPay
- Long principalUnPay
- Long adminFeeAmount
- Long adminFeePay
- Long adminFeeUnPay
- Long carryingFeeAmount
- Long carryingFeePay
- Long carryingFeeUnPay
- Long lateFeeAmount
- Long lateFeePay
- Long lateFeeUnPay
- Long vatBeforeLateFeeUnPay
- Byte plansType
- Byte repaymentType
- String plansStr
- String promotionCode
- Date createAt
- String claimedAt
- Date startExpireDate
- Date endExpireDate
- String mobile
- Long subServiceFee
- Long subFundInterestFee
- Long discountPrincipal
- Long discountServiceFee
- Long discountFundInterest
- Long discountAdminFee
- Long discountLateFee
- Long principalPlanDiscount
- Long serviceFeePlanDiscount
- Long fundInterestPlanDiscount
- Long adminFeePlanDiscount
- Long lateFeePlanDiscount
- String orderNo
- String lendStatusStr
- String fundName
- Byte lendStatus
- Long totalDuesAmount
- Long orgInterest
- Long totalInterest
- Long repayAmount
- String dueDateStr
- String totalDuesAmountStr
- String repaymentTypeStr
- boolean calculationEplanUnpay
- String productType
- Long payLaterProvisionFee
- Long eplanUnpay
- Long provisionPlanDiscount
- Long provisionDiscount
- Long provisionUnpay
- Long provisionPay
- Long provisionAmount
- Long promoCodeFee
- Long cessiePay
- Long cessieDiscount
- String loanStatus
- String partner
- String merchantOrderNo
- Integer dpd
- Integer lfDpd
+ {static} LinkedHashMap getExportMap()
+ {static} LinkedHashMap getExportHeadMap(String)
}
class com.welab.loan.finance.core.dues.vat.VatCostProvider {
- Map<String,VatCost> vatCostMap
- List<VatCost> vatCostList
- ConfigServiceFacade taxConfigServiceFacade
- String vatFeeDate
+ BigDecimal doCalc(String,BigDecimal)
+ BigDecimal doCalcSum(String,BigDecimal)
+ BigDecimal doCalc(String,BigDecimal,BigDecimal)
+ BigDecimal getVatRate()
+ boolean before51(Date)
+ void initVatCostMap()
}
class com.welab.loan.finance.rabbitmq.CallMenthodConsumer {
+ void onMessage(Message)
}
interface com.welab.loan.finance.service.business.lend.IService {
~ OrgIdEnum getProductId()
~ TypeEnum getLoanType(String)
}
class com.welab.loan.finance.vo.FifUvfMotorLoanVo {
}
abstract class com.welab.loan.finance.app.service.paybills.AbstractPayBillsService {
# BaseRepaymentTrack baseRepaymentTrack
# BasePayBillsService basePayBillsService
# GatewayRepaymentOrderServiceFacade gatewayRepaymentOrderServiceFacade
+ {abstract}String channel()
# {abstract}List<T> parseData(MultipartFile)
# void buildPayBillsContext(T)
# Long savePayBillsExt(T)
# void relOrderNos(List<T>)
+ int execute(MultipartFile)
- Map<String,Long> getRepaymentAmountMap(List<T>)
- {static} String buildKey(PayBills)
- {static} String buildKey(GatewayRepaymentOrderResDTO)
}
class com.welab.loan.finance.app.service.paybills.AbstractPayBillsService$PayBillsContext {
}
interface com.welab.loan.finance.provider.ServiceKey {
~ String DEFAULT_SERVICE
~ String getKey()
}
class com.welab.loan.finance.model.CreditAccountRemainingTrackExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditAccountRemainingTrackExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditAccountRemainingTrackExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andSumAvailabeAmountIsNull()
+ Criteria andSumAvailabeAmountIsNotNull()
+ Criteria andSumAvailabeAmountEqualTo(Long)
+ Criteria andSumAvailabeAmountNotEqualTo(Long)
+ Criteria andSumAvailabeAmountGreaterThan(Long)
+ Criteria andSumAvailabeAmountGreaterThanOrEqualTo(Long)
+ Criteria andSumAvailabeAmountLessThan(Long)
+ Criteria andSumAvailabeAmountLessThanOrEqualTo(Long)
+ Criteria andSumAvailabeAmountIn(List<Long>)
+ Criteria andSumAvailabeAmountNotIn(List<Long>)
+ Criteria andSumAvailabeAmountBetween(Long,Long)
+ Criteria andSumAvailabeAmountNotBetween(Long,Long)
+ Criteria andClAvailabeAmountIsNull()
+ Criteria andClAvailabeAmountIsNotNull()
+ Criteria andClAvailabeAmountEqualTo(Long)
+ Criteria andClAvailabeAmountNotEqualTo(Long)
+ Criteria andClAvailabeAmountGreaterThan(Long)
+ Criteria andClAvailabeAmountGreaterThanOrEqualTo(Long)
+ Criteria andClAvailabeAmountLessThan(Long)
+ Criteria andClAvailabeAmountLessThanOrEqualTo(Long)
+ Criteria andClAvailabeAmountIn(List<Long>)
+ Criteria andClAvailabeAmountNotIn(List<Long>)
+ Criteria andClAvailabeAmountBetween(Long,Long)
+ Criteria andClAvailabeAmountNotBetween(Long,Long)
+ Criteria andPlAvailabeAmountIsNull()
+ Criteria andPlAvailabeAmountIsNotNull()
+ Criteria andPlAvailabeAmountEqualTo(Long)
+ Criteria andPlAvailabeAmountNotEqualTo(Long)
+ Criteria andPlAvailabeAmountGreaterThan(Long)
+ Criteria andPlAvailabeAmountGreaterThanOrEqualTo(Long)
+ Criteria andPlAvailabeAmountLessThan(Long)
+ Criteria andPlAvailabeAmountLessThanOrEqualTo(Long)
+ Criteria andPlAvailabeAmountIn(List<Long>)
+ Criteria andPlAvailabeAmountNotIn(List<Long>)
+ Criteria andPlAvailabeAmountBetween(Long,Long)
+ Criteria andPlAvailabeAmountNotBetween(Long,Long)
+ Criteria andInferIncomeIsNull()
+ Criteria andInferIncomeIsNotNull()
+ Criteria andInferIncomeEqualTo(Long)
+ Criteria andInferIncomeNotEqualTo(Long)
+ Criteria andInferIncomeGreaterThan(Long)
+ Criteria andInferIncomeGreaterThanOrEqualTo(Long)
+ Criteria andInferIncomeLessThan(Long)
+ Criteria andInferIncomeLessThanOrEqualTo(Long)
+ Criteria andInferIncomeIn(List<Long>)
+ Criteria andInferIncomeNotIn(List<Long>)
+ Criteria andInferIncomeBetween(Long,Long)
+ Criteria andInferIncomeNotBetween(Long,Long)
+ Criteria andTagIsNull()
+ Criteria andTagIsNotNull()
+ Criteria andTagEqualTo(String)
+ Criteria andTagNotEqualTo(String)
+ Criteria andTagGreaterThan(String)
+ Criteria andTagGreaterThanOrEqualTo(String)
+ Criteria andTagLessThan(String)
+ Criteria andTagLessThanOrEqualTo(String)
+ Criteria andTagLike(String)
+ Criteria andTagNotLike(String)
+ Criteria andTagIn(List<String>)
+ Criteria andTagNotIn(List<String>)
+ Criteria andTagBetween(String,String)
+ Criteria andTagNotBetween(String,String)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andTransIdIsNull()
+ Criteria andTransIdIsNotNull()
+ Criteria andTransIdEqualTo(String)
+ Criteria andTransIdNotEqualTo(String)
+ Criteria andTransIdGreaterThan(String)
+ Criteria andTransIdGreaterThanOrEqualTo(String)
+ Criteria andTransIdLessThan(String)
+ Criteria andTransIdLessThanOrEqualTo(String)
+ Criteria andTransIdLike(String)
+ Criteria andTransIdNotLike(String)
+ Criteria andTransIdIn(List<String>)
+ Criteria andTransIdNotIn(List<String>)
+ Criteria andTransIdBetween(String,String)
+ Criteria andTransIdNotBetween(String,String)
+ Criteria andClApprovedTenor1xIsNull()
+ Criteria andClApprovedTenor1xIsNotNull()
+ Criteria andClApprovedTenor1xEqualTo(Long)
+ Criteria andClApprovedTenor1xNotEqualTo(Long)
+ Criteria andClApprovedTenor1xGreaterThan(Long)
+ Criteria andClApprovedTenor1xGreaterThanOrEqualTo(Long)
+ Criteria andClApprovedTenor1xLessThan(Long)
+ Criteria andClApprovedTenor1xLessThanOrEqualTo(Long)
+ Criteria andClApprovedTenor1xIn(List<Long>)
+ Criteria andClApprovedTenor1xNotIn(List<Long>)
+ Criteria andClApprovedTenor1xBetween(Long,Long)
+ Criteria andClApprovedTenor1xNotBetween(Long,Long)
+ Criteria andClApprovedTenor2xIsNull()
+ Criteria andClApprovedTenor2xIsNotNull()
+ Criteria andClApprovedTenor2xEqualTo(Long)
+ Criteria andClApprovedTenor2xNotEqualTo(Long)
+ Criteria andClApprovedTenor2xGreaterThan(Long)
+ Criteria andClApprovedTenor2xGreaterThanOrEqualTo(Long)
+ Criteria andClApprovedTenor2xLessThan(Long)
+ Criteria andClApprovedTenor2xLessThanOrEqualTo(Long)
+ Criteria andClApprovedTenor2xIn(List<Long>)
+ Criteria andClApprovedTenor2xNotIn(List<Long>)
+ Criteria andClApprovedTenor2xBetween(Long,Long)
+ Criteria andClApprovedTenor2xNotBetween(Long,Long)
+ Criteria andClApprovedTenor3xIsNull()
+ Criteria andClApprovedTenor3xIsNotNull()
+ Criteria andClApprovedTenor3xEqualTo(Long)
+ Criteria andClApprovedTenor3xNotEqualTo(Long)
+ Criteria andClApprovedTenor3xGreaterThan(Long)
+ Criteria andClApprovedTenor3xGreaterThanOrEqualTo(Long)
+ Criteria andClApprovedTenor3xLessThan(Long)
+ Criteria andClApprovedTenor3xLessThanOrEqualTo(Long)
+ Criteria andClApprovedTenor3xIn(List<Long>)
+ Criteria andClApprovedTenor3xNotIn(List<Long>)
+ Criteria andClApprovedTenor3xBetween(Long,Long)
+ Criteria andClApprovedTenor3xNotBetween(Long,Long)
+ Criteria andClApprovedTenor4xIsNull()
+ Criteria andClApprovedTenor4xIsNotNull()
+ Criteria andClApprovedTenor4xEqualTo(Long)
+ Criteria andClApprovedTenor4xNotEqualTo(Long)
+ Criteria andClApprovedTenor4xGreaterThan(Long)
+ Criteria andClApprovedTenor4xGreaterThanOrEqualTo(Long)
+ Criteria andClApprovedTenor4xLessThan(Long)
+ Criteria andClApprovedTenor4xLessThanOrEqualTo(Long)
+ Criteria andClApprovedTenor4xIn(List<Long>)
+ Criteria andClApprovedTenor4xNotIn(List<Long>)
+ Criteria andClApprovedTenor4xBetween(Long,Long)
+ Criteria andClApprovedTenor4xNotBetween(Long,Long)
+ Criteria andClApprovedTenor6xIsNull()
+ Criteria andClApprovedTenor6xIsNotNull()
+ Criteria andClApprovedTenor6xEqualTo(Long)
+ Criteria andClApprovedTenor6xNotEqualTo(Long)
+ Criteria andClApprovedTenor6xGreaterThan(Long)
+ Criteria andClApprovedTenor6xGreaterThanOrEqualTo(Long)
+ Criteria andClApprovedTenor6xLessThan(Long)
+ Criteria andClApprovedTenor6xLessThanOrEqualTo(Long)
+ Criteria andClApprovedTenor6xIn(List<Long>)
+ Criteria andClApprovedTenor6xNotIn(List<Long>)
+ Criteria andClApprovedTenor6xBetween(Long,Long)
+ Criteria andClApprovedTenor6xNotBetween(Long,Long)
+ Criteria andClApprovedTenor9xIsNull()
+ Criteria andClApprovedTenor9xIsNotNull()
+ Criteria andClApprovedTenor9xEqualTo(Long)
+ Criteria andClApprovedTenor9xNotEqualTo(Long)
+ Criteria andClApprovedTenor9xGreaterThan(Long)
+ Criteria andClApprovedTenor9xGreaterThanOrEqualTo(Long)
+ Criteria andClApprovedTenor9xLessThan(Long)
+ Criteria andClApprovedTenor9xLessThanOrEqualTo(Long)
+ Criteria andClApprovedTenor9xIn(List<Long>)
+ Criteria andClApprovedTenor9xNotIn(List<Long>)
+ Criteria andClApprovedTenor9xBetween(Long,Long)
+ Criteria andClApprovedTenor9xNotBetween(Long,Long)
+ Criteria andClApprovedTenor12xIsNull()
+ Criteria andClApprovedTenor12xIsNotNull()
+ Criteria andClApprovedTenor12xEqualTo(Long)
+ Criteria andClApprovedTenor12xNotEqualTo(Long)
+ Criteria andClApprovedTenor12xGreaterThan(Long)
+ Criteria andClApprovedTenor12xGreaterThanOrEqualTo(Long)
+ Criteria andClApprovedTenor12xLessThan(Long)
+ Criteria andClApprovedTenor12xLessThanOrEqualTo(Long)
+ Criteria andClApprovedTenor12xIn(List<Long>)
+ Criteria andClApprovedTenor12xNotIn(List<Long>)
+ Criteria andClApprovedTenor12xBetween(Long,Long)
+ Criteria andClApprovedTenor12xNotBetween(Long,Long)
+ Criteria andClRemainingTenor1xIsNull()
+ Criteria andClRemainingTenor1xIsNotNull()
+ Criteria andClRemainingTenor1xEqualTo(Long)
+ Criteria andClRemainingTenor1xNotEqualTo(Long)
+ Criteria andClRemainingTenor1xGreaterThan(Long)
+ Criteria andClRemainingTenor1xGreaterThanOrEqualTo(Long)
+ Criteria andClRemainingTenor1xLessThan(Long)
+ Criteria andClRemainingTenor1xLessThanOrEqualTo(Long)
+ Criteria andClRemainingTenor1xIn(List<Long>)
+ Criteria andClRemainingTenor1xNotIn(List<Long>)
+ Criteria andClRemainingTenor1xBetween(Long,Long)
+ Criteria andClRemainingTenor1xNotBetween(Long,Long)
+ Criteria andClRemainingTenor2xIsNull()
+ Criteria andClRemainingTenor2xIsNotNull()
+ Criteria andClRemainingTenor2xEqualTo(Long)
+ Criteria andClRemainingTenor2xNotEqualTo(Long)
+ Criteria andClRemainingTenor2xGreaterThan(Long)
+ Criteria andClRemainingTenor2xGreaterThanOrEqualTo(Long)
+ Criteria andClRemainingTenor2xLessThan(Long)
+ Criteria andClRemainingTenor2xLessThanOrEqualTo(Long)
+ Criteria andClRemainingTenor2xIn(List<Long>)
+ Criteria andClRemainingTenor2xNotIn(List<Long>)
+ Criteria andClRemainingTenor2xBetween(Long,Long)
+ Criteria andClRemainingTenor2xNotBetween(Long,Long)
+ Criteria andClRemainingTenor3xIsNull()
+ Criteria andClRemainingTenor3xIsNotNull()
+ Criteria andClRemainingTenor3xEqualTo(Long)
+ Criteria andClRemainingTenor3xNotEqualTo(Long)
+ Criteria andClRemainingTenor3xGreaterThan(Long)
+ Criteria andClRemainingTenor3xGreaterThanOrEqualTo(Long)
+ Criteria andClRemainingTenor3xLessThan(Long)
+ Criteria andClRemainingTenor3xLessThanOrEqualTo(Long)
+ Criteria andClRemainingTenor3xIn(List<Long>)
+ Criteria andClRemainingTenor3xNotIn(List<Long>)
+ Criteria andClRemainingTenor3xBetween(Long,Long)
+ Criteria andClRemainingTenor3xNotBetween(Long,Long)
+ Criteria andClRemainingTenor4xIsNull()
+ Criteria andClRemainingTenor4xIsNotNull()
+ Criteria andClRemainingTenor4xEqualTo(Long)
+ Criteria andClRemainingTenor4xNotEqualTo(Long)
+ Criteria andClRemainingTenor4xGreaterThan(Long)
+ Criteria andClRemainingTenor4xGreaterThanOrEqualTo(Long)
+ Criteria andClRemainingTenor4xLessThan(Long)
+ Criteria andClRemainingTenor4xLessThanOrEqualTo(Long)
+ Criteria andClRemainingTenor4xIn(List<Long>)
+ Criteria andClRemainingTenor4xNotIn(List<Long>)
+ Criteria andClRemainingTenor4xBetween(Long,Long)
+ Criteria andClRemainingTenor4xNotBetween(Long,Long)
+ Criteria andClRemainingTenor6xIsNull()
+ Criteria andClRemainingTenor6xIsNotNull()
+ Criteria andClRemainingTenor6xEqualTo(Long)
+ Criteria andClRemainingTenor6xNotEqualTo(Long)
+ Criteria andClRemainingTenor6xGreaterThan(Long)
+ Criteria andClRemainingTenor6xGreaterThanOrEqualTo(Long)
+ Criteria andClRemainingTenor6xLessThan(Long)
+ Criteria andClRemainingTenor6xLessThanOrEqualTo(Long)
+ Criteria andClRemainingTenor6xIn(List<Long>)
+ Criteria andClRemainingTenor6xNotIn(List<Long>)
+ Criteria andClRemainingTenor6xBetween(Long,Long)
+ Criteria andClRemainingTenor6xNotBetween(Long,Long)
+ Criteria andClRemainingTenor9xIsNull()
+ Criteria andClRemainingTenor9xIsNotNull()
+ Criteria andClRemainingTenor9xEqualTo(Long)
+ Criteria andClRemainingTenor9xNotEqualTo(Long)
+ Criteria andClRemainingTenor9xGreaterThan(Long)
+ Criteria andClRemainingTenor9xGreaterThanOrEqualTo(Long)
+ Criteria andClRemainingTenor9xLessThan(Long)
+ Criteria andClRemainingTenor9xLessThanOrEqualTo(Long)
+ Criteria andClRemainingTenor9xIn(List<Long>)
+ Criteria andClRemainingTenor9xNotIn(List<Long>)
+ Criteria andClRemainingTenor9xBetween(Long,Long)
+ Criteria andClRemainingTenor9xNotBetween(Long,Long)
+ Criteria andClRemainingTenor12xIsNull()
+ Criteria andClRemainingTenor12xIsNotNull()
+ Criteria andClRemainingTenor12xEqualTo(Long)
+ Criteria andClRemainingTenor12xNotEqualTo(Long)
+ Criteria andClRemainingTenor12xGreaterThan(Long)
+ Criteria andClRemainingTenor12xGreaterThanOrEqualTo(Long)
+ Criteria andClRemainingTenor12xLessThan(Long)
+ Criteria andClRemainingTenor12xLessThanOrEqualTo(Long)
+ Criteria andClRemainingTenor12xIn(List<Long>)
+ Criteria andClRemainingTenor12xNotIn(List<Long>)
+ Criteria andClRemainingTenor12xBetween(Long,Long)
+ Criteria andClRemainingTenor12xNotBetween(Long,Long)
+ Criteria andPlApprovedTenor1xIsNull()
+ Criteria andPlApprovedTenor1xIsNotNull()
+ Criteria andPlApprovedTenor1xEqualTo(Long)
+ Criteria andPlApprovedTenor1xNotEqualTo(Long)
+ Criteria andPlApprovedTenor1xGreaterThan(Long)
+ Criteria andPlApprovedTenor1xGreaterThanOrEqualTo(Long)
+ Criteria andPlApprovedTenor1xLessThan(Long)
+ Criteria andPlApprovedTenor1xLessThanOrEqualTo(Long)
+ Criteria andPlApprovedTenor1xIn(List<Long>)
+ Criteria andPlApprovedTenor1xNotIn(List<Long>)
+ Criteria andPlApprovedTenor1xBetween(Long,Long)
+ Criteria andPlApprovedTenor1xNotBetween(Long,Long)
+ Criteria andPlApprovedTenor2xIsNull()
+ Criteria andPlApprovedTenor2xIsNotNull()
+ Criteria andPlApprovedTenor2xEqualTo(Long)
+ Criteria andPlApprovedTenor2xNotEqualTo(Long)
+ Criteria andPlApprovedTenor2xGreaterThan(Long)
+ Criteria andPlApprovedTenor2xGreaterThanOrEqualTo(Long)
+ Criteria andPlApprovedTenor2xLessThan(Long)
+ Criteria andPlApprovedTenor2xLessThanOrEqualTo(Long)
+ Criteria andPlApprovedTenor2xIn(List<Long>)
+ Criteria andPlApprovedTenor2xNotIn(List<Long>)
+ Criteria andPlApprovedTenor2xBetween(Long,Long)
+ Criteria andPlApprovedTenor2xNotBetween(Long,Long)
+ Criteria andPlApprovedTenor3xIsNull()
+ Criteria andPlApprovedTenor3xIsNotNull()
+ Criteria andPlApprovedTenor3xEqualTo(Long)
+ Criteria andPlApprovedTenor3xNotEqualTo(Long)
+ Criteria andPlApprovedTenor3xGreaterThan(Long)
+ Criteria andPlApprovedTenor3xGreaterThanOrEqualTo(Long)
+ Criteria andPlApprovedTenor3xLessThan(Long)
+ Criteria andPlApprovedTenor3xLessThanOrEqualTo(Long)
+ Criteria andPlApprovedTenor3xIn(List<Long>)
+ Criteria andPlApprovedTenor3xNotIn(List<Long>)
+ Criteria andPlApprovedTenor3xBetween(Long,Long)
+ Criteria andPlApprovedTenor3xNotBetween(Long,Long)
+ Criteria andPlApprovedTenor4xIsNull()
+ Criteria andPlApprovedTenor4xIsNotNull()
+ Criteria andPlApprovedTenor4xEqualTo(Long)
+ Criteria andPlApprovedTenor4xNotEqualTo(Long)
+ Criteria andPlApprovedTenor4xGreaterThan(Long)
+ Criteria andPlApprovedTenor4xGreaterThanOrEqualTo(Long)
+ Criteria andPlApprovedTenor4xLessThan(Long)
+ Criteria andPlApprovedTenor4xLessThanOrEqualTo(Long)
+ Criteria andPlApprovedTenor4xIn(List<Long>)
+ Criteria andPlApprovedTenor4xNotIn(List<Long>)
+ Criteria andPlApprovedTenor4xBetween(Long,Long)
+ Criteria andPlApprovedTenor4xNotBetween(Long,Long)
+ Criteria andPlApprovedTenor6xIsNull()
+ Criteria andPlApprovedTenor6xIsNotNull()
+ Criteria andPlApprovedTenor6xEqualTo(Long)
+ Criteria andPlApprovedTenor6xNotEqualTo(Long)
+ Criteria andPlApprovedTenor6xGreaterThan(Long)
+ Criteria andPlApprovedTenor6xGreaterThanOrEqualTo(Long)
+ Criteria andPlApprovedTenor6xLessThan(Long)
+ Criteria andPlApprovedTenor6xLessThanOrEqualTo(Long)
+ Criteria andPlApprovedTenor6xIn(List<Long>)
+ Criteria andPlApprovedTenor6xNotIn(List<Long>)
+ Criteria andPlApprovedTenor6xBetween(Long,Long)
+ Criteria andPlApprovedTenor6xNotBetween(Long,Long)
+ Criteria andPlApprovedTenor9xIsNull()
+ Criteria andPlApprovedTenor9xIsNotNull()
+ Criteria andPlApprovedTenor9xEqualTo(Long)
+ Criteria andPlApprovedTenor9xNotEqualTo(Long)
+ Criteria andPlApprovedTenor9xGreaterThan(Long)
+ Criteria andPlApprovedTenor9xGreaterThanOrEqualTo(Long)
+ Criteria andPlApprovedTenor9xLessThan(Long)
+ Criteria andPlApprovedTenor9xLessThanOrEqualTo(Long)
+ Criteria andPlApprovedTenor9xIn(List<Long>)
+ Criteria andPlApprovedTenor9xNotIn(List<Long>)
+ Criteria andPlApprovedTenor9xBetween(Long,Long)
+ Criteria andPlApprovedTenor9xNotBetween(Long,Long)
+ Criteria andPlApprovedTenor12xIsNull()
+ Criteria andPlApprovedTenor12xIsNotNull()
+ Criteria andPlApprovedTenor12xEqualTo(Long)
+ Criteria andPlApprovedTenor12xNotEqualTo(Long)
+ Criteria andPlApprovedTenor12xGreaterThan(Long)
+ Criteria andPlApprovedTenor12xGreaterThanOrEqualTo(Long)
+ Criteria andPlApprovedTenor12xLessThan(Long)
+ Criteria andPlApprovedTenor12xLessThanOrEqualTo(Long)
+ Criteria andPlApprovedTenor12xIn(List<Long>)
+ Criteria andPlApprovedTenor12xNotIn(List<Long>)
+ Criteria andPlApprovedTenor12xBetween(Long,Long)
+ Criteria andPlApprovedTenor12xNotBetween(Long,Long)
+ Criteria andPlRemainingTenor1xIsNull()
+ Criteria andPlRemainingTenor1xIsNotNull()
+ Criteria andPlRemainingTenor1xEqualTo(Long)
+ Criteria andPlRemainingTenor1xNotEqualTo(Long)
+ Criteria andPlRemainingTenor1xGreaterThan(Long)
+ Criteria andPlRemainingTenor1xGreaterThanOrEqualTo(Long)
+ Criteria andPlRemainingTenor1xLessThan(Long)
+ Criteria andPlRemainingTenor1xLessThanOrEqualTo(Long)
+ Criteria andPlRemainingTenor1xIn(List<Long>)
+ Criteria andPlRemainingTenor1xNotIn(List<Long>)
+ Criteria andPlRemainingTenor1xBetween(Long,Long)
+ Criteria andPlRemainingTenor1xNotBetween(Long,Long)
+ Criteria andPlRemainingTenor2xIsNull()
+ Criteria andPlRemainingTenor2xIsNotNull()
+ Criteria andPlRemainingTenor2xEqualTo(Long)
+ Criteria andPlRemainingTenor2xNotEqualTo(Long)
+ Criteria andPlRemainingTenor2xGreaterThan(Long)
+ Criteria andPlRemainingTenor2xGreaterThanOrEqualTo(Long)
+ Criteria andPlRemainingTenor2xLessThan(Long)
+ Criteria andPlRemainingTenor2xLessThanOrEqualTo(Long)
+ Criteria andPlRemainingTenor2xIn(List<Long>)
+ Criteria andPlRemainingTenor2xNotIn(List<Long>)
+ Criteria andPlRemainingTenor2xBetween(Long,Long)
+ Criteria andPlRemainingTenor2xNotBetween(Long,Long)
+ Criteria andPlRemainingTenor3xIsNull()
+ Criteria andPlRemainingTenor3xIsNotNull()
+ Criteria andPlRemainingTenor3xEqualTo(Long)
+ Criteria andPlRemainingTenor3xNotEqualTo(Long)
+ Criteria andPlRemainingTenor3xGreaterThan(Long)
+ Criteria andPlRemainingTenor3xGreaterThanOrEqualTo(Long)
+ Criteria andPlRemainingTenor3xLessThan(Long)
+ Criteria andPlRemainingTenor3xLessThanOrEqualTo(Long)
+ Criteria andPlRemainingTenor3xIn(List<Long>)
+ Criteria andPlRemainingTenor3xNotIn(List<Long>)
+ Criteria andPlRemainingTenor3xBetween(Long,Long)
+ Criteria andPlRemainingTenor3xNotBetween(Long,Long)
+ Criteria andPlRemainingTenor4xIsNull()
+ Criteria andPlRemainingTenor4xIsNotNull()
+ Criteria andPlRemainingTenor4xEqualTo(Long)
+ Criteria andPlRemainingTenor4xNotEqualTo(Long)
+ Criteria andPlRemainingTenor4xGreaterThan(Long)
+ Criteria andPlRemainingTenor4xGreaterThanOrEqualTo(Long)
+ Criteria andPlRemainingTenor4xLessThan(Long)
+ Criteria andPlRemainingTenor4xLessThanOrEqualTo(Long)
+ Criteria andPlRemainingTenor4xIn(List<Long>)
+ Criteria andPlRemainingTenor4xNotIn(List<Long>)
+ Criteria andPlRemainingTenor4xBetween(Long,Long)
+ Criteria andPlRemainingTenor4xNotBetween(Long,Long)
+ Criteria andPlRemainingTenor6xIsNull()
+ Criteria andPlRemainingTenor6xIsNotNull()
+ Criteria andPlRemainingTenor6xEqualTo(Long)
+ Criteria andPlRemainingTenor6xNotEqualTo(Long)
+ Criteria andPlRemainingTenor6xGreaterThan(Long)
+ Criteria andPlRemainingTenor6xGreaterThanOrEqualTo(Long)
+ Criteria andPlRemainingTenor6xLessThan(Long)
+ Criteria andPlRemainingTenor6xLessThanOrEqualTo(Long)
+ Criteria andPlRemainingTenor6xIn(List<Long>)
+ Criteria andPlRemainingTenor6xNotIn(List<Long>)
+ Criteria andPlRemainingTenor6xBetween(Long,Long)
+ Criteria andPlRemainingTenor6xNotBetween(Long,Long)
+ Criteria andPlRemainingTenor9xIsNull()
+ Criteria andPlRemainingTenor9xIsNotNull()
+ Criteria andPlRemainingTenor9xEqualTo(Long)
+ Criteria andPlRemainingTenor9xNotEqualTo(Long)
+ Criteria andPlRemainingTenor9xGreaterThan(Long)
+ Criteria andPlRemainingTenor9xGreaterThanOrEqualTo(Long)
+ Criteria andPlRemainingTenor9xLessThan(Long)
+ Criteria andPlRemainingTenor9xLessThanOrEqualTo(Long)
+ Criteria andPlRemainingTenor9xIn(List<Long>)
+ Criteria andPlRemainingTenor9xNotIn(List<Long>)
+ Criteria andPlRemainingTenor9xBetween(Long,Long)
+ Criteria andPlRemainingTenor9xNotBetween(Long,Long)
+ Criteria andPlRemainingTenor12xIsNull()
+ Criteria andPlRemainingTenor12xIsNotNull()
+ Criteria andPlRemainingTenor12xEqualTo(Long)
+ Criteria andPlRemainingTenor12xNotEqualTo(Long)
+ Criteria andPlRemainingTenor12xGreaterThan(Long)
+ Criteria andPlRemainingTenor12xGreaterThanOrEqualTo(Long)
+ Criteria andPlRemainingTenor12xLessThan(Long)
+ Criteria andPlRemainingTenor12xLessThanOrEqualTo(Long)
+ Criteria andPlRemainingTenor12xIn(List<Long>)
+ Criteria andPlRemainingTenor12xNotIn(List<Long>)
+ Criteria andPlRemainingTenor12xBetween(Long,Long)
+ Criteria andPlRemainingTenor12xNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.CreditAccountRemainingTrackExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.CreditAccountRemainingTrackExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.dto.cmd.NsLoanListQry {
}
class com.welab.loan.finance.vo.PlanApplyInfoVO {
- BigDecimal disDownPaymentRatio
- BigDecimal disAdminFeeRatio
- BigDecimal disServiceFeeRatio
- BigDecimal disPrincipalRatio
- BigDecimal disLateFeeRatio
- BigDecimal beheadingFee
- BigDecimal disDownPaymentFee
- BigDecimal disAdminFee
- BigDecimal disServiceFee
- BigDecimal disPrincipal
- BigDecimal disLateFee
}
class com.welab.loan.finance.app.service.tb.TbDisbursementQryExe {
- BaseTbDisbursementService baseTbDisbursementService
- MongoManager mongoManager
- FundService fundService
- BaseLoanDetailService baseLoanDetailService
- FundAccountInfoServiceFacade fundAccountInfoServiceFacade
- TbServiceFacade tbServiceFacade
- FinanceTradingManager financeTradingManager
+ {static} List<Long> EXCLUDE_ORGIDS
+ PageInfo<TbDisbursementVO> excute(TbDisbursementQry)
- void dataFill(List<TbDisbursementVO>)
- void hsoFill(TbDisbursementVO,HsoTbLoanDoc)
- void travelokaFill(TbDisbursementVO,TbLoanDoc)
- void restockFill(TbDisbursementVO,TbLoanDoc)
+ PageInfo<TbDisbursementVO> executeList(TbDisbursementQry)
- void tbDataFill(List<TbDisbursementVO>)
}
class com.welab.loan.finance.app.manager.TbLendBatchManager {
- BaseTbLendBatchService baseTbLendBatchService
+ boolean initTbLendBatch(String,String,long,Date)
}
class com.welab.loan.finance.vo.credit.CreditActivityAbTestSaveGroupRequestVo {
- Long id
- String matrixType
- List<String> userTag
- String userIdDigitId2Redis
- String userIdLastNums
- Integer userGroupRuleType
- Set<Long> userIdSet
}
class com.welab.loan.finance.service.impl.FinanceUserBankcardSeviceImpl {
- ValidatorService validatorService
- BaseUserBankCardService baseUserBankCardService
- ApplicationService applicationService
- UserProfilesService userProfilesService
- FinanceConfigServiceImpl financeConfigService
- Integer checkNameLength
~ Boolean mock
- LoansService applicationLoansService
- BaseFinanceLendService baseFinanceLendService
- BaseFinanceTrading baseFinanceTrading
- LoanDetailMapper loanDetailMapper
- BaseCreditUserAccountService userAccountService
- BaseLevenshteinScoreService baseLevenshteinScoreService
- PaperworkDataService paperworkDataService
- BaseRabbitTemplate baseRabbitTemplate
- LoanDelayMapper loanDelayMapper
- BaseLoanCodeService baseLoanCodeService
- PayService payService
- BaseLoanService baseLoanService
- DocumentService documentService
- UserProfilesTrackService userProfilesTrackService
- FinanceUserBankcardLogService financeUserBankcardLogService
- JedisCluster jedisCluster
- MaumodalService maumodalService
- BcaTransferService bcaTransferService
- CashFlowStatusService cashFlowStatusService
+ Response saveUserBankCard(FinanceUserBankcardDto)
- void notifyAccountCenter(FinanceUserBankcardDto,FinanceUserBankcard,FinanceUserBankcard)
- Response checkUserName(FinanceUserBankcardDto)
- void refundTradingLoan(LoanDetail,FinanceTrading,boolean,boolean)
- void disableLend(FinanceLend)
- void cancelTrading(String)
- void beforeSignByDdm(LoanDetail)
- void refundDelayLendLoan(Long)
+ FinanceUserBankcard checkAccount(FinanceUserBankcard,BankAccountVO)
- boolean checkName(String,String,Long)
- int getScore(String,String)
+ Response<Boolean> checkBankCard(CheckBankCardDto)
+ Response<UserBankcardVO> queryBankCardByUserId(Long)
+ Response<UserBankcardVO> queryBankCardByUserId(Long,Long)
+ Response<UserBankcardVO> queryBankCardByUserIdForMaumodal(Long,Long,Byte)
+ Response<UserBankcardVO> queryBankCardByUserIdAndOrgId(Long,Long)
+ Response<List<UserBankcardVO>> queryBankCardListByUserId(Long)
+ Response<List<UserBankcardVO>> queryBankCardListByUserId(Long,Long)
+ Response<UserBankcardVO> getUseBankCardByUserId(Long)
+ Response<UserBankcardVO> getUseBankCardByUserId(Long,Long)
+ Response<List<UserBankcardVO>> findUsercardList(Long)
+ PageBean queryUserBankCardPage(UserBankCardDto)
+ Response<Boolean> deleteUserBankCard(Long)
+ Response<Integer> getCountByUserIds(Long,Date,Date,List<Long>)
+ Response<Long> countBankCardByUserId(Long)
+ Response<Long> countBankCardByUserId(Long,Long)
+ Response<UserCardDTO> findUserCard(Long)
+ Response<UserCardDTO> findUserCard(Long,Long)
+ Response<Boolean> checkUnFinishedLoan(CheckUnFinishedLoanDto)
+ Response saveUserBankCardByTest(FinanceUserBankcardDto)
- Response<List<UnFinishedLoanVO>> checkUnFinishedLoanByBankAccountNumber(Long,Long,String)
- {static} String trim(String,String,String)
- LoanDetail findLoanByUserId(Long,Long)
- LoanDetail findLoanByLoanNumber(String)
+ Boolean checkBindCardAuth(Long,Long)
+ Response changeBindCard(FinanceUserBankcardDto)
+ long getCardByNumber(FinanceUserBankcardDto)
+ long countCardByNumber(FinanceUserBankcardDto)
- void saveUnAvailableBankCard(FinanceUserBankcardDto)
+ List<UserBankcardVO> findByAccountNumber(List<String>,Long)
}
class com.welab.loan.finance.core.dues.vat.impl.CarryingFeeVatCost {
+ String dueType()
+ BigDecimal doCalc(BigDecimal,BigDecimal)
}
class com.welab.loan.finance.model.BankConfig {
- Integer id
- Byte type
- String keyn
- String value
- Boolean isEnable
- Integer sort
+ Integer getId()
+ void setId(Integer)
+ Byte getType()
+ void setType(Byte)
+ String getKeyn()
+ void setKeyn(String)
+ String getValue()
+ void setValue(String)
+ Boolean getIsEnable()
+ void setIsEnable(Boolean)
+ Integer getSort()
+ void setSort(Integer)
}
class com.welab.loan.finance.model.CreditProxyIncomeLogExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditProxyIncomeLogExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditProxyIncomeLogExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andProxyIncomeOldIsNull()
+ Criteria andProxyIncomeOldIsNotNull()
+ Criteria andProxyIncomeOldEqualTo(Long)
+ Criteria andProxyIncomeOldNotEqualTo(Long)
+ Criteria andProxyIncomeOldGreaterThan(Long)
+ Criteria andProxyIncomeOldGreaterThanOrEqualTo(Long)
+ Criteria andProxyIncomeOldLessThan(Long)
+ Criteria andProxyIncomeOldLessThanOrEqualTo(Long)
+ Criteria andProxyIncomeOldIn(List<Long>)
+ Criteria andProxyIncomeOldNotIn(List<Long>)
+ Criteria andProxyIncomeOldBetween(Long,Long)
+ Criteria andProxyIncomeOldNotBetween(Long,Long)
+ Criteria andProxyIncomeNewIsNull()
+ Criteria andProxyIncomeNewIsNotNull()
+ Criteria andProxyIncomeNewEqualTo(Long)
+ Criteria andProxyIncomeNewNotEqualTo(Long)
+ Criteria andProxyIncomeNewGreaterThan(Long)
+ Criteria andProxyIncomeNewGreaterThanOrEqualTo(Long)
+ Criteria andProxyIncomeNewLessThan(Long)
+ Criteria andProxyIncomeNewLessThanOrEqualTo(Long)
+ Criteria andProxyIncomeNewIn(List<Long>)
+ Criteria andProxyIncomeNewNotIn(List<Long>)
+ Criteria andProxyIncomeNewBetween(Long,Long)
+ Criteria andProxyIncomeNewNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.CreditProxyIncomeLogExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.CreditProxyIncomeLogExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.service.business.ReversalService {
- BaseLoanRepaymentService loanRepaymentService
- BaseLoanReversalService loanReversalService
- FlowTaskService flowTaskService
- FinanceRepaymentTrackManager repaymentTrackManager
- BaseLoanDetailService loanDetailService
- TrackServiceImpl trackServiceImpl
+ Response<String> reversalByExcel(List<ReversalExcelVo>,Long,String)
- boolean preCheck(String,List<String>,String,StringBuilder)
- boolean check(String,List<String>,List<LoanRepayment>,List<String>,StringBuilder,String)
+ void startFlow(String,String,Long,Long,List<LoanRepayment>,String)
}
class com.welab.loan.finance.job.CustomAdvanceJob {
- int PAGESIZE
- BaseLoanService baseLoanService
- LoanApplyPlansMapper loanApplyPlansMapper
- LoanPlansRelationMapper loanPlansRelationMapper
- BaseRabbitTemplate rabbitTemplate
- LoanDetailMapper loanDetailMapper
- BaseLoanApplyRepaymentService loanApplyRepaymentService
- MessageProducer messageProducer
+ void execute(ShardingContext)
# Set<Long> handleCustomAdvance(Date)
# Set<Long> handlePlan(Date)
- Set<Long> handle(List<LoanDetail>,Date)
- Set<Long> handlePlanList(List<LoanApplyPlans>)
- boolean findCustomRest(String,Date)
# boolean countApplyCPlans(String,Date)
# int delApplyPlans(Long)
# LoanApplyPlansExample createPlanExample(Date,long,byte)
}
interface com.welab.loan.finance.service.FinanceUserBankcardSevice {
~ Response saveUserBankCard(FinanceUserBankcardDto)
~ Response<Boolean> checkBankCard(CheckBankCardDto)
~ Response<UserBankcardVO> queryBankCardByUserId(Long)
~ Response<UserBankcardVO> queryBankCardByUserId(Long,Long)
~ Response<UserBankcardVO> queryBankCardByUserIdForMaumodal(Long,Long,Byte)
~ Response<UserBankcardVO> queryBankCardByUserIdAndOrgId(Long,Long)
~ Response<List<UserBankcardVO>> queryBankCardListByUserId(Long)
~ Response<List<UserBankcardVO>> queryBankCardListByUserId(Long,Long)
~ Response<UserBankcardVO> getUseBankCardByUserId(Long)
~ Response<UserBankcardVO> getUseBankCardByUserId(Long,Long)
~ Response<List<UserBankcardVO>> findUsercardList(Long)
~ PageBean queryUserBankCardPage(UserBankCardDto)
~ Response<Boolean> deleteUserBankCard(Long)
~ Response<Integer> getCountByUserIds(Long,Date,Date,List<Long>)
~ Response<Long> countBankCardByUserId(Long)
~ Response<Long> countBankCardByUserId(Long,Long)
~ Response<UserCardDTO> findUserCard(Long)
~ Response<UserCardDTO> findUserCard(Long,Long)
~ Response<Boolean> checkUnFinishedLoan(CheckUnFinishedLoanDto)
~ Response saveUserBankCardByTest(FinanceUserBankcardDto)
~ Boolean checkBindCardAuth(Long,Long)
~ Response changeBindCard(FinanceUserBankcardDto)
~ long getCardByNumber(FinanceUserBankcardDto)
~ long countCardByNumber(FinanceUserBankcardDto)
~ List<UserBankcardVO> findByAccountNumber(List<String>,Long)
}
class com.welab.loan.finance.app.command.credit.CreditUserTagUpdateByAdminCmdExe {
- BaseCreditUserTagService baseCreditUserTagService
- Map<String,String> tenorStrMap
+ void addorDeleteTagConfig(CreditConfigVO)
+ void deleteTenor(CreditConfigVO)
- void addTenor(CreditConfigVO)
- void addTag(CreditConfigVO)
- void addNewTag(CreditUserTagConfig,String)
- void initConfig(JSONObject,String)
- void initConfig(CreditUserTagConfig)
- void initConfig(CreditConfigForTenorExt)
}
class com.welab.loan.finance.dto.cmd.TbDisbursementQry {
- {static} long serialVersionUID
- String partner
- String orderNo
- String loanNumber
- String mobile
- String disbursementTimeStart
- String disbursementTimeEnd
- String uploadDateStart
- String uploadDateEnd
- Long adminId
- Long orgId
- List<Long> orgIds
- String lendBatchNo
- String fundIds
- String statusList
}
class com.welab.loan.finance.app.impl.IEplanServiceImpl {
- BaseLoanPlanRelationService baseLoanPlansRelationService
- EPlanTryCalculationCmdExe ePlanTryCalculationCmdExe
- EPlanCheckCmdExe ePlanCheckCmdExe
- EPlanCalculationCmdExe ePlanCalculationCmdExe
- EPlanApplyCmdExe ePlanApplyCmdExe
- BackstageConfigServiceFacade backstageConfigServiceFacade
+ List<LoanPlansRelationDTO> getEplanLoans(Long)
+ Response<EPlanTryCalculationListVO> tryEplan(List<String>)
- boolean switchIsOpen(PlansTypeEnum)
+ Response<EPlanTryCalculationListVO> tryEplanForUser(Long)
+ Response<CalEPlanAmountDTO> tryEPlanForCollection(TryEPlanDTO)
+ Response applyEPlan(TryEPlanDTO)
+ Response checkEPlanAuth(List<String>)
+ Response<EContractInfoVO> tryEPlanForContract(String)
}
class com.welab.loan.finance.vo.request.QueryPayLaterLoanVo {
}
class com.welab.loan.finance.dto.tb.TbLendNotifyDTO {
- {static} long serialVersionUID
- String lendBatchNo
- Date lendTime
}
class com.welab.loan.finance.job.LendReversalReportJob {
- BaseLendReversalService lendReversalService
- UserServiceFacade userServiceFacade
+ void execute(ShardingContext)
+ List quaryList(String)
+ LendReversalVo transform(Object)
+ LinkedHashMap getExcelHead()
+ String getSubject(String)
+ void setEmailUser()
}
class com.welab.loan.finance.rabbitmq.syn.SynDelayConsumer {
- BaseRabbitTemplate baseRabbitTemplate
+ void onMessage(Message)
}
interface com.welab.loan.finance.service.LevenshteinScoreService {
~ Response<Integer> getUserScore(Long)
}
class com.welab.loan.finance.utils.QlExpressUtils {
- <<Create>> QlExpressUtils()
+ {static} Object executeQlExpress(ExpressRunner,DefaultContext<String,Object>,String)
}
class com.welab.loan.finance.controller.CreditActivityAbTestController {
- CreditActivityAbTestService creditActivityAbTestService
- BaseCreditUserTagService baseCreditUserTagService
- BaseFinanceExport baseFinanceExport
- CreditAbTestExportService creditAbTestExportService
- UserServiceFacade userServiceFacade
+ Response<PageInfo<CreditActivityAbTestResponseVo>> getActivityList(Integer,Integer,CreditActivityAbTestRequestVo)
+ Response<CreditActivityAbTestCountStatusVo> countActivityStatus()
+ Response<PageInfo<CreditActivityAbTestGroupResponseVo>> getTestGroupList(Integer,Integer,CreditActivityAbTestRequestVo)
+ Response<String> importTestUserIds(MultipartFile)
+ Response<Object> saveOrUpdateGroupAndActivity(Long,CreditActivityAbTestSaveBaseRequestVo)
+ Response<CreditActivityAbTestBaseResponseVo> getActivityDetailByTestGroupId(Long)
+ Response<JSONObject> getFundRateBySecondProductCode(CreditActivityAbTestQueryVo)
+ Response<CreditActivityAbTestRateVo> calculateAbTestRateVo(CreditActivityAbTestRateVo)
+ Response<List<String>> getTagListByMatrixType(String)
+ Response<CreditActivityAbTestBaseResponseVo> updateActivityStatus(CreditActivityAbTestQueryVo,Long)
+ Response<List<CreditActivityAbTestExportVo>> getExportList(Long)
+ Response<Object> createExport(Long,Long)
+ Response<Object> downLoadExport(String,HttpServletResponse)
+ Response<CreditActivityAbTestUserVo> getAbtestUserInfo(Long)
+ Response<List<CreditActivityAbTestDataVo>> getAbtestData(Long,Integer)
+ Response<CreditActivityAbTestUserVo> trialCalculationAbtestUser(CreditActivityAbTestUsertrialCalculationVo)
+ void downLoadTestGroupList(Long,HttpServletResponse)
}
interface com.welab.loan.finance.enums.InsuranceDetailEnum {
}
enum com.welab.loan.finance.enums.TypeEnum {
+  POLICY
+  CLAIM
- byte value
- String name
- String desc
+ {static} InsuranceDetailEnum.TypeEnum getByValue(byte)
}
class com.welab.loan.finance.dto.paylater.QuotaByMonthlyIncomDTO {
- Long userId
- Long amount
- String tag
}
class com.welab.loan.finance.dto.paylater.PayLaterLoanDTO {
- String loanNumber
- String status
- Long sumAmount
- Long sumRemainingAmount
- Long sumSettledAmount
- BigDecimal interestAmount
- String applyPeriod
- Long applyAmount
- String period
- String orderNo
- List<DuesExtDTO> duesList
}
class com.welab.loan.finance.app.service.CreditAccountTrackService {
- CreditAccountTrackCmdExe creditAccountTrackCmdExe
+ void save(CreditAccountTrackCmd)
}
class com.welab.loan.finance.model.ext.CreditUserTagExt {
- String secondProductCode
- String tenor
- Boolean itemStatus
}
class com.welab.loan.finance.dto.LoanCouponDTO {
+ String loanNumber
- String promotionCode
}
class com.welab.loan.finance.common.BizTypeHelper {
+ {static} boolean isRebookOrder(Byte)
+ {static} boolean isTbOrder(Byte)
}
class com.welab.loan.finance.model.LoanPlansRelationExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanPlansRelationExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanPlansRelationExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andDownPaymentAmountIsNull()
+ Criteria andDownPaymentAmountIsNotNull()
+ Criteria andDownPaymentAmountEqualTo(Long)
+ Criteria andDownPaymentAmountNotEqualTo(Long)
+ Criteria andDownPaymentAmountGreaterThan(Long)
+ Criteria andDownPaymentAmountGreaterThanOrEqualTo(Long)
+ Criteria andDownPaymentAmountLessThan(Long)
+ Criteria andDownPaymentAmountLessThanOrEqualTo(Long)
+ Criteria andDownPaymentAmountIn(List<Long>)
+ Criteria andDownPaymentAmountNotIn(List<Long>)
+ Criteria andDownPaymentAmountBetween(Long,Long)
+ Criteria andDownPaymentAmountNotBetween(Long,Long)
+ Criteria andPeriodIsNull()
+ Criteria andPeriodIsNotNull()
+ Criteria andPeriodEqualTo(String)
+ Criteria andPeriodNotEqualTo(String)
+ Criteria andPeriodGreaterThan(String)
+ Criteria andPeriodGreaterThanOrEqualTo(String)
+ Criteria andPeriodLessThan(String)
+ Criteria andPeriodLessThanOrEqualTo(String)
+ Criteria andPeriodLike(String)
+ Criteria andPeriodNotLike(String)
+ Criteria andPeriodIn(List<String>)
+ Criteria andPeriodNotIn(List<String>)
+ Criteria andPeriodBetween(String,String)
+ Criteria andPeriodNotBetween(String,String)
+ Criteria andOldLoanNumberIsNull()
+ Criteria andOldLoanNumberIsNotNull()
+ Criteria andOldLoanNumberEqualTo(String)
+ Criteria andOldLoanNumberNotEqualTo(String)
+ Criteria andOldLoanNumberGreaterThan(String)
+ Criteria andOldLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andOldLoanNumberLessThan(String)
+ Criteria andOldLoanNumberLessThanOrEqualTo(String)
+ Criteria andOldLoanNumberLike(String)
+ Criteria andOldLoanNumberNotLike(String)
+ Criteria andOldLoanNumberIn(List<String>)
+ Criteria andOldLoanNumberNotIn(List<String>)
+ Criteria andOldLoanNumberBetween(String,String)
+ Criteria andOldLoanNumberNotBetween(String,String)
+ Criteria andOldPeriodIsNull()
+ Criteria andOldPeriodIsNotNull()
+ Criteria andOldPeriodEqualTo(String)
+ Criteria andOldPeriodNotEqualTo(String)
+ Criteria andOldPeriodGreaterThan(String)
+ Criteria andOldPeriodGreaterThanOrEqualTo(String)
+ Criteria andOldPeriodLessThan(String)
+ Criteria andOldPeriodLessThanOrEqualTo(String)
+ Criteria andOldPeriodLike(String)
+ Criteria andOldPeriodNotLike(String)
+ Criteria andOldPeriodIn(List<String>)
+ Criteria andOldPeriodNotIn(List<String>)
+ Criteria andOldPeriodBetween(String,String)
+ Criteria andOldPeriodNotBetween(String,String)
+ Criteria andApplyIdIsNull()
+ Criteria andApplyIdIsNotNull()
+ Criteria andApplyIdEqualTo(Long)
+ Criteria andApplyIdNotEqualTo(Long)
+ Criteria andApplyIdGreaterThan(Long)
+ Criteria andApplyIdGreaterThanOrEqualTo(Long)
+ Criteria andApplyIdLessThan(Long)
+ Criteria andApplyIdLessThanOrEqualTo(Long)
+ Criteria andApplyIdIn(List<Long>)
+ Criteria andApplyIdNotIn(List<Long>)
+ Criteria andApplyIdBetween(Long,Long)
+ Criteria andApplyIdNotBetween(Long,Long)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andFundSignAtIsNull()
+ Criteria andFundSignAtIsNotNull()
+ Criteria andFundSignAtEqualTo(Date)
+ Criteria andFundSignAtNotEqualTo(Date)
+ Criteria andFundSignAtGreaterThan(Date)
+ Criteria andFundSignAtGreaterThanOrEqualTo(Date)
+ Criteria andFundSignAtLessThan(Date)
+ Criteria andFundSignAtLessThanOrEqualTo(Date)
+ Criteria andFundSignAtIn(List<Date>)
+ Criteria andFundSignAtNotIn(List<Date>)
+ Criteria andFundSignAtBetween(Date,Date)
+ Criteria andFundSignAtNotBetween(Date,Date)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
}
class com.welab.loan.finance.model.LoanPlansRelationExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanPlansRelationExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.dto.loan.LoanDetailDto {
- Long id
- String loanNumber
- Long orgId
- String period
- Long amount
- Date applyAt
- Long userId
- String userName
- String mobile
- String productCode
- Date lendAt
- Byte lendType
- Byte lendStatus
- Byte retryNum
- Byte repayStatus
- Date createAt
- Date updateAt
- Boolean isAdvance
- Long advanceAmount
- Long customAmount
- String riskLevel
- String scoreClass
- BigDecimal interestRate
- BigDecimal fundInterestRate
- BigDecimal serviceFeeRate
- BigDecimal adminRate
- BigDecimal lateRate
- BigDecimal advanceRate
- String label
- Date advanceTime
- Date labelUpdateAt
- Long overAmount
- Date approvedAt
- Date fundAt
- String applySecondCode
- Long applyAmount
- String applyPeriod
- String secondProdCode
- Byte productType
- Long adminFee
- Date fundSignAt
- Date timeOut
- Long fundId
- Long repayDueAmount
- String promotionCode
- Date labelExpiredAt
- Boolean isSign
- Boolean isSkip
- String origin
- String sourceId
- String specialPromotion
- String loanTransfer
- String previousLoan
- Integer userType
- Byte bizType
- String batchNo
- LoanDetailExtendDto loanDetailExtendDto
}
class com.welab.loan.finance.app.command.plan.ApplyFPlanCmdExcute {
- FPlanManager fPlanManager
- PlanService planService
- LoanDetailManager loanDetailManager
- BaseRabbitTemplate baseRabbitTemplate
- BaseLoanApplyPlansService baseLoanApplyPlansService
- TryApplyFPlanCmdExcute tryApplyFPlanCmdExcute
- LoanCessieInfoService loanCessieInfoService
+ Response<Void> excute(ApplyFPlanCmd)
}
class com.welab.loan.finance.test.SimpleTest {
+ <<Create>> SimpleTest()
+ void initializeBefore()
+ {static} void print(Object)
}
class com.welab.loan.finance.controller.CreditTagController {
- CreditConfigImpl creditConfigImpl
+ Response<List<String>> getTagList()
}
interface com.welab.loan.finance.mapper.ext.LoanOverdueInfoExtMapper {
~ int updateOverdueFullByLoanNumber(String,Integer)
~ int updateCloseByLoanNumber(List<String>)
~ int countByLoanNumberAndDueIndex(String,Integer)
~ int addOverdueDays()
~ List<LoanOverdueInfo> findLoanOverdueByUserId(Long)
~ List<Map<String,Object>> selectReportOverdueDays(ReportOverdueInfoDTO)
~ int updateOverdueSyn()
~ long countLoanOverdueByUser()
~ List<Long> findLoanOverdueByUser(Map<String,Integer>)
~ List<Map<String,Object>> getUserMaxDpd(List<Long>,Boolean,List<String>)
~ List<Map<String,Object>> queryMaxOverdueDay(List<String>)
~ long countLoanOverdueByDay(List<Integer>)
~ List<LoanOverdueInfo> findLoanOverdueByDay(List<Integer>,Integer,Integer)
~ int currentMaxOverdueDay(String)
~ int findMaxOverdueDay(LoanOverdueQry)
~ List<MaxOverDueDto> findMaxOverdueById(Long)
~ List<MaxOverDueDto> findMaxOverdueByIdAndCode(Long,String)
~ Integer getMaxOverdueDayByUserId(Long)
~ List<LoanMaxOverDueDayDTO> queryLoanMaxOverdueDay(List<String>)
~ List<LoanMaxOverDueDayDTO> listLoanMaxOverdueDay(List<String>)
~ List<Long> findUserIdList()
~ Integer getTotalBillTenor(String)
~ int resetOverDueFullByLoanNumber(String)
}
class com.welab.loan.finance.core.dto.credit.CreditActivityAbTestDto {
- List<String> activityStatusList
- CreditActivityAbTestGroup creditActivityAbTestGroup
}
class com.welab.loan.finance.dto.cmd.TbDuesQry {
- String partner
- Long orgId
- List<Long> orgIds
- String orderNo
- String loanNumber
- Long userId
- Long adminId
}
class com.welab.loan.finance.app.manager.PayBillsManager {
- BasePayBillsService basePayBillsService
- BaseRepaymentTrack baseRepaymentTrack
- ApplicationContext applicationContext
- GatewayRepaymentOrderServiceFacade gatewayRepaymentOrderServiceFacade
- BaseBigFieldParamService baseBigFieldParamService
- JedisCluster jedisCluster
- VirtualAccountServiceFacade virtualAccountServiceFacade
- UserServiceFacade userServiceFacade
- BaseLoanDetailService baseLoanDetailService
- BaseDuesService baseDuesService
- BaseLoanRepaymentService baseLoanRepaymentService
- ReversalService reversalService
- Map<String,AbstractPayBillsService> billsServiceMap
+ void init()
+ List<BillAmountReportVO> bills(String)
+ PageInfo<PayBills> query(BillsQry)
+ int importBills(String,MultipartFile)
+ PayBills refresh(Long)
+ void repaymentRefresh(String,String,Date)
+ Response<List<BillRechargeInfoVO>> getRechargeInfo(Long)
+ Response<List<BillReverseInfoVO>> getReverseInfo(Long)
+ Response<PayBills> reversal(Long,Long)
- List<FinanceRepaymentTrack> getPayTrack(Long)
}
class com.welab.loan.finance.core.dues.impl.EplanV2CostService {
- boolean isDiscount
- DuesMapper duesMapper
- LoanDetailExtendMapper loanDetailExtendMapper
+ CostDetailDTO findCostDetail(CostReqDTO)
- Integer getPayDay(String)
- BigDecimal getOldPrincipal(CostReqDTO)
+ String costKey()
}
class com.welab.loan.finance.dto.TransItemDTO {
- Integer dueIndex
- Long amount
- Long remainingAmount
- Long settledAmount
- Date dueDate
- Boolean isClose
- Boolean isOver
- Long lateFee
- Date repaymentDate
}
class com.welab.loan.finance.app.impl.repayment.RepaymentServiceImpl {
- FinanceRepaymentTrackExtMapper financeRepaymentTrackExtMapper
+ Response<Long> getMaxRepaymentAmountByParams(Long,Date,Date)
+ Response<Long> getMaxRepaymentAmountOldByParams(Long,Date,Date)
}
class com.welab.loan.finance.vo.UVFMotorRepossessRepaymentVo {
- String applyNo
- String name
- String repaymentDate
}
class com.welab.loan.finance.vo.TrackVo {
- String loanNumber
- Integer dueIndex
- Date repaymentDate
- String orderNo
- String transId
- String branchId
- Long orgId
- Long repaymentAmount
- Long fundInterestFee
- Long hasTaxInsterest
- Long serviceFee
- Long lateFee
- Long principalFee
- Long adminFee
- Long provisionFee
- Long carryingFee
- Long vatFee
- String bankCode
- Long insuredAmount
- Long fundId
- String dateStr
- Long fastPayFee
- Byte type
- Byte fundType
- Long pfVatFee
- Long afVatFee
- Long cfVatFee
- Long lfVatFee
- String secondProdCode
- Byte repayStatus
- Date dueDate
- String buyerCode
+ void addRepaymentAmount(Long)
+ void addFastPayFee(Long)
}
class com.welab.loan.finance.vo.request.UVFRepossessRepaymentReq {
- Integer no
- Long id
- Date createdAt
- Date updatedAt
- String contractId
- String customerName
- Date sellingDate
- Long sellingPrice
- Long processingFee
- Long bankPortion
- String flagInc
- String ket
- String createBy
- String batchNo
}
class com.welab.loan.finance.vo.EContractInfoVO {
- {static} long serialVersionUID
- List<DuesVO> duesVOList
- Long downPaymentAmount
- Long newLoanPrincipalAmount
- String ePlanTenor
- BigDecimal disDownPaymentRatio
- Long repayDueAmount
}
class com.welab.loan.finance.vo.request.SignMethodConfigVO {
- {static} long serialVersionUID
- Integer id
- Date createdAt
- Date updatedAt
- String category
- String key
- String value
- Long minAmountFunded
- Long maxAmountFunded
- Integer autoOtp
}
class com.welab.loan.finance.model.LoanCreditRuleExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanCreditRuleExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanCreditRuleExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.LoanCreditRuleExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanCreditRuleExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
interface com.welab.loan.finance.mapper.UvfFileRepaymentMapper {
~ int countByExample(UvfFileRepaymentExample)
~ int deleteByExample(UvfFileRepaymentExample)
~ int deleteByPrimaryKey(Long)
~ int insert(UvfFileRepayment)
~ int insertSelective(UvfFileRepayment)
~ List<UvfFileRepayment> selectByExample(UvfFileRepaymentExample)
~ UvfFileRepayment selectByPrimaryKey(Long)
~ int updateByExampleSelective(UvfFileRepayment,UvfFileRepaymentExample)
~ int updateByExample(UvfFileRepayment,UvfFileRepaymentExample)
~ int updateByPrimaryKeySelective(UvfFileRepayment)
~ int updateByPrimaryKey(UvfFileRepayment)
}
class com.welab.loan.finance.model.UvfFileRepaymentPkkfrekap {
- Long id
- Date createTime
- Date updatedAt
- Boolean deleted
- String taskId
- String cabang
- String pokok
- String bunga
- String denda
- String adminPreterm
- String penalty
- String total
+ Long getId()
+ void setId(Long)
+ Date getCreateTime()
+ void setCreateTime(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ String getTaskId()
+ void setTaskId(String)
+ String getCabang()
+ void setCabang(String)
+ String getPokok()
+ void setPokok(String)
+ String getBunga()
+ void setBunga(String)
+ String getDenda()
+ void setDenda(String)
+ String getAdminPreterm()
+ void setAdminPreterm(String)
+ String getPenalty()
+ void setPenalty(String)
+ String getTotal()
+ void setTotal(String)
}
class com.welab.loan.finance.app.command.vat.VatOverdueFullInitCmdExe {
- VatCostProvider vatCostProvider
- BaseDuesService baseDuesService
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
- VatDuesInitCmdExe vatDuesInitCmdExe
- {static} Integer THREAD_NUM
- {static} ConcurrentHashMap<Long,Long> userIdMap
- int BATCH_SIZE
+ void excute()
+ void initVat(List<LoanOverdueInfo>)
- Dues buildNewVATDues(Dues,DueTypeEnum,Long)
}
class com.welab.loan.finance.test.JobTest {
- LoanTimeOutJob loanTimeOutJob
- AstrapayJob astrapayJob
- TransferConsumer transferConsumer
- AstrapayRepaymentNotifyJob astrapayRepaymentNotifyJob
- RechargeConsumer rechargeConsumer
- LendReversalReportJob lendReversalReportJob
- LoanDuesSynJob loanDuesSynJob
- CustomAdvanceJob customAdvanceJob
+ void customAdvanceJob()
+ void testLoanDuesSynJob()
+ void testlendReversalReportJob()
+ void test()
+ void astrapayJob()
+ void transferHandle()
+ void astrapayRepaymentNotifyJob()
+ void repayment()
}
class com.welab.loan.finance.test.GatewayTest {
- PayTaskManager payTaskManager
+ void retryTasks()
+ void updateTaskStatus()
}
class com.welab.loan.finance.core.dues.impl.NSCostService {
- boolean isDiscount
+ CostDetailDTO findCostDetail(CostReqDTO)
+ String costKey()
}
class com.welab.loan.finance.facade.credit.CreditLoanServiceFacade {
- CreditLoanService creditLoanService
+ String getPremiumTestGroupSecondProductCodeByLoanNumber(String)
+ Boolean timeOutLoanHandler(CreditLoanDto)
+ CreditLoanDto findCreditLoanByLoanNumber(String)
+ ProductRateConfigExtendDto matchRateByDto(CreditLoanDto)
}
class com.welab.loan.finance.core.dues.vat.impl.LateFeeVatCost {
+ String dueType()
+ BigDecimal doCalc(BigDecimal,BigDecimal)
}
class com.welab.loan.finance.app.manager.credit.product.CreditCLProductListManager {
~ List<TagProductVO> matchProductForCreditType(CreditUserAccountExt,Map<String,TagProductVO>)
}
class com.welab.loan.finance.vo.tb.TbUserVO {
}
class com.welab.loan.finance.core.dto.syn.SynDuesDTO {
- String loanNumber
- Integer dueIndex
}
interface com.welab.loan.finance.service.LoanOverdueInfoService {
~ Response<List<ReportOverdueInfoVO>> reportOverdueInfo(ReportOverdueInfoDTO)
~ int findMaxOverdueDay(LoanOverdueQry)
~ List<MaxOverDueDto> findMaxOverdueData(Long)
~ List<MaxOverDueDto> findMaxOverdueData(Long,String)
~ Map<Long,Integer> getUserMaxDpd(UserMaxDpdQry)
~ Response<List<MaxOverDueDto>> listLoanOverDueInfoByLoanNums(List<String>)
~ Map<String,Integer> queryLoanMaxDpdMap(List<String>)
}
class com.welab.loan.finance.model.FinanceExport {
- Long id
- Long userId
- Long orgId
- String fileName
- Byte status
- String fileId
- Date createAt
- Date updateAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ Long getOrgId()
+ void setOrgId(Long)
+ String getFileName()
+ void setFileName(String)
+ Byte getStatus()
+ void setStatus(Byte)
+ String getFileId()
+ void setFileId(String)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
}
class com.welab.loan.finance.core.dto.LoanCouponAdvanceDTO {
- BigDecimal disInterestFeeUnpay
- BigDecimal disPrincipalUnpay
- BigDecimal disLateFeeUnpay
- BigDecimal disAdminFeeUnpay
- BigDecimal disFundFeeUnpay
- BigDecimal disProvisionFeeUnpay
}
interface com.welab.loan.finance.mapper.FinanceLendExtMapper {
~ List<FinanceLendExt> selectByExample(Map)
~ List<FinanceLendExt> selectByExampleForExcel(Map)
~ long countByExample(Map)
~ List<LendStaticExt> selectLendStatic(Map)
~ List<SigapExcelExt> selectSigapStatic(Map)
~ Long getServiceFee(String)
~ Long findUnCloseCreditTotalAmount(String,String)
~ List<FinanceLend> selectBcaTransfer(Map)
}
class com.welab.loan.finance.utils.ExportUtil {
- {static} Logger logger
- {static} String TMP_PATH
- Map<String,String> headers
- String pattern
- int startIndex
- int sheetIndex
- int MAX_ROW
- HSSFWorkbook workbook
+ <<Create>> ExportUtil(Map<String,String>)
+ <<Create>> ExportUtil(Map<String,String>,String)
+ HSSFSheet createHeader()
+ HSSFSheet createSheet()
+ void exportData(List<T>)
+ File writeFile()
+ void write(HttpServletResponse,String)
# Object getVal(Class,Object,String)
# Object setValue(HSSFRow,Object,Set<String>)
- {static} void setCellValue(HSSFCell,Object,String)
+ {static} String getPeriod(String)
+ {static} void main(String[])
+ {static} List startPage(List,Integer,Integer)
}
interface com.welab.loan.finance.mapper.FinanceRepaymentTrackExtMapper {
~ Long sumRepaymentTrackLoanNum(String)
~ FinanceRepaymentTrack selectByLastOne(String)
~ Long sumOverAmountRepaymentTrack(String)
~ TrackExt sumAmountByTime(Map<String,Object>)
~ List<TrackExt> getReturnAmountDetailByTime(Map<String,Object>)
~ TrackExt sumInsuredAmountByTime(Map<String,Object>)
~ List<TrackExt> getInsuredAmountDetailByTime(Map<String,Object>)
~ AmountExt sumPayAmountByTransId(String,Boolean)
~ List<FinanceRepaymentTrackExt> selectByExample(Map)
~ List<FinanceRepaymentTrackExt> selectListByExample(Map)
~ long countByExample(Map)
~ Long countCollectionByLoanData(List<LoanRepayment>)
~ List<LoanTrack> selectOffTrack(Date,Date)
~ List<RepayTrackExt> selectTrackByTime(Map)
~ Long countTrackByTime(Map)
~ Long selectTrackRepayHistory(Map)
~ List<FinanceRepaymentTrack> selectByBank(Map)
~ long countByBank(Map)
~ List<Byte> selectPlanTypeByLoan(String)
~ List<Map<String,Long>> findPlanTypeCount(List<String>,List<Byte>)
~ List<FinanceRepaymentTrack> selectLastPlanType(List<String>,List<Byte>)
~ List<Map<String,Object>> getLoanPlanCount(List<String>,Byte)
~ Long getMaxRepaymentAmount(Long,Date,Date)
~ Long getMaxRepaymentAmountVesrion2(Long,Date,Date)
~ void batchInsertTrack(List<FinanceRepaymentTrack>)
~ List<AstrapayRepaymentExt> finaRepaymentTrackByMerchantCode(Long,Byte,Byte,List<String>,Date,Date)
~ List<String> finaRepaymentTrackMerchantCode(Long,Byte,Byte,Date,Date)
~ BigDecimal getRepaymentAmount(String)
~ Date getRepaymentTime(String)
~ List<TrackExt> sumAmountByTimeForSold(Map<String,Object>)
~ TrackExt findOnCLRepaymentTrack(Long)
}
class com.welab.loan.finance.job.va_sync.VaSyncCacheCleanJob {
- VACacheCleanCmdExe vACacheCleanCmdExe
+ void execute(ShardingContext)
}
class com.welab.loan.finance.model.FinanceUserBankcardLogExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FinanceUserBankcardLogExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FinanceUserBankcardLogExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andMobileIsNull()
+ Criteria andMobileIsNotNull()
+ Criteria andMobileEqualTo(String)
+ Criteria andMobileNotEqualTo(String)
+ Criteria andMobileGreaterThan(String)
+ Criteria andMobileGreaterThanOrEqualTo(String)
+ Criteria andMobileLessThan(String)
+ Criteria andMobileLessThanOrEqualTo(String)
+ Criteria andMobileLike(String)
+ Criteria andMobileNotLike(String)
+ Criteria andMobileIn(List<String>)
+ Criteria andMobileNotIn(List<String>)
+ Criteria andMobileBetween(String,String)
+ Criteria andMobileNotBetween(String,String)
+ Criteria andIpIsNull()
+ Criteria andIpIsNotNull()
+ Criteria andIpEqualTo(String)
+ Criteria andIpNotEqualTo(String)
+ Criteria andIpGreaterThan(String)
+ Criteria andIpGreaterThanOrEqualTo(String)
+ Criteria andIpLessThan(String)
+ Criteria andIpLessThanOrEqualTo(String)
+ Criteria andIpLike(String)
+ Criteria andIpNotLike(String)
+ Criteria andIpIn(List<String>)
+ Criteria andIpNotIn(List<String>)
+ Criteria andIpBetween(String,String)
+ Criteria andIpNotBetween(String,String)
+ Criteria andNameIsNull()
+ Criteria andNameIsNotNull()
+ Criteria andNameEqualTo(String)
+ Criteria andNameNotEqualTo(String)
+ Criteria andNameGreaterThan(String)
+ Criteria andNameGreaterThanOrEqualTo(String)
+ Criteria andNameLessThan(String)
+ Criteria andNameLessThanOrEqualTo(String)
+ Criteria andNameLike(String)
+ Criteria andNameNotLike(String)
+ Criteria andNameIn(List<String>)
+ Criteria andNameNotIn(List<String>)
+ Criteria andNameBetween(String,String)
+ Criteria andNameNotBetween(String,String)
+ Criteria andNewNameIsNull()
+ Criteria andNewNameIsNotNull()
+ Criteria andNewNameEqualTo(String)
+ Criteria andNewNameNotEqualTo(String)
+ Criteria andNewNameGreaterThan(String)
+ Criteria andNewNameGreaterThanOrEqualTo(String)
+ Criteria andNewNameLessThan(String)
+ Criteria andNewNameLessThanOrEqualTo(String)
+ Criteria andNewNameLike(String)
+ Criteria andNewNameNotLike(String)
+ Criteria andNewNameIn(List<String>)
+ Criteria andNewNameNotIn(List<String>)
+ Criteria andNewNameBetween(String,String)
+ Criteria andNewNameNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.FinanceUserBankcardLogExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FinanceUserBankcardLogExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.model.ext.LoanSign {
- Integer index
- String loanNumber
- Long userId
- String period
- Long amount
- Date applyAt
- Date lendAt
- Long storeId
- String userName
- String branchName
- String mobile
- Boolean isHeadFee
- Long adminFee
- BigDecimal adminRate
- Byte preferentialType
- String disAdminFee
- String disUpfrontFee
- Integer fixAdminFee
- String salaryDay
- Byte adminType
- String secondProdCode
}
class com.welab.loan.finance.core.dto.overdue.OverdueDTO {
- Long lastLateFee
}
class com.welab.loan.finance.test.alfamart.AlfamartSimpleTest {
- AlfamartJob alfamartJob
- TransferConsumer transferConsumer
+ void test()
+ void test1()
+ void test3()
}
class com.welab.loan.finance.model.ext.CreditUserAccountDetailExt {
- String secondProductCode
- String tenor
}
interface com.welab.loan.finance.mapper.LoanMqMapper {
~ long countByExample(LoanMqExample)
~ int deleteByExample(LoanMqExample)
~ int deleteByPrimaryKey(Integer)
~ int insert(LoanMq)
~ int insertSelective(LoanMq)
~ List<LoanMq> selectByExampleWithBLOBs(LoanMqExample)
~ List<LoanMq> selectByExample(LoanMqExample)
~ LoanMq selectByPrimaryKey(Integer)
~ int updateByExampleSelective(LoanMq,LoanMqExample)
~ int updateByExampleWithBLOBs(LoanMq,LoanMqExample)
~ int updateByExample(LoanMq,LoanMqExample)
~ int updateByPrimaryKeySelective(LoanMq)
~ int updateByPrimaryKeyWithBLOBs(LoanMq)
~ int updateByPrimaryKey(LoanMq)
}
class com.welab.loan.finance.model.UserAdvancePaymentExtndExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> UserAdvancePaymentExtndExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.UserAdvancePaymentExtndExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andAdvancePaymentIdIsNull()
+ Criteria andAdvancePaymentIdIsNotNull()
+ Criteria andAdvancePaymentIdEqualTo(Long)
+ Criteria andAdvancePaymentIdNotEqualTo(Long)
+ Criteria andAdvancePaymentIdGreaterThan(Long)
+ Criteria andAdvancePaymentIdGreaterThanOrEqualTo(Long)
+ Criteria andAdvancePaymentIdLessThan(Long)
+ Criteria andAdvancePaymentIdLessThanOrEqualTo(Long)
+ Criteria andAdvancePaymentIdIn(List<Long>)
+ Criteria andAdvancePaymentIdNotIn(List<Long>)
+ Criteria andAdvancePaymentIdBetween(Long,Long)
+ Criteria andAdvancePaymentIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.UserAdvancePaymentExtndExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.UserAdvancePaymentExtndExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.app.impl.config.ConfigServiceImpl {
- BankConfigService bankConfigService
+ Response<FinanceConfigDto> getFinanceConfig(String,String)
+ Response<Boolean> isIgnoreTenor(String)
}
interface com.welab.loan.finance.mapper.ext.LoanApplyPlansExtMapper {
~ List<LoanApplyPlansExt> selectPTPList(Map<String,Object>)
~ List<Byte> selectPlanByUserId(Long)
~ int updateStatusByLoanNumbers(List<String>,Integer,Integer)
~ int countByUserIdAndStatusAndTriggerType(Long,Byte,Byte)
~ List<LoanApplyPlansExt> selectUserApplyPlans(Long,Byte,Byte)
}
class com.welab.loan.finance.model.LoanDelay {
- Long id
- String loanNumber
- Long userId
- Byte type
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Long getUserId()
+ void setUserId(Long)
+ Byte getType()
+ void setType(Byte)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.vo.response.ToBAgreementVO {
- Long id
- String partner
- String tbLoanNumber
- String mobile
}
class com.welab.loan.finance.vo.credit.CreditActivityAbTestGroupResponseVo {
- Long id
- String testGroupId
- String matrixType
- List<String> matrix
- Date createdOn
- String creator
- String userIdLastNums
- String activityStatus
}
interface com.welab.loan.finance.calculator.IDueCalculator {
~ List<Due> calculate(Date,BigDecimal,String,BigDecimal,BigDecimal,Map<String,BigDecimal>)
}
class com.welab.loan.finance.dto.CollectionLoanOverDueInfoDTO {
- List<OverdueVO> overdueVOList
- Boolean isScanFinish
}
class com.welab.loan.finance.vo.response.UserBankcardResVo {
- String loanTimeMsg
- boolean changeBindStatus
}
class com.welab.loan.finance.service.other.GatewayTaskService {
- QueryTaskService queryTaskService
- BaseUserBankCardService baseUserBankCardService
- ApplicationService applicationService
- ITaskService taskService
- BaseFinanceTradingService financeTradingService
- BaseLoanDetailService baseLoanDetailService
+ Response findByPage(GatewayTaskDto)
- void loanNumberToBatchNoForPaylater(QueryTaskDto)
- void loanNumberToBatchNoForTB(QueryTaskDto)
+ Response retryTaskStatusInquire(GatewayTaskDto)
+ Response retryTask(GatewayTaskDto)
+ Response exportTask(Long,GatewayTaskDto)
+ Response<List<GatewayRequestVO>> getGatewayRequestByTaskId(String)
}
class com.welab.loan.finance.vo.request.LoanWarrantyVo {
- String loanNumber
- Integer dueIndex
- String claimedAt
- Long adminId
}
class com.welab.loan.finance.vo.request.LoanCalculatorReq {
- BigDecimal amount
- List<String> tenors
- BigDecimal minTotalRate
- BigDecimal maxTotalRate
- BigDecimal defaultTotalRate
}
class com.welab.loan.finance.model.LoanUvfDoc {
- Long id
- Date createdAt
- Date updatedAt
- Boolean deleted
- String loanNumber
- String createBy
- Long docId
- Integer type
- String secondProdCode
- String contractId
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getCreateBy()
+ void setCreateBy(String)
+ Long getDocId()
+ void setDocId(Long)
+ Integer getType()
+ void setType(Integer)
+ String getSecondProdCode()
+ void setSecondProdCode(String)
+ String getContractId()
+ void setContractId(String)
}
class com.welab.loan.finance.vo.LendVo {
- Long adminFee
- Long amount
- Long num
}
class com.welab.loan.finance.model.CreditLoanCancelExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditLoanCancelExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditLoanCancelExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andDealStatusIsNull()
+ Criteria andDealStatusIsNotNull()
+ Criteria andDealStatusEqualTo(Byte)
+ Criteria andDealStatusNotEqualTo(Byte)
+ Criteria andDealStatusGreaterThan(Byte)
+ Criteria andDealStatusGreaterThanOrEqualTo(Byte)
+ Criteria andDealStatusLessThan(Byte)
+ Criteria andDealStatusLessThanOrEqualTo(Byte)
+ Criteria andDealStatusIn(List<Byte>)
+ Criteria andDealStatusNotIn(List<Byte>)
+ Criteria andDealStatusBetween(Byte,Byte)
+ Criteria andDealStatusNotBetween(Byte,Byte)
+ Criteria andCreateByIsNull()
+ Criteria andCreateByIsNotNull()
+ Criteria andCreateByEqualTo(Long)
+ Criteria andCreateByNotEqualTo(Long)
+ Criteria andCreateByGreaterThan(Long)
+ Criteria andCreateByGreaterThanOrEqualTo(Long)
+ Criteria andCreateByLessThan(Long)
+ Criteria andCreateByLessThanOrEqualTo(Long)
+ Criteria andCreateByIn(List<Long>)
+ Criteria andCreateByNotIn(List<Long>)
+ Criteria andCreateByBetween(Long,Long)
+ Criteria andCreateByNotBetween(Long,Long)
+ Criteria andDescriptionIsNull()
+ Criteria andDescriptionIsNotNull()
+ Criteria andDescriptionEqualTo(String)
+ Criteria andDescriptionNotEqualTo(String)
+ Criteria andDescriptionGreaterThan(String)
+ Criteria andDescriptionGreaterThanOrEqualTo(String)
+ Criteria andDescriptionLessThan(String)
+ Criteria andDescriptionLessThanOrEqualTo(String)
+ Criteria andDescriptionLike(String)
+ Criteria andDescriptionNotLike(String)
+ Criteria andDescriptionIn(List<String>)
+ Criteria andDescriptionNotIn(List<String>)
+ Criteria andDescriptionBetween(String,String)
+ Criteria andDescriptionNotBetween(String,String)
}
class com.welab.loan.finance.model.CreditLoanCancelExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.CreditLoanCancelExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.app.impl.loan.DisbursementCapServiceImpl {
- DisbursementCapManager disbursementCapManager
+ boolean checkUserDisbursementCap(Long)
+ List<String> getMaxCapPartnerList(BigDecimal)
}
class com.welab.loan.finance.model.LoanDetailExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanDetailExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanDetailExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andOrgIdIsNull()
+ Criteria andOrgIdIsNotNull()
+ Criteria andOrgIdEqualTo(Long)
+ Criteria andOrgIdNotEqualTo(Long)
+ Criteria andOrgIdGreaterThan(Long)
+ Criteria andOrgIdGreaterThanOrEqualTo(Long)
+ Criteria andOrgIdLessThan(Long)
+ Criteria andOrgIdLessThanOrEqualTo(Long)
+ Criteria andOrgIdIn(List<Long>)
+ Criteria andOrgIdNotIn(List<Long>)
+ Criteria andOrgIdBetween(Long,Long)
+ Criteria andOrgIdNotBetween(Long,Long)
+ Criteria andPeriodIsNull()
+ Criteria andPeriodIsNotNull()
+ Criteria andPeriodEqualTo(String)
+ Criteria andPeriodNotEqualTo(String)
+ Criteria andPeriodGreaterThan(String)
+ Criteria andPeriodGreaterThanOrEqualTo(String)
+ Criteria andPeriodLessThan(String)
+ Criteria andPeriodLessThanOrEqualTo(String)
+ Criteria andPeriodLike(String)
+ Criteria andPeriodNotLike(String)
+ Criteria andPeriodIn(List<String>)
+ Criteria andPeriodNotIn(List<String>)
+ Criteria andPeriodBetween(String,String)
+ Criteria andPeriodNotBetween(String,String)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andApplyAtIsNull()
+ Criteria andApplyAtIsNotNull()
+ Criteria andApplyAtEqualTo(Date)
+ Criteria andApplyAtNotEqualTo(Date)
+ Criteria andApplyAtGreaterThan(Date)
+ Criteria andApplyAtGreaterThanOrEqualTo(Date)
+ Criteria andApplyAtLessThan(Date)
+ Criteria andApplyAtLessThanOrEqualTo(Date)
+ Criteria andApplyAtIn(List<Date>)
+ Criteria andApplyAtNotIn(List<Date>)
+ Criteria andApplyAtBetween(Date,Date)
+ Criteria andApplyAtNotBetween(Date,Date)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andUserNameIsNull()
+ Criteria andUserNameIsNotNull()
+ Criteria andUserNameEqualTo(String)
+ Criteria andUserNameNotEqualTo(String)
+ Criteria andUserNameGreaterThan(String)
+ Criteria andUserNameGreaterThanOrEqualTo(String)
+ Criteria andUserNameLessThan(String)
+ Criteria andUserNameLessThanOrEqualTo(String)
+ Criteria andUserNameLike(String)
+ Criteria andUserNameNotLike(String)
+ Criteria andUserNameIn(List<String>)
+ Criteria andUserNameNotIn(List<String>)
+ Criteria andUserNameBetween(String,String)
+ Criteria andUserNameNotBetween(String,String)
+ Criteria andMobileIsNull()
+ Criteria andMobileIsNotNull()
+ Criteria andMobileEqualTo(String)
+ Criteria andMobileNotEqualTo(String)
+ Criteria andMobileGreaterThan(String)
+ Criteria andMobileGreaterThanOrEqualTo(String)
+ Criteria andMobileLessThan(String)
+ Criteria andMobileLessThanOrEqualTo(String)
+ Criteria andMobileLike(String)
+ Criteria andMobileNotLike(String)
+ Criteria andMobileIn(List<String>)
+ Criteria andMobileNotIn(List<String>)
+ Criteria andMobileBetween(String,String)
+ Criteria andMobileNotBetween(String,String)
+ Criteria andProductCodeIsNull()
+ Criteria andProductCodeIsNotNull()
+ Criteria andProductCodeEqualTo(String)
+ Criteria andProductCodeNotEqualTo(String)
+ Criteria andProductCodeGreaterThan(String)
+ Criteria andProductCodeGreaterThanOrEqualTo(String)
+ Criteria andProductCodeLessThan(String)
+ Criteria andProductCodeLessThanOrEqualTo(String)
+ Criteria andProductCodeLike(String)
+ Criteria andProductCodeNotLike(String)
+ Criteria andProductCodeIn(List<String>)
+ Criteria andProductCodeNotIn(List<String>)
+ Criteria andProductCodeBetween(String,String)
+ Criteria andProductCodeNotBetween(String,String)
+ Criteria andLendAtIsNull()
+ Criteria andLendAtIsNotNull()
+ Criteria andLendAtEqualTo(Date)
+ Criteria andLendAtNotEqualTo(Date)
+ Criteria andLendAtGreaterThan(Date)
+ Criteria andLendAtGreaterThanOrEqualTo(Date)
+ Criteria andLendAtLessThan(Date)
+ Criteria andLendAtLessThanOrEqualTo(Date)
+ Criteria andLendAtIn(List<Date>)
+ Criteria andLendAtNotIn(List<Date>)
+ Criteria andLendAtBetween(Date,Date)
+ Criteria andLendAtNotBetween(Date,Date)
+ Criteria andLendTypeIsNull()
+ Criteria andLendTypeIsNotNull()
+ Criteria andLendTypeEqualTo(Byte)
+ Criteria andLendTypeNotEqualTo(Byte)
+ Criteria andLendTypeGreaterThan(Byte)
+ Criteria andLendTypeGreaterThanOrEqualTo(Byte)
+ Criteria andLendTypeLessThan(Byte)
+ Criteria andLendTypeLessThanOrEqualTo(Byte)
+ Criteria andLendTypeIn(List<Byte>)
+ Criteria andLendTypeNotIn(List<Byte>)
+ Criteria andLendTypeBetween(Byte,Byte)
+ Criteria andLendTypeNotBetween(Byte,Byte)
+ Criteria andLendStatusIsNull()
+ Criteria andLendStatusIsNotNull()
+ Criteria andLendStatusEqualTo(Byte)
+ Criteria andLendStatusNotEqualTo(Byte)
+ Criteria andLendStatusGreaterThan(Byte)
+ Criteria andLendStatusGreaterThanOrEqualTo(Byte)
+ Criteria andLendStatusLessThan(Byte)
+ Criteria andLendStatusLessThanOrEqualTo(Byte)
+ Criteria andLendStatusIn(List<Byte>)
+ Criteria andLendStatusNotIn(List<Byte>)
+ Criteria andLendStatusBetween(Byte,Byte)
+ Criteria andLendStatusNotBetween(Byte,Byte)
+ Criteria andRetryNumIsNull()
+ Criteria andRetryNumIsNotNull()
+ Criteria andRetryNumEqualTo(Byte)
+ Criteria andRetryNumNotEqualTo(Byte)
+ Criteria andRetryNumGreaterThan(Byte)
+ Criteria andRetryNumGreaterThanOrEqualTo(Byte)
+ Criteria andRetryNumLessThan(Byte)
+ Criteria andRetryNumLessThanOrEqualTo(Byte)
+ Criteria andRetryNumIn(List<Byte>)
+ Criteria andRetryNumNotIn(List<Byte>)
+ Criteria andRetryNumBetween(Byte,Byte)
+ Criteria andRetryNumNotBetween(Byte,Byte)
+ Criteria andRepayStatusIsNull()
+ Criteria andRepayStatusIsNotNull()
+ Criteria andRepayStatusEqualTo(Byte)
+ Criteria andRepayStatusNotEqualTo(Byte)
+ Criteria andRepayStatusGreaterThan(Byte)
+ Criteria andRepayStatusGreaterThanOrEqualTo(Byte)
+ Criteria andRepayStatusLessThan(Byte)
+ Criteria andRepayStatusLessThanOrEqualTo(Byte)
+ Criteria andRepayStatusIn(List<Byte>)
+ Criteria andRepayStatusNotIn(List<Byte>)
+ Criteria andRepayStatusBetween(Byte,Byte)
+ Criteria andRepayStatusNotBetween(Byte,Byte)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andIsAdvanceIsNull()
+ Criteria andIsAdvanceIsNotNull()
+ Criteria andIsAdvanceEqualTo(Boolean)
+ Criteria andIsAdvanceNotEqualTo(Boolean)
+ Criteria andIsAdvanceGreaterThan(Boolean)
+ Criteria andIsAdvanceGreaterThanOrEqualTo(Boolean)
+ Criteria andIsAdvanceLessThan(Boolean)
+ Criteria andIsAdvanceLessThanOrEqualTo(Boolean)
+ Criteria andIsAdvanceIn(List<Boolean>)
+ Criteria andIsAdvanceNotIn(List<Boolean>)
+ Criteria andIsAdvanceBetween(Boolean,Boolean)
+ Criteria andIsAdvanceNotBetween(Boolean,Boolean)
+ Criteria andAdvanceAmountIsNull()
+ Criteria andAdvanceAmountIsNotNull()
+ Criteria andAdvanceAmountEqualTo(Long)
+ Criteria andAdvanceAmountNotEqualTo(Long)
+ Criteria andAdvanceAmountGreaterThan(Long)
+ Criteria andAdvanceAmountGreaterThanOrEqualTo(Long)
+ Criteria andAdvanceAmountLessThan(Long)
+ Criteria andAdvanceAmountLessThanOrEqualTo(Long)
+ Criteria andAdvanceAmountIn(List<Long>)
+ Criteria andAdvanceAmountNotIn(List<Long>)
+ Criteria andAdvanceAmountBetween(Long,Long)
+ Criteria andAdvanceAmountNotBetween(Long,Long)
+ Criteria andCustomAmountIsNull()
+ Criteria andCustomAmountIsNotNull()
+ Criteria andCustomAmountEqualTo(Long)
+ Criteria andCustomAmountNotEqualTo(Long)
+ Criteria andCustomAmountGreaterThan(Long)
+ Criteria andCustomAmountGreaterThanOrEqualTo(Long)
+ Criteria andCustomAmountLessThan(Long)
+ Criteria andCustomAmountLessThanOrEqualTo(Long)
+ Criteria andCustomAmountIn(List<Long>)
+ Criteria andCustomAmountNotIn(List<Long>)
+ Criteria andCustomAmountBetween(Long,Long)
+ Criteria andCustomAmountNotBetween(Long,Long)
+ Criteria andRiskLevelIsNull()
+ Criteria andRiskLevelIsNotNull()
+ Criteria andRiskLevelEqualTo(String)
+ Criteria andRiskLevelNotEqualTo(String)
+ Criteria andRiskLevelGreaterThan(String)
+ Criteria andRiskLevelGreaterThanOrEqualTo(String)
+ Criteria andRiskLevelLessThan(String)
+ Criteria andRiskLevelLessThanOrEqualTo(String)
+ Criteria andRiskLevelLike(String)
+ Criteria andRiskLevelNotLike(String)
+ Criteria andRiskLevelIn(List<String>)
+ Criteria andRiskLevelNotIn(List<String>)
+ Criteria andRiskLevelBetween(String,String)
+ Criteria andRiskLevelNotBetween(String,String)
+ Criteria andScoreClassIsNull()
+ Criteria andScoreClassIsNotNull()
+ Criteria andScoreClassEqualTo(String)
+ Criteria andScoreClassNotEqualTo(String)
+ Criteria andScoreClassGreaterThan(String)
+ Criteria andScoreClassGreaterThanOrEqualTo(String)
+ Criteria andScoreClassLessThan(String)
+ Criteria andScoreClassLessThanOrEqualTo(String)
+ Criteria andScoreClassLike(String)
+ Criteria andScoreClassNotLike(String)
+ Criteria andScoreClassIn(List<String>)
+ Criteria andScoreClassNotIn(List<String>)
+ Criteria andScoreClassBetween(String,String)
+ Criteria andScoreClassNotBetween(String,String)
+ Criteria andInterestRateIsNull()
+ Criteria andInterestRateIsNotNull()
+ Criteria andInterestRateEqualTo(BigDecimal)
+ Criteria andInterestRateNotEqualTo(BigDecimal)
+ Criteria andInterestRateGreaterThan(BigDecimal)
+ Criteria andInterestRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andInterestRateLessThan(BigDecimal)
+ Criteria andInterestRateLessThanOrEqualTo(BigDecimal)
+ Criteria andInterestRateIn(List<BigDecimal>)
+ Criteria andInterestRateNotIn(List<BigDecimal>)
+ Criteria andInterestRateBetween(BigDecimal,BigDecimal)
+ Criteria andInterestRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andFundInterestRateIsNull()
+ Criteria andFundInterestRateIsNotNull()
+ Criteria andFundInterestRateEqualTo(BigDecimal)
+ Criteria andFundInterestRateNotEqualTo(BigDecimal)
+ Criteria andFundInterestRateGreaterThan(BigDecimal)
+ Criteria andFundInterestRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andFundInterestRateLessThan(BigDecimal)
+ Criteria andFundInterestRateLessThanOrEqualTo(BigDecimal)
+ Criteria andFundInterestRateIn(List<BigDecimal>)
+ Criteria andFundInterestRateNotIn(List<BigDecimal>)
+ Criteria andFundInterestRateBetween(BigDecimal,BigDecimal)
+ Criteria andFundInterestRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andServiceFeeRateIsNull()
+ Criteria andServiceFeeRateIsNotNull()
+ Criteria andServiceFeeRateEqualTo(BigDecimal)
+ Criteria andServiceFeeRateNotEqualTo(BigDecimal)
+ Criteria andServiceFeeRateGreaterThan(BigDecimal)
+ Criteria andServiceFeeRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andServiceFeeRateLessThan(BigDecimal)
+ Criteria andServiceFeeRateLessThanOrEqualTo(BigDecimal)
+ Criteria andServiceFeeRateIn(List<BigDecimal>)
+ Criteria andServiceFeeRateNotIn(List<BigDecimal>)
+ Criteria andServiceFeeRateBetween(BigDecimal,BigDecimal)
+ Criteria andServiceFeeRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andAdminRateIsNull()
+ Criteria andAdminRateIsNotNull()
+ Criteria andAdminRateEqualTo(BigDecimal)
+ Criteria andAdminRateNotEqualTo(BigDecimal)
+ Criteria andAdminRateGreaterThan(BigDecimal)
+ Criteria andAdminRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andAdminRateLessThan(BigDecimal)
+ Criteria andAdminRateLessThanOrEqualTo(BigDecimal)
+ Criteria andAdminRateIn(List<BigDecimal>)
+ Criteria andAdminRateNotIn(List<BigDecimal>)
+ Criteria andAdminRateBetween(BigDecimal,BigDecimal)
+ Criteria andAdminRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andLateRateIsNull()
+ Criteria andLateRateIsNotNull()
+ Criteria andLateRateEqualTo(BigDecimal)
+ Criteria andLateRateNotEqualTo(BigDecimal)
+ Criteria andLateRateGreaterThan(BigDecimal)
+ Criteria andLateRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andLateRateLessThan(BigDecimal)
+ Criteria andLateRateLessThanOrEqualTo(BigDecimal)
+ Criteria andLateRateIn(List<BigDecimal>)
+ Criteria andLateRateNotIn(List<BigDecimal>)
+ Criteria andLateRateBetween(BigDecimal,BigDecimal)
+ Criteria andLateRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andAdvanceRateIsNull()
+ Criteria andAdvanceRateIsNotNull()
+ Criteria andAdvanceRateEqualTo(BigDecimal)
+ Criteria andAdvanceRateNotEqualTo(BigDecimal)
+ Criteria andAdvanceRateGreaterThan(BigDecimal)
+ Criteria andAdvanceRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andAdvanceRateLessThan(BigDecimal)
+ Criteria andAdvanceRateLessThanOrEqualTo(BigDecimal)
+ Criteria andAdvanceRateIn(List<BigDecimal>)
+ Criteria andAdvanceRateNotIn(List<BigDecimal>)
+ Criteria andAdvanceRateBetween(BigDecimal,BigDecimal)
+ Criteria andAdvanceRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andLabelIsNull()
+ Criteria andLabelIsNotNull()
+ Criteria andLabelEqualTo(String)
+ Criteria andLabelNotEqualTo(String)
+ Criteria andLabelGreaterThan(String)
+ Criteria andLabelGreaterThanOrEqualTo(String)
+ Criteria andLabelLessThan(String)
+ Criteria andLabelLessThanOrEqualTo(String)
+ Criteria andLabelLike(String)
+ Criteria andLabelNotLike(String)
+ Criteria andLabelIn(List<String>)
+ Criteria andLabelNotIn(List<String>)
+ Criteria andLabelBetween(String,String)
+ Criteria andLabelNotBetween(String,String)
+ Criteria andAdvanceTimeIsNull()
+ Criteria andAdvanceTimeIsNotNull()
+ Criteria andAdvanceTimeEqualTo(Date)
+ Criteria andAdvanceTimeNotEqualTo(Date)
+ Criteria andAdvanceTimeGreaterThan(Date)
+ Criteria andAdvanceTimeGreaterThanOrEqualTo(Date)
+ Criteria andAdvanceTimeLessThan(Date)
+ Criteria andAdvanceTimeLessThanOrEqualTo(Date)
+ Criteria andAdvanceTimeIn(List<Date>)
+ Criteria andAdvanceTimeNotIn(List<Date>)
+ Criteria andAdvanceTimeBetween(Date,Date)
+ Criteria andAdvanceTimeNotBetween(Date,Date)
+ Criteria andLabelUpdateAtIsNull()
+ Criteria andLabelUpdateAtIsNotNull()
+ Criteria andLabelUpdateAtEqualTo(Date)
+ Criteria andLabelUpdateAtNotEqualTo(Date)
+ Criteria andLabelUpdateAtGreaterThan(Date)
+ Criteria andLabelUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andLabelUpdateAtLessThan(Date)
+ Criteria andLabelUpdateAtLessThanOrEqualTo(Date)
+ Criteria andLabelUpdateAtIn(List<Date>)
+ Criteria andLabelUpdateAtNotIn(List<Date>)
+ Criteria andLabelUpdateAtBetween(Date,Date)
+ Criteria andLabelUpdateAtNotBetween(Date,Date)
+ Criteria andOverAmountIsNull()
+ Criteria andOverAmountIsNotNull()
+ Criteria andOverAmountEqualTo(Long)
+ Criteria andOverAmountNotEqualTo(Long)
+ Criteria andOverAmountGreaterThan(Long)
+ Criteria andOverAmountGreaterThanOrEqualTo(Long)
+ Criteria andOverAmountLessThan(Long)
+ Criteria andOverAmountLessThanOrEqualTo(Long)
+ Criteria andOverAmountIn(List<Long>)
+ Criteria andOverAmountNotIn(List<Long>)
+ Criteria andOverAmountBetween(Long,Long)
+ Criteria andOverAmountNotBetween(Long,Long)
+ Criteria andApprovedAtIsNull()
+ Criteria andApprovedAtIsNotNull()
+ Criteria andApprovedAtEqualTo(Date)
+ Criteria andApprovedAtNotEqualTo(Date)
+ Criteria andApprovedAtGreaterThan(Date)
+ Criteria andApprovedAtGreaterThanOrEqualTo(Date)
+ Criteria andApprovedAtLessThan(Date)
+ Criteria andApprovedAtLessThanOrEqualTo(Date)
+ Criteria andApprovedAtIn(List<Date>)
+ Criteria andApprovedAtNotIn(List<Date>)
+ Criteria andApprovedAtBetween(Date,Date)
+ Criteria andApprovedAtNotBetween(Date,Date)
+ Criteria andFundAtIsNull()
+ Criteria andFundAtIsNotNull()
+ Criteria andFundAtEqualTo(Date)
+ Criteria andFundAtNotEqualTo(Date)
+ Criteria andFundAtGreaterThan(Date)
+ Criteria andFundAtGreaterThanOrEqualTo(Date)
+ Criteria andFundAtLessThan(Date)
+ Criteria andFundAtLessThanOrEqualTo(Date)
+ Criteria andFundAtIn(List<Date>)
+ Criteria andFundAtNotIn(List<Date>)
+ Criteria andFundAtBetween(Date,Date)
+ Criteria andFundAtNotBetween(Date,Date)
+ Criteria andApplySecondCodeIsNull()
+ Criteria andApplySecondCodeIsNotNull()
+ Criteria andApplySecondCodeEqualTo(String)
+ Criteria andApplySecondCodeNotEqualTo(String)
+ Criteria andApplySecondCodeGreaterThan(String)
+ Criteria andApplySecondCodeGreaterThanOrEqualTo(String)
+ Criteria andApplySecondCodeLessThan(String)
+ Criteria andApplySecondCodeLessThanOrEqualTo(String)
+ Criteria andApplySecondCodeLike(String)
+ Criteria andApplySecondCodeNotLike(String)
+ Criteria andApplySecondCodeIn(List<String>)
+ Criteria andApplySecondCodeNotIn(List<String>)
+ Criteria andApplySecondCodeBetween(String,String)
+ Criteria andApplySecondCodeNotBetween(String,String)
+ Criteria andApplyAmountIsNull()
+ Criteria andApplyAmountIsNotNull()
+ Criteria andApplyAmountEqualTo(Long)
+ Criteria andApplyAmountNotEqualTo(Long)
+ Criteria andApplyAmountGreaterThan(Long)
+ Criteria andApplyAmountGreaterThanOrEqualTo(Long)
+ Criteria andApplyAmountLessThan(Long)
+ Criteria andApplyAmountLessThanOrEqualTo(Long)
+ Criteria andApplyAmountIn(List<Long>)
+ Criteria andApplyAmountNotIn(List<Long>)
+ Criteria andApplyAmountBetween(Long,Long)
+ Criteria andApplyAmountNotBetween(Long,Long)
+ Criteria andApplyPeriodIsNull()
+ Criteria andApplyPeriodIsNotNull()
+ Criteria andApplyPeriodEqualTo(String)
+ Criteria andApplyPeriodNotEqualTo(String)
+ Criteria andApplyPeriodGreaterThan(String)
+ Criteria andApplyPeriodGreaterThanOrEqualTo(String)
+ Criteria andApplyPeriodLessThan(String)
+ Criteria andApplyPeriodLessThanOrEqualTo(String)
+ Criteria andApplyPeriodLike(String)
+ Criteria andApplyPeriodNotLike(String)
+ Criteria andApplyPeriodIn(List<String>)
+ Criteria andApplyPeriodNotIn(List<String>)
+ Criteria andApplyPeriodBetween(String,String)
+ Criteria andApplyPeriodNotBetween(String,String)
+ Criteria andSecondProdCodeIsNull()
+ Criteria andSecondProdCodeIsNotNull()
+ Criteria andSecondProdCodeEqualTo(String)
+ Criteria andSecondProdCodeNotEqualTo(String)
+ Criteria andSecondProdCodeGreaterThan(String)
+ Criteria andSecondProdCodeGreaterThanOrEqualTo(String)
+ Criteria andSecondProdCodeLessThan(String)
+ Criteria andSecondProdCodeLessThanOrEqualTo(String)
+ Criteria andSecondProdCodeLike(String)
+ Criteria andSecondProdCodeNotLike(String)
+ Criteria andSecondProdCodeIn(List<String>)
+ Criteria andSecondProdCodeNotIn(List<String>)
+ Criteria andSecondProdCodeBetween(String,String)
+ Criteria andSecondProdCodeNotBetween(String,String)
+ Criteria andProductTypeIsNull()
+ Criteria andProductTypeIsNotNull()
+ Criteria andProductTypeEqualTo(Byte)
+ Criteria andProductTypeNotEqualTo(Byte)
+ Criteria andProductTypeGreaterThan(Byte)
+ Criteria andProductTypeGreaterThanOrEqualTo(Byte)
+ Criteria andProductTypeLessThan(Byte)
+ Criteria andProductTypeLessThanOrEqualTo(Byte)
+ Criteria andProductTypeIn(List<Byte>)
+ Criteria andProductTypeNotIn(List<Byte>)
+ Criteria andProductTypeBetween(Byte,Byte)
+ Criteria andProductTypeNotBetween(Byte,Byte)
+ Criteria andAdminFeeIsNull()
+ Criteria andAdminFeeIsNotNull()
+ Criteria andAdminFeeEqualTo(Long)
+ Criteria andAdminFeeNotEqualTo(Long)
+ Criteria andAdminFeeGreaterThan(Long)
+ Criteria andAdminFeeGreaterThanOrEqualTo(Long)
+ Criteria andAdminFeeLessThan(Long)
+ Criteria andAdminFeeLessThanOrEqualTo(Long)
+ Criteria andAdminFeeIn(List<Long>)
+ Criteria andAdminFeeNotIn(List<Long>)
+ Criteria andAdminFeeBetween(Long,Long)
+ Criteria andAdminFeeNotBetween(Long,Long)
+ Criteria andFundSignAtIsNull()
+ Criteria andFundSignAtIsNotNull()
+ Criteria andFundSignAtEqualTo(Date)
+ Criteria andFundSignAtNotEqualTo(Date)
+ Criteria andFundSignAtGreaterThan(Date)
+ Criteria andFundSignAtGreaterThanOrEqualTo(Date)
+ Criteria andFundSignAtLessThan(Date)
+ Criteria andFundSignAtLessThanOrEqualTo(Date)
+ Criteria andFundSignAtIn(List<Date>)
+ Criteria andFundSignAtNotIn(List<Date>)
+ Criteria andFundSignAtBetween(Date,Date)
+ Criteria andFundSignAtNotBetween(Date,Date)
+ Criteria andTimeOutIsNull()
+ Criteria andTimeOutIsNotNull()
+ Criteria andTimeOutEqualTo(Date)
+ Criteria andTimeOutNotEqualTo(Date)
+ Criteria andTimeOutGreaterThan(Date)
+ Criteria andTimeOutGreaterThanOrEqualTo(Date)
+ Criteria andTimeOutLessThan(Date)
+ Criteria andTimeOutLessThanOrEqualTo(Date)
+ Criteria andTimeOutIn(List<Date>)
+ Criteria andTimeOutNotIn(List<Date>)
+ Criteria andTimeOutBetween(Date,Date)
+ Criteria andTimeOutNotBetween(Date,Date)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Long)
+ Criteria andFundIdNotEqualTo(Long)
+ Criteria andFundIdGreaterThan(Long)
+ Criteria andFundIdGreaterThanOrEqualTo(Long)
+ Criteria andFundIdLessThan(Long)
+ Criteria andFundIdLessThanOrEqualTo(Long)
+ Criteria andFundIdIn(List<Long>)
+ Criteria andFundIdNotIn(List<Long>)
+ Criteria andFundIdBetween(Long,Long)
+ Criteria andFundIdNotBetween(Long,Long)
+ Criteria andRepayDueAmountIsNull()
+ Criteria andRepayDueAmountIsNotNull()
+ Criteria andRepayDueAmountEqualTo(Long)
+ Criteria andRepayDueAmountNotEqualTo(Long)
+ Criteria andRepayDueAmountGreaterThan(Long)
+ Criteria andRepayDueAmountGreaterThanOrEqualTo(Long)
+ Criteria andRepayDueAmountLessThan(Long)
+ Criteria andRepayDueAmountLessThanOrEqualTo(Long)
+ Criteria andRepayDueAmountIn(List<Long>)
+ Criteria andRepayDueAmountNotIn(List<Long>)
+ Criteria andRepayDueAmountBetween(Long,Long)
+ Criteria andRepayDueAmountNotBetween(Long,Long)
+ Criteria andPromotionCodeIsNull()
+ Criteria andPromotionCodeIsNotNull()
+ Criteria andPromotionCodeEqualTo(String)
+ Criteria andPromotionCodeNotEqualTo(String)
+ Criteria andPromotionCodeGreaterThan(String)
+ Criteria andPromotionCodeGreaterThanOrEqualTo(String)
+ Criteria andPromotionCodeLessThan(String)
+ Criteria andPromotionCodeLessThanOrEqualTo(String)
+ Criteria andPromotionCodeLike(String)
+ Criteria andPromotionCodeNotLike(String)
+ Criteria andPromotionCodeIn(List<String>)
+ Criteria andPromotionCodeNotIn(List<String>)
+ Criteria andPromotionCodeBetween(String,String)
+ Criteria andPromotionCodeNotBetween(String,String)
+ Criteria andLabelExpiredAtIsNull()
+ Criteria andLabelExpiredAtIsNotNull()
+ Criteria andLabelExpiredAtEqualTo(Date)
+ Criteria andLabelExpiredAtNotEqualTo(Date)
+ Criteria andLabelExpiredAtGreaterThan(Date)
+ Criteria andLabelExpiredAtGreaterThanOrEqualTo(Date)
+ Criteria andLabelExpiredAtLessThan(Date)
+ Criteria andLabelExpiredAtLessThanOrEqualTo(Date)
+ Criteria andLabelExpiredAtIn(List<Date>)
+ Criteria andLabelExpiredAtNotIn(List<Date>)
+ Criteria andLabelExpiredAtBetween(Date,Date)
+ Criteria andLabelExpiredAtNotBetween(Date,Date)
+ Criteria andIsSignIsNull()
+ Criteria andIsSignIsNotNull()
+ Criteria andIsSignEqualTo(Boolean)
+ Criteria andIsSignNotEqualTo(Boolean)
+ Criteria andIsSignGreaterThan(Boolean)
+ Criteria andIsSignGreaterThanOrEqualTo(Boolean)
+ Criteria andIsSignLessThan(Boolean)
+ Criteria andIsSignLessThanOrEqualTo(Boolean)
+ Criteria andIsSignIn(List<Boolean>)
+ Criteria andIsSignNotIn(List<Boolean>)
+ Criteria andIsSignBetween(Boolean,Boolean)
+ Criteria andIsSignNotBetween(Boolean,Boolean)
+ Criteria andIsSkipIsNull()
+ Criteria andIsSkipIsNotNull()
+ Criteria andIsSkipEqualTo(Boolean)
+ Criteria andIsSkipNotEqualTo(Boolean)
+ Criteria andIsSkipGreaterThan(Boolean)
+ Criteria andIsSkipGreaterThanOrEqualTo(Boolean)
+ Criteria andIsSkipLessThan(Boolean)
+ Criteria andIsSkipLessThanOrEqualTo(Boolean)
+ Criteria andIsSkipIn(List<Boolean>)
+ Criteria andIsSkipNotIn(List<Boolean>)
+ Criteria andIsSkipBetween(Boolean,Boolean)
+ Criteria andIsSkipNotBetween(Boolean,Boolean)
+ Criteria andOriginIsNull()
+ Criteria andOriginIsNotNull()
+ Criteria andOriginEqualTo(String)
+ Criteria andOriginNotEqualTo(String)
+ Criteria andOriginGreaterThan(String)
+ Criteria andOriginGreaterThanOrEqualTo(String)
+ Criteria andOriginLessThan(String)
+ Criteria andOriginLessThanOrEqualTo(String)
+ Criteria andOriginLike(String)
+ Criteria andOriginNotLike(String)
+ Criteria andOriginIn(List<String>)
+ Criteria andOriginNotIn(List<String>)
+ Criteria andOriginBetween(String,String)
+ Criteria andOriginNotBetween(String,String)
+ Criteria andSourceIdIsNull()
+ Criteria andSourceIdIsNotNull()
+ Criteria andSourceIdEqualTo(String)
+ Criteria andSourceIdNotEqualTo(String)
+ Criteria andSourceIdGreaterThan(String)
+ Criteria andSourceIdGreaterThanOrEqualTo(String)
+ Criteria andSourceIdLessThan(String)
+ Criteria andSourceIdLessThanOrEqualTo(String)
+ Criteria andSourceIdLike(String)
+ Criteria andSourceIdNotLike(String)
+ Criteria andSourceIdIn(List<String>)
+ Criteria andSourceIdNotIn(List<String>)
+ Criteria andSourceIdBetween(String,String)
+ Criteria andSourceIdNotBetween(String,String)
+ Criteria andSpecialPromotionIsNull()
+ Criteria andSpecialPromotionIsNotNull()
+ Criteria andSpecialPromotionEqualTo(String)
+ Criteria andSpecialPromotionNotEqualTo(String)
+ Criteria andSpecialPromotionGreaterThan(String)
+ Criteria andSpecialPromotionGreaterThanOrEqualTo(String)
+ Criteria andSpecialPromotionLessThan(String)
+ Criteria andSpecialPromotionLessThanOrEqualTo(String)
+ Criteria andSpecialPromotionLike(String)
+ Criteria andSpecialPromotionNotLike(String)
+ Criteria andSpecialPromotionIn(List<String>)
+ Criteria andSpecialPromotionNotIn(List<String>)
+ Criteria andSpecialPromotionBetween(String,String)
+ Criteria andSpecialPromotionNotBetween(String,String)
+ Criteria andLoanTransferIsNull()
+ Criteria andLoanTransferIsNotNull()
+ Criteria andLoanTransferEqualTo(String)
+ Criteria andLoanTransferNotEqualTo(String)
+ Criteria andLoanTransferGreaterThan(String)
+ Criteria andLoanTransferGreaterThanOrEqualTo(String)
+ Criteria andLoanTransferLessThan(String)
+ Criteria andLoanTransferLessThanOrEqualTo(String)
+ Criteria andLoanTransferLike(String)
+ Criteria andLoanTransferNotLike(String)
+ Criteria andLoanTransferIn(List<String>)
+ Criteria andLoanTransferNotIn(List<String>)
+ Criteria andLoanTransferBetween(String,String)
+ Criteria andLoanTransferNotBetween(String,String)
+ Criteria andPreviousLoanIsNull()
+ Criteria andPreviousLoanIsNotNull()
+ Criteria andPreviousLoanEqualTo(String)
+ Criteria andPreviousLoanNotEqualTo(String)
+ Criteria andPreviousLoanGreaterThan(String)
+ Criteria andPreviousLoanGreaterThanOrEqualTo(String)
+ Criteria andPreviousLoanLessThan(String)
+ Criteria andPreviousLoanLessThanOrEqualTo(String)
+ Criteria andPreviousLoanLike(String)
+ Criteria andPreviousLoanNotLike(String)
+ Criteria andPreviousLoanIn(List<String>)
+ Criteria andPreviousLoanNotIn(List<String>)
+ Criteria andPreviousLoanBetween(String,String)
+ Criteria andPreviousLoanNotBetween(String,String)
+ Criteria andUserTypeIsNull()
+ Criteria andUserTypeIsNotNull()
+ Criteria andUserTypeEqualTo(Integer)
+ Criteria andUserTypeNotEqualTo(Integer)
+ Criteria andUserTypeGreaterThan(Integer)
+ Criteria andUserTypeGreaterThanOrEqualTo(Integer)
+ Criteria andUserTypeLessThan(Integer)
+ Criteria andUserTypeLessThanOrEqualTo(Integer)
+ Criteria andUserTypeIn(List<Integer>)
+ Criteria andUserTypeNotIn(List<Integer>)
+ Criteria andUserTypeBetween(Integer,Integer)
+ Criteria andUserTypeNotBetween(Integer,Integer)
+ Criteria andBizTypeIsNull()
+ Criteria andBizTypeIsNotNull()
+ Criteria andBizTypeEqualTo(Byte)
+ Criteria andBizTypeNotEqualTo(Byte)
+ Criteria andBizTypeGreaterThan(Byte)
+ Criteria andBizTypeGreaterThanOrEqualTo(Byte)
+ Criteria andBizTypeLessThan(Byte)
+ Criteria andBizTypeLessThanOrEqualTo(Byte)
+ Criteria andBizTypeIn(List<Byte>)
+ Criteria andBizTypeNotIn(List<Byte>)
+ Criteria andBizTypeBetween(Byte,Byte)
+ Criteria andBizTypeNotBetween(Byte,Byte)
+ Criteria andBatchNoIsNull()
+ Criteria andBatchNoIsNotNull()
+ Criteria andBatchNoEqualTo(String)
+ Criteria andBatchNoNotEqualTo(String)
+ Criteria andBatchNoGreaterThan(String)
+ Criteria andBatchNoGreaterThanOrEqualTo(String)
+ Criteria andBatchNoLessThan(String)
+ Criteria andBatchNoLessThanOrEqualTo(String)
+ Criteria andBatchNoIn(List<String>)
+ Criteria andBatchNoNotIn(List<String>)
+ Criteria andBatchNoBetween(String,String)
+ Criteria andBatchNoNotBetween(String,String)
+ Criteria andAcceptedAtIsNull()
+ Criteria andAcceptedAtIsNotNull()
+ Criteria andAcceptedAtEqualTo(Date)
+ Criteria andAcceptedAtNotEqualTo(Date)
+ Criteria andAcceptedAtGreaterThan(Date)
+ Criteria andAcceptedAtGreaterThanOrEqualTo(Date)
+ Criteria andAcceptedAtLessThan(Date)
+ Criteria andAcceptedAtLessThanOrEqualTo(Date)
+ Criteria andAcceptedAtIn(List<Date>)
+ Criteria andAcceptedAtNotIn(List<Date>)
+ Criteria andAcceptedAtBetween(Date,Date)
+ Criteria andAcceptedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.LoanDetailExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanDetailExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.test.lend.BcaLendTest {
- TransferConsumer transferConsumer
- LendCallBackConsumer lendCallBackConsumer
- LendBusiService lendBusiService
- BcaTransferReportJob bcaTransferEmailReport
- BcaTransferSyncJob bcaTransferSyncJob
- BcaTransferJob bcaTransferJob
+ void tradingCallback()
+ void lendCallback()
+ void paylaterTradingCallback()
+ void tbTradingCallback()
+ void sendEmail()
+ void testSyncJob()
+ void testBcaTransferJob()
+ void testIsBcaOpen()
}
class com.welab.loan.finance.model.ext.AstrapayRepaymentExt {
- String loanNumber
- String orderNo
- Byte repaymentChannel
- Long repaymentAmount
- Date repaymentTime
- String merchantCode
}
interface com.welab.loan.finance.mapper.ext.CreditActivityAbTestGroupLoanRelationExtMapper {
~ Long countDisbursed(CreditActivityAbTestExt)
~ List<CreditActivityAbTestExt> countDisbursedGroup(Long)
}
class com.welab.loan.finance.dto.plan.EPlanRateDTO {
- {static} long serialVersionUID
- String loanNumber
- BigDecimal disDownPaymentRatio
- BigDecimal disLateFeeRatio
}
class com.welab.loan.finance.model.ext.LendStaticExt {
- Byte status
- Long num
}
class com.welab.loan.finance.job.LoanRefundJobTest {
- LoanRefundJob loanRefundJob
+ void loanRefundJob()
+ void bcaRefund()
}
class com.welab.loan.finance.exception.BusinessException {
- {static} long serialVersionUID
+ <<Create>> BusinessException(String)
+ <<Create>> BusinessException(Integer,String)
+ <<Create>> BusinessException(String,Throwable)
+ <<Create>> BusinessException(Integer,String,Throwable)
}
class com.welab.loan.finance.service.core.BasePaymentScheduleService {
- <<Create>> BasePaymentScheduleService()
+ {static} SeaDues generateDuesByDefault(RepaymentCalculatorReq)
- {static} SeaDues generateDuesByMost(RepaymentCalculatorReq)
- {static} SeaDues generateDuesByEplan(RepaymentCalculatorReq)
+ {static} SeaDues generateDuesByDdm(RepaymentCalculatorReq)
- {static} SeaDues generateDuesByPaylater(RepaymentCalculatorReq)
+ {static} List<Dues> generateDuePlanForCredit(PlanCalculatorReq)
+ {static} List<Dues> generateDuePlan(PlanCalculatorReq)
+ {static} Date generateDueDelayTime(PlansTypeEnum,String,Date)
- {static} List<Dues> getRepayPlanDuesList(PlanCalculatorReq,Date,BigDecimal,BigDecimal,BigDecimal)
- {static} List<Dues> getRepayPlanDuesList(PlanCalculatorReq,Date,BigDecimal,BigDecimal,BigDecimal,BigDecimal)
+ {static} List<CalculatorItemVo> tryGenerateDues(RepaymentCalculatorReq)
+ {static} AdminFeeResp calculatorAdminFee(RepaymentCalculatorReq,boolean)
- {static} void calculationUpfrontFee(AdminFeeResp)
+ {static} CalculatorAmount periodCalculator(CalculatorReq)
- {static} CalculatorAmount periodCalculatorByOrigin(CalculatorReq)
+ {static} Date getRepayDate(Date)
+ {static} int findSetRealTenorByDdm(String,int)
+ {static} int findSetRealTenorByDdm(String,int,Date)
+ {static} FeeDdmDTO findSetFeeByDdm(RepaymentCalculatorReq)
- {static} Long findAdminFeeByCalculatorByOrigin(CalculatorReq,BigDecimal)
- {static} Dues getRepayPlanDues(BigDecimal,DueTypeEnum)
+ {static} void main(String[])
}
class com.welab.loan.finance.model.UvfFileContract {
- Long id
- Date createTime
- Date updatedAt
- Boolean deleted
- String contractNo
- String taskId
- String content
+ Long getId()
+ void setId(Long)
+ Date getCreateTime()
+ void setCreateTime(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ String getContractNo()
+ void setContractNo(String)
+ String getTaskId()
+ void setTaskId(String)
+ String getContent()
+ void setContent(String)
}
interface com.welab.loan.finance.mapper.BigFieldParamMapper {
~ long countByExample(BigFieldParamExample)
~ int deleteByExample(BigFieldParamExample)
~ int deleteByPrimaryKey(Long)
~ int insert(BigFieldParam)
~ int insertSelective(BigFieldParam)
~ List<BigFieldParam> selectByExampleWithBLOBs(BigFieldParamExample)
~ List<BigFieldParam> selectByExample(BigFieldParamExample)
~ BigFieldParam selectByPrimaryKey(Long)
~ int updateByExampleSelective(BigFieldParam,BigFieldParamExample)
~ int updateByExampleWithBLOBs(BigFieldParam,BigFieldParamExample)
~ int updateByExample(BigFieldParam,BigFieldParamExample)
~ int updateByPrimaryKeySelective(BigFieldParam)
~ int updateByPrimaryKeyWithBLOBs(BigFieldParam)
~ int updateByPrimaryKey(BigFieldParam)
}
class com.welab.loan.finance.model.ext.VatInitLoan {
- Long id
- String loanNumber
}
interface com.welab.loan.finance.mapper.FinanceUserBankcardMapper {
~ long countByExample(FinanceUserBankcardExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FinanceUserBankcard)
~ int insertSelective(FinanceUserBankcard)
~ List<FinanceUserBankcard> selectByExample(FinanceUserBankcardExample)
~ FinanceUserBankcard selectByPrimaryKey(Long)
~ int updateByExampleSelective(FinanceUserBankcard,FinanceUserBankcardExample)
~ int updateByExample(FinanceUserBankcard,FinanceUserBankcardExample)
~ int updateByPrimaryKeySelective(FinanceUserBankcard)
~ int updateByPrimaryKey(FinanceUserBankcard)
}
class com.welab.loan.finance.app.command.plan.CPlanExe {
+ Response confirm(CPlanConfirmCmd)
}
interface com.welab.loan.finance.service.CreditTagConfigService {
+ CreditUserTagConfigDTO getTagProductConfig(CreditAccountTypeEnums,String)
+ List<String> getCurrentUsableTag()
~ List<String> getTestFlowTag()
}
class com.welab.loan.finance.vo.RepaymentTrackVo {
- String loanNumber
- Integer dueIndex
- Date repaymentAt
- Byte type
- String transId
- Long repaymentAmount
- Long operatorId
- Date createdAt
- Date updateAt
- Boolean isAdvance
- Long interestFee
- Long lateFee
- Long principalFee
- Long adminFee
- Long storeId
- String onlineAddress
- String planTypeDesc
- String channel
}
class com.welab.loan.finance.model.LoanTransactionExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanTransactionExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanTransactionExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andOrgIdIsNull()
+ Criteria andOrgIdIsNotNull()
+ Criteria andOrgIdEqualTo(Long)
+ Criteria andOrgIdNotEqualTo(Long)
+ Criteria andOrgIdGreaterThan(Long)
+ Criteria andOrgIdGreaterThanOrEqualTo(Long)
+ Criteria andOrgIdLessThan(Long)
+ Criteria andOrgIdLessThanOrEqualTo(Long)
+ Criteria andOrgIdIn(List<Long>)
+ Criteria andOrgIdNotIn(List<Long>)
+ Criteria andOrgIdBetween(Long,Long)
+ Criteria andOrgIdNotBetween(Long,Long)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andNumIsNull()
+ Criteria andNumIsNotNull()
+ Criteria andNumEqualTo(Integer)
+ Criteria andNumNotEqualTo(Integer)
+ Criteria andNumGreaterThan(Integer)
+ Criteria andNumGreaterThanOrEqualTo(Integer)
+ Criteria andNumLessThan(Integer)
+ Criteria andNumLessThanOrEqualTo(Integer)
+ Criteria andNumIn(List<Integer>)
+ Criteria andNumNotIn(List<Integer>)
+ Criteria andNumBetween(Integer,Integer)
+ Criteria andNumNotBetween(Integer,Integer)
+ Criteria andContentIsNull()
+ Criteria andContentIsNotNull()
+ Criteria andContentEqualTo(String)
+ Criteria andContentNotEqualTo(String)
+ Criteria andContentGreaterThan(String)
+ Criteria andContentGreaterThanOrEqualTo(String)
+ Criteria andContentLessThan(String)
+ Criteria andContentLessThanOrEqualTo(String)
+ Criteria andContentLike(String)
+ Criteria andContentNotLike(String)
+ Criteria andContentIn(List<String>)
+ Criteria andContentNotIn(List<String>)
+ Criteria andContentBetween(String,String)
+ Criteria andContentNotBetween(String,String)
+ Criteria andExtendIdIsNull()
+ Criteria andExtendIdIsNotNull()
+ Criteria andExtendIdEqualTo(String)
+ Criteria andExtendIdNotEqualTo(String)
+ Criteria andExtendIdGreaterThan(String)
+ Criteria andExtendIdGreaterThanOrEqualTo(String)
+ Criteria andExtendIdLessThan(String)
+ Criteria andExtendIdLessThanOrEqualTo(String)
+ Criteria andExtendIdLike(String)
+ Criteria andExtendIdNotLike(String)
+ Criteria andExtendIdIn(List<String>)
+ Criteria andExtendIdNotIn(List<String>)
+ Criteria andExtendIdBetween(String,String)
+ Criteria andExtendIdNotBetween(String,String)
+ Criteria andIsValidIsNull()
+ Criteria andIsValidIsNotNull()
+ Criteria andIsValidEqualTo(Boolean)
+ Criteria andIsValidNotEqualTo(Boolean)
+ Criteria andIsValidGreaterThan(Boolean)
+ Criteria andIsValidGreaterThanOrEqualTo(Boolean)
+ Criteria andIsValidLessThan(Boolean)
+ Criteria andIsValidLessThanOrEqualTo(Boolean)
+ Criteria andIsValidIn(List<Boolean>)
+ Criteria andIsValidNotIn(List<Boolean>)
+ Criteria andIsValidBetween(Boolean,Boolean)
+ Criteria andIsValidNotBetween(Boolean,Boolean)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.LoanTransactionExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanTransactionExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.core.dto.dues.CostReqDTO {
- String secondProdCode
- BigDecimal amount
- String tenor
- Integer fundId
- boolean isHead
- Byte bizType
- Long orgId
- String costCode
- AdminTypeEnum adminTypeEnum
- BigDecimal adminRate
- Integer fixAdminFee
- FundInterestTypeEnum fundInterestType
- BigDecimal fundInterestRate
- String fixFundInterest
- BigDecimal serviceFeeRate
- BigDecimal fundProvisionRate
- String provisionRate
- BigDecimal astraFeeRate
- String loanDate
- Integer payDay
- Boolean isApprovedAt
- Date approvedAt
- Long fifAdminFee
- Integer shortTenor
- ActivityRuleResponseDTO activityRule
- Long userId
- String loanNumber
- String previousLoan
- Long totalAdminFee
- Long totalServiceFee
- Long totalFundInterestFee
- Long totalProvisionFee
- Boolean isTryCalculate
- BigDecimal oldAmount
- String extend
- Boolean tryCal
- LoanDetailExtend loanDetailExt
- TravelokaDuesVO travelokaDuesVO
- Boolean insuranceSelect
- String controlGroupSecondProdCode
- BigDecimal realAmount
- String jsonParam
+ void findSetProductRate(ProductRateConfigVO)
+ void findSetLoanDetail(LoanDetail)
+ void findSetLoanDetailExtend(LoanDetailExtend)
+ void findSetLoanDetailExtendByNSTryCaculate(LoanDetailExtend,CostReqDTO)
- boolean buildLoanDetailExtend(LoanDetailExtend)
+ void findSetTBExtendByTraveloka(Long,Long,Long,Long)
}
class com.welab.loan.finance.test.credit.CreditUseTest {
- CreditUserAccountServiceImpl creditUserAccountService
+ void testApplyLoan()
}
interface com.welab.loan.finance.mapper.TransDetailMapper {
~ List<TransDetail> selectByExample(Map)
}
class com.welab.loan.finance.service.business.fund.FundMatchServiceImpl {
# FundAccountInfoService fundAccountInfoService
+ FundAccountInfoDTO matchFund(Long,String)
+ FundTransferAccountResponseDTO getRechargeFund(Long)
+ FundTransferAccountResponseDTO getTransferAccount(Long)
+ FundTransferAccountResponseDTO getLoansAndRepaymentAccount(Long)
+ FundOutInputAccountDTO getLendTaxAcc()
+ DisbursementsFundAccountDTO getDisbursementsFundAccount()
}
class com.welab.loan.finance.job.McEditLoanAmountJob {
- int DAY
- int PAGESIZE
- long AMOUNT
- String tmp_App_Name
- String tmp_Email_Name
# String appId
- EmailService emailService
- LoanDetailMapper loanDetailMapper
- LoanDetailExtMapper loanDetailExtMapper
- LoanDetailExtendMapper loanDetailExtendMapper
- LoansService loansService
- FundLoansService fundLoansService
- ApplicationService applicationService
- MessagePushService messagePushService
+ void execute(ShardingContext)
# void queryList()
# void handle(List<LoanDetail>)
# boolean edit(LoanDetail)
# LoanDetailExtend findLoanDetailExtend(String)
# UserProfileVO getUserInfo(Long)
# void notificationMsg(LoanDetail)
}
interface com.welab.loan.finance.mapper.CreditUserAccountDetailMapper {
~ long countByExample(CreditUserAccountDetailExample)
~ int deleteByExample(CreditUserAccountDetailExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditUserAccountDetail)
~ int insertSelective(CreditUserAccountDetail)
~ List<CreditUserAccountDetail> selectByExample(CreditUserAccountDetailExample)
~ CreditUserAccountDetail selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditUserAccountDetail,CreditUserAccountDetailExample)
~ int updateByExample(CreditUserAccountDetail,CreditUserAccountDetailExample)
~ int updateByPrimaryKeySelective(CreditUserAccountDetail)
~ int updateByPrimaryKey(CreditUserAccountDetail)
}
class com.welab.loan.finance.dto.paylater.CreditUserTagChangeDTO {
- CreditUserTagTriggerMethodEnum triggerMethod
- Long userId
- List<Long> userIdList
- Map<String,Object> extMap
+ Set<Long> mergeUserId()
}
class com.welab.loan.finance.model.FinanceUserBankcardExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FinanceUserBankcardExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FinanceUserBankcardExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andOrgIdIsNull()
+ Criteria andOrgIdIsNotNull()
+ Criteria andOrgIdEqualTo(Long)
+ Criteria andOrgIdNotEqualTo(Long)
+ Criteria andOrgIdGreaterThan(Long)
+ Criteria andOrgIdGreaterThanOrEqualTo(Long)
+ Criteria andOrgIdLessThan(Long)
+ Criteria andOrgIdLessThanOrEqualTo(Long)
+ Criteria andOrgIdIn(List<Long>)
+ Criteria andOrgIdNotIn(List<Long>)
+ Criteria andOrgIdBetween(Long,Long)
+ Criteria andOrgIdNotBetween(Long,Long)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andUserNameIsNull()
+ Criteria andUserNameIsNotNull()
+ Criteria andUserNameEqualTo(String)
+ Criteria andUserNameNotEqualTo(String)
+ Criteria andUserNameGreaterThan(String)
+ Criteria andUserNameGreaterThanOrEqualTo(String)
+ Criteria andUserNameLessThan(String)
+ Criteria andUserNameLessThanOrEqualTo(String)
+ Criteria andUserNameLike(String)
+ Criteria andUserNameNotLike(String)
+ Criteria andUserNameIn(List<String>)
+ Criteria andUserNameNotIn(List<String>)
+ Criteria andUserNameBetween(String,String)
+ Criteria andUserNameNotBetween(String,String)
+ Criteria andBankAccountNumberIsNull()
+ Criteria andBankAccountNumberIsNotNull()
+ Criteria andBankAccountNumberEqualTo(String)
+ Criteria andBankAccountNumberNotEqualTo(String)
+ Criteria andBankAccountNumberGreaterThan(String)
+ Criteria andBankAccountNumberGreaterThanOrEqualTo(String)
+ Criteria andBankAccountNumberLessThan(String)
+ Criteria andBankAccountNumberLessThanOrEqualTo(String)
+ Criteria andBankAccountNumberLike(String)
+ Criteria andBankAccountNumberNotLike(String)
+ Criteria andBankAccountNumberIn(List<String>)
+ Criteria andBankAccountNumberNotIn(List<String>)
+ Criteria andBankAccountNumberBetween(String,String)
+ Criteria andBankAccountNumberNotBetween(String,String)
+ Criteria andBankCodeIsNull()
+ Criteria andBankCodeIsNotNull()
+ Criteria andBankCodeEqualTo(String)
+ Criteria andBankCodeNotEqualTo(String)
+ Criteria andBankCodeGreaterThan(String)
+ Criteria andBankCodeGreaterThanOrEqualTo(String)
+ Criteria andBankCodeLessThan(String)
+ Criteria andBankCodeLessThanOrEqualTo(String)
+ Criteria andBankCodeLike(String)
+ Criteria andBankCodeNotLike(String)
+ Criteria andBankCodeIn(List<String>)
+ Criteria andBankCodeNotIn(List<String>)
+ Criteria andBankCodeBetween(String,String)
+ Criteria andBankCodeNotBetween(String,String)
+ Criteria andBankAccountHolderNameIsNull()
+ Criteria andBankAccountHolderNameIsNotNull()
+ Criteria andBankAccountHolderNameEqualTo(String)
+ Criteria andBankAccountHolderNameNotEqualTo(String)
+ Criteria andBankAccountHolderNameGreaterThan(String)
+ Criteria andBankAccountHolderNameGreaterThanOrEqualTo(String)
+ Criteria andBankAccountHolderNameLessThan(String)
+ Criteria andBankAccountHolderNameLessThanOrEqualTo(String)
+ Criteria andBankAccountHolderNameLike(String)
+ Criteria andBankAccountHolderNameNotLike(String)
+ Criteria andBankAccountHolderNameIn(List<String>)
+ Criteria andBankAccountHolderNameNotIn(List<String>)
+ Criteria andBankAccountHolderNameBetween(String,String)
+ Criteria andBankAccountHolderNameNotBetween(String,String)
+ Criteria andIsUsedIsNull()
+ Criteria andIsUsedIsNotNull()
+ Criteria andIsUsedEqualTo(Byte)
+ Criteria andIsUsedNotEqualTo(Byte)
+ Criteria andIsUsedGreaterThan(Byte)
+ Criteria andIsUsedGreaterThanOrEqualTo(Byte)
+ Criteria andIsUsedLessThan(Byte)
+ Criteria andIsUsedLessThanOrEqualTo(Byte)
+ Criteria andIsUsedIn(List<Byte>)
+ Criteria andIsUsedNotIn(List<Byte>)
+ Criteria andIsUsedBetween(Byte,Byte)
+ Criteria andIsUsedNotBetween(Byte,Byte)
+ Criteria andBankNameIsNull()
+ Criteria andBankNameIsNotNull()
+ Criteria andBankNameEqualTo(String)
+ Criteria andBankNameNotEqualTo(String)
+ Criteria andBankNameGreaterThan(String)
+ Criteria andBankNameGreaterThanOrEqualTo(String)
+ Criteria andBankNameLessThan(String)
+ Criteria andBankNameLessThanOrEqualTo(String)
+ Criteria andBankNameLike(String)
+ Criteria andBankNameNotLike(String)
+ Criteria andBankNameIn(List<String>)
+ Criteria andBankNameNotIn(List<String>)
+ Criteria andBankNameBetween(String,String)
+ Criteria andBankNameNotBetween(String,String)
+ Criteria andCardTypeIsNull()
+ Criteria andCardTypeIsNotNull()
+ Criteria andCardTypeEqualTo(Byte)
+ Criteria andCardTypeNotEqualTo(Byte)
+ Criteria andCardTypeGreaterThan(Byte)
+ Criteria andCardTypeGreaterThanOrEqualTo(Byte)
+ Criteria andCardTypeLessThan(Byte)
+ Criteria andCardTypeLessThanOrEqualTo(Byte)
+ Criteria andCardTypeIn(List<Byte>)
+ Criteria andCardTypeNotIn(List<Byte>)
+ Criteria andCardTypeBetween(Byte,Byte)
+ Criteria andCardTypeNotBetween(Byte,Byte)
}
class com.welab.loan.finance.model.FinanceUserBankcardExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FinanceUserBankcardExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.facade.message.MessageEmailFacade {
- MessageEmailService messageEmailService
- BaseTbUserService baseTbUserService
- BaseLoanDetailService baseLoanDetailService
- VirtualAccountServiceFacade virtualAccountServiceFacade
- DuesTryManager duesTryManager
- ProductConfigService productConfigService
# String appId
+ void sendEmail(MailDTO)
}
class com.welab.loan.finance.test.credit.ExcelReader {
+ {static} String getCellValue(Cell)
+ {static} List<Map<String,Object>> readData(String)
+ {static} List<Map<String,Object>> readData(String,Integer)
}
class com.welab.loan.finance.core.overdue.most.MostCalLateFeeImpl {
- int type
- IModLateService iModLateService
+ LoanLateRspDTO findLateFee(LoanLateReqDTO)
+ List<LoanLateRspDTO> updateBatchLateFee(List<LoanLateReqDTO>)
+ List<LoanLateRspDTO> findBatchLateFee(List<LoanLateReqDTO>)
+ List<LoanLateRspDTO> findBatchLateFee(List<LoanLateReqDTO>,boolean)
+ LoanLateRspDTO findLateFee(LoanLateReqDTO,List<LateFeeDuesExt>)
+ String findKey()
}
class com.welab.loan.finance.app.service.credit.CreditMigrateUserService {
- CreditUserTagRuleService creditUserTagRuleService
- BaseRabbitTemplate baseRabbitTemplate
- CreditUserAccountInfoService creditUserAccountInfoService
+ String identifyUserSubTag(UpdateCreditUserAccountVO)
+ void processSpecial(Map<String,TagProductVO>,CreditUserAccountExt)
+ boolean checkSpecial(String,CreditUserAccountExt)
+ void secondHand(UpdateCreditUserAccountVO)
+ boolean isSecondHandTag(String)
+ void startMigrate()
}
class com.welab.loan.finance.model.ext.CreditConfigForTenorExt {
- Long minAmount
- String secondProductCode
- String tenorStr
- Long maxAmount
- boolean status
}
class com.welab.loan.finance.app.service.flow.repaymentback.RepaymentBackToAwdaComponent {
- BaseRabbitTemplate baseRabbitTemplate
+ FlowTaskNodeEnum flowTaskNode()
# void process(RepaymentBackFlowContext)
}
class com.welab.loan.finance.app.command.plan.CheckCPlanCustomAmountCmdExe {
- EPlanService ePlanService
- CPlanManager cPlanManager
- BaseLoanDetailService loanDetailService
- BaseFinanceDuesService baseFinanceDuesService
+ Response excute(CheckCPlanCustomAmountCmd)
}
class com.welab.loan.finance.app.service.credit.loan.LongLoanService {
+ List<TagProductVO> processLoan(CreditUserAccountExt,Map<String,TagProductVO>)
}
class com.welab.loan.finance.test.advance.AdvanceRepaymentTest {
- AdvanceRepaymentConfirmCmdExe advanceRepaymentConfirmCmdExe
- AdvanceRepaymentQryExe advanceRepaymentQryExe
- AdvanceRepaymentInvalidationCmdExe advanceRepaymentInvalidationCmdExe
+ void getInfo()
+ void sendAdvanceMsg()
+ void InvalidationLetter()
}
class com.welab.loan.finance.response.DueRsp {
- List<Due> dueList
}
enum com.welab.loan.finance.enums.CreditUserTagEnum {
+  A1
+  A1_1
+  A1_2
+  A1_3
+  A1_4
+  A1_41
+  A1_5
+  A1_6
+  A1_7
+  A2
+  A2_1
+  A2_2
+  A2_3
+  A2_4
+  A2_41
+  A2_42
+  A3
+  A3_41
+  B1_1
+  B1_2
+  B1_51
+  B1_61
+  B2_1
+  B2_2
+  B2_3
+  B2_4
+  B2_51
+  B2_61
+  B3_1
+  B3_2
+  B3_51
+  B3_61
+  C
+  C2
- String tag
}
class com.welab.loan.finance.app.base.credit.BaseCreditReLoanService {
- CreditReLoanMapper creditReLoanMapper
+ int insertSelective(CreditReLoan)
+ PageInfo<CreditReLoan> query(CreditReLoanQryVO)
+ long countByExample(String)
}
class com.welab.loan.finance.app.command.tb.order.loandetail.impl.GadaTbLoanDetailBuilder {
- WhiteListServiceFacade whiteListServiceFacade
- TbProductConfigServiceFacade tbProductConfigServiceFacade
+ void doBuild(TbInvoice,ProductRateConfigVO,LoanDetail)
+ void doBuild(TbInvoice,ProductRateConfigVO,LoanDetailExtend)
+ String getKey()
}
class com.welab.loan.finance.dto.TryApplyFPlanDTO {
- String discountAdminFee
- String discountLateFee
- String discountPrincipal
- String discountServiceFee
- String discountFundInterest
- String discountProvisionFee
- Long adminFee
- Long carryFee
- Long fundInterest
- Long lateFee
- Long serviceFee
- Long principal
- Long provisionFee
- Long totalAmount
- Long orgTotalAmount
- List<CalPlanAmountDto> planDetails
}
class com.welab.loan.finance.dto.TbCreditUserAccountExtDTO {
- String name
- String mobile
- String partnerUserNo
}
class com.welab.loan.finance.facade.marketing.ActivityDubboServiceFacade {
- ActivityDubboService activityDubboService
- BaseLoanService baseLoanService
- IQueryDuesService queryDuesService
- ILoanUserRepay iLoanUserRepay
+ ActivityRuleResponseDTO getActivityRule(ActivityCodeRequestDTO)
+ ActivityCodeResponseDTO useActivityCodeNew(Long,String)
+ ActivityRuleResponseDTO rematchRule(Long,String)
- AcitivityPromoCodeDTO bulidAcitivityPromoCodeDTO(Long,String)
}
class com.welab.loan.finance.service.business.repayment.QueryDuesServiceImpl {
# DuesMapper duesMapper
- BaseDuesService baseDuesService
+ List<Dues> findAllDues(String,Boolean)
+ List<Dues> findAllDuesNoMerge(List<String>,Boolean)
+ List<Dues> findAllDuesNoMerge(String,Boolean)
- DuesExample getDuesExample(List<String>,Boolean)
+ List<Dues> findAllDues(List<String>,Boolean)
+ List<Dues> findDuesByType(String,Integer,String)
+ List<Dues> findDuesByTypeNoMerge(String,Integer,String)
- DuesExample getDuesExample(String,Integer,String)
+ Dues findDuesByTypeLimit(String,Integer,String)
+ List<Dues> findRepaymentDues(String)
+ Dues findDuesByLimit(String)
+ Dues findOneDuesExample(DuesExample)
+ DuesMapper getDuesMapper()
+ List<DuesExtItem> findAllDuesExt(List<String>,boolean)
}
class com.welab.loan.finance.test.flow.RepaymentBackFlowTest {
- FlowTaskService flowTaskService
- FlowTaskRerunJob flowTaskRerunJob
+ void testA()
+ void testB()
}
class com.welab.loan.finance.job.SendDisburseTaxEmailJob {
- DisburseTaxService disburseTaxService
+ void execute(ShardingContext)
}
class com.welab.loan.finance.app.base.credit.BaseCreditActivityAbTestGroupLoanRelationService {
- CreditActivityAbTestGroupLoanRelationMapper creditActivityAbTestGroupLoanRelationMapper
+ int insertSelective(CreditActivityAbTestGroupLoanRelation)
+ CreditActivityAbTestGroupLoanRelation getByLoanNumber(String)
}
class com.welab.loan.finance.dto.RepaymentTracBackDto {
- String loanNumber
- String secondProdCode
- Byte type
- String startTime
- String endTime
- Byte isAdvance
- String transId
- Long fundId
- Long adminId
- Byte origin
- List<Long> orgIds
- Boolean warrantyFalg
- String cessie
- String buyerName
- Byte productType
- String userId
- List<Integer> fundIds
- List<String> secondProdCodes
- List<Integer> productTypes
- List<Integer> types
- String merchantCode
- String merchantOrderNo
- Byte flag
- String flagReason
- List<String> bankCodes
- String receiptAccount
- String orderNo
}
class com.welab.loan.finance.model.FinanceRepaymentTrackExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FinanceRepaymentTrackExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FinanceRepaymentTrackExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andOrgIdIsNull()
+ Criteria andOrgIdIsNotNull()
+ Criteria andOrgIdEqualTo(Long)
+ Criteria andOrgIdNotEqualTo(Long)
+ Criteria andOrgIdGreaterThan(Long)
+ Criteria andOrgIdGreaterThanOrEqualTo(Long)
+ Criteria andOrgIdLessThan(Long)
+ Criteria andOrgIdLessThanOrEqualTo(Long)
+ Criteria andOrgIdIn(List<Long>)
+ Criteria andOrgIdNotIn(List<Long>)
+ Criteria andOrgIdBetween(Long,Long)
+ Criteria andOrgIdNotBetween(Long,Long)
+ Criteria andSecondProdCodeIsNull()
+ Criteria andSecondProdCodeIsNotNull()
+ Criteria andSecondProdCodeEqualTo(String)
+ Criteria andSecondProdCodeNotEqualTo(String)
+ Criteria andSecondProdCodeGreaterThan(String)
+ Criteria andSecondProdCodeGreaterThanOrEqualTo(String)
+ Criteria andSecondProdCodeLessThan(String)
+ Criteria andSecondProdCodeLessThanOrEqualTo(String)
+ Criteria andSecondProdCodeLike(String)
+ Criteria andSecondProdCodeNotLike(String)
+ Criteria andSecondProdCodeIn(List<String>)
+ Criteria andSecondProdCodeNotIn(List<String>)
+ Criteria andSecondProdCodeBetween(String,String)
+ Criteria andSecondProdCodeNotBetween(String,String)
+ Criteria andDueIndexIsNull()
+ Criteria andDueIndexIsNotNull()
+ Criteria andDueIndexEqualTo(Integer)
+ Criteria andDueIndexNotEqualTo(Integer)
+ Criteria andDueIndexGreaterThan(Integer)
+ Criteria andDueIndexGreaterThanOrEqualTo(Integer)
+ Criteria andDueIndexLessThan(Integer)
+ Criteria andDueIndexLessThanOrEqualTo(Integer)
+ Criteria andDueIndexIn(List<Integer>)
+ Criteria andDueIndexNotIn(List<Integer>)
+ Criteria andDueIndexBetween(Integer,Integer)
+ Criteria andDueIndexNotBetween(Integer,Integer)
+ Criteria andRepaymentAtIsNull()
+ Criteria andRepaymentAtIsNotNull()
+ Criteria andRepaymentAtEqualTo(Date)
+ Criteria andRepaymentAtNotEqualTo(Date)
+ Criteria andRepaymentAtGreaterThan(Date)
+ Criteria andRepaymentAtGreaterThanOrEqualTo(Date)
+ Criteria andRepaymentAtLessThan(Date)
+ Criteria andRepaymentAtLessThanOrEqualTo(Date)
+ Criteria andRepaymentAtIn(List<Date>)
+ Criteria andRepaymentAtNotIn(List<Date>)
+ Criteria andRepaymentAtBetween(Date,Date)
+ Criteria andRepaymentAtNotBetween(Date,Date)
+ Criteria andActualRepaymentAtIsNull()
+ Criteria andActualRepaymentAtIsNotNull()
+ Criteria andActualRepaymentAtEqualTo(Date)
+ Criteria andActualRepaymentAtNotEqualTo(Date)
+ Criteria andActualRepaymentAtGreaterThan(Date)
+ Criteria andActualRepaymentAtGreaterThanOrEqualTo(Date)
+ Criteria andActualRepaymentAtLessThan(Date)
+ Criteria andActualRepaymentAtLessThanOrEqualTo(Date)
+ Criteria andActualRepaymentAtIn(List<Date>)
+ Criteria andActualRepaymentAtNotIn(List<Date>)
+ Criteria andActualRepaymentAtBetween(Date,Date)
+ Criteria andActualRepaymentAtNotBetween(Date,Date)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andTransIdIsNull()
+ Criteria andTransIdIsNotNull()
+ Criteria andTransIdEqualTo(String)
+ Criteria andTransIdNotEqualTo(String)
+ Criteria andTransIdGreaterThan(String)
+ Criteria andTransIdGreaterThanOrEqualTo(String)
+ Criteria andTransIdLessThan(String)
+ Criteria andTransIdLessThanOrEqualTo(String)
+ Criteria andTransIdLike(String)
+ Criteria andTransIdNotLike(String)
+ Criteria andTransIdIn(List<String>)
+ Criteria andTransIdNotIn(List<String>)
+ Criteria andTransIdBetween(String,String)
+ Criteria andTransIdNotBetween(String,String)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andRepaymentAmountIsNull()
+ Criteria andRepaymentAmountIsNotNull()
+ Criteria andRepaymentAmountEqualTo(Long)
+ Criteria andRepaymentAmountNotEqualTo(Long)
+ Criteria andRepaymentAmountGreaterThan(Long)
+ Criteria andRepaymentAmountGreaterThanOrEqualTo(Long)
+ Criteria andRepaymentAmountLessThan(Long)
+ Criteria andRepaymentAmountLessThanOrEqualTo(Long)
+ Criteria andRepaymentAmountIn(List<Long>)
+ Criteria andRepaymentAmountNotIn(List<Long>)
+ Criteria andRepaymentAmountBetween(Long,Long)
+ Criteria andRepaymentAmountNotBetween(Long,Long)
+ Criteria andOperatorIdIsNull()
+ Criteria andOperatorIdIsNotNull()
+ Criteria andOperatorIdEqualTo(Long)
+ Criteria andOperatorIdNotEqualTo(Long)
+ Criteria andOperatorIdGreaterThan(Long)
+ Criteria andOperatorIdGreaterThanOrEqualTo(Long)
+ Criteria andOperatorIdLessThan(Long)
+ Criteria andOperatorIdLessThanOrEqualTo(Long)
+ Criteria andOperatorIdIn(List<Long>)
+ Criteria andOperatorIdNotIn(List<Long>)
+ Criteria andOperatorIdBetween(Long,Long)
+ Criteria andOperatorIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andIsAdvanceIsNull()
+ Criteria andIsAdvanceIsNotNull()
+ Criteria andIsAdvanceEqualTo(Boolean)
+ Criteria andIsAdvanceNotEqualTo(Boolean)
+ Criteria andIsAdvanceGreaterThan(Boolean)
+ Criteria andIsAdvanceGreaterThanOrEqualTo(Boolean)
+ Criteria andIsAdvanceLessThan(Boolean)
+ Criteria andIsAdvanceLessThanOrEqualTo(Boolean)
+ Criteria andIsAdvanceIn(List<Boolean>)
+ Criteria andIsAdvanceNotIn(List<Boolean>)
+ Criteria andIsAdvanceBetween(Boolean,Boolean)
+ Criteria andIsAdvanceNotBetween(Boolean,Boolean)
+ Criteria andMarkTypeIsNull()
+ Criteria andMarkTypeIsNotNull()
+ Criteria andMarkTypeEqualTo(Byte)
+ Criteria andMarkTypeNotEqualTo(Byte)
+ Criteria andMarkTypeGreaterThan(Byte)
+ Criteria andMarkTypeGreaterThanOrEqualTo(Byte)
+ Criteria andMarkTypeLessThan(Byte)
+ Criteria andMarkTypeLessThanOrEqualTo(Byte)
+ Criteria andMarkTypeIn(List<Byte>)
+ Criteria andMarkTypeNotIn(List<Byte>)
+ Criteria andMarkTypeBetween(Byte,Byte)
+ Criteria andMarkTypeNotBetween(Byte,Byte)
+ Criteria andBuyerCodeIsNull()
+ Criteria andBuyerCodeIsNotNull()
+ Criteria andBuyerCodeEqualTo(String)
+ Criteria andBuyerCodeNotEqualTo(String)
+ Criteria andBuyerCodeGreaterThan(String)
+ Criteria andBuyerCodeGreaterThanOrEqualTo(String)
+ Criteria andBuyerCodeLessThan(String)
+ Criteria andBuyerCodeLessThanOrEqualTo(String)
+ Criteria andBuyerCodeLike(String)
+ Criteria andBuyerCodeNotLike(String)
+ Criteria andBuyerCodeIn(List<String>)
+ Criteria andBuyerCodeNotIn(List<String>)
+ Criteria andBuyerCodeBetween(String,String)
+ Criteria andBuyerCodeNotBetween(String,String)
+ Criteria andBuyerNameIsNull()
+ Criteria andBuyerNameIsNotNull()
+ Criteria andBuyerNameEqualTo(String)
+ Criteria andBuyerNameNotEqualTo(String)
+ Criteria andBuyerNameGreaterThan(String)
+ Criteria andBuyerNameGreaterThanOrEqualTo(String)
+ Criteria andBuyerNameLessThan(String)
+ Criteria andBuyerNameLessThanOrEqualTo(String)
+ Criteria andBuyerNameLike(String)
+ Criteria andBuyerNameNotLike(String)
+ Criteria andBuyerNameIn(List<String>)
+ Criteria andBuyerNameNotIn(List<String>)
+ Criteria andBuyerNameBetween(String,String)
+ Criteria andBuyerNameNotBetween(String,String)
+ Criteria andFundInterestFeeIsNull()
+ Criteria andFundInterestFeeIsNotNull()
+ Criteria andFundInterestFeeEqualTo(Long)
+ Criteria andFundInterestFeeNotEqualTo(Long)
+ Criteria andFundInterestFeeGreaterThan(Long)
+ Criteria andFundInterestFeeGreaterThanOrEqualTo(Long)
+ Criteria andFundInterestFeeLessThan(Long)
+ Criteria andFundInterestFeeLessThanOrEqualTo(Long)
+ Criteria andFundInterestFeeIn(List<Long>)
+ Criteria andFundInterestFeeNotIn(List<Long>)
+ Criteria andFundInterestFeeBetween(Long,Long)
+ Criteria andFundInterestFeeNotBetween(Long,Long)
+ Criteria andServiceFeeIsNull()
+ Criteria andServiceFeeIsNotNull()
+ Criteria andServiceFeeEqualTo(Long)
+ Criteria andServiceFeeNotEqualTo(Long)
+ Criteria andServiceFeeGreaterThan(Long)
+ Criteria andServiceFeeGreaterThanOrEqualTo(Long)
+ Criteria andServiceFeeLessThan(Long)
+ Criteria andServiceFeeLessThanOrEqualTo(Long)
+ Criteria andServiceFeeIn(List<Long>)
+ Criteria andServiceFeeNotIn(List<Long>)
+ Criteria andServiceFeeBetween(Long,Long)
+ Criteria andServiceFeeNotBetween(Long,Long)
+ Criteria andProvisionFeeIsNull()
+ Criteria andProvisionFeeIsNotNull()
+ Criteria andProvisionFeeEqualTo(Long)
+ Criteria andProvisionFeeNotEqualTo(Long)
+ Criteria andProvisionFeeGreaterThan(Long)
+ Criteria andProvisionFeeGreaterThanOrEqualTo(Long)
+ Criteria andProvisionFeeLessThan(Long)
+ Criteria andProvisionFeeLessThanOrEqualTo(Long)
+ Criteria andProvisionFeeIn(List<Long>)
+ Criteria andProvisionFeeNotIn(List<Long>)
+ Criteria andProvisionFeeBetween(Long,Long)
+ Criteria andProvisionFeeNotBetween(Long,Long)
+ Criteria andInterestFeeIsNull()
+ Criteria andInterestFeeIsNotNull()
+ Criteria andInterestFeeEqualTo(Long)
+ Criteria andInterestFeeNotEqualTo(Long)
+ Criteria andInterestFeeGreaterThan(Long)
+ Criteria andInterestFeeGreaterThanOrEqualTo(Long)
+ Criteria andInterestFeeLessThan(Long)
+ Criteria andInterestFeeLessThanOrEqualTo(Long)
+ Criteria andInterestFeeIn(List<Long>)
+ Criteria andInterestFeeNotIn(List<Long>)
+ Criteria andInterestFeeBetween(Long,Long)
+ Criteria andInterestFeeNotBetween(Long,Long)
+ Criteria andLateFeeIsNull()
+ Criteria andLateFeeIsNotNull()
+ Criteria andLateFeeEqualTo(Long)
+ Criteria andLateFeeNotEqualTo(Long)
+ Criteria andLateFeeGreaterThan(Long)
+ Criteria andLateFeeGreaterThanOrEqualTo(Long)
+ Criteria andLateFeeLessThan(Long)
+ Criteria andLateFeeLessThanOrEqualTo(Long)
+ Criteria andLateFeeIn(List<Long>)
+ Criteria andLateFeeNotIn(List<Long>)
+ Criteria andLateFeeBetween(Long,Long)
+ Criteria andLateFeeNotBetween(Long,Long)
+ Criteria andPrincipalFeeIsNull()
+ Criteria andPrincipalFeeIsNotNull()
+ Criteria andPrincipalFeeEqualTo(Long)
+ Criteria andPrincipalFeeNotEqualTo(Long)
+ Criteria andPrincipalFeeGreaterThan(Long)
+ Criteria andPrincipalFeeGreaterThanOrEqualTo(Long)
+ Criteria andPrincipalFeeLessThan(Long)
+ Criteria andPrincipalFeeLessThanOrEqualTo(Long)
+ Criteria andPrincipalFeeIn(List<Long>)
+ Criteria andPrincipalFeeNotIn(List<Long>)
+ Criteria andPrincipalFeeBetween(Long,Long)
+ Criteria andPrincipalFeeNotBetween(Long,Long)
+ Criteria andAdminFeeIsNull()
+ Criteria andAdminFeeIsNotNull()
+ Criteria andAdminFeeEqualTo(Long)
+ Criteria andAdminFeeNotEqualTo(Long)
+ Criteria andAdminFeeGreaterThan(Long)
+ Criteria andAdminFeeGreaterThanOrEqualTo(Long)
+ Criteria andAdminFeeLessThan(Long)
+ Criteria andAdminFeeLessThanOrEqualTo(Long)
+ Criteria andAdminFeeIn(List<Long>)
+ Criteria andAdminFeeNotIn(List<Long>)
+ Criteria andAdminFeeBetween(Long,Long)
+ Criteria andAdminFeeNotBetween(Long,Long)
+ Criteria andStoreIdIsNull()
+ Criteria andStoreIdIsNotNull()
+ Criteria andStoreIdEqualTo(Long)
+ Criteria andStoreIdNotEqualTo(Long)
+ Criteria andStoreIdGreaterThan(Long)
+ Criteria andStoreIdGreaterThanOrEqualTo(Long)
+ Criteria andStoreIdLessThan(Long)
+ Criteria andStoreIdLessThanOrEqualTo(Long)
+ Criteria andStoreIdIn(List<Long>)
+ Criteria andStoreIdNotIn(List<Long>)
+ Criteria andStoreIdBetween(Long,Long)
+ Criteria andStoreIdNotBetween(Long,Long)
+ Criteria andOnlineAddressIsNull()
+ Criteria andOnlineAddressIsNotNull()
+ Criteria andOnlineAddressEqualTo(String)
+ Criteria andOnlineAddressNotEqualTo(String)
+ Criteria andOnlineAddressGreaterThan(String)
+ Criteria andOnlineAddressGreaterThanOrEqualTo(String)
+ Criteria andOnlineAddressLessThan(String)
+ Criteria andOnlineAddressLessThanOrEqualTo(String)
+ Criteria andOnlineAddressLike(String)
+ Criteria andOnlineAddressNotLike(String)
+ Criteria andOnlineAddressIn(List<String>)
+ Criteria andOnlineAddressNotIn(List<String>)
+ Criteria andOnlineAddressBetween(String,String)
+ Criteria andOnlineAddressNotBetween(String,String)
+ Criteria andOverAmountIsNull()
+ Criteria andOverAmountIsNotNull()
+ Criteria andOverAmountEqualTo(Long)
+ Criteria andOverAmountNotEqualTo(Long)
+ Criteria andOverAmountGreaterThan(Long)
+ Criteria andOverAmountGreaterThanOrEqualTo(Long)
+ Criteria andOverAmountLessThan(Long)
+ Criteria andOverAmountLessThanOrEqualTo(Long)
+ Criteria andOverAmountIn(List<Long>)
+ Criteria andOverAmountNotIn(List<Long>)
+ Criteria andOverAmountBetween(Long,Long)
+ Criteria andOverAmountNotBetween(Long,Long)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Long)
+ Criteria andFundIdNotEqualTo(Long)
+ Criteria andFundIdGreaterThan(Long)
+ Criteria andFundIdGreaterThanOrEqualTo(Long)
+ Criteria andFundIdLessThan(Long)
+ Criteria andFundIdLessThanOrEqualTo(Long)
+ Criteria andFundIdIn(List<Long>)
+ Criteria andFundIdNotIn(List<Long>)
+ Criteria andFundIdBetween(Long,Long)
+ Criteria andFundIdNotBetween(Long,Long)
+ Criteria andFundTypeIsNull()
+ Criteria andFundTypeIsNotNull()
+ Criteria andFundTypeEqualTo(Byte)
+ Criteria andFundTypeNotEqualTo(Byte)
+ Criteria andFundTypeGreaterThan(Byte)
+ Criteria andFundTypeGreaterThanOrEqualTo(Byte)
+ Criteria andFundTypeLessThan(Byte)
+ Criteria andFundTypeLessThanOrEqualTo(Byte)
+ Criteria andFundTypeIn(List<Byte>)
+ Criteria andFundTypeNotIn(List<Byte>)
+ Criteria andFundTypeBetween(Byte,Byte)
+ Criteria andFundTypeNotBetween(Byte,Byte)
+ Criteria andIsCustomIsNull()
+ Criteria andIsCustomIsNotNull()
+ Criteria andIsCustomEqualTo(Boolean)
+ Criteria andIsCustomNotEqualTo(Boolean)
+ Criteria andIsCustomGreaterThan(Boolean)
+ Criteria andIsCustomGreaterThanOrEqualTo(Boolean)
+ Criteria andIsCustomLessThan(Boolean)
+ Criteria andIsCustomLessThanOrEqualTo(Boolean)
+ Criteria andIsCustomIn(List<Boolean>)
+ Criteria andIsCustomNotIn(List<Boolean>)
+ Criteria andIsCustomBetween(Boolean,Boolean)
+ Criteria andIsCustomNotBetween(Boolean,Boolean)
+ Criteria andIsOverdueIsNull()
+ Criteria andIsOverdueIsNotNull()
+ Criteria andIsOverdueEqualTo(Boolean)
+ Criteria andIsOverdueNotEqualTo(Boolean)
+ Criteria andIsOverdueGreaterThan(Boolean)
+ Criteria andIsOverdueGreaterThanOrEqualTo(Boolean)
+ Criteria andIsOverdueLessThan(Boolean)
+ Criteria andIsOverdueLessThanOrEqualTo(Boolean)
+ Criteria andIsOverdueIn(List<Boolean>)
+ Criteria andIsOverdueNotIn(List<Boolean>)
+ Criteria andIsOverdueBetween(Boolean,Boolean)
+ Criteria andIsOverdueNotBetween(Boolean,Boolean)
+ Criteria andRepayCodeIsNull()
+ Criteria andRepayCodeIsNotNull()
+ Criteria andRepayCodeEqualTo(String)
+ Criteria andRepayCodeNotEqualTo(String)
+ Criteria andRepayCodeGreaterThan(String)
+ Criteria andRepayCodeGreaterThanOrEqualTo(String)
+ Criteria andRepayCodeLessThan(String)
+ Criteria andRepayCodeLessThanOrEqualTo(String)
+ Criteria andRepayCodeLike(String)
+ Criteria andRepayCodeNotLike(String)
+ Criteria andRepayCodeIn(List<String>)
+ Criteria andRepayCodeNotIn(List<String>)
+ Criteria andRepayCodeBetween(String,String)
+ Criteria andRepayCodeNotBetween(String,String)
+ Criteria andReceiptAccountIsNull()
+ Criteria andReceiptAccountIsNotNull()
+ Criteria andReceiptAccountEqualTo(String)
+ Criteria andReceiptAccountNotEqualTo(String)
+ Criteria andReceiptAccountGreaterThan(String)
+ Criteria andReceiptAccountGreaterThanOrEqualTo(String)
+ Criteria andReceiptAccountLessThan(String)
+ Criteria andReceiptAccountLessThanOrEqualTo(String)
+ Criteria andReceiptAccountLike(String)
+ Criteria andReceiptAccountNotLike(String)
+ Criteria andReceiptAccountIn(List<String>)
+ Criteria andReceiptAccountNotIn(List<String>)
+ Criteria andReceiptAccountBetween(String,String)
+ Criteria andReceiptAccountNotBetween(String,String)
+ Criteria andBankCodeIsNull()
+ Criteria andBankCodeIsNotNull()
+ Criteria andBankCodeEqualTo(String)
+ Criteria andBankCodeNotEqualTo(String)
+ Criteria andBankCodeGreaterThan(String)
+ Criteria andBankCodeGreaterThanOrEqualTo(String)
+ Criteria andBankCodeLessThan(String)
+ Criteria andBankCodeLessThanOrEqualTo(String)
+ Criteria andBankCodeLike(String)
+ Criteria andBankCodeNotLike(String)
+ Criteria andBankCodeIn(List<String>)
+ Criteria andBankCodeNotIn(List<String>)
+ Criteria andBankCodeBetween(String,String)
+ Criteria andBankCodeNotBetween(String,String)
+ Criteria andOrderNoIsNull()
+ Criteria andOrderNoIsNotNull()
+ Criteria andOrderNoEqualTo(String)
+ Criteria andOrderNoNotEqualTo(String)
+ Criteria andOrderNoGreaterThan(String)
+ Criteria andOrderNoGreaterThanOrEqualTo(String)
+ Criteria andOrderNoLessThan(String)
+ Criteria andOrderNoLessThanOrEqualTo(String)
+ Criteria andOrderNoLike(String)
+ Criteria andOrderNoNotLike(String)
+ Criteria andOrderNoIn(List<String>)
+ Criteria andOrderNoNotIn(List<String>)
+ Criteria andOrderNoBetween(String,String)
+ Criteria andOrderNoNotBetween(String,String)
+ Criteria andOriginIsNull()
+ Criteria andOriginIsNotNull()
+ Criteria andOriginEqualTo(Byte)
+ Criteria andOriginNotEqualTo(Byte)
+ Criteria andOriginGreaterThan(Byte)
+ Criteria andOriginGreaterThanOrEqualTo(Byte)
+ Criteria andOriginLessThan(Byte)
+ Criteria andOriginLessThanOrEqualTo(Byte)
+ Criteria andOriginIn(List<Byte>)
+ Criteria andOriginNotIn(List<Byte>)
+ Criteria andOriginBetween(Byte,Byte)
+ Criteria andOriginNotBetween(Byte,Byte)
+ Criteria andPlanTypeIsNull()
+ Criteria andPlanTypeIsNotNull()
+ Criteria andPlanTypeEqualTo(Byte)
+ Criteria andPlanTypeNotEqualTo(Byte)
+ Criteria andPlanTypeGreaterThan(Byte)
+ Criteria andPlanTypeGreaterThanOrEqualTo(Byte)
+ Criteria andPlanTypeLessThan(Byte)
+ Criteria andPlanTypeLessThanOrEqualTo(Byte)
+ Criteria andPlanTypeIn(List<Byte>)
+ Criteria andPlanTypeNotIn(List<Byte>)
+ Criteria andPlanTypeBetween(Byte,Byte)
+ Criteria andPlanTypeNotBetween(Byte,Byte)
+ Criteria andLateFeeDiscountAmountIsNull()
+ Criteria andLateFeeDiscountAmountIsNotNull()
+ Criteria andLateFeeDiscountAmountEqualTo(Long)
+ Criteria andLateFeeDiscountAmountNotEqualTo(Long)
+ Criteria andLateFeeDiscountAmountGreaterThan(Long)
+ Criteria andLateFeeDiscountAmountGreaterThanOrEqualTo(Long)
+ Criteria andLateFeeDiscountAmountLessThan(Long)
+ Criteria andLateFeeDiscountAmountLessThanOrEqualTo(Long)
+ Criteria andLateFeeDiscountAmountIn(List<Long>)
+ Criteria andLateFeeDiscountAmountNotIn(List<Long>)
+ Criteria andLateFeeDiscountAmountBetween(Long,Long)
+ Criteria andLateFeeDiscountAmountNotBetween(Long,Long)
+ Criteria andDiscountLateFeeIsNull()
+ Criteria andDiscountLateFeeIsNotNull()
+ Criteria andDiscountLateFeeEqualTo(Long)
+ Criteria andDiscountLateFeeNotEqualTo(Long)
+ Criteria andDiscountLateFeeGreaterThan(Long)
+ Criteria andDiscountLateFeeGreaterThanOrEqualTo(Long)
+ Criteria andDiscountLateFeeLessThan(Long)
+ Criteria andDiscountLateFeeLessThanOrEqualTo(Long)
+ Criteria andDiscountLateFeeIn(List<Long>)
+ Criteria andDiscountLateFeeNotIn(List<Long>)
+ Criteria andDiscountLateFeeBetween(Long,Long)
+ Criteria andDiscountLateFeeNotBetween(Long,Long)
+ Criteria andCouponLateFeeIsNull()
+ Criteria andCouponLateFeeIsNotNull()
+ Criteria andCouponLateFeeEqualTo(Long)
+ Criteria andCouponLateFeeNotEqualTo(Long)
+ Criteria andCouponLateFeeGreaterThan(Long)
+ Criteria andCouponLateFeeGreaterThanOrEqualTo(Long)
+ Criteria andCouponLateFeeLessThan(Long)
+ Criteria andCouponLateFeeLessThanOrEqualTo(Long)
+ Criteria andCouponLateFeeIn(List<Long>)
+ Criteria andCouponLateFeeNotIn(List<Long>)
+ Criteria andCouponLateFeeBetween(Long,Long)
+ Criteria andCouponLateFeeNotBetween(Long,Long)
+ Criteria andCouponAdminFeeIsNull()
+ Criteria andCouponAdminFeeIsNotNull()
+ Criteria andCouponAdminFeeEqualTo(Long)
+ Criteria andCouponAdminFeeNotEqualTo(Long)
+ Criteria andCouponAdminFeeGreaterThan(Long)
+ Criteria andCouponAdminFeeGreaterThanOrEqualTo(Long)
+ Criteria andCouponAdminFeeLessThan(Long)
+ Criteria andCouponAdminFeeLessThanOrEqualTo(Long)
+ Criteria andCouponAdminFeeIn(List<Long>)
+ Criteria andCouponAdminFeeNotIn(List<Long>)
+ Criteria andCouponAdminFeeBetween(Long,Long)
+ Criteria andCouponAdminFeeNotBetween(Long,Long)
+ Criteria andCouponInterestFeeIsNull()
+ Criteria andCouponInterestFeeIsNotNull()
+ Criteria andCouponInterestFeeEqualTo(Long)
+ Criteria andCouponInterestFeeNotEqualTo(Long)
+ Criteria andCouponInterestFeeGreaterThan(Long)
+ Criteria andCouponInterestFeeGreaterThanOrEqualTo(Long)
+ Criteria andCouponInterestFeeLessThan(Long)
+ Criteria andCouponInterestFeeLessThanOrEqualTo(Long)
+ Criteria andCouponInterestFeeIn(List<Long>)
+ Criteria andCouponInterestFeeNotIn(List<Long>)
+ Criteria andCouponInterestFeeBetween(Long,Long)
+ Criteria andCouponInterestFeeNotBetween(Long,Long)
+ Criteria andCouponPrincipalIsNull()
+ Criteria andCouponPrincipalIsNotNull()
+ Criteria andCouponPrincipalEqualTo(Long)
+ Criteria andCouponPrincipalNotEqualTo(Long)
+ Criteria andCouponPrincipalGreaterThan(Long)
+ Criteria andCouponPrincipalGreaterThanOrEqualTo(Long)
+ Criteria andCouponPrincipalLessThan(Long)
+ Criteria andCouponPrincipalLessThanOrEqualTo(Long)
+ Criteria andCouponPrincipalIn(List<Long>)
+ Criteria andCouponPrincipalNotIn(List<Long>)
+ Criteria andCouponPrincipalBetween(Long,Long)
+ Criteria andCouponPrincipalNotBetween(Long,Long)
+ Criteria andSubServiceFeeIsNull()
+ Criteria andSubServiceFeeIsNotNull()
+ Criteria andSubServiceFeeEqualTo(Long)
+ Criteria andSubServiceFeeNotEqualTo(Long)
+ Criteria andSubServiceFeeGreaterThan(Long)
+ Criteria andSubServiceFeeGreaterThanOrEqualTo(Long)
+ Criteria andSubServiceFeeLessThan(Long)
+ Criteria andSubServiceFeeLessThanOrEqualTo(Long)
+ Criteria andSubServiceFeeIn(List<Long>)
+ Criteria andSubServiceFeeNotIn(List<Long>)
+ Criteria andSubServiceFeeBetween(Long,Long)
+ Criteria andSubServiceFeeNotBetween(Long,Long)
+ Criteria andSubFundInterestFeeIsNull()
+ Criteria andSubFundInterestFeeIsNotNull()
+ Criteria andSubFundInterestFeeEqualTo(Long)
+ Criteria andSubFundInterestFeeNotEqualTo(Long)
+ Criteria andSubFundInterestFeeGreaterThan(Long)
+ Criteria andSubFundInterestFeeGreaterThanOrEqualTo(Long)
+ Criteria andSubFundInterestFeeLessThan(Long)
+ Criteria andSubFundInterestFeeLessThanOrEqualTo(Long)
+ Criteria andSubFundInterestFeeIn(List<Long>)
+ Criteria andSubFundInterestFeeNotIn(List<Long>)
+ Criteria andSubFundInterestFeeBetween(Long,Long)
+ Criteria andSubFundInterestFeeNotBetween(Long,Long)
+ Criteria andPromotionCodeIsNull()
+ Criteria andPromotionCodeIsNotNull()
+ Criteria andPromotionCodeEqualTo(String)
+ Criteria andPromotionCodeNotEqualTo(String)
+ Criteria andPromotionCodeGreaterThan(String)
+ Criteria andPromotionCodeGreaterThanOrEqualTo(String)
+ Criteria andPromotionCodeLessThan(String)
+ Criteria andPromotionCodeLessThanOrEqualTo(String)
+ Criteria andPromotionCodeLike(String)
+ Criteria andPromotionCodeNotLike(String)
+ Criteria andPromotionCodeIn(List<String>)
+ Criteria andPromotionCodeNotIn(List<String>)
+ Criteria andPromotionCodeBetween(String,String)
+ Criteria andPromotionCodeNotBetween(String,String)
+ Criteria andFastPayFeeIsNull()
+ Criteria andFastPayFeeIsNotNull()
+ Criteria andFastPayFeeEqualTo(Long)
+ Criteria andFastPayFeeNotEqualTo(Long)
+ Criteria andFastPayFeeGreaterThan(Long)
+ Criteria andFastPayFeeGreaterThanOrEqualTo(Long)
+ Criteria andFastPayFeeLessThan(Long)
+ Criteria andFastPayFeeLessThanOrEqualTo(Long)
+ Criteria andFastPayFeeIn(List<Long>)
+ Criteria andFastPayFeeNotIn(List<Long>)
+ Criteria andFastPayFeeBetween(Long,Long)
+ Criteria andFastPayFeeNotBetween(Long,Long)
+ Criteria andVatFeeIsNull()
+ Criteria andVatFeeIsNotNull()
+ Criteria andVatFeeEqualTo(Long)
+ Criteria andVatFeeNotEqualTo(Long)
+ Criteria andVatFeeGreaterThan(Long)
+ Criteria andVatFeeGreaterThanOrEqualTo(Long)
+ Criteria andVatFeeLessThan(Long)
+ Criteria andVatFeeLessThanOrEqualTo(Long)
+ Criteria andVatFeeIn(List<Long>)
+ Criteria andVatFeeNotIn(List<Long>)
+ Criteria andVatFeeBetween(Long,Long)
+ Criteria andVatFeeNotBetween(Long,Long)
+ Criteria andCreditTagIsNull()
+ Criteria andCreditTagIsNotNull()
+ Criteria andCreditTagEqualTo(String)
+ Criteria andCreditTagNotEqualTo(String)
+ Criteria andCreditTagGreaterThan(String)
+ Criteria andCreditTagGreaterThanOrEqualTo(String)
+ Criteria andCreditTagLessThan(String)
+ Criteria andCreditTagLessThanOrEqualTo(String)
+ Criteria andCreditTagLike(String)
+ Criteria andCreditTagNotLike(String)
+ Criteria andCreditTagIn(List<String>)
+ Criteria andCreditTagNotIn(List<String>)
+ Criteria andCreditTagBetween(String,String)
+ Criteria andCreditTagNotBetween(String,String)
+ Criteria andPfVatFeeIsNull()
+ Criteria andPfVatFeeIsNotNull()
+ Criteria andPfVatFeeEqualTo(Long)
+ Criteria andPfVatFeeNotEqualTo(Long)
+ Criteria andPfVatFeeGreaterThan(Long)
+ Criteria andPfVatFeeGreaterThanOrEqualTo(Long)
+ Criteria andPfVatFeeLessThan(Long)
+ Criteria andPfVatFeeLessThanOrEqualTo(Long)
+ Criteria andPfVatFeeIn(List<Long>)
+ Criteria andPfVatFeeNotIn(List<Long>)
+ Criteria andPfVatFeeBetween(Long,Long)
+ Criteria andPfVatFeeNotBetween(Long,Long)
+ Criteria andAfVatFeeIsNull()
+ Criteria andAfVatFeeIsNotNull()
+ Criteria andAfVatFeeEqualTo(Long)
+ Criteria andAfVatFeeNotEqualTo(Long)
+ Criteria andAfVatFeeGreaterThan(Long)
+ Criteria andAfVatFeeGreaterThanOrEqualTo(Long)
+ Criteria andAfVatFeeLessThan(Long)
+ Criteria andAfVatFeeLessThanOrEqualTo(Long)
+ Criteria andAfVatFeeIn(List<Long>)
+ Criteria andAfVatFeeNotIn(List<Long>)
+ Criteria andAfVatFeeBetween(Long,Long)
+ Criteria andAfVatFeeNotBetween(Long,Long)
+ Criteria andCfVatFeeIsNull()
+ Criteria andCfVatFeeIsNotNull()
+ Criteria andCfVatFeeEqualTo(Long)
+ Criteria andCfVatFeeNotEqualTo(Long)
+ Criteria andCfVatFeeGreaterThan(Long)
+ Criteria andCfVatFeeGreaterThanOrEqualTo(Long)
+ Criteria andCfVatFeeLessThan(Long)
+ Criteria andCfVatFeeLessThanOrEqualTo(Long)
+ Criteria andCfVatFeeIn(List<Long>)
+ Criteria andCfVatFeeNotIn(List<Long>)
+ Criteria andCfVatFeeBetween(Long,Long)
+ Criteria andCfVatFeeNotBetween(Long,Long)
+ Criteria andLfVatFeeIsNull()
+ Criteria andLfVatFeeIsNotNull()
+ Criteria andLfVatFeeEqualTo(Long)
+ Criteria andLfVatFeeNotEqualTo(Long)
+ Criteria andLfVatFeeGreaterThan(Long)
+ Criteria andLfVatFeeGreaterThanOrEqualTo(Long)
+ Criteria andLfVatFeeLessThan(Long)
+ Criteria andLfVatFeeLessThanOrEqualTo(Long)
+ Criteria andLfVatFeeIn(List<Long>)
+ Criteria andLfVatFeeNotIn(List<Long>)
+ Criteria andLfVatFeeBetween(Long,Long)
+ Criteria andLfVatFeeNotBetween(Long,Long)
+ Criteria andCouponFundFeeIsNull()
+ Criteria andCouponFundFeeIsNotNull()
+ Criteria andCouponFundFeeEqualTo(Long)
+ Criteria andCouponFundFeeNotEqualTo(Long)
+ Criteria andCouponFundFeeGreaterThan(Long)
+ Criteria andCouponFundFeeGreaterThanOrEqualTo(Long)
+ Criteria andCouponFundFeeLessThan(Long)
+ Criteria andCouponFundFeeLessThanOrEqualTo(Long)
+ Criteria andCouponFundFeeIn(List<Long>)
+ Criteria andCouponFundFeeNotIn(List<Long>)
+ Criteria andCouponFundFeeBetween(Long,Long)
+ Criteria andCouponFundFeeNotBetween(Long,Long)
+ Criteria andCouponProvisionFeeIsNull()
+ Criteria andCouponProvisionFeeIsNotNull()
+ Criteria andCouponProvisionFeeEqualTo(Long)
+ Criteria andCouponProvisionFeeNotEqualTo(Long)
+ Criteria andCouponProvisionFeeGreaterThan(Long)
+ Criteria andCouponProvisionFeeGreaterThanOrEqualTo(Long)
+ Criteria andCouponProvisionFeeLessThan(Long)
+ Criteria andCouponProvisionFeeLessThanOrEqualTo(Long)
+ Criteria andCouponProvisionFeeIn(List<Long>)
+ Criteria andCouponProvisionFeeNotIn(List<Long>)
+ Criteria andCouponProvisionFeeBetween(Long,Long)
+ Criteria andCouponProvisionFeeNotBetween(Long,Long)
}
class com.welab.loan.finance.model.FinanceRepaymentTrackExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FinanceRepaymentTrackExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.service.other.RateService {
- ProductConfigServiceFacade productConfigServiceFacade
- ActivityDubboService activityDubboService
- BankConfigService bankConfigService
- CooperationUserService cooperationUserService
- CreditActivityAbTestManager creditActivityAbTestManager
- CreditUserAccountInfoService creditUserAccountInfoService
- FundAccountInfoServiceFacade fundAccountInfoServiceFacade
- ApolloUtils apolloUtils
- CreditLoanServiceFacade creditLoanServiceFacade
- String origin
+ List<ProductRateConfigVO> getInitRate()
+ List<ProductRateConfigVO> getInitRate(ScheduleAmountDto)
- List<ProductRateConfigVO> bulidRateConfigVOList(ScheduleAmountDto,String,JSONArray)
+ List<ProductRateConfigVO> getInitRate(String,Long,Long)
+ List<String> buildTenors(ScheduleAmountDto)
+ boolean matchOriginTenors(ScheduleAmountDto)
# boolean afterOriginTenors(ScheduleAmountDto,List<String>)
# boolean buildJomboTenors(ScheduleAmountDto,List<String>)
- Integer getTenor(String,String)
- List<ProductRateConfigVO> buildSigapTenor(List<ProductRateConfigVO>,ScheduleAmountDto)
+ ProductRateConfigVO matchRate(String,String,String,Long)
+ {static} Boolean compareTenor(String,ProductRateConfigVO)
+ ProductRateConfigVO matchRateByUserId(ScheduleAmountDto)
+ ProductRateConfigVO matchRate(String,String,String,String,Long)
+ ProductRateConfigVO matchRateByDto(MatchRateDto)
+ ActivityRuleResponseDTO getActivityRuleByLoanNumber(String)
+ ActivityRuleResponseDTO getActivityRuleByCode(ActivityCodeRequestDTO)
}
class com.welab.loan.finance.dto.DataDictionaryDTO {
- String key
- String value
}
class com.welab.loan.finance.app.service.flow.FlowTaskService {
- List<AbstractFlowComponent> flowList
- FlowExecutor flowExecutor
- FlowTaskServiceManager flowTaskServiceManager
- FlowTaskTrackManager flowTaskTrackManager
- ExecutorService executorService
- void init()
+ void startFlow(BaseFlowContext)
- void doFlow(BaseFlowContext)
}
interface com.welab.loan.finance.service.CreditUserInfoService {
+ List<Long> findExistsUserInfo(List<Long>,String)
}
class com.welab.loan.finance.dto.cmd.tb.GadaInvoiceExtCmd {
- {static} long serialVersionUID
- String cityId
- Long limit
- String uId
}
class com.welab.loan.finance.model.ext.CreditActivityAbTestGroupExt {
- String matrix
- String testGroupWeight
- String activityStatus
- Integer totalUser
- String creator
- Date currentDate
- Integer testGroupUserCount
- Integer totalUserCount
}
class com.welab.loan.finance.dto.cmd.CancelCouponCmd {
- String loanNumber
- String promotionCode
- Long userId
}
class com.welab.loan.finance.dto.paylater.PayLaterLimitRspDTO {
- Long totalLimit
- Long availableLimit
- Long ownSystemUse
- Long otherSystemUse
}
class com.welab.loan.finance.core.dues.vat.VatRepaymentCostProvider {
- ConfigServiceFacade taxConfigServiceFacade
+ BigDecimal doCalc(String,BigDecimal)
+ BigDecimal doCalc(String,BigDecimal,BigDecimal)
+ BigDecimal doCalc(BigDecimal)
+ BigDecimal doCalc(BigDecimal,BigDecimal)
+ BigDecimal doCalcBeforeVat(String,BigDecimal)
+ BigDecimal getVatRate()
}
class com.welab.loan.finance.dto.EPlanApplyDTO {
- {static} long serialVersionUID
- Long amount
- Integer overdueDays
- String loanNumber
- String partnerLogoUrl
- String partnerName
- String secondProdCode
- String origin
}
class com.welab.loan.finance.service.impl.LoanCouponServiceImpl {
- LoanCouponMapper loanCouponMapper
- LoanCouponDetailMapper loanCouponDetailMapper
- BaseRabbitTemplate baseRabbitTemplate
+ int usePromotionCode(LoanCoupon)
+ int saveLoanCouponDetail(LoanCouponDetail)
+ int insertLoanCoupon(LoanCoupon)
+ long countPromotionCode(String)
+ void promotionCodeExpired(String,String)
+ LoanCouponExample buildLoanCouponExample(String,String,CouponStatusEnum)
+ LoanCouponDetailExample buildLoanCouponDetailExample(String,String,CouponStatusEnum)
+ List<LoanCoupon> listByUserId(Long,byte)
}
class com.welab.loan.finance.model.mongo.Doc {
- String id
- Date createdAt
}
class com.welab.loan.finance.job.FlowTaskRerunJob {
- FlowTaskService flowTaskService
- FlowTaskServiceManager flowTaskServiceManager
- Integer BATCH_SIZE
- Integer MAX_RETRY_COUNT
+ void execute(ShardingContext)
- BaseFlowContext task2BaseFlowContext(FlowTask)
}
class com.welab.loan.finance.rabbitmq.CreditUserTagChangeConsumer {
- CreditUserTagRuleService creditUserTagRuleService
- BaseCreditUserAccountService baseCreditUserAccountService
- LoanOverdueInfoExtMapper loanOverdueInfoExtMapper
- CreditUserAccountServiceImpl creditUserAccountService
- Integer FREEZE_USER_DPD
- BaseCreditProxyIncomeLogService baseCreditProxyIncomeLogService
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
+ void onMessage(Message)
- boolean handRepayment(CreditUserTagChangeDTO)
- Set<Long> getFreezeUserIds(Set<Long>)
}
class com.welab.loan.finance.app.base.credit.BaseCreditUserTagRuleService {
- CreditUserTagRuleMapper creditUserTagRuleMapper
+ List<String> getCanIncreaseTags()
}
class com.welab.loan.finance.model.LoanUvfInput {
- Long id
- String applyNo
- String batchNo
- Date createdAt
- Date updatedAt
- String secondProductCode
- String content
+ Long getId()
+ void setId(Long)
+ String getApplyNo()
+ void setApplyNo(String)
+ String getBatchNo()
+ void setBatchNo(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getSecondProductCode()
+ void setSecondProductCode(String)
+ String getContent()
+ void setContent(String)
}
class com.welab.loan.finance.app.base.tb.BaseTbLendBatchService {
- TbLendBatchMapper tbLendBatchMapper
- TbLendBatchExtMapper tbLendBatchExtMapper
+ int save(TbLendBatch)
+ List<TbLendBatch> list(TbLendBatchExample)
+ TbLendBatch findOne(String)
+ List<Long> listFundId(String)
+ void deleteLendBatch(List<String>)
+ TbLendBatch findOneByTrio(String)
}
class com.welab.loan.finance.job.LoanReFundEmailJob {
- FinanceRefundDetailMapper mapper
- FundService fundService
- Map<Long,FundAccountInfoDTO> map
+ void execute(ShardingContext)
+ List quaryList(String)
+ FinanceRefundDetailVo transform(Object)
+ LinkedHashMap getExcelHead()
+ String getSubject(String)
+ void setEmailUser()
}
class com.welab.loan.finance.test.MongoTest {
- MongoManager mongoManager
+ void test()
+ void testGet()
}
class com.welab.loan.finance.service.business.loaninfo.maucash.MaucashLoanInfoServiceImpl {
- BaseLoanService baseLoanService
- WefendInfoService wefendInfoService
- RateService rateService
- BaseLoanDetailExtendService baseLoanDetailExtendService
- CreditUserAccountServiceImpl creditUserAccountService
- UpdateOrInitCreditCmdExe updateOrInitCreditCmdExe
- CreditUserTagLogManager creditUserTagLogManager
- CreditUserTagRuleService creditUserTagRuleService
- CreditUserAccountInfoService creditUserAccountInfoService
- BaseMerchantService baseMerchantService
- CreditAccountManager creditAccountManager
- RebookAmountService rebookAmountService
- BaseCreditActivityAbTestGroupLoanRelationService baseCreditActivityAbTestGroupLoanRelationService
- ApolloUtils apolloUtils
- DisbursementCapManager disbursementCapManager
+ MaucashLoanInfoServiceImpl getThis()
+ boolean loanInfoCredit(Map<String,Object>)
+ boolean loanInfo(Map<String,Object>)
- LoanDetail getLoanDetail(Map<String,Object>,ProductRateConfigExtendVO)
- boolean doApplyCreditProduct(Map<String,Object>)
- boolean preCheck(Map<String,Object>)
- void saveCreditUserLoan(LoanDetail,ProductRateConfigExtendVO)
- void saveAbTestLoan(LoanDetail,ProductRateConfigExtendVO,int)
+ boolean applyCreditProduct(Map<String,Object>)
+ boolean forcedFundSwitching(Long,String)
# Long getAdminFee(LoanDetail,LoanDetailExtend)
# Long getProvisionFee(LoanDetail,LoanDetailExtend)
+ {static} Long getFundInterest(LoanDetail,LoanDetailExtend)
+ {static} Long getServcieFee(LoanDetail,LoanDetailExtend)
+ void setDisbursementType(String,LoanDetail)
- ProductRateConfigExtendVO getProductRate(LoanDetail)
- ApprovalWedefendInfoVO getWedefendInfo(String)
- boolean setActivityRule(String,RepaymentCalculatorReq)
+ LoanDetailExtend setExtend(LoanDetail,Boolean,Map,ProductRateConfigVO,ActivityRuleResponseDTO)
+ boolean consumePayLater(LoanDetail,LoanDetailExtend,Map)
- Long getMcFunderInteres(LoanDetail,LoanDetailExtend)
+ Long getOrgId()
}
class com.welab.loan.finance.vo.FifUvfMotoDueListExcelVo {
- String branchId
- String contractId
- Integer paymentTerm
- Integer repaymentPeriod
- Long dueAmount
- Long principal
- Long serviceFee
- String dueDateStr
- String loanNumber
- Long interestAmountPay
- Long interestAmountUnpay
- Long interestDiscount
- Long principalPay
- Long principalUnpay
- Long principalDiscount
- Long actualPrincipal
- Long actualInterest
- String secondProdCode
}
class com.welab.loan.finance.dto.CalculationPlanDTO {
- Long orgTotalAmount
- Long totalAmount
- String lateFeeDiscount
- Long lateFee
- Long serviceFee
- String serviceFeeDiscount
- Long adminFee
- Long fundInterest
- Long principal
}
class com.welab.loan.finance.app.command.tb.order.validate.impl.TravelokaPaylaterInvoiceValidateService {
- RateService rateService
- TravelokaPaylaterTbLoanDetailBuilder travelokaPaylaterTbLoanDetailBuilder
+ void doValidate(TbInvoice)
- ProductRateConfigVO findProductRateConfig(String,Long)
+ String getKey()
}
class com.welab.loan.finance.dto.LoanDuesDTO {
- String loanNumber
- String tenor
- String secondProdCode
- Long fundInterestAmount
- Long fundInterestPay
- Long fundInterestUnPay
- Long principalAmount
- Long principalPay
- Long principalUnPay
- Long adminFeeAmount
- Long adminFeePay
- Long adminFeeUnPay
- Long carryingFeeAmount
- Long carryingFeePay
- Long carryingFeeUnPay
- Long lateFeeAmount
- Long lateFeePay
- Long lateFeeUnPay
- Long provisionFeeAmount
- Long provisionFeePay
- Long provisionFeeUnPay
- Long platformFeeAmount
- Long platformFeePay
- Long platformFeeUnPay
- Long promoCodeFee
- Boolean hasChecked
- List<LoanDueIndexDuesDTO> fPlanDuesDueIndexDTOs
}
class com.welab.loan.finance.dto.FinanceUserBankcardDto {
- {static} long serialVersionUID
- Long orgId
- Long userId
- String bankAccountNumber
- String bankCode
- String userName
- String bankName
- boolean checkName
- String ip
- String sourceId
}
interface com.welab.loan.finance.core.dues.ICostService {
~ CostDetailDTO findCostDetail(CostReqDTO)
~ BigDecimal findServiceFee(BigDecimal,BigDecimal)
~ String costKey()
}
class com.welab.loan.finance.model.LoanUserRepayDetailExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanUserRepayDetailExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanUserRepayDetailExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andRepayIdIsNull()
+ Criteria andRepayIdIsNotNull()
+ Criteria andRepayIdEqualTo(Long)
+ Criteria andRepayIdNotEqualTo(Long)
+ Criteria andRepayIdGreaterThan(Long)
+ Criteria andRepayIdGreaterThanOrEqualTo(Long)
+ Criteria andRepayIdLessThan(Long)
+ Criteria andRepayIdLessThanOrEqualTo(Long)
+ Criteria andRepayIdIn(List<Long>)
+ Criteria andRepayIdNotIn(List<Long>)
+ Criteria andRepayIdBetween(Long,Long)
+ Criteria andRepayIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.LoanUserRepayDetailExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanUserRepayDetailExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
interface com.welab.loan.finance.service.business.loaninfo.ILoanInfoService {
~ boolean process(Map<String,Object>)
~ boolean forcedFundSwitching(Long,String)
}
interface com.welab.loan.finance.mapper.LoanUvfDuesMapper {
~ long countByExample(LoanUvfDuesExample)
~ int deleteByExample(LoanUvfDuesExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanUvfDues)
~ int insertSelective(LoanUvfDues)
~ List<LoanUvfDues> selectByExample(LoanUvfDuesExample)
~ LoanUvfDues selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanUvfDues,LoanUvfDuesExample)
~ int updateByExample(LoanUvfDues,LoanUvfDuesExample)
~ int updateByPrimaryKeySelective(LoanUvfDues)
~ int updateByPrimaryKey(LoanUvfDues)
}
class com.welab.loan.finance.response.EPlanTryDueVO {
- Long ePlanDP
- Long ePlanApprovalAmount
- String ePlanApprovalTenor
- Long dueAmount
- Long duePrincipal
- Long dueServiceFee
- Byte planStatus
- BigDecimal disDownPaymentRatio
- List<DuesVO> duesVOList
}
class com.welab.loan.finance.core.aop.ApolloUtils {
- Boolean creditReconstitutionSwitch
- String creditMigrateNotifyEmails
- Boolean creditMigrateNotifyEmailSwitch
- String serverEnv
+ String getServerEnv()
+ Boolean getCreditReconstitutionSwitch()
+ Boolean getCreditMigrateNotifyEmailSwitch()
+ String[] getCreditMigrateNotifyEmails()
}
class com.welab.loan.finance.model.ext.DuesDetailExt {
- Long principal
- Long serviceFee
- Long fundInterest
- Long lateFee
- Long handingFee
- Long adminFee
- Long overAmount
}
interface com.welab.loan.finance.service.RebookService {
~ Response<CalculatorAmountVo> tryCalculate(ScheduleAmountDto)
~ Response<RebookDetailVO> showRebookDetail(ScheduleAmountDto)
~ Response<RebookCheckVO> checkRebookAuthForUser(Long)
~ Response<RebookCheckVO> checkRebookAuthForLoan(String)
~ Response<List<RebookApplyLimitVO>> getRebookApplyLimit(String)
~ Response<Boolean> checkUserExistSigningRebook(Long)
~ void closeOldOrder(String,String)
}
class com.welab.loan.finance.model.ext.RepayTrackExt {
- Long id
- String loanNumber
- Date repaymentAt
- Long repaymentAmount
- Long repayUnPayAmount
- Byte fundType
- String bankCode
- Byte type
- Long storeId
- Long lateTotalAmount
}
interface com.welab.loan.finance.mapper.LoanDelayMapper {
~ long countByExample(LoanDelayExample)
~ int deleteByExample(LoanDelayExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanDelay)
~ int insertSelective(LoanDelay)
~ List<LoanDelay> selectByExample(LoanDelayExample)
~ LoanDelay selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanDelay,LoanDelayExample)
~ int updateByExample(LoanDelay,LoanDelayExample)
~ int updateByPrimaryKeySelective(LoanDelay)
~ int updateByPrimaryKey(LoanDelay)
}
class com.welab.loan.finance.exception.LendException {
- {static} long serialVersionUID
+ <<Create>> LendException()
+ <<Create>> LendException(Integer,String)
+ <<Create>> LendException(ResponsCodeType.UserResponsCodeTypeEnum)
}
class com.welab.loan.finance.vo.tb.ExcelHsoVO {
- String soff
- String invoiceNo
- String item
- String billingNo
- String netValue
- String curr1
- String customer
- String billingDate
- String CGrp
- String taxAmount
- String curr2
- String nettVat
- String curr3
}
class com.welab.loan.finance.model.DuesRepayUpdateRecordExtWithBLOBs {
- String beforeUpdateData
- String afterUpdateData
+ String getBeforeUpdateData()
+ void setBeforeUpdateData(String)
+ String getAfterUpdateData()
+ void setAfterUpdateData(String)
}
enum com.welab.loan.finance.enums.mq.DelayMessageMetaInfoEnum {
- MessageTypeEnum messageTypeEnum
+ String queueName
+ String bindExchangeName
+ String routingKey
+ String deadExchangeName
+ String deadRoutingKey
+ String tag
+ String listenerContainerFactoryBeanId
}
interface com.welab.loan.finance.mapper.LoanCodeExtMapper {
~ long countByCode(String)
~ int batchInsert(List<LoanCode>)
~ LoanCode selectOne()
~ long countAvailableCode()
}
class com.welab.loan.finance.model.UvfFileRepaymentPkkfrekapExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> UvfFileRepaymentPkkfrekapExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.UvfFileRepaymentPkkfrekapExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateTimeIsNull()
+ Criteria andCreateTimeIsNotNull()
+ Criteria andCreateTimeEqualTo(Date)
+ Criteria andCreateTimeNotEqualTo(Date)
+ Criteria andCreateTimeGreaterThan(Date)
+ Criteria andCreateTimeGreaterThanOrEqualTo(Date)
+ Criteria andCreateTimeLessThan(Date)
+ Criteria andCreateTimeLessThanOrEqualTo(Date)
+ Criteria andCreateTimeIn(List<Date>)
+ Criteria andCreateTimeNotIn(List<Date>)
+ Criteria andCreateTimeBetween(Date,Date)
+ Criteria andCreateTimeNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andTaskIdIsNull()
+ Criteria andTaskIdIsNotNull()
+ Criteria andTaskIdEqualTo(String)
+ Criteria andTaskIdNotEqualTo(String)
+ Criteria andTaskIdGreaterThan(String)
+ Criteria andTaskIdGreaterThanOrEqualTo(String)
+ Criteria andTaskIdLessThan(String)
+ Criteria andTaskIdLessThanOrEqualTo(String)
+ Criteria andTaskIdLike(String)
+ Criteria andTaskIdNotLike(String)
+ Criteria andTaskIdIn(List<String>)
+ Criteria andTaskIdNotIn(List<String>)
+ Criteria andTaskIdBetween(String,String)
+ Criteria andTaskIdNotBetween(String,String)
+ Criteria andCabangIsNull()
+ Criteria andCabangIsNotNull()
+ Criteria andCabangEqualTo(String)
+ Criteria andCabangNotEqualTo(String)
+ Criteria andCabangGreaterThan(String)
+ Criteria andCabangGreaterThanOrEqualTo(String)
+ Criteria andCabangLessThan(String)
+ Criteria andCabangLessThanOrEqualTo(String)
+ Criteria andCabangLike(String)
+ Criteria andCabangNotLike(String)
+ Criteria andCabangIn(List<String>)
+ Criteria andCabangNotIn(List<String>)
+ Criteria andCabangBetween(String,String)
+ Criteria andCabangNotBetween(String,String)
+ Criteria andPokokIsNull()
+ Criteria andPokokIsNotNull()
+ Criteria andPokokEqualTo(String)
+ Criteria andPokokNotEqualTo(String)
+ Criteria andPokokGreaterThan(String)
+ Criteria andPokokGreaterThanOrEqualTo(String)
+ Criteria andPokokLessThan(String)
+ Criteria andPokokLessThanOrEqualTo(String)
+ Criteria andPokokLike(String)
+ Criteria andPokokNotLike(String)
+ Criteria andPokokIn(List<String>)
+ Criteria andPokokNotIn(List<String>)
+ Criteria andPokokBetween(String,String)
+ Criteria andPokokNotBetween(String,String)
+ Criteria andBungaIsNull()
+ Criteria andBungaIsNotNull()
+ Criteria andBungaEqualTo(String)
+ Criteria andBungaNotEqualTo(String)
+ Criteria andBungaGreaterThan(String)
+ Criteria andBungaGreaterThanOrEqualTo(String)
+ Criteria andBungaLessThan(String)
+ Criteria andBungaLessThanOrEqualTo(String)
+ Criteria andBungaLike(String)
+ Criteria andBungaNotLike(String)
+ Criteria andBungaIn(List<String>)
+ Criteria andBungaNotIn(List<String>)
+ Criteria andBungaBetween(String,String)
+ Criteria andBungaNotBetween(String,String)
+ Criteria andDendaIsNull()
+ Criteria andDendaIsNotNull()
+ Criteria andDendaEqualTo(String)
+ Criteria andDendaNotEqualTo(String)
+ Criteria andDendaGreaterThan(String)
+ Criteria andDendaGreaterThanOrEqualTo(String)
+ Criteria andDendaLessThan(String)
+ Criteria andDendaLessThanOrEqualTo(String)
+ Criteria andDendaLike(String)
+ Criteria andDendaNotLike(String)
+ Criteria andDendaIn(List<String>)
+ Criteria andDendaNotIn(List<String>)
+ Criteria andDendaBetween(String,String)
+ Criteria andDendaNotBetween(String,String)
+ Criteria andAdminPretermIsNull()
+ Criteria andAdminPretermIsNotNull()
+ Criteria andAdminPretermEqualTo(String)
+ Criteria andAdminPretermNotEqualTo(String)
+ Criteria andAdminPretermGreaterThan(String)
+ Criteria andAdminPretermGreaterThanOrEqualTo(String)
+ Criteria andAdminPretermLessThan(String)
+ Criteria andAdminPretermLessThanOrEqualTo(String)
+ Criteria andAdminPretermLike(String)
+ Criteria andAdminPretermNotLike(String)
+ Criteria andAdminPretermIn(List<String>)
+ Criteria andAdminPretermNotIn(List<String>)
+ Criteria andAdminPretermBetween(String,String)
+ Criteria andAdminPretermNotBetween(String,String)
+ Criteria andPenaltyIsNull()
+ Criteria andPenaltyIsNotNull()
+ Criteria andPenaltyEqualTo(String)
+ Criteria andPenaltyNotEqualTo(String)
+ Criteria andPenaltyGreaterThan(String)
+ Criteria andPenaltyGreaterThanOrEqualTo(String)
+ Criteria andPenaltyLessThan(String)
+ Criteria andPenaltyLessThanOrEqualTo(String)
+ Criteria andPenaltyLike(String)
+ Criteria andPenaltyNotLike(String)
+ Criteria andPenaltyIn(List<String>)
+ Criteria andPenaltyNotIn(List<String>)
+ Criteria andPenaltyBetween(String,String)
+ Criteria andPenaltyNotBetween(String,String)
+ Criteria andTotalIsNull()
+ Criteria andTotalIsNotNull()
+ Criteria andTotalEqualTo(String)
+ Criteria andTotalNotEqualTo(String)
+ Criteria andTotalGreaterThan(String)
+ Criteria andTotalGreaterThanOrEqualTo(String)
+ Criteria andTotalLessThan(String)
+ Criteria andTotalLessThanOrEqualTo(String)
+ Criteria andTotalLike(String)
+ Criteria andTotalNotLike(String)
+ Criteria andTotalIn(List<String>)
+ Criteria andTotalNotIn(List<String>)
+ Criteria andTotalBetween(String,String)
+ Criteria andTotalNotBetween(String,String)
}
class com.welab.loan.finance.model.UvfFileRepaymentPkkfrekapExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.UvfFileRepaymentPkkfrekapExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.dto.LoanBackDto {
- Long userId
- String mobile
- String loanNumber
- String secondProdCode
- String userName
- Integer lendType
- Integer lendStatus
- Integer repayStatus
- String startTime
- String endTime
- String transId
- String fundStartTime
- String fundEndTime
- String disStartTime
- String disEndTime
- String approvedAtStartTime
- String approvedAtEndTime
- String initiatesDateStart
- String initiatesDateEnd
- Boolean isSign
- Long fundId
- String nik
- Long adminId
- String sourceId
- Byte productType
- List<String> secondProdCodes
- List<Integer> lendTypes
- List<String> sourceIds
- List<Integer> lendStatusList
- List<Integer> fundIdList
- List<Integer> repayStatusList
- List<Integer> productTypes
- String merchantCode
- String merchantOrderNo
- Byte flag
- String flagReason
- List<Integer> cashFlowStatus
}
class com.welab.loan.finance.service.core.BaseFinanceDuesService {
- FinanceDuesMapper financeDuesMapper
- FinanceDuesExtMapper financeDuesExtMapper
- DuesExtMapper duesExtMapper
- FundService fundService
- LoanPlansLogMapper loanPlansLogMapper
- BaseLoanApplyPlansService baseLoanApplyPlansService
- LoanDiscountMapper loanDiscountMapper
- BaseLendReversalService baseLendReversalService
- BaseRepaymentTrack baseRepaymentTrack
- VatCostProvider vatCostProvider
- WhtCostProvider whtCostProvider
- BaseLoanDetailService baseLoanDetailService
- BaseLoanDetailExtendService baseLoanDetailExtendService
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
+ void updateLoanListClose(List<String>)
+ FinanceDues findDuesIndex(String,Integer)
- void doRebookProcess(DuesAmountExt)
- void doAdvanceApkProcess(DuesAmountExt)
- void transFinanceDues(DuesAmountExt,FinanceDues,BigDecimal)
+ void synDuesData(String,Integer)
- BigDecimal getWhtRate(String)
- boolean isAfter51(DuesAmountExt)
- long doCalc(Long,BigDecimal)
+ void repayBackSynDuesData(String,Integer)
- void initFinanceDues(FinanceDues)
+ void findSetPlanInfo(DuesAmountExt,Set<Integer>,Integer,Integer)
+ {static} String findPlansStrBySet(Integer,Set<Integer>)
+ DiscountDTO findDiscountList(List<DiscountDTO>,Integer)
+ LoanPlansLog findFplanByOne(String)
+ PageBean findDuesByPage(DuesReqDto)
+ PageInfo<DuesAmountExt> findDuesByPageInfo(DuesReqDto)
- boolean handleReversalParam(DuesReqDto,Map<String,Object>)
+ void duesExport(DuesReqDto,String)
+ Map transLoanMap(DuesReqDto)
+ List<LoanPlanCount> getUserPlanCount(List<String>)
+ List<LoanPlanCount> getUserPlanCountByUserId(Long)
+ void translatedData(List<DuesAmountExt>)
+ String setPlanTypeStr(String,Integer,List<LoanPlanCount>)
+ String setDuesListPlanTypeStr(DuesAmountExt,List<LoanPlanCount>)
+ List<FinanceDues> selectRepaymentDues(String,Long)
}
class com.welab.loan.finance.utils.ZipUtils {
+ {static} void zip(List<File>,File)
+ {static} void zip(File,File)
- {static} void checkDestZipFile(File)
- {static} void zip(File,ZipOutputStream,String)
+ {static} void zip(Map<String,byte[]>,OutputStream)
+ {static} void unzip(File,File)
+ {static} Map<String,byte[]> unzip(InputStream)
}
class com.welab.loan.finance.app.service.flow.repaymentback.tb.TbDuesBackCompont {
- RepaymentGoBackManager repaymentGoBackManager
+ FlowTaskNodeEnum flowTaskNode()
# void process(RepaymentBackFlowContext)
}
interface com.welab.loan.finance.service.ICreditUserTagRuleService {
~ Response<List<String>> getCanIncreaseTags()
}
interface com.welab.loan.finance.mapper.ext.TbDisbursementMapper {
~ List<TbDisbursementVO> list(TbDisbursementQry)
~ Long count(TbDisbursementQry)
}
class com.welab.loan.finance.dto.ProductRateConfigDtoExt {
- String productCode
- String secondProductCode
- Boolean status
- String riskLevel
- String matrix
- Long fundId
- Long userId
}
class com.welab.loan.finance.app.command.plan.CreateCPlanContractCmdExe {
- CPlanManager cPlanManager
- LoanPlansContractBusiService loanPlansContractBusiService
- BaseLoanApplyPlansService baseLoanApplyPlansService
+ Response<List<CPlanContractVO>> excute(CreateCPlanContractCmd)
}
class com.welab.loan.finance.controller.SkaChannelController {
- FifUvfBusiService fifUvfBusiService
- BaseFifUvfService baseFifUvfService
+ Response uploadSkaLoanDueListExcel(Long,MultipartFile)
+ Response findDuesListPage(UvfDueDto)
+ Response uploadLoanRepayExcel(Long,MultipartFile)
+ Response findRepaymentListPage(UvfRepaymentDto)
+ Response loanRepaymentExport(Long,UvfRepaymentDto)
}
class com.welab.loan.finance.app.command.tb.order.loandetail.impl.RestockTbLoanDetailBuilder {
+ void doBuild(TbInvoice,ProductRateConfigVO,LoanDetail)
+ void doBuild(TbInvoice,ProductRateConfigVO,LoanDetailExtend)
+ String getKey()
}
class com.welab.loan.finance.vo.credit.CreditActivityAbTestDataVo {
- String tag
- String accountType
- String tenorStr
- String secondProductCode
- Integer cgUser
- Integer cgDisbursed
- BigDecimal cgDisbursedRate
- Integer tgUser
- Integer tgDisbursed
- BigDecimal tgDisbursedRate
}
interface com.welab.loan.finance.service.HsoDubboService {
~ Response<String> getAhassSignUpMobile(String)
}
class com.welab.loan.finance.app.base.tb.BaseTbDisbursementService {
- TbDisbursementMapper tbDisbursementMapper
+ List<TbDisbursementVO> list(TbDisbursementQry)
+ Long count(TbDisbursementQry)
}
class com.welab.loan.finance.core.dues.DuesSaveService {
- BaseDuesService baseDuesService
+ {static} Map<String,DueTypeEnum> DUE_TYPE_MAP
+ void save(List<Due>,Long,Date,String)
}
class com.welab.loan.finance.core.dto.credit.CreditUserTagConfigDto {
- String userTag
- Integer orderValue
- CreditUserTagConfig plConfig
- CreditUserTagConfig clConfig
}
interface com.welab.loan.finance.mapper.LoanRepaymentMapper {
~ int deleteByPrimaryKey(Long)
~ int insert(LoanRepayment)
~ int insertSelective(LoanRepayment)
~ LoanRepayment selectByPrimaryKey(Long)
~ int updateByPrimaryKeySelective(LoanRepayment)
~ int updateByPrimaryKey(LoanRepayment)
~ int inserts(List<LoanRepayment>)
~ List<LoanRepayment> selectByTransId(String)
~ String selectLastTrans(String)
~ int deleteByTransId(String)
~ LoanRepayment getLast(String,Integer)
~ LoanRepayment getLastByLoanNumber(String)
~ List<LoanRepayment> selectListByTransId(List<String>)
}
class com.welab.loan.finance.dto.CalCplanRepayDTO {
- {static} long serialVersionUID
- Long nextTotalAmount
- Long totalAmount
- List<DuesDto> deductDueList
- Integer deductDueIndex
- Long planAmount
- List<DuesDto> nextDueList
- String loanNumber
- List<DuesExtVo> duesExtVoList
- String secondProdCode
- String productName
- String status
- Long customAmount
- Byte productType
- int overDueDay
}
class com.welab.loan.finance.app.service.NsQueryServcie {
- UserProfilesService userProfilesService
- BaseNsQueryService baseNsQueryService
- FundAccountInfoService fundAccountInfoService
- BaseLoanService baseLoanService
- BaseRepaymentTrack baseRepaymentTrack
- BaseFinanceDuesService baseFinanceDuesService
+ Response<List<NsLoanManagementVO>> loanList(NsLoanListQry)
+ Response<List<NsRepaymentVO>> repaymentList(NsRepaymentListQry)
+ Response<List<NsDueVO>> dueList(NsDueListQry)
- UserProfileVO findUserProfiles(AbstractNsListQry)
}
class com.welab.loan.finance.dto.cmd.CustomRepayCmd {
- String loanNumber
- String code
- Long userId
- Integer day
- Long amount
- Long applyUserId
}
class com.welab.loan.finance.core.config.PlanConfig {
- Map<String,Config> configs
+ Config getConfig(PlansTypeEnum)
}
class com.welab.loan.finance.core.config.PlanConfig$Config {
- Integer ptpNotifyDay
- String pushTemplateName
- String repaymentTemplateName
- String applyTemplateName
}
class com.welab.loan.finance.dto.FlexRepaymentDto {
- {static} long serialVersionUID
- String amount
- String loanNumber
- String dueIndex
+ boolean isNull()
}
class com.welab.loan.finance.service.business.loaninfo.maumodal.MaumodalLoanInfoServiceImpl {
+ MaumodalLoanInfoServiceImpl getThis()
+ Long getOrgId()
}
class com.welab.loan.finance.vo.UserBankcardVO {
- Long id
- Date createAt
- Date updateAt
- Long userId
- String userName
- String bankAccountNumber
- String bankCode
- String bankAccountHolderName
- Byte isUsed
- String bankName
- boolean edit
+ Long getId()
+ void setId(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ Long getUserId()
+ void setUserId(Long)
+ String getUserName()
+ void setUserName(String)
+ String getBankAccountNumber()
+ void setBankAccountNumber(String)
+ String getBankCode()
+ void setBankCode(String)
+ String getBankAccountHolderName()
+ void setBankAccountHolderName(String)
+ Byte getIsUsed()
+ void setIsUsed(Byte)
+ String getBankName()
+ void setBankName(String)
}
interface com.welab.loan.finance.mapper.ext.LoanWarrantyExtMapper {
~ int batchInserts(Long,List<LoanWarrantyVo>)
~ List<Map<String,Object>> getLoanDuesList(Set<String>)
~ List<Map<String,Object>> getloanWarrantyList(Set<String>)
}
interface com.welab.loan.finance.mapper.ext.LoanDiscountMapper {
~ List<DiscountDTO> findAllDiscount(String)
~ List<DiscountDTO> findCouponDiscount(String)
~ List<DiscountDTO> findPlanDiscount(String)
}
enum com.welab.loan.finance.enums.LoanLendStatusEnum {
+  APPLY
+  LOANING
+  LOANSUCC
+  LOANFAIL
+  LOANTIMEOUT
+  REJECT
+  SING_REJECT
+  RESTRUCTURED
+  LEND_REVERSAL
+ {static} List<Byte> LOAN_LEND_SUCCESS_STATUS_LIST
- Byte value
- String name
- String enName
- <<Create>> LoanLendStatusEnum(int,String,String)
+ Byte getValue()
+ String getName()
+ String getEnName()
+ {static} Map getStatusMap(boolean)
+ {static} List getStatusList(boolean)
+ {static} String getEnNameByValue(Byte)
+ {static} boolean getIsLendSucc(Byte)
}
enum com.welab.loan.finance.enums.ApplyRepaymentStatusEnum {
+  DEL
+  INIT
+  USERED
+  EXPIRY
- byte value
- String name
- String enName
}
class com.welab.loan.finance.app.base.credit.BaseCreditActivityAbTestLoanService {
- CreditActivityAbTestGroupLoanRelationExtMapper creditActivityAbTestGroupLoanRelationExtMappers
+ Long countDisbursed(CreditActivityAbTestExt)
+ List<CreditActivityAbTestExt> countDisbursed(Long)
}
class com.welab.loan.finance.app.command.rebook.RebookApplyLimitCmdExe {
- CreditUserTagService creditUserTagService
- CreditUserTagServiceFacade creditUserTagServiceFacade
- BaseLoanDetailService baseLoanDetailService
- ApolloUtils apolloUtils
- RebookCheckCmdExe rebookCheckCmdExe
+ Response<List<RebookApplyLimitVO>> getRebookApplyLimit(String)
}
class com.welab.loan.finance.app.command.tb.order.TbInvoiceImportService {
+ {static} String LOCK_KEY
- BaseLoanService baseLoanService
- BaseLoanDetailExtendService baseLoanDetailExtendService
- RateService rateService
- TbLoanDetailBuilderProvider tbLoanDetailBuilderProvider
- TbInvoiceValidateServiceProvider tbInvoiceValidateServiceProvider
- TbInvoicePostProcessServiceProvider tbInvoicePostProcessServiceProvider
- JedisCluster jedisCluster
+ void doImport(List<TbInvoice>)
- String getLockKey(List<TbInvoice>)
- void doValidate(TbInvoice)
- void doProcess(TbInvoice)
- void validateFields(TbInvoice)
- void validateBiz(TbInvoice)
- ProductRateConfigVO findProductRateConfig(TbInvoice)
- LoanDetail insertLoanDetail(TbInvoice,ProductRateConfigVO)
- void insertLoanDetailExtend(TbInvoice,ProductRateConfigVO)
- byte getFundInterestType(Byte)
}
interface com.welab.loan.finance.mapper.UvfFileContractMapper {
~ int countByExample(UvfFileContractExample)
~ int deleteByExample(UvfFileContractExample)
~ int deleteByPrimaryKey(Long)
~ int insert(UvfFileContract)
~ int insertSelective(UvfFileContract)
~ List<UvfFileContract> selectByExampleWithBLOBs(UvfFileContractExample)
~ List<UvfFileContract> selectByExample(UvfFileContractExample)
~ UvfFileContract selectByPrimaryKey(Long)
~ int updateByExampleSelective(UvfFileContract,UvfFileContractExample)
~ int updateByExampleWithBLOBs(UvfFileContract,UvfFileContractExample)
~ int updateByExample(UvfFileContract,UvfFileContractExample)
~ int updateByPrimaryKeySelective(UvfFileContract)
~ int updateByPrimaryKeyWithBLOBs(UvfFileContract)
~ int updateByPrimaryKey(UvfFileContract)
}
class com.welab.loan.finance.vo.request.CreateC1PlanContractVo {
- String loanNum
- String loanNumber
- Long amount
- Long orgId
}
interface com.welab.loan.finance.mapper.LoanUvfDocMapper {
~ long countByExample(LoanUvfDocExample)
~ int deleteByExample(LoanUvfDocExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanUvfDoc)
~ int insertSelective(LoanUvfDoc)
~ List<LoanUvfDoc> selectByExample(LoanUvfDocExample)
~ LoanUvfDoc selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanUvfDoc,LoanUvfDocExample)
~ int updateByExample(LoanUvfDoc,LoanUvfDocExample)
~ int updateByPrimaryKeySelective(LoanUvfDoc)
~ int updateByPrimaryKey(LoanUvfDoc)
}
class com.welab.loan.finance.filter.LogFilter {
- {static} Logger LOGGER
- {static} String NOTIFICATION_PREFIX
- {static} String REQUEST_PREFIX
- {static} String RESPONSE_PREFIX
- AtomicLong _id
# void doFilterInternal(HttpServletRequest,HttpServletResponse,FilterChain)
+ void destroy()
- void log(StringBuilder)
- StringBuilder prefixId(StringBuilder,long)
- void printRequestLine(StringBuilder,String,long,String,String)
- void printResponseLine(StringBuilder,String,long,int)
- void printPrefixedHeaders(StringBuilder,long,String,HttpServletRequest)
}
class com.welab.loan.finance.service.other.FundService {
- FundAccountInfoServiceFacade fundAccountInfoServiceFacade
- BaseRabbitTemplate baseRabbitTemplate
- TrackService trackService
- LoanDetailExtMapper loanDetailExtMapper
- BaseFinanceTradingService baseFinanceTradingService
- LoansService loansService
- TbAgreementDocService tbAgreementDocService
- FundService fundService
+ FundAccountInfoDTO getMatchFund(FundAccountRequestDTO)
+ void pushFinanceTrading(FundTradingDTO)
+ FundAccountInfoDTO findFundById(Long)
+ FundAccountInfoDTO findCacheFundById(Long,Map<Long,FundAccountInfoDTO>)
+ PageInfo findFundInfoPage(FundAccountRequestDTO)
+ PageInfo findFundInfoExtPage(FundAccountRequestDTO)
+ boolean updateByFundId(FundAccountInfoDTO)
+ FundAccountInfoDTO getFundAccountInfoByCode(String)
+ Map<String,Object> getFundConfig()
+ List getAllFundList()
+ Map<String,Long> getFundInfo()
+ void downloadPendingLendLoans(Long,Long)
+ List<PendingLendExt> selectPendLendLoan(Long)
- List<PendingLendExt> getOnLineLoan(Long,int)
- List<PendingLendExt> getPlLoan(Long,int)
- List<PendingLendExt> getOffLineLoan(Long,int)
}
class com.welab.loan.finance.model.LendReversalRepayment {
- Long id
- String loanNumber
- Long amount
- Long remainingAmount
- Long fundId
- String merchantCode
- Byte status
- String batchNo
- Date lendDate
- Date dueDate
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Long getAmount()
+ void setAmount(Long)
+ Long getRemainingAmount()
+ void setRemainingAmount(Long)
+ Long getFundId()
+ void setFundId(Long)
+ String getMerchantCode()
+ void setMerchantCode(String)
+ Byte getStatus()
+ void setStatus(Byte)
+ String getBatchNo()
+ void setBatchNo(String)
+ Date getLendDate()
+ void setLendDate(Date)
+ Date getDueDate()
+ void setDueDate(Date)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
enum com.welab.loan.finance.enums.FlowTypeEnum {
+  LEND
+  REPAYMENT
+  ERROR
+  PAY
+  BATCH
+  BANK
+  CREDIT
+  REVERSAL
+  LEND_REVERSAL
~ Integer index
- <<Create>> FlowTypeEnum(Integer)
+ Integer getIndex()
}
class com.welab.loan.finance.core.loan.coupon.LendRepayDuesCouponImpl {
- LoanCouponDetailMapper loanCouponDetailMapper
- LoanDetailMapper loanDetailMapper
- LoanCouponMapper loanCouponMapper
- LoanDetailExtendMapper loanDetailExtendMapper
- IQueryDuesService queryDuesService
+ LoanCouponDetail findLendCouponByLoan(String,Date)
+ void saveLendCouponByLoan(String,Date)
+ List<LoanCouponDetail> findRepayCouponByLoan(String)
+ void saveRepayCouponByLoan(String)
- LoanCoupon findLoanCoupon(String,CouponTypeEnum)
- LoanDetail findLoans(String)
- List<LoanCouponDetail> findAllUserCoupon(String)
- LoanDetailExtend findLoanExtend(String)
+ {static} void main(String[])
}
class com.welab.loan.finance.dto.DuesRepayMentDTO {
- Integer dueIndex
- Date dueDate
- Boolean isClose
- Long totalAmount
- Byte planType
- Boolean isBule
- Integer amountType
}
class com.welab.loan.finance.model.CreditUserTagRule {
- Long id
- String originalTags
- String targetTag
- String originalSecondTags
- String targetSecondTag
- String triggerMethod
- String formulaConfig
- String extConfig
- Integer weight
- Boolean status
- Date createdAt
- Date updatedAt
- String ruleConfig
+ Long getId()
+ void setId(Long)
+ String getOriginalTags()
+ void setOriginalTags(String)
+ String getTargetTag()
+ void setTargetTag(String)
+ String getOriginalSecondTags()
+ void setOriginalSecondTags(String)
+ String getTargetSecondTag()
+ void setTargetSecondTag(String)
+ String getTriggerMethod()
+ void setTriggerMethod(String)
+ String getFormulaConfig()
+ void setFormulaConfig(String)
+ String getExtConfig()
+ void setExtConfig(String)
+ Integer getWeight()
+ void setWeight(Integer)
+ Boolean getStatus()
+ void setStatus(Boolean)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getRuleConfig()
+ void setRuleConfig(String)
}
class com.welab.loan.finance.service.impl.LevenshteinScoreServiceImpl {
- BaseLevenshteinScoreService baseLevenshteinScoreService
+ Response<Integer> getUserScore(Long)
}
class com.welab.loan.finance.app.manager.LoanDetailManager {
- LoanDetailMapper loanDetailMapper
- LoanDetailExtMapper loanDetailExtMapper
- BaseLoanDetailService baseLoanDetailService
- BaseLoanDetailExtendService baseLoanDetailExtendService
+ boolean save(LoanDetail)
+ long countCustom(long)
+ List<LoanDetail> list(List<String>)
+ List<String> listFPlanLoanNumber(long,List<String>)
+ long getUserIdBy(String)
+ LoanDetail getOneBy(String)
+ List<LoanDetail> findLoans(List<String>,Boolean)
}
class com.welab.loan.finance.app.command.tb.dues.costreq.impl.HsoCostReqBuilder {
+ void doBuild(CostReqDTO)
+ String getKey()
}
class com.welab.loan.finance.vo.CreditLoanCancelVo {
- Long id
- String loanNumber
- String resultStatus
}
abstract class com.welab.loan.finance.test.credit.ApplicationIdGenerator {
- {static} int APPLICATION_ID_LENGTH
- {static} String FORMAT_BASE
- {static} String APPLICATION_ID_RANDOM_FORMAT
- {static} String TIME_STAMP_FORMAT
+ {static} String generate(Date)
+ {static} String generate()
- {static} String generateRandomString(String,int)
- {static} String parseDate(Date)
}
class com.welab.loan.finance.app.manager.DuesTryManager {
- RateService rateService
+ List<Due> tryDues(String,String,long,long,String)
}
class com.welab.loan.finance.dto.cmd.HsoDuesUpdateCmd {
- String loanNumber
- String secondProdCode
- String tenor
- Long amount
- String loanDate
- boolean isCreate
}
class com.welab.loan.finance.service.core.BaseLoanMqService {
- LoanMqMapper loanMqMapper
+ boolean insertSelective(LoanMq)
+ long countByExample(LoanMqExample)
+ boolean deleteByKey(Integer)
}
class com.welab.loan.finance.core.dto.overdue.LoanMaxOverDueDayDTO {
- {static} long serialVersionUID
- String loanNumber
- Integer maxDay
}
class com.welab.loan.finance.model.LoanReversal {
- Long id
- String transId
- String backTransId
- String batchId
- String reason
- Long adminId
- String note
- Date createAt
- Date updatedAt
}
interface com.welab.loan.finance.service.OverdueQueryService {
~ Response<CollectionLoanOverDueInfoDTO> listCollectionLoanOverDueInfo(OverdueQueryDto)
~ Response getLateFeeCount(Long)
~ PageInfo<CollectionUserListVO> selectCollectionUserList(CollectionUserListQry)
~ Response<Map<String,Long>> getRepaymentAmountByDueIndex(List<String>,Integer)
~ Response<Map<String,Map<String,List<OverdueAmountDetailVO>>>> getOverdueAmountDetail(List<String>)
~ Response<Integer> isOldUserByUserId(Long)
}
class com.welab.loan.finance.model.FlowTask {
- Long id
- String taskCode
- String tradeNo
- String taskParam
- Byte status
- Integer retryCount
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getTaskCode()
+ void setTaskCode(String)
+ String getTradeNo()
+ void setTradeNo(String)
+ String getTaskParam()
+ void setTaskParam(String)
+ Byte getStatus()
+ void setStatus(Byte)
+ Integer getRetryCount()
+ void setRetryCount(Integer)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.test.excel.ExportExcelTest {
- FinanceController financeController
+ void testExport()
}
class com.welab.loan.finance.app.service.BcaTransferService {
- QueryTaskService queryTaskService
- BaseLoanDetailService baseLoanDetailService
- MaucashLendServiceImpl iTransferService
- BaseFinanceTrading baseFinanceTradingService
- IFundMatchService iFundMatchService
- BaseFinanceLendService baseFinanceLendService
+ void bcaTransferBack(String,TradingTypeEnum,FundTradingTypeEnum,String,boolean)
- void doTransfer(String,Long,String,String,String,TradingTypeEnum,FundTradingTypeEnum,String)
+ {static} void main(String[])
}
class com.welab.loan.finance.model.CreditActivityAbTestGroupUserRelationExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditActivityAbTestGroupUserRelationExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditActivityAbTestGroupUserRelationExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andTestGroupIdIsNull()
+ Criteria andTestGroupIdIsNotNull()
+ Criteria andTestGroupIdEqualTo(Long)
+ Criteria andTestGroupIdNotEqualTo(Long)
+ Criteria andTestGroupIdGreaterThan(Long)
+ Criteria andTestGroupIdGreaterThanOrEqualTo(Long)
+ Criteria andTestGroupIdLessThan(Long)
+ Criteria andTestGroupIdLessThanOrEqualTo(Long)
+ Criteria andTestGroupIdIn(List<Long>)
+ Criteria andTestGroupIdNotIn(List<Long>)
+ Criteria andTestGroupIdBetween(Long,Long)
+ Criteria andTestGroupIdNotBetween(Long,Long)
+ Criteria andUserIdLastNumsIsNull()
+ Criteria andUserIdLastNumsIsNotNull()
+ Criteria andUserIdLastNumsEqualTo(String)
+ Criteria andUserIdLastNumsNotEqualTo(String)
+ Criteria andUserIdLastNumsGreaterThan(String)
+ Criteria andUserIdLastNumsGreaterThanOrEqualTo(String)
+ Criteria andUserIdLastNumsLessThan(String)
+ Criteria andUserIdLastNumsLessThanOrEqualTo(String)
+ Criteria andUserIdLastNumsLike(String)
+ Criteria andUserIdLastNumsNotLike(String)
+ Criteria andUserIdLastNumsIn(List<String>)
+ Criteria andUserIdLastNumsNotIn(List<String>)
+ Criteria andUserIdLastNumsBetween(String,String)
+ Criteria andUserIdLastNumsNotBetween(String,String)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
}
class com.welab.loan.finance.model.CreditActivityAbTestGroupUserRelationExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.CreditActivityAbTestGroupUserRelationExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.dto.MulLoanDTO {
- String loanNumber
- String promotionCode
- String repayDueIndex
}
enum com.welab.loan.finance.enums.BadDebtEnum {
+  BadDebt
+  BadDebt_V2
- String key
- <<Create>> BadDebtEnum(String)
+ String getKey()
}
class com.welab.loan.finance.dto.qry.C1PlanContractQry {
- String loanNum
- Integer dueIndex
}
class com.welab.loan.finance.service.core.BaseFinanceExport {
- FinanceExportMapper financeExportMapper
- GridFsTemplateExt gridFsTemplate
+ void insert(FinanceExport)
+ void update(FinanceExport)
+ List<FinanceExport> findAll(Date,int)
+ void clear(FinanceExport)
+ String saveFileExcel(File)
+ String saveFile(File,String)
+ GridFSDBFileExt getGridFSDBFile(String)
+ FinanceExport findExportById(ExportDto)
+ PageInfo<FinanceExport> findExportByPage(ExportDto)
}
class com.welab.loan.finance.vo.LoanCouponDetailVo {
- String loanNumber
- Integer dueIndex
- Long discountPrincipal
- Long discountServiceFee
- Long discountAdminFee
- Long discountLateFee
- Long discountCarryingFee
- Boolean isClose
}
class com.welab.loan.finance.uvf.SFTPUtil {
- Logger log
- ChannelSftp sftp
- Session session
- String username
- String password
- String privateKey
- String host
- int port
+ <<Create>> SFTPUtil(String,String,String,int)
+ <<Create>> SFTPUtil(String,String,int,String)
+ <<Create>> SFTPUtil()
+ void login()
+ void logout()
+ void upload(String,String,String,InputStream)
+ void download(String,String,String)
+ byte[] download(String,String)
+ void delete(String,String)
+ Vector<?> listFiles(String)
+ {static} void main(String[])
}
interface com.welab.loan.finance.mapper.DuesRepayUpdateRecordMapper {
~ long countByExample(DuesRepayUpdateRecordExample)
~ int deleteByExample(DuesRepayUpdateRecordExample)
~ int deleteByPrimaryKey(Long)
~ int insert(DuesRepayUpdateRecord)
~ int insertSelective(DuesRepayUpdateRecord)
~ List<DuesRepayUpdateRecord> selectByExample(DuesRepayUpdateRecordExample)
~ DuesRepayUpdateRecord selectByPrimaryKey(Long)
~ int updateByExampleSelective(DuesRepayUpdateRecord,DuesRepayUpdateRecordExample)
~ int updateByExample(DuesRepayUpdateRecord,DuesRepayUpdateRecordExample)
~ int updateByPrimaryKeySelective(DuesRepayUpdateRecord)
~ int updateByPrimaryKey(DuesRepayUpdateRecord)
}
class com.welab.loan.finance.dto.TryActivityDto {
- boolean isDayRate
- Long amount
- String tenor
- String productCode
- String secondProdCode
- Byte preferentialType
- BigDecimal interest
- BigDecimal adminFee
- BigDecimal overdue
- BigDecimal upfrontFee
- String payDay
- String loanNumber
- Long userId
- Byte bizType
- String previousLoan
- Boolean insuranceSelect
}
class com.welab.loan.finance.facade.fund.FundAccountInfoServiceFacade {
- FundAccountInfoService fundAccountInfoService
+ FundAccountInfoDTO getFundAccountInfoById(Long)
+ List<FundAccountInfoDTO> getAllFundList()
+ PageInfo<FundAccountInfoDTO> findFundListForThirdParty(FundAccountRequestDTO)
+ FundAccountInfoDTO getLoansOrRepaymentAccount(FundAccountRequestDTO)
+ PageInfo<FundAccountInfoDTO> findFundListByPage(FundAccountRequestDTO)
+ boolean updateFundBaseInfoById(FundAccountInfoDTO)
+ FundAccountInfoDTO getFundAccountInfoByCode(String)
+ Response<Map<String,Object>> getFundConfig()
}
interface com.welab.loan.finance.mapper.FinanceRepaymentTrackMapper {
~ long countByExample(FinanceRepaymentTrackExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FinanceRepaymentTrack)
~ int insertSelective(FinanceRepaymentTrack)
~ List<FinanceRepaymentTrack> selectByExample(FinanceRepaymentTrackExample)
~ FinanceRepaymentTrack selectByPrimaryKey(Long)
~ int updateByExampleSelective(FinanceRepaymentTrack,FinanceRepaymentTrackExample)
~ int updateByExample(FinanceRepaymentTrack,FinanceRepaymentTrackExample)
~ int updateByPrimaryKeySelective(FinanceRepaymentTrack)
~ int updateByPrimaryKey(FinanceRepaymentTrack)
}
class com.welab.loan.finance.dto.cmd.tb.TbLoanDetailRate {
- {static} long serialVersionUID
- String loanNumber
- Long fundId
- BigDecimal fundInterestRate
- BigDecimal serviceFeeRate
- BigDecimal lateRate
- BigDecimal fundProvisionRate
}
class com.welab.loan.finance.test.PaymentTests {
}
class com.welab.loan.finance.facade.user.UserServiceFacade {
- UserService userService
+ Response<Long> tbUserReg(RegUserDTO)
+ Response<UserInfoDTO> getUserInfoByMobile(String,Long)
+ Response<UserInfoDTO> getUserInfoById(Long)
+ Response<List<UserInfoDTO>> getUserInfoByUserIds(List<Long>)
}
enum com.welab.loan.finance.core.enums.ServiceTypeEnum {
+  LoanInfo
+  LEND
- int value
- String name
- String desc
}
class com.welab.loan.finance.dto.TryPlanRepaymentDTO {
- String loanNumber
- Long userId
- PlansTypeEnum plansTypeEnum
- Long customAmount
- boolean isCollection
- Double disLateFeeRatio
- Double disPrincipalRatio
- Double disDownPaymentRatio
- Long downPaymentAmount
}
interface com.welab.loan.finance.app.command.tb.order.validate.TbInvoiceValidateService {
~ void doValidate(TbInvoice)
}
class com.welab.loan.finance.controller.DuesAndRepayImportUpdateController {
- DuesAndRepayImportUpdateExe duesAndRepayImportUpdateExe
- DuesAndRepaySaveCmdExe repaySaveCmdExe
+ Response<PageInfo<ListDueRepayImportUpdateRecordVO>> listImportRecord(String,Integer,Integer)
+ void downloadImportTemplate(HttpServletResponse)
+ Response uploadTemplate(MultipartFile)
+ Response save(Long,DuesAndRepaymentOperateVO)
+ Response view(Long)
}
enum com.welab.loan.finance.enums.RefundStatusEnum {
+  INIT
+  REFUNDING
+  SUCCESS
+  FAILURE
- byte val
- String desc
}
enum com.welab.loan.finance.enums.CouponTypeEnum {
+  LEND
+  REPAYMENT
- byte value
- String name
- String enName
- <<Create>> CouponTypeEnum(byte,String,String)
}
class com.welab.loan.finance.app.command.tb.lend.transfer.impl.DayaTransferService {
# String getPrefix()
+ String getKey()
}
interface com.welab.loan.finance.core.loan.repay.IUserRepayAmount {
~ Long findUserRepayAmountByUser(Long)
~ Long findUserRepayAmountByLoans(List<String>)
~ Long findUserRepayAmountByDues(LoanDetail,List<Dues>)
~ UserRepayDTO findUserRepayAmountByVa(Long,String)
~ List<UserRepayRangeDTO> findUserRepayAmountRangeByLoan(List<String>)
~ List<UserRepayRangeDTO> findUserRepayAmountRangeByLoan(List<String>,Date)
~ List<String> findDefaultLoanByUser(Long)
~ List<String> findFilterDefaultLoanByUser(Long,Date)
~ Long findDefaultLoanAmountByLoans(List<String>,Date)
~ boolean saveDefaultLateFeeLoanByLoans(List<String>,Date)
~ UserRepayRangeDTO findLoanByCouponCustomByTravola(LoanDetail,List<Dues>)
}
class com.welab.loan.finance.model.CreditUserTagConfig {
- Long id
- Date createdAt
- Date updatedAt
- Boolean deleted
- String accountType
- Integer orderValue
- String userTag
- String remark
- Integer status
- Long minAmount
- Long maxAmount
- Long updateBy
- Long createBy
- String config
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ String getAccountType()
+ void setAccountType(String)
+ Integer getOrderValue()
+ void setOrderValue(Integer)
+ String getUserTag()
+ void setUserTag(String)
+ String getRemark()
+ void setRemark(String)
+ Integer getStatus()
+ void setStatus(Integer)
+ Long getMinAmount()
+ void setMinAmount(Long)
+ Long getMaxAmount()
+ void setMaxAmount(Long)
+ Long getUpdateBy()
+ void setUpdateBy(Long)
+ Long getCreateBy()
+ void setCreateBy(Long)
+ String getConfig()
+ void setConfig(String)
+ int compareTo(CreditUserTagConfig)
- String getMiddleNum(String)
}
class com.welab.loan.finance.dto.CessieLoanRspDTO {
- String loanNumber
- Long amount
- Boolean isClose
}
class com.welab.loan.finance.jackson.JacksonConfigTest {
+ void test()
}
class com.welab.loan.finance.jackson.User {
- {static} long serialVersionUID
- String age
+ String getName()
}
class com.welab.loan.finance.model.UvfFileTask {
- Long id
- Date createTime
- Date updatedAt
- Boolean deleted
- String fileName
- String taskId
- Integer status
+ Long getId()
+ void setId(Long)
+ Date getCreateTime()
+ void setCreateTime(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ String getFileName()
+ void setFileName(String)
+ String getTaskId()
+ void setTaskId(String)
+ Integer getStatus()
+ void setStatus(Integer)
}
class com.welab.loan.finance.dto.cmd.TryApplyFPlanCmd {
- List<String> loanNumbers
- Integer day
- Double disLateFeeRatio
- Double disPrincipalRatio
- Long optId
- String optName
}
interface com.welab.loan.finance.mapper.LoanPlansContractMapper {
~ long countByExample(LoanPlansContractExample)
~ int deleteByExample(LoanPlansContractExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanPlansContract)
~ int insertSelective(LoanPlansContract)
~ List<LoanPlansContract> selectByExample(LoanPlansContractExample)
~ LoanPlansContract selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanPlansContract,LoanPlansContractExample)
~ int updateByExample(LoanPlansContract,LoanPlansContractExample)
~ int updateByPrimaryKeySelective(LoanPlansContract)
~ int updateByPrimaryKey(LoanPlansContract)
}
class com.welab.loan.finance.app.command.plan.EPlanCheckCmdExe {
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
- LoanDetailManager loanDetailManager
- BaseLoanApplyPlansService baseLoanApplyPlansService
- EPlanService ePlanService
- BaseDuesService baseDuesService
- LoanCessieInfoService loanCessieInfoService
+ Response checkEPlanAuth(List<String>)
+ Response checkEPlanAuthForCollection(List<String>,Boolean)
+ Response checkDisRange(String,Double,Double)
- boolean isJoinOtherPlan(String)
}
interface com.welab.loan.finance.mapper.LoanDetailExtendMapper {
~ long countByExample(LoanDetailExtendExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanDetailExtend)
~ int insertSelective(LoanDetailExtend)
~ List<LoanDetailExtend> selectByExample(LoanDetailExtendExample)
~ LoanDetailExtend selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanDetailExtend,LoanDetailExtendExample)
~ int updateByExample(LoanDetailExtend,LoanDetailExtendExample)
~ int updateByPrimaryKeySelective(LoanDetailExtend)
~ int updateByPrimaryKey(LoanDetailExtend)
}
class com.welab.loan.finance.utils.excel.FieldForSortting {
- Field field
- int index
+ <<Create>> FieldForSortting(Field)
+ <<Create>> FieldForSortting(Field,int)
+ Field getField()
+ void setField(Field)
+ int getIndex()
+ void setIndex(int)
}
class com.welab.loan.finance.app.manager.FinanceRepaymentTrackManager {
- FinanceRepaymentTrackMapper repaymentTrackMapper
+ long countCustom(String,Set<Integer>)
+ boolean hasSold(List<String>)
+ List<FinanceRepaymentTrack> listFinanceRepaymentTrackByUserIds(List<Long>,Byte)
+ List<FinanceRepaymentTrack> listIsSoldByLoanNumbers(List<String>)
}
class com.welab.loan.finance.model.ext.DuesBackupModel {
- String backupTable
- Long start
- Long end
- Integer type
- Integer repayStats
}
enum com.welab.loan.finance.enums.TbPartnerEnum {
+  TRAVELOKA
+  AHASS
- String partner
~ <<Create>> TbPartnerEnum(String)
+ String getPartner()
}
class com.welab.loan.finance.app.impl.HsoDubboServiceImpl {
- TbSignUpKeyManager tbSignUpKeyManager
+ Response<String> getAhassSignUpMobile(String)
}
class com.welab.loan.finance.model.MatrixDisbursementCapLogExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> MatrixDisbursementCapLogExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.MatrixDisbursementCapLogExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andPartnerIsNull()
+ Criteria andPartnerIsNotNull()
+ Criteria andPartnerEqualTo(String)
+ Criteria andPartnerNotEqualTo(String)
+ Criteria andPartnerGreaterThan(String)
+ Criteria andPartnerGreaterThanOrEqualTo(String)
+ Criteria andPartnerLessThan(String)
+ Criteria andPartnerLessThanOrEqualTo(String)
+ Criteria andPartnerLike(String)
+ Criteria andPartnerNotLike(String)
+ Criteria andPartnerIn(List<String>)
+ Criteria andPartnerNotIn(List<String>)
+ Criteria andPartnerBetween(String,String)
+ Criteria andPartnerNotBetween(String,String)
+ Criteria andLobIsNull()
+ Criteria andLobIsNotNull()
+ Criteria andLobEqualTo(String)
+ Criteria andLobNotEqualTo(String)
+ Criteria andLobGreaterThan(String)
+ Criteria andLobGreaterThanOrEqualTo(String)
+ Criteria andLobLessThan(String)
+ Criteria andLobLessThanOrEqualTo(String)
+ Criteria andLobLike(String)
+ Criteria andLobNotLike(String)
+ Criteria andLobIn(List<String>)
+ Criteria andLobNotIn(List<String>)
+ Criteria andLobBetween(String,String)
+ Criteria andLobNotBetween(String,String)
+ Criteria andMatrixIsNull()
+ Criteria andMatrixIsNotNull()
+ Criteria andMatrixEqualTo(String)
+ Criteria andMatrixNotEqualTo(String)
+ Criteria andMatrixGreaterThan(String)
+ Criteria andMatrixGreaterThanOrEqualTo(String)
+ Criteria andMatrixLessThan(String)
+ Criteria andMatrixLessThanOrEqualTo(String)
+ Criteria andMatrixLike(String)
+ Criteria andMatrixNotLike(String)
+ Criteria andMatrixIn(List<String>)
+ Criteria andMatrixNotIn(List<String>)
+ Criteria andMatrixBetween(String,String)
+ Criteria andMatrixNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.MatrixDisbursementCapLogExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.MatrixDisbursementCapLogExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.app.base.credit.BaseCreditUserTagLogService {
- CreditUserTagLogMapper creditUserTagLogMapper
+ int inserLog(CreditUserTagLog)
+ CreditUserTagLog getLatestOne(Long)
}
interface com.welab.loan.finance.service.business.repayment.IModDuesService {
~ boolean saveGoBackRepaymentDues(String,Date)
~ boolean saveGoBackRepaymentDues(LoanDetail,LoanDetailExtend,Date)
}
interface com.welab.loan.finance.mapper.UvfFileRepaymentPkkfrekapMapper {
~ int countByExample(UvfFileRepaymentPkkfrekapExample)
~ int deleteByExample(UvfFileRepaymentPkkfrekapExample)
~ int deleteByPrimaryKey(Long)
~ int insert(UvfFileRepaymentPkkfrekap)
~ int insertSelective(UvfFileRepaymentPkkfrekap)
~ List<UvfFileRepaymentPkkfrekap> selectByExample(UvfFileRepaymentPkkfrekapExample)
~ UvfFileRepaymentPkkfrekap selectByPrimaryKey(Long)
~ int updateByExampleSelective(UvfFileRepaymentPkkfrekap,UvfFileRepaymentPkkfrekapExample)
~ int updateByExample(UvfFileRepaymentPkkfrekap,UvfFileRepaymentPkkfrekapExample)
~ int updateByPrimaryKeySelective(UvfFileRepaymentPkkfrekap)
~ int updateByPrimaryKey(UvfFileRepaymentPkkfrekap)
}
class com.welab.loan.finance.dto.LendStaticDto {
- String startTime
- String endTime
}
class com.welab.loan.finance.dto.TrackDto {
- Date start
- Date end
- Long fundId
- Byte fundType
- List<Byte> types
- Byte markType
- String buyerCode
}
class com.welab.loan.finance.core.overdue.mod.ModLateServiceImpl {
- IQueryDuesService queryDuesService
- LoanStatusNoticService loanStatusNoticService
- OverdueExtMapper overdueExtMapper
- LoanOverdueInfoMapper loanOverdueInfoMapper
- LoanOverdueInfoExtMapper loanOverdueInfoExtMapper
- LoanDetailMapper loanDetailMapper
- CreditUserAccountService creditUserAccountService
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- BaseRabbitTemplate baseRabbitTemplate
- LoanCouponDetailMapper loanCouponDetailMapper
- VatManager vatManager
- ApolloUtils apolloUtils
- TbOverdueNotifyService tbOverdueNotifyService
+ boolean updateLateFee(ModLateReqDTO)
+ boolean updateBatchLateFee(List<ModLateReqDTO>)
+ boolean updateLoanLateRsp(List<LoanLateRspDTO>)
+ void doHandle(LoanLateRspDTO)
+ void saveDues(LoanLateRspDTO)
+ void doCredit(LoanLateRspDTO)
+ void saveOverFull(LoanLateRspDTO)
+ void synDues(SynDuesDTO)
+ void synDuesList(List<SynDuesDTO>)
+ void synAccountList(List<SynAccountDTO>)
+ void updateLoanDetail(String)
+ void updateLoanOverdue(LoanLateRspDTO)
- int getLfDpd(LoanLateRspDTO,int)
+ void saveOverdue(LoanLateRspDTO)
+ void notifyLoanStatus(String)
+ void notifyTbOverdue(String,Long)
+ Long findCarryFee(Long,Long)
+ LoanCouponDetail findLoanCouponDetail(String,Integer)
}
interface com.welab.loan.finance.mapper.DuesRepayUpdateRecordExtMapper {
~ long countByExample(DuesRepayUpdateRecordExtExample)
~ int deleteByExample(DuesRepayUpdateRecordExtExample)
~ int deleteByPrimaryKey(Long)
~ int insert(DuesRepayUpdateRecordExtWithBLOBs)
~ int insertSelective(DuesRepayUpdateRecordExtWithBLOBs)
~ List<DuesRepayUpdateRecordExtWithBLOBs> selectByExampleWithBLOBs(DuesRepayUpdateRecordExtExample)
~ List<DuesRepayUpdateRecordExt> selectByExample(DuesRepayUpdateRecordExtExample)
~ DuesRepayUpdateRecordExtWithBLOBs selectByPrimaryKey(Long)
~ int updateByExampleSelective(DuesRepayUpdateRecordExtWithBLOBs,DuesRepayUpdateRecordExtExample)
~ int updateByExampleWithBLOBs(DuesRepayUpdateRecordExtWithBLOBs,DuesRepayUpdateRecordExtExample)
~ int updateByExample(DuesRepayUpdateRecordExt,DuesRepayUpdateRecordExtExample)
~ int updateByPrimaryKeySelective(DuesRepayUpdateRecordExtWithBLOBs)
~ int updateByPrimaryKeyWithBLOBs(DuesRepayUpdateRecordExtWithBLOBs)
~ int updateByPrimaryKey(DuesRepayUpdateRecordExt)
}
class com.welab.loan.finance.test.LoanPlansContractBusiServiceTest {
- LoanPlansContractBusiService loanPlansContractBusiService
+ void createC1LoanPlansContract()
}
class com.welab.loan.finance.dto.cmd.TappRepaymentCmd {
- String loanNumber
- Long amount
}
class com.welab.loan.finance.test.mongo.TemplateTest {
- MongoTemplateExt mongoTemplateExt
+ void bulkUpdate()
}
class com.welab.loan.finance.vo.FifUvfDueListExcelVo {
- String branchId
- String contractId
- String paymentTerm
- String repaymentPeriod
- String dueAmount
- String principal
- String serviceFee
- String dueDate
- String loanNumber
- String interestAmountPay
- String interestAmountUnpay
- String interestDiscount
- String principalPay
- String principalUnpay
- boolean isSkipSave
}
class com.welab.loan.finance.vo.response.SignHistoryDetailVO {
- {static} long serialVersionUID
- String secondProdCode
- Integer beforeSigningMethod
- Integer afterSigningMethod
- String beforeAmountFunded
- String afterAmountFunded
- Integer beforeAutoOtp
- Integer afterAutoOtp
- String adminName
- Date created
}
interface com.welab.loan.finance.mapper.CreditActivityAbTestGroupMapper {
~ long countByExample(CreditActivityAbTestGroupExample)
~ int deleteByExample(CreditActivityAbTestGroupExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditActivityAbTestGroup)
~ int insertSelective(CreditActivityAbTestGroup)
~ List<CreditActivityAbTestGroup> selectByExample(CreditActivityAbTestGroupExample)
~ CreditActivityAbTestGroup selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditActivityAbTestGroup,CreditActivityAbTestGroupExample)
~ int updateByExample(CreditActivityAbTestGroup,CreditActivityAbTestGroupExample)
~ int updateByPrimaryKeySelective(CreditActivityAbTestGroup)
~ int updateByPrimaryKey(CreditActivityAbTestGroup)
}
enum com.welab.loan.finance.enums.AdminTypeEnum {
+  RATE
+  FIXED
+  EXTEND
- int key
- String value
~ <<Create>> AdminTypeEnum(int,String)
+ String getValue()
+ int getKey()
+ {static} AdminTypeEnum getAdminType(Byte)
}
interface com.welab.loan.finance.mapper.DuesMapper {
~ int countByExample(DuesExample)
~ int deleteByExample(DuesExample)
~ int deleteByPrimaryKey(Long)
~ int insert(Dues)
~ int insertSelective(Dues)
~ List<Dues> selectByExample(DuesExample)
~ Dues selectByPrimaryKey(Long)
~ int updateByExampleSelective(Dues,DuesExample)
~ int updateByExample(Dues,DuesExample)
~ int updateByPrimaryKeySelective(Dues)
~ int updateByPrimaryKey(Dues)
~ Long remainingAmountStat(String,String)
~ List<Dues> selectVatDuse(LoanOverdueInfo)
}
class com.welab.loan.finance.service.business.repayment.DiscountCouponService {
- {static} FlexifitRepaymentConfigFacade flexifitRepaymentConfigFacade
- <<Create>> DiscountCouponService()
+ {static} AdminFeeResp findCouponAdminFee(LoanDetail,LoanDetailExtend)
+ {static} DuesMergeDTO findCouponDuesByLendDues(DuesMergeDTO,DuesMergeDTO)
+ {static} BigDecimal findLendCouponByDues(BigDecimal,BigDecimal,ActivityRuleResponseDTO)
+ {static} BigDecimal findLendCouponByDues(BigDecimal,BigDecimal,ActivityRuleResponseDTO,Integer)
+ {static} FeeTypeExtDTO findLendCouponByPass(LoanDetail,LoanDetailExtend)
+ {static} FeeTypeExtDTO findLendCouponByPass(LoanDetail,LoanDetailExtend,Date)
+ {static} FeeTypeExtDTO findLendCouponByPass(LoanDetail,LoanDetailExtend,Date,Boolean)
+ {static} FlexifitRepaymentConfigDTO findSetFlexfitConfig(Long)
+ {static} FeeTypeExtDTO findLendCouponByFlexfit(LoanDetail,LoanDetailExtend,Date,Boolean)
+ {static} FeeTypeDTO findLendCouponByCarryDiff(FeeTypeExtDTO,FeeTypeExtDTO)
+ {static} FeeTypeDTO findUpfontLendCouponByDiff(FeeTypeDTO,FeeTypeDTO)
+ {static} RepaymentCalculatorReq buildRepaymentCalculatorReq(LoanDetail,LoanDetailExtend)
+ {static} void findSetFeeTypeDTO(int,long,FeeTypeDTO)
+ {static} ActivityRuleResponseDTO buildActivityRule(LoanDetailExtend)
+ {static} Long findDuesCoupon(Dues,LoanCoupon,Boolean)
+ {static} void findTransformCoupon(LoanCoupon,DuesMergeDTO)
- {static} void findSetDiscountCoupon(LoanCoupon,DuesMergeDTO)
+ {static} Set<Integer> findIgnoreDueIndexSet(LoanCoupon,List<LoanCouponDetail>,Boolean,List<Dues>)
+ {static} Set<Integer> findBatchUnMatchCoupon(LoanCoupon,List<Dues>,Boolean,Long)
+ {static} List<OverdueDayDTO> findOverdueDayList(List<Dues>)
}
class com.welab.loan.finance.dto.cmd.QueryCPlanAmountCmd {
- List<String> loanNumbers
}
class com.welab.loan.finance.service.core.BaseUserAccountDetailService {
- FinanceUserAccountDetailMapper financeUserAccountDetailMapper
- FinanceUserAccountMapper financeUserAccountMapper
- TransDetailMapper transDetailMapper
+ int insertOne(FinanceUserAccountDetail)
+ Long findAccountIdByUserId(Long)
+ Page findUserAccountListByPage(Long,String,Integer,Integer)
+ List<TransDetail> findUserTransactionByLoanNum(Long,String,Long)
}
class com.welab.loan.finance.dto.plan.CalCPlanAmountDTO {
- {static} long serialVersionUID
- Long minRepaymentTotalAmount
- Long minRepayAmount
- Long maxRepayAmount
- List<CalCPlanDetailAmountDTO> calCPlanDetailAmountList
}
class com.welab.loan.finance.app.manager.plan.CPlanManager {
- CPlanExtMapper cPlanExtMapper
- BaseLoanDetailService baseLoanDetailService
- BaseDuesService baseDuesService
- FPlanExtMapper fPlanExtMapper
- EPlanExtMapper ePlanExtMapper
- BaseFinanceDuesService baseFinanceDuesService
- BaseLoanApplyPlansService baseLoanApplyPlansService
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
- LoanCessieInfoService loanCessieInfoService
- Byte signNotPay
+ boolean isAllowApply(long)
+ CustomRangeDTO findCustomRange(List<String>)
+ CustomRangeDTO findCustomRange(Map<String,BigDecimal>)
- Map.Entry<K,V> getTail(LinkedHashMap<K,V>)
- void handleLoanRate(LinkedHashMap<String,BigDecimal>,Long)
- long getAPlanTotalActualAmount(BigDecimal,List<Dues>)
+ Map<String,LoanNumberAmountDTO> allocationAmount(Map<String,BigDecimal>,CustomRangeDTO,Long)
+ Map<String,BigDecimal> getCPlanDisRateMap(List<String>,BigDecimal)
+ boolean checkCPlanTimes(Long)
+ Boolean collectionCplanUserVerify(Long)
+ List<String> collectionCplanLoanVerify(List<String>,boolean)
+ void verifyCollectionCPlan(LoanDataDTO,Long)
}
class com.welab.loan.finance.vo.rebook.RebookApplyLimitVO {
- {static} long serialVersionUID
- String secondProdCode
- List<Long> amountList
- Long amountMax
- Long amountMin
- Long stepSize
- String tenor
- Byte insuranceSelectType
- Long insuranceAmountCoverage
- Long insurancePremiumAmount
- Byte insuranceConfigStatus
- String insuranceName
}
class com.welab.loan.finance.model.ext.FinanceUserAccountDetailExt {
- String transType
+ String getTransType()
+ void setTransType(String)
}
class com.welab.loan.finance.utils.RateUtils {
- {static} double FINANCIAL_PRECISION
- {static} double FINANCIAL_MAX_ITERATIONS
+ {static} void main(String[])
+ {static} BigDecimal getErRate(int,BigDecimal,int)
- {static} double rate(double,double,double,double,int)
}
interface com.welab.loan.finance.mapper.RechargeLogMapper {
~ long countByExample(RechargeLogExample)
~ int deleteByExample(RechargeLogExample)
~ int deleteByPrimaryKey(Long)
~ int insert(RechargeLog)
~ int insertSelective(RechargeLog)
~ List<RechargeLog> selectByExample(RechargeLogExample)
~ RechargeLog selectByPrimaryKey(Long)
~ int updateByExampleSelective(RechargeLog,RechargeLogExample)
~ int updateByExample(RechargeLog,RechargeLogExample)
~ int updateByPrimaryKeySelective(RechargeLog)
~ int updateByPrimaryKey(RechargeLog)
}
class com.welab.loan.finance.ApplyFPlanDTO {
}
class com.welab.loan.finance.vo.ApplyUseCreditVO {
- {static} long serialVersionUID
- Long userId
- String loanNumber
- Long useMoney
- String productCode
- String secondProductCode
- String merchantCode
- String tenor
- Integer abTestGroupType
- Long abTestId
}
class com.welab.loan.finance.core.dto.transform.LoanTransDetailDTO {
- String period
- Date dueDate
- Long repayAmount
- String status
- Long lateFee
- Long repayAmountNoLateFee
- boolean isCredit
- String loanNumber
- Long amount
- String state
- Integer overdueDay
- Integer curDueIndex
- Integer totalDueIndex
- List<TransItemDTO> list
- String productName
- Integer item
- Long transAmount
- Date transDate
- String transId
- Long allAmount
- Date applyDate
- Date approvedDate
- Boolean allowCplan
- Long customRepayAmount
- String customRepayStatus
}
class com.welab.loan.finance.rabbitmq.syn.RecoveryDataConsumer {
- BaseFinanceDuesService baseFinanceDuesService
- PayService payService
- DuesServiceImpl duesService
- BasePayService basePayService
- BaseLoanService baseLoanService
- BaseFinanceTrading baseFinanceTrading
- AlfamartHandel alfamartHandel
- PlanEmailBusiService planEmailBusiService
- BaseRabbitTemplate rabbitTemplate
- VatDuesInitCmdExe vatDuesInitCmdExe
- VatOverdueFullInitCmdExe vatOverdueFullInitCmdExe
- VatInvalidCmdExe vatInvalidCmdExe
+ void onMessage(Message)
+ void restAccount(Long)
+ void recharge(Long,String)
+ void lend(Long,String,Object)
+ void synDues(Long,String)
+ void transfer(Object)
+ void pay(Object)
+ void forcedFundSwitching(Long,Map<String,Object>)
+ void restRepaymentPlan(JSONObject)
+ void chooseDiscountCode(Map<String,Object>)
+ void sendAlfmartEmail(Map<String,Object>)
+ void sendCPlanEmail(Map<String,Object>)
+ void transferByType(Long,String,TradingTypeEnum)
+ void repayment(String)
}
class com.welab.loan.finance.vo.FinanceConfigVO {
- Integer id
- String category
- String key
- String value
- String keyDesc
- Long amountMin
- Long amountMax
- Integer autoOtp
}
interface com.welab.loan.finance.service.config.IConfigService {
~ Response<FinanceConfigDto> getFinanceConfig(String,String)
~ Response<Boolean> isIgnoreTenor(String)
}
class com.welab.loan.finance.service.credit.CreditUserTagHelper {
- BaseCreditUserTagService baseCreditUserTagService
+ Long calculateCreditAmountForTag(Long,String,String)
}
interface com.welab.loan.finance.mapper.CreditUserTagLogMapper {
~ long countByExample(CreditUserTagLogExample)
~ int deleteByExample(CreditUserTagLogExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CreditUserTagLog)
~ int insertSelective(CreditUserTagLog)
~ List<CreditUserTagLog> selectByExample(CreditUserTagLogExample)
~ CreditUserTagLog selectByPrimaryKey(Long)
~ int updateByExampleSelective(CreditUserTagLog,CreditUserTagLogExample)
~ int updateByExample(CreditUserTagLog,CreditUserTagLogExample)
~ int updateByPrimaryKeySelective(CreditUserTagLog)
~ int updateByPrimaryKey(CreditUserTagLog)
}
class com.welab.loan.finance.vo.CreditUserAccountVO {
- {static} long serialVersionUID
- Long userId
- String accountType
- Long useMoney
- Long ableMoney
- Long sumMoney
- Long sumCashLoanMoney
- Long sumPaylaterMoney
- Long useCashLoanMoney
- Long usePaylaterMoney
- Long ableCashLoanMoney
- Long ablePaylaterMoney
- Long freezeMoney
- String productCode
- String secondProductCode
- String tag
- String creditStatus
- Long income
- String applyNo
}
class com.welab.loan.finance.facade.application.LoansFacade {
- LoansService loansService
+ Response<Map<String,Long>> countLoansGroupByState(CountLoansQry)
+ void batchUpdateLoansState(List<LoansReversalDto>)
+ LoansVO getByLoanNumber(String)
}
class com.welab.loan.finance.dto.ExportDto {
- Long adminId
- Long id
}
interface com.welab.loan.finance.app.service.IServicekey {
~ TBEnum getKey()
}
class com.welab.loan.finance.test.credit.CreditConfigTest {
- CreditUserTagUpdateByAdminCmdExe creditUserTagUpdateByAdminCmdExe
- BaseCreditActivityAbTestGroupService baseCreditActivityAbTestGroupService
+ void updateConfig()
+ void abTest()
}
class com.welab.loan.finance.vo.LoanDetailVO {
- BigDecimal interestRate
- BigDecimal adminRate
- BigDecimal lateRate
}
class com.welab.loan.finance.job.CalculatorOverdueJob {
- int PAGESIZE
- Integer permitsPerSecond
- BaseLoanService loanService
- DuesCalculationMapper duesCalculationMapper
- BaseLoanDetailExtendService baseLoanDetailExtendService
- BaseFinanceDuesService baseFinanceDuesService
- LoanDuesConfigMapper loanDuesConfigMapper
- LoanCouponDetailMapper loanCouponDetailMapper
- LoanCouponMapper loanCouponMapper
- LoanApplyPlansMapper loanApplyPlansMapper
- LoanOverdueInfoExtMapper loanOverdueInfoExtMapper
- BaseRabbitTemplate baseRabbitTemplate
- LoanDetailExtMapper loanDetailExtMapper
- IModLateService modLateService
- JedisCluster jedisCluster
- BaseAbnormalRepaymentRecordService repaymentRecordService
- Boolean isForcedSyn
- JSONObject jsonObject
+ void execute(ShardingContext)
+ MailDTO buildMail(String)
- List<DuesExt> filterDuesExt(List<DuesExt>)
+ List<DuesExt> handleLoanList(List<DuesExt>)
+ Map<String,Object> handleListByProCode(List<DuesExt>)
+ void synLoanDues(Set<String>)
+ void synCouponAndAccount(Set<String>)
+ Set<String> findCouponLoan()
+ MailDTO mergeResult(CountDownLatch,List<Future<Map<String,Object>>>,Long,long)
+ MailDTO buildMailDto(Map<String,Object>,StringBuilder)
+ void setEmailUser()
+ LoanDetail getCacheLoanDetail(String,Map<String,LoanDetail>)
+ Boolean getCacheLoanExtendHead(String,Map<String,Boolean>)
+ boolean isSkipOverdue(String,Integer)
+ boolean isPlanSkipOverdue(String)
+ LoanCouponDetail findLoanCouponDetail(String,Integer)
+ void synBatchRepayAmount()
- void synVAccountListByUser(List<Long>)
- void notifyOverdueTaskCompleted()
}
class com.welab.loan.finance.model.mongo.tbuser.HsoUserDoc {
- String regionCode
- String cmCode
- String agentId
- String agentName
- String agentPic
- String mobile2
- String storeName
- String address
- String agentType
- Integer startSince
- Integer duration
- String invoiceFin
- Integer branchNumber
- String branchName
- Integer empNo
- Integer pitNo
- List<SalesInfo> salesInfoList
- String colabDuration
- Long currentLimit
- Integer overdueInsight
- String agreementNo
- String agreementDate
- Boolean isAhass
- String contactNumber
- String bankName
- String bankCode
- String bankAccount
}
class com.welab.loan.finance.model.mongo.tbuser.HsoUserDoc$SalesInfo {
- String years
- String sparepartVol
- String oilVol
- String unit
}
interface com.welab.loan.finance.app.command.tb.lend.lend.TbFinanceLendBuilder {
~ void doBuild(FinanceLend,LoanDetail)
}
class com.welab.loan.finance.service.core.BaseFundAccountService {
- FundAccountMapper mapper
+ FundAccount selectFundAccount(TypeEnum)
+ FundAccount selectFundAccount(Long)
+ List<FundAccount> selectByExample(FundAccountExample)
}
interface com.welab.loan.finance.mapper.ext.CreditActivityAbTestGroupExtMapper {
~ List<CreditActivityAbTestGroupExt> selectTestGroupList(CreditActivityAbTestRequestVo)
~ CreditActivityAbTestGroupExt selectExtByTestGroupId(Long)
}
class com.welab.loan.finance.app.command.tb.dues.costreq.impl.DefaultCostReqBuilder {
+ void doBuild(CostReqDTO)
+ String getKey()
}
class com.welab.loan.finance.vo.tb.DisNotifyCmd {
- String loanNumber
- TBEnum tbEnum
- String fileName
- String templateName
- String appTemplateName
- boolean isGenerateContract
}
class com.welab.loan.finance.core.dto.va.TravelokaPaylaterAmountDTO {
- {static} long serialVersionUID
- Long amount
- Long repaymentAmount
}
class com.welab.loan.finance.response.dues.RepayDuesVO {
- {static} long serialVersionUID
- Integer currentPeriod
- Integer totalPeriod
- Long currentRemainingAmount
- Long totalRemainingAmount
- Boolean isOverDue
- Date dueDate
- Integer overDueDay
- Long totalRepayAmount
- Long totalServiceFee
- List<CalDuesFeeVO> tryCalDuesFeeList
}
class com.welab.loan.finance.core.dto.transform.LoanDueDetailDTO {
- LoanInfoDTO loanInfo
- List<CouponDues> list
}
class com.welab.loan.finance.utils.ZIPUtil {
- {static} int BUFFERSIZE
- <<Create>> ZIPUtil()
+ {static} void zip(String[],String)
- {static} void zipFile(File,String,ZipOutputStream)
+ {static} void unzip(String,String)
+ {static} boolean zip(InputStream[],String[],String)
+ {static} void main(String[])
}
class com.welab.loan.finance.service.impl.RepaymentServiceImpl {
# Boolean pro
- BaseRepaymentTrack baseRepaymentTrack
- BankConfigService bankConfigService
- BasePayService basePayService
- ITransformDues transformDues
- BaseLoanDetailService baseLoanDetailService
- IVirtualAccount virtualAccount
- ToBAgreementService toBAgreementService
- BaseFinanceDuesService baseFinanceDuesService
- CPlanManager cPlanManager
- LoanCessieInfoService loanCessieInfoService
- LateFeeUpdateService lateFeeUpdateService
- ActivityDubboService activityDubboService
- BackstageConfigFacade backstageConfigFacade
- AstraPayWalletServiceFacade astraPayWalletServiceFacade
+ PageBean queryRepaymentPage(RepaymentTracBackDto)
+ Response sendRepayment(SendRepaymentDTO)
+ Response saveMultipleRepayment(List<MultipleRepaymenDTO>)
+ List<CouponDues> findDuesByCoupon(String)
+ LoanDataDTO findDuesByCredit(Long,Boolean)
+ LoanDataDTO findDuesByCredit(Long,Integer,Boolean)
+ LoanTransDetailDTO findTransDetailByCredit(String)
+ Response saveMultipleRepaymentV2(MulRepaymentDTO)
+ String findBankConfig()
+ String findBankConfig(Long)
+ Response transferXendit(PaymentDto)
+ Response checkRepayAmount(String,Long)
+ Integer verifySignUp(String)
+ Response<List<BankConfigDTO>> listAllBankChannelConfig()
+ Response<List<BankConfigDTO>> listAllBankChannelConfig(Long)
+ Response updateBankConfig(List<BankConfigDTO>)
+ Response updateLateFee(Long)
+ Response getRepayConfig(RepayConfigVO)
- String getCode(List<FinanceRepaymentTrack>)
- String buildLatestPaymentAndBalance(String,String,AstraPayWalletProfileDTO)
}
class com.welab.loan.finance.core.dto.transform.TransItemDTO {
- Integer dueIndex
- Long amount
- Long remainingAmount
- Long settledAmount
- Date dueDate
- Boolean isClose
- Boolean isOver
}
enum com.welab.loan.finance.enums.mq.FanoutMessageMetaInfoEnum {
- MessageTypeEnum messageTypeEnum
+ String queueName
+ String bindExchangeName
+ String routingKey
+ String deadExchangeName
+ String deadRoutingKey
+ String tag
+ String listenerContainerFactoryBeanId
}
class com.welab.loan.finance.model.LoanCouponDetailExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanCouponDetailExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanCouponDetailExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andDueIndexIsNull()
+ Criteria andDueIndexIsNotNull()
+ Criteria andDueIndexEqualTo(Integer)
+ Criteria andDueIndexNotEqualTo(Integer)
+ Criteria andDueIndexGreaterThan(Integer)
+ Criteria andDueIndexGreaterThanOrEqualTo(Integer)
+ Criteria andDueIndexLessThan(Integer)
+ Criteria andDueIndexLessThanOrEqualTo(Integer)
+ Criteria andDueIndexIn(List<Integer>)
+ Criteria andDueIndexNotIn(List<Integer>)
+ Criteria andDueIndexBetween(Integer,Integer)
+ Criteria andDueIndexNotBetween(Integer,Integer)
+ Criteria andPromotionCodeIsNull()
+ Criteria andPromotionCodeIsNotNull()
+ Criteria andPromotionCodeEqualTo(String)
+ Criteria andPromotionCodeNotEqualTo(String)
+ Criteria andPromotionCodeGreaterThan(String)
+ Criteria andPromotionCodeGreaterThanOrEqualTo(String)
+ Criteria andPromotionCodeLessThan(String)
+ Criteria andPromotionCodeLessThanOrEqualTo(String)
+ Criteria andPromotionCodeLike(String)
+ Criteria andPromotionCodeNotLike(String)
+ Criteria andPromotionCodeIn(List<String>)
+ Criteria andPromotionCodeNotIn(List<String>)
+ Criteria andPromotionCodeBetween(String,String)
+ Criteria andPromotionCodeNotBetween(String,String)
+ Criteria andDiscountPrincipalIsNull()
+ Criteria andDiscountPrincipalIsNotNull()
+ Criteria andDiscountPrincipalEqualTo(Long)
+ Criteria andDiscountPrincipalNotEqualTo(Long)
+ Criteria andDiscountPrincipalGreaterThan(Long)
+ Criteria andDiscountPrincipalGreaterThanOrEqualTo(Long)
+ Criteria andDiscountPrincipalLessThan(Long)
+ Criteria andDiscountPrincipalLessThanOrEqualTo(Long)
+ Criteria andDiscountPrincipalIn(List<Long>)
+ Criteria andDiscountPrincipalNotIn(List<Long>)
+ Criteria andDiscountPrincipalBetween(Long,Long)
+ Criteria andDiscountPrincipalNotBetween(Long,Long)
+ Criteria andDiscountServiceFeeIsNull()
+ Criteria andDiscountServiceFeeIsNotNull()
+ Criteria andDiscountServiceFeeEqualTo(Long)
+ Criteria andDiscountServiceFeeNotEqualTo(Long)
+ Criteria andDiscountServiceFeeGreaterThan(Long)
+ Criteria andDiscountServiceFeeGreaterThanOrEqualTo(Long)
+ Criteria andDiscountServiceFeeLessThan(Long)
+ Criteria andDiscountServiceFeeLessThanOrEqualTo(Long)
+ Criteria andDiscountServiceFeeIn(List<Long>)
+ Criteria andDiscountServiceFeeNotIn(List<Long>)
+ Criteria andDiscountServiceFeeBetween(Long,Long)
+ Criteria andDiscountServiceFeeNotBetween(Long,Long)
+ Criteria andDiscountFundInterestIsNull()
+ Criteria andDiscountFundInterestIsNotNull()
+ Criteria andDiscountFundInterestEqualTo(Long)
+ Criteria andDiscountFundInterestNotEqualTo(Long)
+ Criteria andDiscountFundInterestGreaterThan(Long)
+ Criteria andDiscountFundInterestGreaterThanOrEqualTo(Long)
+ Criteria andDiscountFundInterestLessThan(Long)
+ Criteria andDiscountFundInterestLessThanOrEqualTo(Long)
+ Criteria andDiscountFundInterestIn(List<Long>)
+ Criteria andDiscountFundInterestNotIn(List<Long>)
+ Criteria andDiscountFundInterestBetween(Long,Long)
+ Criteria andDiscountFundInterestNotBetween(Long,Long)
+ Criteria andDiscountAdminFeeIsNull()
+ Criteria andDiscountAdminFeeIsNotNull()
+ Criteria andDiscountAdminFeeEqualTo(Long)
+ Criteria andDiscountAdminFeeNotEqualTo(Long)
+ Criteria andDiscountAdminFeeGreaterThan(Long)
+ Criteria andDiscountAdminFeeGreaterThanOrEqualTo(Long)
+ Criteria andDiscountAdminFeeLessThan(Long)
+ Criteria andDiscountAdminFeeLessThanOrEqualTo(Long)
+ Criteria andDiscountAdminFeeIn(List<Long>)
+ Criteria andDiscountAdminFeeNotIn(List<Long>)
+ Criteria andDiscountAdminFeeBetween(Long,Long)
+ Criteria andDiscountAdminFeeNotBetween(Long,Long)
+ Criteria andDiscountProvisionFeeIsNull()
+ Criteria andDiscountProvisionFeeIsNotNull()
+ Criteria andDiscountProvisionFeeEqualTo(Long)
+ Criteria andDiscountProvisionFeeNotEqualTo(Long)
+ Criteria andDiscountProvisionFeeGreaterThan(Long)
+ Criteria andDiscountProvisionFeeGreaterThanOrEqualTo(Long)
+ Criteria andDiscountProvisionFeeLessThan(Long)
+ Criteria andDiscountProvisionFeeLessThanOrEqualTo(Long)
+ Criteria andDiscountProvisionFeeIn(List<Long>)
+ Criteria andDiscountProvisionFeeNotIn(List<Long>)
+ Criteria andDiscountProvisionFeeBetween(Long,Long)
+ Criteria andDiscountProvisionFeeNotBetween(Long,Long)
+ Criteria andDiscountUpfrontServiceFeeIsNull()
+ Criteria andDiscountUpfrontServiceFeeIsNotNull()
+ Criteria andDiscountUpfrontServiceFeeEqualTo(Long)
+ Criteria andDiscountUpfrontServiceFeeNotEqualTo(Long)
+ Criteria andDiscountUpfrontServiceFeeGreaterThan(Long)
+ Criteria andDiscountUpfrontServiceFeeGreaterThanOrEqualTo(Long)
+ Criteria andDiscountUpfrontServiceFeeLessThan(Long)
+ Criteria andDiscountUpfrontServiceFeeLessThanOrEqualTo(Long)
+ Criteria andDiscountUpfrontServiceFeeIn(List<Long>)
+ Criteria andDiscountUpfrontServiceFeeNotIn(List<Long>)
+ Criteria andDiscountUpfrontServiceFeeBetween(Long,Long)
+ Criteria andDiscountUpfrontServiceFeeNotBetween(Long,Long)
+ Criteria andDiscountLateFeeIsNull()
+ Criteria andDiscountLateFeeIsNotNull()
+ Criteria andDiscountLateFeeEqualTo(Long)
+ Criteria andDiscountLateFeeNotEqualTo(Long)
+ Criteria andDiscountLateFeeGreaterThan(Long)
+ Criteria andDiscountLateFeeGreaterThanOrEqualTo(Long)
+ Criteria andDiscountLateFeeLessThan(Long)
+ Criteria andDiscountLateFeeLessThanOrEqualTo(Long)
+ Criteria andDiscountLateFeeIn(List<Long>)
+ Criteria andDiscountLateFeeNotIn(List<Long>)
+ Criteria andDiscountLateFeeBetween(Long,Long)
+ Criteria andDiscountLateFeeNotBetween(Long,Long)
+ Criteria andDiscountUpfrontFundInterestFeeIsNull()
+ Criteria andDiscountUpfrontFundInterestFeeIsNotNull()
+ Criteria andDiscountUpfrontFundInterestFeeEqualTo(Long)
+ Criteria andDiscountUpfrontFundInterestFeeNotEqualTo(Long)
+ Criteria andDiscountUpfrontFundInterestFeeGreaterThan(Long)
+ Criteria andDiscountUpfrontFundInterestFeeGreaterThanOrEqualTo(Long)
+ Criteria andDiscountUpfrontFundInterestFeeLessThan(Long)
+ Criteria andDiscountUpfrontFundInterestFeeLessThanOrEqualTo(Long)
+ Criteria andDiscountUpfrontFundInterestFeeIn(List<Long>)
+ Criteria andDiscountUpfrontFundInterestFeeNotIn(List<Long>)
+ Criteria andDiscountUpfrontFundInterestFeeBetween(Long,Long)
+ Criteria andDiscountUpfrontFundInterestFeeNotBetween(Long,Long)
+ Criteria andDiscountUpfrontProvisionFeeIsNull()
+ Criteria andDiscountUpfrontProvisionFeeIsNotNull()
+ Criteria andDiscountUpfrontProvisionFeeEqualTo(Long)
+ Criteria andDiscountUpfrontProvisionFeeNotEqualTo(Long)
+ Criteria andDiscountUpfrontProvisionFeeGreaterThan(Long)
+ Criteria andDiscountUpfrontProvisionFeeGreaterThanOrEqualTo(Long)
+ Criteria andDiscountUpfrontProvisionFeeLessThan(Long)
+ Criteria andDiscountUpfrontProvisionFeeLessThanOrEqualTo(Long)
+ Criteria andDiscountUpfrontProvisionFeeIn(List<Long>)
+ Criteria andDiscountUpfrontProvisionFeeNotIn(List<Long>)
+ Criteria andDiscountUpfrontProvisionFeeBetween(Long,Long)
+ Criteria andDiscountUpfrontProvisionFeeNotBetween(Long,Long)
+ Criteria andDiscountUpfrontAdminFeeIsNull()
+ Criteria andDiscountUpfrontAdminFeeIsNotNull()
+ Criteria andDiscountUpfrontAdminFeeEqualTo(Long)
+ Criteria andDiscountUpfrontAdminFeeNotEqualTo(Long)
+ Criteria andDiscountUpfrontAdminFeeGreaterThan(Long)
+ Criteria andDiscountUpfrontAdminFeeGreaterThanOrEqualTo(Long)
+ Criteria andDiscountUpfrontAdminFeeLessThan(Long)
+ Criteria andDiscountUpfrontAdminFeeLessThanOrEqualTo(Long)
+ Criteria andDiscountUpfrontAdminFeeIn(List<Long>)
+ Criteria andDiscountUpfrontAdminFeeNotIn(List<Long>)
+ Criteria andDiscountUpfrontAdminFeeBetween(Long,Long)
+ Criteria andDiscountUpfrontAdminFeeNotBetween(Long,Long)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDiscountCarryingFeeIsNull()
+ Criteria andDiscountCarryingFeeIsNotNull()
+ Criteria andDiscountCarryingFeeEqualTo(Long)
+ Criteria andDiscountCarryingFeeNotEqualTo(Long)
+ Criteria andDiscountCarryingFeeGreaterThan(Long)
+ Criteria andDiscountCarryingFeeGreaterThanOrEqualTo(Long)
+ Criteria andDiscountCarryingFeeLessThan(Long)
+ Criteria andDiscountCarryingFeeLessThanOrEqualTo(Long)
+ Criteria andDiscountCarryingFeeIn(List<Long>)
+ Criteria andDiscountCarryingFeeNotIn(List<Long>)
+ Criteria andDiscountCarryingFeeBetween(Long,Long)
+ Criteria andDiscountCarryingFeeNotBetween(Long,Long)
}
class com.welab.loan.finance.model.LoanCouponDetailExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanCouponDetailExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.service.core.BaseUvfDocService {
- LoanUvfDocMapper loanUvfDocMapper
+ boolean save(LoanUvfDoc)
+ LoanUvfDoc getOne(String,Integer)
+ LoanUvfDoc getOneByContractId(String,Integer)
+ PageInfo<LoanUvfDoc> page(PageDto,LoanUvfDocExample)
+ int delete(Long)
}
class com.welab.loan.finance.dto.cmd.tb.BaseTbUserAccountTransCmd {
- Long userId
- String transId
- String remark
}
class com.welab.loan.finance.model.LoanTransaction {
- Long id
- Long orgId
- Byte type
- String loanNumber
- Integer num
- String content
- String extendId
- Boolean isValid
- Date createAt
- Date updateAt
+ Long getId()
+ void setId(Long)
+ Long getOrgId()
+ void setOrgId(Long)
+ Byte getType()
+ void setType(Byte)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Integer getNum()
+ void setNum(Integer)
+ String getContent()
+ void setContent(String)
+ String getExtendId()
+ void setExtendId(String)
+ Boolean getIsValid()
+ void setIsValid(Boolean)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
}
class com.welab.loan.finance.service.impl.InvitePeopleServiceImpl {
- FinanceRepaymentTrackMapper trackMapper
- LoanOverdueInfoExtMapper loanOverdueInfoExtMapper
+ Response<Boolean> findQualityInvitePeople(Long)
}
class com.welab.loan.finance.dto.cmd.tb.HsoLimitQry {
- Long userId
- String customerId
- Integer sort
}
class com.welab.loan.finance.calculator.FixedDateCalculatorV2 {
+ List<Due> calculate(Date,BigDecimal,String,BigDecimal,BigDecimal,Map<String,BigDecimal>)
}
class com.welab.loan.finance.core.dues.impl.FlexifitCostService {
- boolean isDiscount
- FlexifitRepaymentConfigFacade flexifitRepaymentConfigFacade
- {static} String LOG_PREFIX
+ String costKey()
+ CostDetailDTO findCostDetail(CostReqDTO)
- CostDetailDTO shortPro(CostReqDTO,FlexifitRepaymentConfigDTO)
- CostDetailDTO longPro(CostReqDTO,FlexifitRepaymentConfigDTO)
}
class com.welab.loan.finance.vo.response.NsDueVO {
- Long userId
- String fundName
- Long fundId
- Long totalAdminFeeAmount
- Long totalAdminFeePay
- Long totalAdminFeeUnpay
- Long totalInterestFeeAmount
- Long totalInterestFeePay
- Long totalInterestFeeUnpay
- Long totalInterestFeeDiscount
- Long totalPlatformFeeAmount
- Long totalPlatformFeePay
- Long totalPlatformFeeUnpay
- Long totalPlatformFeeDiscount
- Long totalProvisionFeeAmount
- Long totalProvisionFeePay
- Long totalProvisionFeeUnpay
- Long totalProvisionFeeDiscount
- Long totalPrincipleAmount
- Long totalPrinciplePay
- Long totalPrincipleUnpay
- Long totalPrincipleDiscount
- Long totalLateFeeAmount
- Long totalLateFeePay
- Long totalLateFeeUnpay
- Long totalLateFeeDiscount
- Long totalCarryingFeeAmount
- Long totalCarryingFeePay
- Long totalCarryingFeeUnpay
- Long totalCarryingFeeDiscount
- Date dueDate
- List<DuesAmountExt> duesAmountExtList
}
class com.welab.loan.finance.app.base.flow.BaseFlowTaskTrackService {
- FlowTaskTrackMapper flowTaskTrackMapper
+ int addFlowTaskTrack(FlowTaskTrack)
+ int updateFlowTaskTrackStatus(Long,Byte)
+ int updateFlowTaskTrack(FlowTaskTrack)
+ long countFlowTaskTrack(Long,String,Byte)
+ FlowTaskTrack selectLastFlowTaskTrack(Long)
+ List<FlowTaskTrack> selectFlowTaskTrackList(Long,String)
+ List<FlowTaskTrack> selectFlowTaskTrack(FlowTaskTrackExample)
}
class com.welab.loan.finance.app.service.tb.TbLoanQryExe {
- BaseTbLoanService baseTbLoanService
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
- BaseLoanDetailService baseLoanDetailService
- MongoManager mongoManager
- TbServiceFacade tbServiceFacade
- FundService fundService
+ {static} List<Long> EXCLUDE_ORGIDS
+ PageInfo<TbLoanVO> excute(TravelokaLoanQry)
+ PageInfo<TbLoanVO> loanList(TravelokaLoanQry)
- void dataFill(List<TbLoanVO>)
- void convert(PageInfo<TbLoanVO>)
- Map<String,Long> queryMaxOverdueDay(List<String>)
- Map<String,Long> queryOutstandingAmount(List<String>)
- Map<String,Long> handle(List<Map<String,Object>>)
}
class com.welab.loan.finance.model.ext.PendLendLoanExt {
- {static} long serialVersionUID
- String loanNumber
- Long amount
- String lendStatusEnName
- String appliedAt
- String agreementSignedAt
- String funder
}
class com.welab.loan.finance.test.tb.Tb2Test {
- BaseLoanDetailService loanDetailService
- BaseLoanDetailExtendService loanDetailExtendService
- TbService tbService
- TbInvoiceImportService invoiceImportService
- TbDuesCreateService duesCreateService
- TbDuesUpdateService duesUpdateService
- TbLendService lendService
- TbServiceFacade tbServiceFacade
+ void doImport1()
+ void doImport2()
+ void doBatchLendTerst()
+ void createDues()
+ void doUpdate1()
+ void doUpdate2()
+ void lend()
- List<String> getLoanNumbers()
- List<TbInvoice> createInvoiceList()
- int getTenorMin(LoanDetail)
}
class com.welab.loan.finance.job.bca.BcaTransferReportJob {
+ {static} String FORMAT_PATTERN
- String APP_ID
- QueryTaskService queryTaskService
- BaseBcaTransferService bcaTransferService
- BaseLoanDetailService baseLoanDetailService
- BaseFinanceTrading baseFinanceTrading
- BaseFinanceLendService baseFinanceLendService
+ void execute(ShardingContext)
+ void setEmailUser()
+ MailDTO buildMail(String)
- LinkedHashMap getExcelHead()
- Map<String,String> createAttachment(Date,List<TaskVO>)
- List<TaskExt> getLoanNumber(List<TaskVO>)
- String getFileString(String,List,LinkedHashMap<String,String>)
- MailDTO createMailDTO(Date,Map<String,String>)
- TaskExt copy(TaskVO)
}
class com.welab.loan.finance.job.bca.BcaTransferReportJob$TaskExt {
- {static} long serialVersionUID
- String loanNumber
+ <<Create>> TaskExt()
+ String getLoanNumber()
+ void setLoanNumber(String)
}
class com.welab.loan.finance.vo.response.OverdueFeeVO {
- BigDecimal overdueFee
- boolean maxOverdueFee
}
class com.welab.loan.finance.service.impl.LoanOverdueInfoServiceImpl {
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
+ Response<List<ReportOverdueInfoVO>> reportOverdueInfo(ReportOverdueInfoDTO)
+ int findMaxOverdueDay(LoanOverdueQry)
+ List<MaxOverDueDto> findMaxOverdueData(Long)
+ List<MaxOverDueDto> findMaxOverdueData(Long,String)
+ Map<Long,Integer> getUserMaxDpd(UserMaxDpdQry)
+ Response<List<MaxOverDueDto>> listLoanOverDueInfoByLoanNums(List<String>)
+ Map<String,Integer> queryLoanMaxDpdMap(List<String>)
}
class com.welab.loan.finance.dto.ReportOverdueInfoDTO {
- Date startDate
- Date endDate
- String[] sourceId
- String[] secondProductCode
}
class com.welab.loan.finance.vo.UseCreditVO {
- String loanNumber
- boolean validateAmount
- boolean handFrozenAmount
}
interface com.welab.loan.finance.service.DuesService {
~ Response<RepaymentData> paymentSchedule(String)
~ Response<RepaymentData> getPaymentSchedule(String)
~ List<DuesVO> tryPaymentSchedule(PaymentScheduleDto)
~ RepayDuesRspDTO tryPaymentScheduleByLater(PaymentScheduleDto)
~ Response<RepaymentVO> findRepayInfo(RepayInfoDto)
~ Response<RepaymentVO> tryRepayInfo(RepayInfoDto)
~ Response<TryCalDuesVO> tryCalDuesForMaumodal(ScheduleAmountDto)
~ Response<RepayDuesVO> getCalDues(String)
~ Response<ActivityRepaymentVO> tryActivityRepaymentVO(TryActivityDto)
~ Response<CouponRepaymentVo> findCouponRepayment(LoanCouponCalDto)
~ Response<String> confirmRepayment(RepaymentDto)
~ Response<BaseRepaymentAmountInfoVo> advanceSchedule(String)
~ Response<CalculatorVo> trySchedule(CalculatorDto)
~ Response<List<DuesExtVo>> findDues(String,Boolean)
~ Response<RepaymentVO> findRepayInfoBycode(String)
~ Response<List<RepaymentVO>> findListRepayInfoBycode(String)
~ Response<List<CalculatorAmountVo>> scheduleAmount(Long,String,String,Long,String,String)
~ Response<List<CalculatorAmountVo>> scheduleAmountByOrigin(ScheduleAmountDto)
~ Response<CalculatorAmountVo> scheduleAmountCreditByOrigin(ScheduleAmountDto)
~ Response updateSkipOverdue(OverDuesDto)
~ Response<Integer> findLoanOverdueState(OverDuesDto)
~ Response<String> findOffLineRepayCode(String)
~ Response<List<DuesAmountExtVo>> findMergeDues(String)
~ Response updateLateFee(LateFeeDto)
~ Response batchUpdateLateFee(List<LateFeeDto>)
~ Response<String> selectBadDebt()
~ Response<String> selectBadDebtV2()
~ String findLoanCoupon(String)
~ Boolean checkCouponCode(String,Long)
~ LoanPlansRelationDTO getLastEplanLoans(String)
~ Long findAllDuesAmount(String)
~ Response<AstraPayInfoVo> getAstraPayInfoByUserId(Long)
~ RepayUnPayDTO findUnPayAmount(String)
~ Map<String,Long> getRemainingAmount(QueryRemainingAmountDTO)
~ List<EPlanAmountDTO> getUnPayAmountByLoanNumberForE(List<EPlanRateDTO>)
~ Response<List<LoanOverdueInfoDTO>> listOverDueInfoByUserAndDpd(List<Long>,Integer)
~ Response<PageInfo<RepaymentScheduleInfoDTO>> listRepaymentScheduleInfoByUserId(List<String>,Long,Integer,Integer,Integer)
~ Response<List<RepaymentScheduleInfoDTO>> listRepaymentScheduleInfoDetail(String,List<Integer>)
~ Response<List<DueSimpleDTO>> listIsCloseAndSoldDue(List<DueSimpleDTO>)
~ Response<Boolean> lateFeeUpdate(Long)
}
class com.welab.loan.finance.facade.application.TbProductConfigServiceFacade {
- TbProductConfigService tbProductConfigService
+ TbProductConfigVO matchConfig(TbMatchParamVO)
}
class com.welab.loan.finance.app.manager.credit.product.CreditPLProductListManager {
~ List<TagProductVO> matchProductForCreditType(CreditUserAccountExt,Map<String,TagProductVO>)
}
class com.welab.loan.finance.app.impl.CreditUserInfoServiceImple {
- BaseCreditUserInfoService baseCreditUserInfoService
+ List<Long> findExistsUserInfo(List<Long>,String)
}
class com.welab.loan.finance.dto.RateTypeDetailDTO {
- Long provisionFee
- Long fundInterestFee
- Long fundInterestFeeWHT
- Long serviceFee
- Long serviceFeeVAT
- Long adminFee
- Long adminFeeVAT
- Long carryFee
- Long carryFeeVAT
- Long premiumFee
}
enum com.welab.loan.finance.enums.RiskLevelEnum {
+  HIGH_RISK
+  LOW_RISK
- String value
- <<Create>> RiskLevelEnum(String)
+ String getValue()
}
class com.welab.loan.finance.vo.RepayConfigVO {
- {static} long serialVersionUID
- String appVersion
- Long orgId
- String sourceId
- String promotionCode
- Long userId
}
class com.welab.loan.finance.service.business.RechargeBusiService {
- RechargeLogServiceImpl rechargeLogService
- BaseLoanService baseLoanService
- FinanceRepaymentTrackMapper financeRepaymentTrackMapper
- LoanApplyPlansMapper loanApplyPlansMapper
- IAccountService accountService
- AccountServiceImpl accountServiceImpl
- IUserRepayAmount userRepayAmount
- DuesService duesService
- LoanCessieInfoService loanCessieInfoService
- LoanDetailManager loanDetailManager
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
+ Response noRecordOrCustomPayment(CollectionRepaymentVo)
+ Response multiCollectionRepayment(CollectionRepaymentVo)
- boolean isCessieOrder(List<String>)
+ Response<Void> collectionRecharge(CollectionRepaymentVo)
+ Response<Void> manualRecharge(CollectionRepaymentVo)
# void normalRepayPayment(CollectionRepaymentVo,String)
+ Response verifyData(CollectionRepaymentVo)
+ Response verifyDataAmount(String,Long,long)
+ boolean updateDelayPayment(CollectionRepaymentVo)
# List<FinanceRepaymentTrack> findTrackByTransId(String)
}
interface com.welab.loan.finance.mapper.FinanceUserAccountBalanceBakMapper {
~ long countByExample(FinanceUserAccountBalanceBakExample)
~ int deleteByExample(FinanceUserAccountBalanceBakExample)
~ int deleteByPrimaryKey(Long)
~ int insert(FinanceUserAccountBalanceBak)
~ int insertSelective(FinanceUserAccountBalanceBak)
~ List<FinanceUserAccountBalanceBak> selectByExample(FinanceUserAccountBalanceBakExample)
~ FinanceUserAccountBalanceBak selectByPrimaryKey(Long)
~ int updateByExampleSelective(FinanceUserAccountBalanceBak,FinanceUserAccountBalanceBakExample)
~ int updateByExample(FinanceUserAccountBalanceBak,FinanceUserAccountBalanceBakExample)
~ int updateByPrimaryKeySelective(FinanceUserAccountBalanceBak)
~ int updateByPrimaryKey(FinanceUserAccountBalanceBak)
}
class com.welab.loan.finance.model.ext.LoanDuesExt {
- Long lateFee
- Long needAmount
- Long payAmount
- Long serviceFee
- Date dueDate
- Long repayDueAmount
}
class com.welab.loan.finance.test.credit.activity.CreditAbtest {
- CreditAbTestHitDataQryExe creditAbTestHitDataQryExe
- CreditUserTagServiceImpl tagService
- CreditActivityAbTestManager creditActivityAbTestManager
- DuesService duesService
- CreditActivityImportUserIdManager creditActivityImportUserIdManager
- CreditActivityAbTestService creditActivityAbTestService
- CreditAbTestExportService creditAbTestExportService
- CreditActivityAbTestService CreditActivityAbTestService
+ void run()
+ void createReport()
+ void testSaveProcess()
+ void testUpdateProcess()
+ void doUpdateStatus(Long)
+ void testGetTagListByMatrixType()
+ void testBuildFundRate()
+ void testCalFundRate()
+ {static} void main(String[])
+ void testGetAbTestConfig()
+ void testDoUpdateAbTest2Redis()
+ void testGetTagProductVOList()
+ void testScheduleAmountCreditByOrigin()
+ void testMatchActivity()
+ void getUserInfo()
}
class com.welab.loan.finance.test.credit.activity.TrialCalculationAbtestUserTest {
- CreditActivityAbTestService creditActivityAbTestService
- CreditActivityImportUserIdManager creditActivityImportUserIdManager
+ void test()
+ void testImport()
}
class com.welab.loan.finance.controller.FlexController {
- FlexRepaymentImportCmdExe flexRepaymentImportCmdExe
+ Response<FlexRepaymentResult> repaymentImport(MultipartFile)
}
class com.welab.loan.finance.rabbitmq.CreditUserStatusChangeForDpdConsumer {
- CreditUserTagRuleService creditUserTagRuleService
- Integer FREEZE_USER_DPD
- Integer BLACKLIST_USER_DPD
- CreditUserAccountServiceImpl creditUserAccountService
- CreditUserAccountInfoService creditUserAccountInfoService
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
+ void onMessage(Message)
- void runRule(List<Long>)
}
class com.welab.loan.finance.core.dto.LoanPlansRelationDTO {
- Long approvedAmount
- PlansTypeEnum plansTypeEnum
- Boolean isPlanSuccess
- PlansTypeEnum creditPlansTypeEnum
}
class com.welab.loan.finance.model.LoanOverdueInfoExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> LoanOverdueInfoExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.LoanOverdueInfoExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
# void addCriterionForJDBCDate(String,Date,String)
# void addCriterionForJDBCDate(String,List<Date>,String)
# void addCriterionForJDBCDate(String,Date,Date,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andDueIndexIsNull()
+ Criteria andDueIndexIsNotNull()
+ Criteria andDueIndexEqualTo(Integer)
+ Criteria andDueIndexNotEqualTo(Integer)
+ Criteria andDueIndexGreaterThan(Integer)
+ Criteria andDueIndexGreaterThanOrEqualTo(Integer)
+ Criteria andDueIndexLessThan(Integer)
+ Criteria andDueIndexLessThanOrEqualTo(Integer)
+ Criteria andDueIndexIn(List<Integer>)
+ Criteria andDueIndexNotIn(List<Integer>)
+ Criteria andDueIndexBetween(Integer,Integer)
+ Criteria andDueIndexNotBetween(Integer,Integer)
+ Criteria andIsOverdueFullIsNull()
+ Criteria andIsOverdueFullIsNotNull()
+ Criteria andIsOverdueFullEqualTo(Boolean)
+ Criteria andIsOverdueFullNotEqualTo(Boolean)
+ Criteria andIsOverdueFullGreaterThan(Boolean)
+ Criteria andIsOverdueFullGreaterThanOrEqualTo(Boolean)
+ Criteria andIsOverdueFullLessThan(Boolean)
+ Criteria andIsOverdueFullLessThanOrEqualTo(Boolean)
+ Criteria andIsOverdueFullIn(List<Boolean>)
+ Criteria andIsOverdueFullNotIn(List<Boolean>)
+ Criteria andIsOverdueFullBetween(Boolean,Boolean)
+ Criteria andIsOverdueFullNotBetween(Boolean,Boolean)
+ Criteria andOverdueDaysIsNull()
+ Criteria andOverdueDaysIsNotNull()
+ Criteria andOverdueDaysEqualTo(Integer)
+ Criteria andOverdueDaysNotEqualTo(Integer)
+ Criteria andOverdueDaysGreaterThan(Integer)
+ Criteria andOverdueDaysGreaterThanOrEqualTo(Integer)
+ Criteria andOverdueDaysLessThan(Integer)
+ Criteria andOverdueDaysLessThanOrEqualTo(Integer)
+ Criteria andOverdueDaysIn(List<Integer>)
+ Criteria andOverdueDaysNotIn(List<Integer>)
+ Criteria andOverdueDaysBetween(Integer,Integer)
+ Criteria andOverdueDaysNotBetween(Integer,Integer)
+ Criteria andLastOverdueDateIsNull()
+ Criteria andLastOverdueDateIsNotNull()
+ Criteria andLastOverdueDateEqualTo(Date)
+ Criteria andLastOverdueDateNotEqualTo(Date)
+ Criteria andLastOverdueDateGreaterThan(Date)
+ Criteria andLastOverdueDateGreaterThanOrEqualTo(Date)
+ Criteria andLastOverdueDateLessThan(Date)
+ Criteria andLastOverdueDateLessThanOrEqualTo(Date)
+ Criteria andLastOverdueDateIn(List<Date>)
+ Criteria andLastOverdueDateNotIn(List<Date>)
+ Criteria andLastOverdueDateBetween(Date,Date)
+ Criteria andLastOverdueDateNotBetween(Date,Date)
+ Criteria andIsSynIsNull()
+ Criteria andIsSynIsNotNull()
+ Criteria andIsSynEqualTo(Boolean)
+ Criteria andIsSynNotEqualTo(Boolean)
+ Criteria andIsSynGreaterThan(Boolean)
+ Criteria andIsSynGreaterThanOrEqualTo(Boolean)
+ Criteria andIsSynLessThan(Boolean)
+ Criteria andIsSynLessThanOrEqualTo(Boolean)
+ Criteria andIsSynIn(List<Boolean>)
+ Criteria andIsSynNotIn(List<Boolean>)
+ Criteria andIsSynBetween(Boolean,Boolean)
+ Criteria andIsSynNotBetween(Boolean,Boolean)
+ Criteria andIsCloseIsNull()
+ Criteria andIsCloseIsNotNull()
+ Criteria andIsCloseEqualTo(Boolean)
+ Criteria andIsCloseNotEqualTo(Boolean)
+ Criteria andIsCloseGreaterThan(Boolean)
+ Criteria andIsCloseGreaterThanOrEqualTo(Boolean)
+ Criteria andIsCloseLessThan(Boolean)
+ Criteria andIsCloseLessThanOrEqualTo(Boolean)
+ Criteria andIsCloseIn(List<Boolean>)
+ Criteria andIsCloseNotIn(List<Boolean>)
+ Criteria andIsCloseBetween(Boolean,Boolean)
+ Criteria andIsCloseNotBetween(Boolean,Boolean)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andLfDpdIsNull()
+ Criteria andLfDpdIsNotNull()
+ Criteria andLfDpdEqualTo(Integer)
+ Criteria andLfDpdNotEqualTo(Integer)
+ Criteria andLfDpdGreaterThan(Integer)
+ Criteria andLfDpdGreaterThanOrEqualTo(Integer)
+ Criteria andLfDpdLessThan(Integer)
+ Criteria andLfDpdLessThanOrEqualTo(Integer)
+ Criteria andLfDpdIn(List<Integer>)
+ Criteria andLfDpdNotIn(List<Integer>)
+ Criteria andLfDpdBetween(Integer,Integer)
+ Criteria andLfDpdNotBetween(Integer,Integer)
}
class com.welab.loan.finance.model.LoanOverdueInfoExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.LoanOverdueInfoExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.vo.request.FinanceRefundDetailVo {
- String dateStr
- String loanNumber
- String orderNo
- String transId
- Integer dueIndex
- String bankCode
- Long amount
- Long principalFee
- Long adminFee
- Long fundInterestFee
- Long provisionFee
- Long serviceFee
- Long lateFee
- Long carryingFee
- Long fastPayFee
- String fundName
}
class com.welab.loan.finance.rabbitmq.WelcomeCallLoansConsumer {
- WelcomeCallLoansCmdExe welcomeCallLoansCmdExe
+ void onMessage(Message)
}
class com.welab.loan.finance.helper.BcaHelper {
- {static} Boolean open
- {static} String mobiles
+ void setOpen(Boolean)
+ void setMobiles(String)
+ {static} boolean isBcaDisbursement(FinanceLend)
+ {static} boolean isBcaDisbursement(String,String)
+ {static} boolean isOpen(String)
- {static} boolean isSigap(String)
+ {static} boolean isBcaDisbursementByLoanNumber(String)
+ {static} void BniToBniA(Long,String,TradingTypeEnum)
+ {static} void BcaBToBcaC(FinanceTrading,TradingTypeEnum)
}
class com.welab.loan.finance.model.ext.FinanceLendExt {
- Long id
- Long userId
- String loanNumber
- String mobile
- Long amount
- Long otherFee
- Long provisionFee
- Long channelFee
- Long surplusAmount
- Long aFTransferAmount
- Long receivedAmount
- String lendAccount
- String bankCode
- String receiptAccount
- String accountName
- Date createdAt
- Date updatedAt
- String transId
- String lendid
- Byte status
- Long fundId
- Byte lendType
- Long storeId
- Byte fundType
- String fundName
- String branch
- String channel
- Byte mode
- String secondProdCode
- String carryExt
- String ext
- Boolean isPayAdminfee
- Boolean isPayChannelfee
- Long liteFundInterest
- Long fundInterestFee
- Long ifWht
- Long serviceFee
- Long carryingFeeAmount
- Long astraFee
- Byte productType
- String productTypeStr
- String period
- Long orgId
- String sourceId
- Integer customerSegment
- Long totalAdminFee
- String lendTypeStr
- String statusStr
- String modeStr
- String transType
- String merchantProductCode
- String merchantCode
- String merchantCategory
- String merchantOrderNo
- Long payLaterProvisionFee
- String orderNumber
- Byte flag
- String flagReason
- String previousTransactionNumber
- Long premiumAmount
- Date lendAt
- Date lendUpdatedAt
- String thirdId
+ {static} Map getExportMap()
}
class com.welab.loan.finance.app.service.tb.travloka.TravelokaQueryService {
- TbLoanQryExe travelokaLoanQryExe
+ PageInfo<TbLoanVO> list(TravelokaLoanQry)
+ PageInfo<TbLoanVO> loanList(TravelokaLoanQry)
}
class com.welab.loan.finance.service.other.BaseMerchantService {
- MerchantService merchantService
+ MerchantProductDto findMerchantProduct(String,String)
+ MerchantRateDTO findAstraRate(String)
}
class com.welab.loan.finance.dto.CalculatorDto {
- String productCode
- String secondProdCode
- String tenor
- Long amount
}
interface com.welab.loan.finance.service.DuesQueryService {
~ Response<List<LoanDuesDTO>> getFPlanDues(FPlanDuesQry)
~ Response<List<LoanDuesDTO>> selectByLoanNumber(List<String>)
~ Response<LoanDuesDTO> selectByLoanNumber(String)
}
class com.welab.loan.finance.model.ext.UserDuesExt {
- Long amount
- Long serviceFee
- Long fundInterest
- Long adminFee
- Long lateFee
- Long overAmount
}
class com.welab.loan.finance.test.credit.CreditTrackTest {
- CreditAccountRecordMigrateJob creditAccountRecordMigrateJob
- CreditAccountTrackService creditAccountTrackService
+ void runMigrate()
+ void time()
+ void saveTrack()
+ void saveTrack2()
+ void logTest()
}
class com.welab.loan.finance.controller.PayBillsController {
- PayBillsManager payBillsManager
+ Response<List<BillAmountReportVO>> bills(String)
+ Response<PageInfo<PayBills>> query(BillsQry)
+ Response importBills(String,MultipartFile)
+ Response<PayBills> refresh(Long)
+ Response<List<BillRechargeInfoVO>> getRechargeInfo(Long)
+ Response<List<BillReverseInfoVO>> getReverseInfo(Long)
+ Response<PayBills> reversal(Long,Long)
}
class com.welab.loan.finance.app.base.tb.BaseToBLoanAgreementService {
- ToBAgreementDocMapper toBAgreementDocMapper
+ Long save(ToBAgreementDoc)
+ PageInfo<ToBAgreementDoc> page(PageToBAgreementParamReq)
+ boolean exist(String,String)
+ ToBAgreementDoc findLoanNumber(String)
+ ToBAgreementDoc getByTbLoanNumber(String)
+ void batchUpdateSignUp(String)
+ void updateSigningStatus(String,Byte)
+ List<ToBAgreementDoc> findNotSigning()
}
class com.welab.loan.finance.controller.CreditUserController {
- BaseCreditUserTagService baseCreditUserTagService
- BackstageConfigService backstageConfigService
- CreditUserTagUpdateByAdminCmdExe creditUserTagUpdateByAdminCmdExe
+ Response<Boolean> updateCreditConfig(String)
+ Response<List<CreditUserTagConfigVO>> tags()
+ Response<Boolean> updateTag(Long,List<CreditUserTagConfigVO>)
+ Response<Object> addorDeleteTagConfig(CreditConfigVO)
}
interface com.welab.loan.finance.mapper.DuesExtMapper {
~ DuesDetailExt sumAmountByLoanNum(String,String)
~ List<OverdueVO> getOverdueVOListByOverdueQueryDtoNew(OverdueQueryDto)
~ Date selectFirstOverdueDateByLoanNum(String)
~ UserDuesExt selectDuesByUserId(Long)
~ LoanDuesExt selectAmoutByLoan(String)
~ List<DuesAmountExt> selectLoanByTime(Map)
~ List<Dues> selectNowOverDue(String)
~ Dues selectNowOverDueOne(String)
~ Dues selectLockOverdues(String)
~ Dues selectExpiryDate(String)
~ Dues selectOverdue(String,Integer)
~ Long selectDiscountLateFee(String,List<Integer>)
~ Long selectDiscountLateFeeByAll(String,Integer)
~ Long countBadDebt(Integer)
~ Long countTotal()
~ List<DuesAmountExt> selectByLoanNumber(String,Integer)
~ OverdueDayDTO getOverdueDay(String,Integer)
~ OverdueDayDTO getOverdueDayByDiff(String,Integer)
~ long getPlanDuesNum(String)
~ Long countPlanDuesAmount(String,Integer)
~ List<DuesAmountExt> selectAllByLoanNum(String)
~ DuesAmountExt selectCplanByLoanNum(String)
~ DueIndexDTO selectDueIndex(String)
~ List<Map<String,Object>> getRepaymentAmountByDueIndex(List<String>,Integer)
~ List<OverdueDayDTO> getOverdueDayByGroup(String)
~ int updateDueDateByDdm(String,int)
~ CreditLateDTO findMaxLateFeeByCredit(String,Integer)
~ List<CessieDpdRspDTO> findLoanListDpd(List<String>)
~ List<RecentDueDate> getRecentDueDate(List<Long>,Date)
~ List<CollectionUserListVO> selectCollectionUserList(CollectionUserListQry)
~ CollectionUserListVO selectCollectionUserOverdue(Long)
~ LoanDuesDTO getFPlanLoanDues(String)
~ List<LoanDueIndexDuesDTO> getFPlanDueIndexDues(String)
~ void batchInsertDues(List<Dues>)
~ void batchUpdateDues(List<Dues>)
~ List<VatInitLoan> findVatInitLoan(Date,Long,int,String)
~ List<VatInitLoanDues> findVatInitLoanDues(Date,List<String>,String)
~ BigDecimal getActualDueAmount(String,Integer)
~ BigDecimal getUnsettledLateFeesNo1(String,Integer)
~ BigDecimal getOutstandingBalance(String)
~ Integer getRemainingTenor(String)
~ List<LoanOverdueInfoDTO> listOverDueInfoByUserAndDpd(List<Long>,Integer)
~ List<String> listOverLoanByUserAndDpd(List<String>,List<Long>,Integer)
~ List<RepaymentScheduleInfoDTO> listLoanDetailByUserAndLoanNumbers(Long,List<String>)
~ List<RepaymentScheduleInfoDTO> listOutstandingBalanceByLoanNumbers(List<String>)
~ List<RepaymentScheduleInfoDTO> listOverDueDate(List<String>,Integer)
~ List<RepaymentScheduleInfoDTO> listLoanTotalRemainingAmount(List<String>)
~ List<RepaymentScheduleInfoDTO> listLoanTotallateFeeAmount(List<String>)
~ List<RepaymentScheduleInfoDTO> listRepaymentScheduleInfoDetail(String,List<Integer>)
~ List<RepaymentScheduleInfoDTO> listAmountDueByLoanAndDueIndex(String,List<Integer>)
~ List<RepaymentScheduleInfoDTO> listLateFeeAmountByLoanAndDueIndex(String,List<Integer>)
~ void backup(DuesBackupModel)
~ void clearBackupTable(String)
}
class com.welab.loan.finance.job.LoanCouponExpireJob {
- int PAGESIZE
- LoanCouponDetailMapper loanCouponDetailMapper
- LoanCouponMapper loanCouponMapper
- BaseLoanService loanService
- BaseRabbitTemplate baseRabbitTemplate
- IRepaymentService IRepaymentService
- BaseRabbitTemplate rabbitTemplate
+ void execute(ShardingContext)
+ void deleteLoanCouponDetail(Set<String>)
+ void deleteLoanCoupon(Set<String>)
+ void deleteLoanCoupon(List<Long>)
+ void updateCoupon(List<Long>)
+ void restLoans(Set<String>)
+ void notifyMarketing(Set<String>)
}
class com.welab.loan.finance.model.FinanceRefundDetail {
- Long id
- String dateStr
- Byte type
- Byte markType
- String loanNumber
- String orderNo
- String transId
- Integer dueIndex
- Long fundId
- Byte fundType
- String bankCode
- Long amount
- Long principalFee
- Long adminFee
- Long fundInterestFee
- Long serviceFee
- Long provisionFee
- Long lateFee
- Long carryingFee
- Long fastPayFee
- Long vatFee
- Date createAt
+ Long getId()
+ void setId(Long)
+ String getDateStr()
+ void setDateStr(String)
+ Byte getType()
+ void setType(Byte)
+ Byte getMarkType()
+ void setMarkType(Byte)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getOrderNo()
+ void setOrderNo(String)
+ String getTransId()
+ void setTransId(String)
+ Integer getDueIndex()
+ void setDueIndex(Integer)
+ Long getFundId()
+ void setFundId(Long)
+ Byte getFundType()
+ void setFundType(Byte)
+ String getBankCode()
+ void setBankCode(String)
+ Long getAmount()
+ void setAmount(Long)
+ Long getPrincipalFee()
+ void setPrincipalFee(Long)
+ Long getAdminFee()
+ void setAdminFee(Long)
+ Long getFundInterestFee()
+ void setFundInterestFee(Long)
+ Long getServiceFee()
+ void setServiceFee(Long)
+ Long getProvisionFee()
+ void setProvisionFee(Long)
+ Long getLateFee()
+ void setLateFee(Long)
+ Long getCarryingFee()
+ void setCarryingFee(Long)
+ Long getFastPayFee()
+ void setFastPayFee(Long)
+ Long getVatFee()
+ void setVatFee(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
}
class com.welab.loan.finance.core.dto.RestAccountDto {
- boolean isRest
- Long userId
}
class com.welab.loan.finance.model.FlowTaskTrackExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FlowTaskTrackExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FlowTaskTrackExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andFlowTaskIdIsNull()
+ Criteria andFlowTaskIdIsNotNull()
+ Criteria andFlowTaskIdEqualTo(Long)
+ Criteria andFlowTaskIdNotEqualTo(Long)
+ Criteria andFlowTaskIdGreaterThan(Long)
+ Criteria andFlowTaskIdGreaterThanOrEqualTo(Long)
+ Criteria andFlowTaskIdLessThan(Long)
+ Criteria andFlowTaskIdLessThanOrEqualTo(Long)
+ Criteria andFlowTaskIdIn(List<Long>)
+ Criteria andFlowTaskIdNotIn(List<Long>)
+ Criteria andFlowTaskIdBetween(Long,Long)
+ Criteria andFlowTaskIdNotBetween(Long,Long)
+ Criteria andTaskParamIsNull()
+ Criteria andTaskParamIsNotNull()
+ Criteria andTaskParamEqualTo(String)
+ Criteria andTaskParamNotEqualTo(String)
+ Criteria andTaskParamGreaterThan(String)
+ Criteria andTaskParamGreaterThanOrEqualTo(String)
+ Criteria andTaskParamLessThan(String)
+ Criteria andTaskParamLessThanOrEqualTo(String)
+ Criteria andTaskParamLike(String)
+ Criteria andTaskParamNotLike(String)
+ Criteria andTaskParamIn(List<String>)
+ Criteria andTaskParamNotIn(List<String>)
+ Criteria andTaskParamBetween(String,String)
+ Criteria andTaskParamNotBetween(String,String)
+ Criteria andStageIsNull()
+ Criteria andStageIsNotNull()
+ Criteria andStageEqualTo(String)
+ Criteria andStageNotEqualTo(String)
+ Criteria andStageGreaterThan(String)
+ Criteria andStageGreaterThanOrEqualTo(String)
+ Criteria andStageLessThan(String)
+ Criteria andStageLessThanOrEqualTo(String)
+ Criteria andStageLike(String)
+ Criteria andStageNotLike(String)
+ Criteria andStageIn(List<String>)
+ Criteria andStageNotIn(List<String>)
+ Criteria andStageBetween(String,String)
+ Criteria andStageNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.FlowTaskTrackExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FlowTaskTrackExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.dto.MaxOverDueDto {
- Long userId
- String loanNumber
- Integer overdueDays
- Boolean isClose
}
class com.welab.loan.finance.utils.excel.ExcelUtil {
- {static} Logger LG
- {static} Map<Class<?>,CellType[]> validateMap
- {static} String getCellTypeByInt(CellType)
- {static} Object getCellValue(Cell)
+ {static} void exportExcel(Map<String,String>,Collection<T>,OutputStream)
+ {static} void exportExcel(Map<String,String>,Collection<T>,OutputStream,String)
+ {static} void exportExcel(String[][],OutputStream)
+ {static} void exportExcel(List<ExcelSheet<T>>,OutputStream)
+ {static} void exportExcel(List<ExcelSheet<T>>,OutputStream,String)
- {static} void write2Sheet(HSSFSheet,Map<String,String>,Collection<T>,String)
- {static} int setCellValue(HSSFCell,Object,String,int,Field,HSSFRow)
+ {static} Collection<T> importExcel(Class<T>,InputStream,String,ExcelLogs,Integer)
- {static} String validateCell(Cell,Field,int)
- {static} List<FieldForSortting> sortFieldByAnno(Class<?>)
- {static} void sortByProperties(List<? extends Object>,boolean,boolean,String)
}
class com.welab.loan.finance.dto.RepayTrackDto {
- Date start
- Date end
}
class com.welab.loan.finance.dto.FinanceTradingDto {
- String loanNumber
- String orderId
- Integer type
}
class com.welab.loan.finance.test.RateTest {
- RateService rateService
- InvitePeopleService invitePeopleService
+ void check()
+ void getRate()
+ void getA()
}
class com.welab.loan.finance.common.Constants {
+ {static} String REGEX_INDO_BANK_NUMBER
+ {static} Long ASTRA_ACCOUNT_ID
+ {static} String APP_CREDIT_SHOW_PRODUCT
+ {static} String CREDIT_DBR_CONFIG
+ {static} String CREDIT_DBR_PREFIX
+ {static} Integer AHASS_SIGN_UP_SUCCESS
+ {static} Integer AHASS_UN_SIGN_UP
+ {static} Integer AHASS_SIGN_UP_TIMEOUT
+ {static} Integer AHASS_SIGN_UP_NOT_EXIST
+ {static} Byte GO_BACK_PLAN_TYPE
+ {static} String ADVANCE_CODE
+ {static} String CREDIT_TAG_ESTIMATED_MONTHLY_INCOME
- <<Create>> Constants()
}
class com.welab.loan.finance.vo.credit.CreditActivityAbTestQueryVo {
- String secondProductCode
- String testGroupSecondProductCode
- String controlGroupSecondProductCode
- String tenor
- String tag
- Long activityId
- String actionType
}
class com.welab.loan.finance.model.CreditAccountRemainingTrack {
- Long id
- Long userId
- Long sumAvailabeAmount
- Long clAvailabeAmount
- Long plAvailabeAmount
- Long inferIncome
- String tag
- Byte type
- String transId
- Long clApprovedTenor1x
- Long clApprovedTenor2x
- Long clApprovedTenor3x
- Long clApprovedTenor4x
- Long clApprovedTenor6x
- Long clApprovedTenor9x
- Long clApprovedTenor12x
- Long clRemainingTenor1x
- Long clRemainingTenor2x
- Long clRemainingTenor3x
- Long clRemainingTenor4x
- Long clRemainingTenor6x
- Long clRemainingTenor9x
- Long clRemainingTenor12x
- Long plApprovedTenor1x
- Long plApprovedTenor2x
- Long plApprovedTenor3x
- Long plApprovedTenor4x
- Long plApprovedTenor6x
- Long plApprovedTenor9x
- Long plApprovedTenor12x
- Long plRemainingTenor1x
- Long plRemainingTenor2x
- Long plRemainingTenor3x
- Long plRemainingTenor4x
- Long plRemainingTenor6x
- Long plRemainingTenor9x
- Long plRemainingTenor12x
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ Long getSumAvailabeAmount()
+ void setSumAvailabeAmount(Long)
+ Long getClAvailabeAmount()
+ void setClAvailabeAmount(Long)
+ Long getPlAvailabeAmount()
+ void setPlAvailabeAmount(Long)
+ Long getInferIncome()
+ void setInferIncome(Long)
+ String getTag()
+ void setTag(String)
+ Byte getType()
+ void setType(Byte)
+ String getTransId()
+ void setTransId(String)
+ Long getClApprovedTenor1x()
+ void setClApprovedTenor1x(Long)
+ Long getClApprovedTenor2x()
+ void setClApprovedTenor2x(Long)
+ Long getClApprovedTenor3x()
+ void setClApprovedTenor3x(Long)
+ Long getClApprovedTenor4x()
+ void setClApprovedTenor4x(Long)
+ Long getClApprovedTenor6x()
+ void setClApprovedTenor6x(Long)
+ Long getClApprovedTenor9x()
+ void setClApprovedTenor9x(Long)
+ Long getClApprovedTenor12x()
+ void setClApprovedTenor12x(Long)
+ Long getClRemainingTenor1x()
+ void setClRemainingTenor1x(Long)
+ Long getClRemainingTenor2x()
+ void setClRemainingTenor2x(Long)
+ Long getClRemainingTenor3x()
+ void setClRemainingTenor3x(Long)
+ Long getClRemainingTenor4x()
+ void setClRemainingTenor4x(Long)
+ Long getClRemainingTenor6x()
+ void setClRemainingTenor6x(Long)
+ Long getClRemainingTenor9x()
+ void setClRemainingTenor9x(Long)
+ Long getClRemainingTenor12x()
+ void setClRemainingTenor12x(Long)
+ Long getPlApprovedTenor1x()
+ void setPlApprovedTenor1x(Long)
+ Long getPlApprovedTenor2x()
+ void setPlApprovedTenor2x(Long)
+ Long getPlApprovedTenor3x()
+ void setPlApprovedTenor3x(Long)
+ Long getPlApprovedTenor4x()
+ void setPlApprovedTenor4x(Long)
+ Long getPlApprovedTenor6x()
+ void setPlApprovedTenor6x(Long)
+ Long getPlApprovedTenor9x()
+ void setPlApprovedTenor9x(Long)
+ Long getPlApprovedTenor12x()
+ void setPlApprovedTenor12x(Long)
+ Long getPlRemainingTenor1x()
+ void setPlRemainingTenor1x(Long)
+ Long getPlRemainingTenor2x()
+ void setPlRemainingTenor2x(Long)
+ Long getPlRemainingTenor3x()
+ void setPlRemainingTenor3x(Long)
+ Long getPlRemainingTenor4x()
+ void setPlRemainingTenor4x(Long)
+ Long getPlRemainingTenor6x()
+ void setPlRemainingTenor6x(Long)
+ Long getPlRemainingTenor9x()
+ void setPlRemainingTenor9x(Long)
+ Long getPlRemainingTenor12x()
+ void setPlRemainingTenor12x(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.service.business.LendReversalImportService {
+ {static} String LOCK_KEY
+ {static} String SEPARATOR
- LendReversalMapper lendReversalMapper
- BaseFinanceLendService financeLendService
- BaseLoanDetailService loanDetailService
- BaseLoanDetailExtendService loanDetailExtendService
- LoansFacade loansFacade
- CreditUserAccountService creditUserAccountService
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- BaseLoanUserRepayService baseLoanUserRepayService
- BaseRabbitTemplate baseRabbitTemplate
- LendReversalRepaymentMapper lendReversalRepaymentMapper
- BaseRepaymentTrack repaymentTrack
- BaseDuesService duesService
- VatCostProvider costProvider
- BaseLoanOverdueInfoService loanOverdueInfoService
- JedisCluster jedisCluster
- ApolloUtils apolloUtils
+ void doImport(Long,List<LendReversalExcelVo>)
+ void doProcess(String,Long,LendReversalExcelVo)
- void deleteOverdueInfoAndUnFreezeUser(String,LoanDetail)
- boolean deleteLaterFeeAndUpdateCarryFee(String)
- void synDuesData(String)
- void updateAmount(long,long)
- void validateFields(LendReversalExcelVo)
- void validateBiz(LendReversalExcelVo,FinanceLend,LoanDetail)
- boolean isPaylater(String)
- boolean isCashLoan(String)
- boolean isBima(LoanDetail)
- FinanceLend findFinanceLend(String)
- LoanDetailExtend findLoanDetailExtend(String)
- LoanDetail getLoanDetail(String)
- boolean hasImported(String)
+ void synAccount(Long)
- LendReversal createLendReversal(String,Long,FinanceLend,LendReversalExcelVo)
- String getOrderPrefix(String)
- FinanceLend createFinanceLend(FinanceLend)
- LendReversalRepayment createLendReversalRepayment(String,String,FinanceLend)
}
class com.welab.loan.finance.model.LoanPlansContract {
- Long id
- Long userId
- String loanNumber
- Integer dueIndex
- Byte plansType
- Byte contractType
- Long docId
- Boolean isDelete
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Integer getDueIndex()
+ void setDueIndex(Integer)
+ Byte getPlansType()
+ void setPlansType(Byte)
+ Byte getContractType()
+ void setContractType(Byte)
+ Long getDocId()
+ void setDocId(Long)
+ Boolean getIsDelete()
+ void setIsDelete(Boolean)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.model.flow.RepaymentBackFlowContext {
- String transId
- String batchId
- Long userId
- List<LoanRepayment> loanRepayments
- Long adminId
- Boolean isOverDue
}
class com.welab.loan.finance.service.business.repayment.maucash.MaucashRepaymentServiceImpl {
- LoanDetailMapper loanDetailMapper
- LoanDetailExtendMapper loanDetailExtendMapper
- DuesMapper duesMapper
- BaseDuesService baseDuesService
- DuesExtMapper duesExtMapper
- FinanceRepaymentTrackMapper trackMapper
- LoanCouponDetailMapper loanCouponDetailMapper
- LoanCouponMapper loanCouponMapper
- DuesCalculationMapper duesCalculationMapper
- OverdueMapper overdueMapper
- LoanApplyPlansMapper loanApplyPlansMapper
- LoanPlansLogMapper loanPlansLogMapper
- LoanPlansRelationMapper loanPlansRelationMapper
- IAccountService accountService
- EPlanService ePlanService
- ApplicationService applicationService
- DocumentService documentService
- VatCostProvider vatCostProvider
- LoanCessieInfoService loanCessieInfoService
+ LoanDetail findLoanDetail(String)
+ long countLoanDetail(LoanDetailExample)
+ LoanDetailExtend findLoanDetailExt(String)
+ boolean repaymentCharge(RepaymentCallReq)
+ RestAccountDto checkRestAccount(String)
+ boolean countCheckRestAccount(String)
+ void advanceRepayment(RepaymentCallReq,LoanDetail,Long,List<Dues>)
+ void newAdvanceRepayment(RepaymentCallReq,LoanDetail,Long,List<Dues>)
+ void newNormalRepayment(RepaymentCallReq,LoanDetail,Long)
+ void normalRepayment(RepaymentCallReq,LoanDetail,Long)
- boolean unSignLoanEPlan(LoanApplyPlans,PlansTypeEnum)
- int findRepaymentDueIndex(List<Dues>)
- boolean triggerPlan(LoanDetail,PlansTypeEnum,List<Integer>,int,Long)
- void notifyMessage(LoanDetail,Integer,PlansTypeEnum,Long,boolean)
- void notifyPlan(LoanDetail,Integer,String,LoanPlansRelationDTO)
- void triggerPlanEmail(LoanDetail,PlansTypeEnum,boolean,String)
- void handleCarryFee(Long,Dues,LoanCouponDetail)
- Long getDuesCoupon(String,LoanCoupon,Boolean)
- void setDuesCoupon(String,LoanCoupon,Long,Boolean)
- void postDuesPlan(String,Long,LoanPlansLog)
- void postDuesPlanByStatus(String,Long,LoanPlansLog,PlansStatusEnum)
- void postRepaymentAmount(String,BaseRepaymentAmountInfoVo,Long)
- void postCouponDetail(String,LoanCouponDetail,Long)
- Long calculateDiscountLateFee(String,List<Integer>,Integer,boolean)
- void addRepaymentTrack(RepaymentCallReq,LoanDetail,BaseRepaymentAmountInfoVo,Map<String,Long>,LoanApplyPlans,boolean,Long)
+ void newAddRepaymentTrack(RepaymentCallReq,LoanDetail,BaseRepaymentAmountInfoVo,DuesMergeDTO,PlansTypeEnum,Long)
# void checkIsClose(LoanDetail,Integer,Long,Long,LoanApplyPlans,LoanPlansRelation,boolean)
- void generateFPlanContract(LoanDetail,Long,LoanApplyPlans)
- {static} String handleRate(double)
- void notifyCollection(RepaymentCallReq,LoanDetail)
- Dues selectLockOverdues(String)
- List<Dues> findNowDues(String)
+ List<Dues> findRepaymentDues(String,Date)
+ List<Dues> findRepaymentDues2(String,String)
+ List<DuesExtItem> findRepaymentDuesExt2(String,String)
+ List<DuesExtItem> findRepaymentDuesExt(String,Date)
+ List<DuesExtItem> findPlanRepaymentDues(String,Date,Boolean)
- List<DuesExtItem> findGoBackRepaymentDues(String,Date,LoanApplyPlans)
- Dues addOrRemoveDues(Dues,Map<String,Dues>,Set<String>)
# List<DuesExt> findMaxOverDuesList(String,Integer)
- List<DuesExtItem> findAllDuesExt(String,Boolean)
- List<Dues> findAllDues(String,Boolean)
# DuesExample findAllDuesParamsBuild(String,Boolean)
- long countDues(String,Boolean)
- void saveDues(Dues)
# LoanCoupon findLoanCoupon(String)
# void addLoanCouponDetail(List<LoanCouponDetail>)
# void addLoanCouponDetail(List<LoanCouponDetail>,String,CouponStatusEnum)
# void addLoanPlanLog(List<LoanPlansLog>)
# void addLoanPlanLog(List<LoanPlansLog>,Byte,PlansStatusEnum)
# Dues findDueTypeDues(String,Integer,DueTypeEnum)
# Dues findDueTypeDues(String,Integer,Boolean,DueTypeEnum)
# void saveLoanCoupon(LoanCoupon)
# void saveLoanApplyPlans(LoanApplyPlans,LoanPlansRelation,boolean,Long)
+ LoanPlansRelationDTO saveLoanApplyPlansByAll(LoanApplyPlans,LoanDetail,DeductDetailDTO,List<DeductDuesDTO>)
+ Boolean checkCouponDueIndex(String,Integer)
+ List<LoanCouponDetail> findAllUserCoupon(String)
+ CouponRepayment tryCouponAmount(LoanCouponCalDto)
# long doCalc(DuesExtItem,Long,Long)
+ Long getActualAmount(String)
+ Long getRealAmount(String)
+ CouponRepayment getRealAmount(String,Boolean)
+ CouponRepayment getRealAmount(String,Boolean,Date,Boolean)
+ CouponRepayment getRealAmount(String,Boolean,Boolean,Date,Boolean)
+ CouponRepayment getRealAmount(String,Boolean,Boolean,Date,LoanApplyPlans)
+ List<LoanCouponDetailVo> findAllCouponDetails(String)
+ void saveCouponDues(String)
+ List<CouponDues> findAllCouponDues(String)
+ Boolean matchCoupon(String,Integer,String,Boolean,Long)
+ Set<Integer> findBatchUnMatchCoupon(String,String,Boolean,Long)
+ boolean chechCoupon(String,Long)
+ void saveCouponDetailList(List<LoanCouponDetail>)
+ LoanCouponDetail findLoanCouponDetailOne(String,Integer)
+ long countLoanCouponDetail(String,Integer)
+ List<LoanCouponDetail> findAllCouponDetail(String)
# void postCouponDues(CouponDues,List<LoanCouponDetailVo>)
# Long getCouponDetailFee(String,List<LoanCouponDetailVo>)
+ ModDuesDto findGoBackOverDues(String,Date)
- Long calculatingOverdueFee(DuesExt,LoanDetail,boolean,Date)
- List<Dues> buildOverDuesList(DuesExt,Long)
- Dues buildDelOverDuesList(DuesExt,List<Dues>)
+ boolean modPlanNextDues(String,Integer)
+ boolean savePlanNextDues(LoanDetail,Integer)
+ PlanCalculatorReq buildPlanCalculator(LoanDetail,Integer,Dues)
+ PlanCalculatorReq buildPlanCalculator(LoanDetail,Integer,Dues,Long)
+ boolean delayPlanDues(List<Dues>,boolean)
- LoanApplyPlans findApplyPlan(String,PlansTypeEnum)
# LoanApplyPlans findLoanPlan(String)
# LoanPlansRelation findLoanPlansRelation(String)
+ CalPlanAmountDTO tryPlanRepayment(TryPlanRepaymentExtDTO)
+ CalPlanAmountDTO tryPlanRepaymentByPlan(TryPlanRepaymentExtDTO,List<Dues>)
+ Long findEplanDuesApprovedAmount(TreeMap<Integer,List<Dues>>,Long)
+ Integer handleUnPayDues(TreeMap<Integer,List<Dues>>,Long)
# CalPlanAmountDTO tryPlanRepaymentByCPlan(Long,List<Dues>,Map<String,BigDecimal>)
+ CalCplanRepayDTO tryCplanRepayment(TryPlanRepaymentDTO)
+ List<DuesRepayMentDTO> tryCplanRepaymentDetail(TryPlanRepaymentDTO)
+ Long findEplanAmount(String,PlansTypeEnum,Boolean)
- DuesRepayMentDTO getDuesRepayMentDto(List<DuesDto>)
- List<DuesRepayMentDTO> getDuesRepayMentDtoList(List<Dues>)
+ void checkAmountType(List<DuesRepayMentDTO>)
- void putDuesAmount(Map<String,Long>,String,Long)
+ CalCplanRepayDTO getCalCplanRepayNoCustom(List<Dues>)
+ CalCplanRepayDTO getCalCplanRepayCustom(String,List<Dues>,Long,Double)
}
class com.welab.loan.finance.app.service.tb.TbQueryService {
- TbDisbursementQryExe tbDisbursementQryExe
- TbRepaymentManager tbRepaymentManager
- TbDuesManager tbDuesManager
- BaseTbLendBatchService baseTbLendBatchService
- FundAccountInfoService fundService
- BaseTbRepaymentService tbRepaymentService
+ PageInfo<TbDisbursementVO> listDisbursement(TbDisbursementQry)
+ PageInfo<TbDisbursementVO> listDisbursements(TbDisbursementQry)
+ PageInfo<TbDisbursementVO> listDisbursementList(TbDisbursementQry)
+ PageInfo<TbRepaymentVO> listRepaymentTrack(TbRepaymentQry)
+ PageInfo<TbRepaymentVO> listRepayment(TbRepaymentQry)
+ PageInfo<DuesAmountExt> listDues(TbDuesQry)
+ List<TbPendRepayVO> findPendRepayList(List<String>)
+ List<SelectDTO> selectFundList(String)
+ void repaymentExport(TbRepaymentQry,String)
}
class com.welab.loan.finance.service.impl.LoanTimeoutConfigServiceImpl {
- BaseLoanTimeoutConfig baseLoanTimeoutConfig
+ LoanTimeoutConfigVo getByProductCode(String)
+ LoanTimeoutConfigVo getByProductCode(String,String)
}
class com.welab.loan.finance.dto.cmd.BatchApplyCPlanCmd {
- String nik
}
class com.welab.loan.finance.dto.payment.UserAdvancePaymentDTO {
- {static} long serialVersionUID
- Long userId
- Long amount
- String trxUuid
- String bankCode
}
class com.welab.loan.finance.model.mongo.tbuser.TravelokaUserDoc {
- Date dob
- String pob
- String businessName
- Float yearOfWorkExperience
- String purposeOfFinancing
- String citizenship
- String ktpProvince
- String ktpCity
- String ktpArea
- String ktpVillage
- String ktpZipCode
- String ktpStreetName
- String ktpRt
- String ktpRw
- String domicileProvince
- String domicileCity
- String domicileArea
- String domicileVillage
- String domicileZipCode
- String domicileStreetName
- String domicileRt
- String domicileRw
- String officeProvince
- String officeCity
- String officeArea
- String officeVillage
- String officeZipCode
- String officeStreetName
- String officeRt
- String officeRw
- Long monthlySalary
- String officeName
- String officePhone
- String npwp
- String officeContactPerson
- String officeContactPersonPosition
- String officeEmail
- Integer companyAge
- String companyRegistrationNo
- String companyLocation
- Date companyRegistered
- String officeDisburseAccount
- String emergencyContactName
- String emergencyContactPhone
- String emergencyContactRelation
+ {static} Map getExportMap()
+ {static} void main(String[])
}
class com.welab.loan.finance.vo.FifUvfRepayExcelVo {
- String branchId
- String contractId
- String applyNo
- String repaymentDate
- String userName
- String period
- String seqNo
- String installmentAmount
- String totalAmount
- String repaymentAmount
- String collectionFee
- String lateFee
- String serviceFeePay
- String fundAmountPay
- String lateFeeUnPay
- String outstandingLoan
- String transferAmount
- String interestDiscount
- String approvedBy
}
class com.welab.loan.finance.model.CreditUserLoanExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CreditUserLoanExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.CreditUserLoanExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andApprovedAmountIsNull()
+ Criteria andApprovedAmountIsNotNull()
+ Criteria andApprovedAmountEqualTo(Long)
+ Criteria andApprovedAmountNotEqualTo(Long)
+ Criteria andApprovedAmountGreaterThan(Long)
+ Criteria andApprovedAmountGreaterThanOrEqualTo(Long)
+ Criteria andApprovedAmountLessThan(Long)
+ Criteria andApprovedAmountLessThanOrEqualTo(Long)
+ Criteria andApprovedAmountIn(List<Long>)
+ Criteria andApprovedAmountNotIn(List<Long>)
+ Criteria andApprovedAmountBetween(Long,Long)
+ Criteria andApprovedAmountNotBetween(Long,Long)
+ Criteria andUseMoneyIsNull()
+ Criteria andUseMoneyIsNotNull()
+ Criteria andUseMoneyEqualTo(Long)
+ Criteria andUseMoneyNotEqualTo(Long)
+ Criteria andUseMoneyGreaterThan(Long)
+ Criteria andUseMoneyGreaterThanOrEqualTo(Long)
+ Criteria andUseMoneyLessThan(Long)
+ Criteria andUseMoneyLessThanOrEqualTo(Long)
+ Criteria andUseMoneyIn(List<Long>)
+ Criteria andUseMoneyNotIn(List<Long>)
+ Criteria andUseMoneyBetween(Long,Long)
+ Criteria andUseMoneyNotBetween(Long,Long)
+ Criteria andRemainingAmountIsNull()
+ Criteria andRemainingAmountIsNotNull()
+ Criteria andRemainingAmountEqualTo(Long)
+ Criteria andRemainingAmountNotEqualTo(Long)
+ Criteria andRemainingAmountGreaterThan(Long)
+ Criteria andRemainingAmountGreaterThanOrEqualTo(Long)
+ Criteria andRemainingAmountLessThan(Long)
+ Criteria andRemainingAmountLessThanOrEqualTo(Long)
+ Criteria andRemainingAmountIn(List<Long>)
+ Criteria andRemainingAmountNotIn(List<Long>)
+ Criteria andRemainingAmountBetween(Long,Long)
+ Criteria andRemainingAmountNotBetween(Long,Long)
+ Criteria andUserTagIsNull()
+ Criteria andUserTagIsNotNull()
+ Criteria andUserTagEqualTo(String)
+ Criteria andUserTagNotEqualTo(String)
+ Criteria andUserTagGreaterThan(String)
+ Criteria andUserTagGreaterThanOrEqualTo(String)
+ Criteria andUserTagLessThan(String)
+ Criteria andUserTagLessThanOrEqualTo(String)
+ Criteria andUserTagLike(String)
+ Criteria andUserTagNotLike(String)
+ Criteria andUserTagIn(List<String>)
+ Criteria andUserTagNotIn(List<String>)
+ Criteria andUserTagBetween(String,String)
+ Criteria andUserTagNotBetween(String,String)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andProductCodeIsNull()
+ Criteria andProductCodeIsNotNull()
+ Criteria andProductCodeEqualTo(String)
+ Criteria andProductCodeNotEqualTo(String)
+ Criteria andProductCodeGreaterThan(String)
+ Criteria andProductCodeGreaterThanOrEqualTo(String)
+ Criteria andProductCodeLessThan(String)
+ Criteria andProductCodeLessThanOrEqualTo(String)
+ Criteria andProductCodeLike(String)
+ Criteria andProductCodeNotLike(String)
+ Criteria andProductCodeIn(List<String>)
+ Criteria andProductCodeNotIn(List<String>)
+ Criteria andProductCodeBetween(String,String)
+ Criteria andProductCodeNotBetween(String,String)
+ Criteria andSecondProductCodeIsNull()
+ Criteria andSecondProductCodeIsNotNull()
+ Criteria andSecondProductCodeEqualTo(String)
+ Criteria andSecondProductCodeNotEqualTo(String)
+ Criteria andSecondProductCodeGreaterThan(String)
+ Criteria andSecondProductCodeGreaterThanOrEqualTo(String)
+ Criteria andSecondProductCodeLessThan(String)
+ Criteria andSecondProductCodeLessThanOrEqualTo(String)
+ Criteria andSecondProductCodeLike(String)
+ Criteria andSecondProductCodeNotLike(String)
+ Criteria andSecondProductCodeIn(List<String>)
+ Criteria andSecondProductCodeNotIn(List<String>)
+ Criteria andSecondProductCodeBetween(String,String)
+ Criteria andSecondProductCodeNotBetween(String,String)
+ Criteria andTenorIsNull()
+ Criteria andTenorIsNotNull()
+ Criteria andTenorEqualTo(String)
+ Criteria andTenorNotEqualTo(String)
+ Criteria andTenorGreaterThan(String)
+ Criteria andTenorGreaterThanOrEqualTo(String)
+ Criteria andTenorLessThan(String)
+ Criteria andTenorLessThanOrEqualTo(String)
+ Criteria andTenorLike(String)
+ Criteria andTenorNotLike(String)
+ Criteria andTenorIn(List<String>)
+ Criteria andTenorNotIn(List<String>)
+ Criteria andTenorBetween(String,String)
+ Criteria andTenorNotBetween(String,String)
+ Criteria andTenorStrIsNull()
+ Criteria andTenorStrIsNotNull()
+ Criteria andTenorStrEqualTo(String)
+ Criteria andTenorStrNotEqualTo(String)
+ Criteria andTenorStrGreaterThan(String)
+ Criteria andTenorStrGreaterThanOrEqualTo(String)
+ Criteria andTenorStrLessThan(String)
+ Criteria andTenorStrLessThanOrEqualTo(String)
+ Criteria andTenorStrLike(String)
+ Criteria andTenorStrNotLike(String)
+ Criteria andTenorStrIn(List<String>)
+ Criteria andTenorStrNotIn(List<String>)
+ Criteria andTenorStrBetween(String,String)
+ Criteria andTenorStrNotBetween(String,String)
+ Criteria andAccountTypeIsNull()
+ Criteria andAccountTypeIsNotNull()
+ Criteria andAccountTypeEqualTo(String)
+ Criteria andAccountTypeNotEqualTo(String)
+ Criteria andAccountTypeGreaterThan(String)
+ Criteria andAccountTypeGreaterThanOrEqualTo(String)
+ Criteria andAccountTypeLessThan(String)
+ Criteria andAccountTypeLessThanOrEqualTo(String)
+ Criteria andAccountTypeLike(String)
+ Criteria andAccountTypeNotLike(String)
+ Criteria andAccountTypeIn(List<String>)
+ Criteria andAccountTypeNotIn(List<String>)
+ Criteria andAccountTypeBetween(String,String)
+ Criteria andAccountTypeNotBetween(String,String)
+ Criteria andMerchantCodeIsNull()
+ Criteria andMerchantCodeIsNotNull()
+ Criteria andMerchantCodeEqualTo(String)
+ Criteria andMerchantCodeNotEqualTo(String)
+ Criteria andMerchantCodeGreaterThan(String)
+ Criteria andMerchantCodeGreaterThanOrEqualTo(String)
+ Criteria andMerchantCodeLessThan(String)
+ Criteria andMerchantCodeLessThanOrEqualTo(String)
+ Criteria andMerchantCodeLike(String)
+ Criteria andMerchantCodeNotLike(String)
+ Criteria andMerchantCodeIn(List<String>)
+ Criteria andMerchantCodeNotIn(List<String>)
+ Criteria andMerchantCodeBetween(String,String)
+ Criteria andMerchantCodeNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Integer)
+ Criteria andStatusNotEqualTo(Integer)
+ Criteria andStatusGreaterThan(Integer)
+ Criteria andStatusGreaterThanOrEqualTo(Integer)
+ Criteria andStatusLessThan(Integer)
+ Criteria andStatusLessThanOrEqualTo(Integer)
+ Criteria andStatusIn(List<Integer>)
+ Criteria andStatusNotIn(List<Integer>)
+ Criteria andStatusBetween(Integer,Integer)
+ Criteria andStatusNotBetween(Integer,Integer)
+ Criteria andCancelAtIsNull()
+ Criteria andCancelAtIsNotNull()
+ Criteria andCancelAtEqualTo(Date)
+ Criteria andCancelAtNotEqualTo(Date)
+ Criteria andCancelAtGreaterThan(Date)
+ Criteria andCancelAtGreaterThanOrEqualTo(Date)
+ Criteria andCancelAtLessThan(Date)
+ Criteria andCancelAtLessThanOrEqualTo(Date)
+ Criteria andCancelAtIn(List<Date>)
+ Criteria andCancelAtNotIn(List<Date>)
+ Criteria andCancelAtBetween(Date,Date)
+ Criteria andCancelAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andPreviousTagIsNull()
+ Criteria andPreviousTagIsNotNull()
+ Criteria andPreviousTagEqualTo(String)
+ Criteria andPreviousTagNotEqualTo(String)
+ Criteria andPreviousTagGreaterThan(String)
+ Criteria andPreviousTagGreaterThanOrEqualTo(String)
+ Criteria andPreviousTagLessThan(String)
+ Criteria andPreviousTagLessThanOrEqualTo(String)
+ Criteria andPreviousTagLike(String)
+ Criteria andPreviousTagNotLike(String)
+ Criteria andPreviousTagIn(List<String>)
+ Criteria andPreviousTagNotIn(List<String>)
+ Criteria andPreviousTagBetween(String,String)
+ Criteria andPreviousTagNotBetween(String,String)
}
class com.welab.loan.finance.model.CreditUserLoanExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.CreditUserLoanExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
interface com.welab.loan.finance.mapper.LoanUvfRepaymentExtMapper {
~ int insertSelective(LoanUvfRepayment)
~ long sumOutstandingAmount(String)
~ long sumSettledAmount(String)
~ long sumActualAmount(String)
}
class com.welab.loan.finance.model.ext.LoanPlanCount {
- {static} long serialVersionUID
- String loanId
- Integer dueIndex
- Byte planType
}
class com.welab.loan.finance.core.dto.overdue.LoanLateRspDTO {
- String loanNumber
- Integer dueIndex
- Long userId
- Date dueDate
- Long lateFee
- int type
- Long varyAmount
- boolean maxOverdueFee
- Long totalAmount
- Long orgLateFee
- Integer day
- boolean isSyn
- Long orgId
- BigDecimal lateRate
+ void findSetLoanLateRsp(LoanLateReqDTO,OverdueFeeVO)
}
class com.welab.loan.finance.facade.marketing.InSuranceDubboServiceFacade {
- InsuranceConfigDubboService insuranceConfigDubboService
+ InsuranceConfigDTO getInsuranceConfig(String)
}
interface com.welab.loan.finance.mapper.LoanPlansLogMapper {
~ long countByExample(LoanPlansLogExample)
~ int deleteByExample(LoanPlansLogExample)
~ int deleteByPrimaryKey(Long)
~ int insert(LoanPlansLog)
~ int insertSelective(LoanPlansLog)
~ List<LoanPlansLog> selectByExample(LoanPlansLogExample)
~ LoanPlansLog selectByPrimaryKey(Long)
~ int updateByExampleSelective(LoanPlansLog,LoanPlansLogExample)
~ int updateByExample(LoanPlansLog,LoanPlansLogExample)
~ int updateByPrimaryKeySelective(LoanPlansLog)
~ int updateByPrimaryKey(LoanPlansLog)
}
class com.welab.loan.finance.model.FundAccountExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> FundAccountExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.FundAccountExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Long)
+ Criteria andFundIdNotEqualTo(Long)
+ Criteria andFundIdGreaterThan(Long)
+ Criteria andFundIdGreaterThanOrEqualTo(Long)
+ Criteria andFundIdLessThan(Long)
+ Criteria andFundIdLessThanOrEqualTo(Long)
+ Criteria andFundIdIn(List<Long>)
+ Criteria andFundIdNotIn(List<Long>)
+ Criteria andFundIdBetween(Long,Long)
+ Criteria andFundIdNotBetween(Long,Long)
+ Criteria andAccountNoIsNull()
+ Criteria andAccountNoIsNotNull()
+ Criteria andAccountNoEqualTo(String)
+ Criteria andAccountNoNotEqualTo(String)
+ Criteria andAccountNoGreaterThan(String)
+ Criteria andAccountNoGreaterThanOrEqualTo(String)
+ Criteria andAccountNoLessThan(String)
+ Criteria andAccountNoLessThanOrEqualTo(String)
+ Criteria andAccountNoLike(String)
+ Criteria andAccountNoNotLike(String)
+ Criteria andAccountNoIn(List<String>)
+ Criteria andAccountNoNotIn(List<String>)
+ Criteria andAccountNoBetween(String,String)
+ Criteria andAccountNoNotBetween(String,String)
+ Criteria andFundTypeIsNull()
+ Criteria andFundTypeIsNotNull()
+ Criteria andFundTypeEqualTo(Byte)
+ Criteria andFundTypeNotEqualTo(Byte)
+ Criteria andFundTypeGreaterThan(Byte)
+ Criteria andFundTypeGreaterThanOrEqualTo(Byte)
+ Criteria andFundTypeLessThan(Byte)
+ Criteria andFundTypeLessThanOrEqualTo(Byte)
+ Criteria andFundTypeIn(List<Byte>)
+ Criteria andFundTypeNotIn(List<Byte>)
+ Criteria andFundTypeBetween(Byte,Byte)
+ Criteria andFundTypeNotBetween(Byte,Byte)
+ Criteria andFundCodeIsNull()
+ Criteria andFundCodeIsNotNull()
+ Criteria andFundCodeEqualTo(String)
+ Criteria andFundCodeNotEqualTo(String)
+ Criteria andFundCodeGreaterThan(String)
+ Criteria andFundCodeGreaterThanOrEqualTo(String)
+ Criteria andFundCodeLessThan(String)
+ Criteria andFundCodeLessThanOrEqualTo(String)
+ Criteria andFundCodeLike(String)
+ Criteria andFundCodeNotLike(String)
+ Criteria andFundCodeIn(List<String>)
+ Criteria andFundCodeNotIn(List<String>)
+ Criteria andFundCodeBetween(String,String)
+ Criteria andFundCodeNotBetween(String,String)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andAccountTypeIsNull()
+ Criteria andAccountTypeIsNotNull()
+ Criteria andAccountTypeEqualTo(Byte)
+ Criteria andAccountTypeNotEqualTo(Byte)
+ Criteria andAccountTypeGreaterThan(Byte)
+ Criteria andAccountTypeGreaterThanOrEqualTo(Byte)
+ Criteria andAccountTypeLessThan(Byte)
+ Criteria andAccountTypeLessThanOrEqualTo(Byte)
+ Criteria andAccountTypeIn(List<Byte>)
+ Criteria andAccountTypeNotIn(List<Byte>)
+ Criteria andAccountTypeBetween(Byte,Byte)
+ Criteria andAccountTypeNotBetween(Byte,Byte)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
}
class com.welab.loan.finance.model.FundAccountExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.FundAccountExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
enum com.welab.loan.finance.enums.CreditUserTagListEnum {
+  UFI_TAG
+  B_61
- List<String> tags
- String tag
}
class com.welab.loan.finance.app.base.BaseMatrixDisbursementCapLogService {
- MatrixDisbursementCapLogMapper disbursementCapLogMapper
+ void save(MatrixDisbursementCapLog)
+ long countDisbursementCap(String,String,String)
+ Map<String,List<MatrixDisbursementCapLog>> mapByField()
}
class com.welab.loan.finance.test.credit.CreditTagTest {
- CreditConfigImpl creditConfigImpl
- CreditUserTagServiceImpl creditUserTagServiceImpl
+ void testConfig()
+ void tagQry()
}
class com.welab.loan.finance.vo.response.paybills.BillsQry {
- String channel
- Date transactionDateBegin
- Date transactionDateEnd
- String trxIdOrVa
- String status
}
class com.welab.loan.finance.job.AstrapayRepaymentNotifyJob {
+ {static} String FORMAT_PATTERN
- String APP_ID
- BaseRepaymentTrack baseRepaymentTrack
- EmailService emailService
- PartnerService partnerService
+ void execute(ShardingContext)
- boolean isWorkday()
- Date getBeginDate(Date)
- Date getEndDate(Date)
- String getDateStr(Date,Date)
- List<AstrapayRepaymentVO> findAstrapayRepaymentList(Date,Date,List<String>)
- LinkedHashMap getExcelHead()
- MailDTO createMailDTO(Date,Date,Map<String,String>,String)
- Map<String,String> createAttachment(Date,Date,List<AstrapayRepaymentVO>)
- String getFileString(String,List,LinkedHashMap<String,String>)
}
class com.welab.loan.finance.job.AstrapayRepaymentNotifyJob$AstrapayRepaymentVO {
~ String loanNumber
~ String orderNo
~ String repaymentChannel
~ String repaymentAmount
~ String repaymentTime
~ String merchantCode
}
class com.welab.loan.finance.test.OverdueTest {
- CalculatorOverdueJob calculatorOverdueJob
- DuesCalculationMapper duesCalculationMapper
~ BaseOverdueService baseOverdueService
~ LoanOverdueInfoService loanOverdueInfoService
~ LoanServiceImpl loanService
+ void test()
+ void overduesScheduleService()
+ void findMaxOverdueDay()
+ void findOverDueDataByUserIds()
+ void findNew()
+ void findNewById()
+ void testOver()
}
class com.welab.loan.finance.model.CreditAccountTrackHistory {
- Long id
- Long userId
- Long sumAvailabeAmount
- Long availabeAmount
- Long inferIncome
- String tag
- Byte type
- String groupId
- String creditType
- Long x1
- Long x2
- Long x3
- Long x4
- Long x6
- Long x12
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ Long getSumAvailabeAmount()
+ void setSumAvailabeAmount(Long)
+ Long getAvailabeAmount()
+ void setAvailabeAmount(Long)
+ Long getInferIncome()
+ void setInferIncome(Long)
+ String getTag()
+ void setTag(String)
+ Byte getType()
+ void setType(Byte)
+ String getGroupId()
+ void setGroupId(String)
+ String getCreditType()
+ void setCreditType(String)
+ Long getX1()
+ void setX1(Long)
+ Long getX2()
+ void setX2(Long)
+ Long getX3()
+ void setX3(Long)
+ Long getX4()
+ void setX4(Long)
+ Long getX6()
+ void setX6(Long)
+ Long getX12()
+ void setX12(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.loan.finance.dto.qry.TbLoanPendRepayQry {
- String partner
- Long orgId
- Long userId
- String sort
- String invoiceNo
- String billingNo
- String loanNumberList
- List<String> list
}
class com.welab.loan.finance.vo.CollectionRepaymentVo {
- String loanNumber
- String remark
- Long userId
- Integer channel
- String bankCode
- Date repaymentDate
- String orderNo
- String receiptAccount
- Long amount
- String transId
- String serialNo
- List<String> loans
- boolean multi
- List<Integer> dueIndexs
- String trxIdOrVa
- Date postDate
}
class com.welab.loan.finance.service.core.BaseSignMethodOperateHistoryService {
- SignMethodOperateHistoryMapper signMethodOperateHistoryMapper
+ void save(SignMethodOperateHistory)
+ SignMethodOperateHistory getNewestOperateHistory(String)
+ Map<String,SignMethodOperateHistory> getNewestOperateHistoryMap(List<String>)
+ List<SignMethodOperateHistory> listHistory(String)
}
class com.welab.loan.finance.vo.OverDuesVO {
- String loanId
- Integer dueIndex
- Date dueDate
- Long remainingAmount
}
class com.welab.loan.finance.controller.FinanceTradingController {
- BaseFinanceTradingService baseFinanceTradingService
- FundAccountInfoService fundAccountInfoService
+ Response<PageInfo<FinanceTradingVO>> getFinanceTradingList(FinanceTradingDto)
}
class com.welab.loan.finance.dto.cmd.tb.TravelokaUserImportCmd {
- Date dob
- String pob
- String businessName
- Float yearOfWorkExperience
- String purposeOfFinancing
- String citizenship
- String ktpProvince
- String ktpCity
- String ktpArea
- String ktpVillage
- String ktpZipCode
- String ktpStreetName
- String ktpRt
- String ktpRw
- String domicileProvince
- String domicileCity
- String domicileArea
- String domicileVillage
- String domicileZipCode
- String domicileStreetName
- String domicileRt
- String domicileRw
- String officeProvince
- String officeCity
- String officeArea
- String officeVillage
- String officeZipCode
- String officeStreetName
- String officeRt
- String officeRw
- Long monthlySalary
- String officeName
- String officePhone
- String npwp
- String officeContactPerson
- String officeContactPersonPosition
- String officeEmail
- Integer companyAge
- String companyRegistrationNo
- String companyLocation
- Date companyRegistered
- String officeDisburseAccount
- String emergencyContactName
- String emergencyContactPhone
- String emergencyContactRelation
}
class com.welab.loan.finance.vo.ProductExtVO {
- Long id
- String productCode
- String productName
- String description
- BigDecimal maxInterest
- BigDecimal minInterest
- BigDecimal defaultInterest
- Long minAmount
- Long maxAmount
- Long defaultAmount
- Integer minAge
- Integer maxAge
- String tenor
- Date createdAt
- Date updatedAt
- Integer overDay
- Integer unconfirm
- Integer untake
}
class com.welab.loan.finance.controller.VirtualAccountController {
- VirtualAccountServiceFacade virtualAccountServiceFacade
+ Response<PageInfo<VirtualAccountDto>> virtualAccountList(VirtualAccountQry)
+ Response<String> createVANumber(CreateVANumberCmd)
+ Response<Boolean> virtualAccountUpdate(VirtualAccountUpdateCmd)
+ Response<Boolean> virtualAccountAdd(VirtualAccountAddCmd)
}
abstract class com.welab.loan.finance.service.other.disburse_tax.DisburseTaxHandler {
# FundService fundService
# LoanDetailExtMapper loanDetailExtMapper
# BaseFinanceTradingService baseFinanceTradingService
+ List<DisburseTax> getDisburseTax(Date,Date)
# List<DisburseTax> commonHandle(List<DisburseTax>)
# {abstract}List<DisburseTax> queryDisburseTax(Date,Date)
# List<DisburseTax> buildTocDisburseTax(Date,List<DisburseTax>)
}
interface com.welab.loan.finance.mapper.ext.TbUserExtMapper {
~ int inserts(List<TbUser>)
~ String findParterUserDocIdBy(String)
~ long findParterUserIdBy(String)
~ List<TbUserCreditAmountDTO> queryTbUserCreditAmount(Long,String,List<String>)
}
class com.welab.loan.finance.dto.cmd.tb.TbUserQry {
- String partner
- String mobileLike
- String nikLike
- String partnerUserNo
- Long parentUserId
- Long adminId
- String partnerUserNoList
}
class com.welab.loan.finance.core.dto.LoanDetailExtendDto {
- String controlGroupSecondProdCode
}
class com.welab.loan.finance.model.CreditActivityAbTestGroupUserRelation {
- Long id
- Date createdAt
- Date updatedAt
- Long testGroupId
- String userIdLastNums
- Long userId
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Long getTestGroupId()
+ void setTestGroupId(Long)
+ String getUserIdLastNums()
+ void setUserIdLastNums(String)
+ Long getUserId()
+ void setUserId(Long)
}
class com.welab.loan.finance.app.manager.plan.EPlanManager {
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
- CollectionPlanServiceFacade collectionPlanServiceFacade
- EPlanExtMapper ePlanExtMapper
- BaseLoanDetailService baseLoanDetailService
- LoanCessieInfoService loanCessieInfoService
+ boolean isAllowApply(Long)
}
class com.welab.loan.finance.dto.CheckBankCardDto {
- Long orgId
- Long userId
- Byte statusEnum
- String remark
}
class com.welab.loan.finance.model.VACacheInfo {
- Long userId
- Long syncVaId
- Date createdAt
- JSONObject repaymentInfo
}
class com.welab.loan.finance.app.impl.CPlanServiceImpl {
- LoanPlansContractBusiService loanPlansContractBusiService
- BasePayService basePayService
- IRepaymentService repaymentService
- PlanServiceImpl planService
- BatchApplyPlanCmdExe batchApplyPlanCmdExe
- QueryCPlanAmountCmdExe queryCPlanAmountCmdExe
- TryRepayCPlanCmdExe tryRepayCPlanCmdExe
- ApplyCPlanCmdExe applyCPlanCmdExe
- CreateCPlanContractCmdExe createCPlanContractCmdExe
- CheckCPlanCustomAmountCmdExe checkCPlanCustomAmountCmdExe
- CPlanCalculationCmdExe cPlanCalculationCmdExe
- BackstageConfigServiceFacade backstageConfigServiceFacade
+ Response<Void> sendC1Push(SendC1PushCmd)
+ Response<List<LoanPlansContractDTO>> queryC1PlanContract(C1PlanContractQry)
+ Response<CustomRangeDTO> queryCustomRange(QueryCustomRangeCmd)
+ Response<List<DuesRepayMentDTO>> tryRepayPlanDetail(TryPlanRepaymentDTO)
+ Response<CalCplanRepayDTO> tryCplanRepayment(TryPlanRepaymentDTO)
+ Response<String> createC1LoanPlansContract(CreateC1ContractCmd)
+ Response<Void> repayApplyPlan(ApplyPlanDTO)
+ Response<Void> applyCPlanByNik(BatchApplyCPlanCmd)
+ Response<CustomRangeDTO> queryRepayAmountForCPlan(QueryCPlanAmountCmd)
+ Response<TryRepayCPlanDTO> tryRepayCPlan(TryRepayCPlanCmd)
+ Response repayApplyCPlan(ApplyCPlanCmd)
+ Response createCPlanContracts(CreateCPlanContractCmd)
+ Response repayAmountCheckForCPlan(CheckCPlanCustomAmountCmd)
+ Response tryCPlanForCollection(TryCPlanParamDTO)
+ Response<TryRepayCPlanLoanDetailDto> tryRepayCPlanLoanDetail(String,Long)
+ Response submitCPlanForCollection(TryCPlanParamDTO)
+ Response getAllowJoinCPlanLoan(Long)
+ Response tryCPlanForUser(Long)
}
class com.welab.loan.finance.service.core.BaseCreditUserAccountChildService {
- CreditUserAccountChildExtMapper creditUserAccountChildExtMapper
- BaseCreditUserTagService baseCreditUserTagService
- BaseCreditUserAccountService baseCreditUserAccountService
- CreditActivityAbTestManager creditActivityAbTestManager
- BaseCreditActivityAbTestService baseCreditActivityAbTestService
+ BaseCreditUserAccountChildService getThis()
+ CreditUserAccountChild tryGetOne(CreditUserAccountChild,CreditUserAccountExt)
+ CreditUserAccountChild getTotalUseChildForTenor(CreditUserAccountChild,boolean,CreditUserAccountExt)
+ CreditUserAccountChild getOne(CreditUserAccountChild,boolean,CreditUserAccountExt)
+ CreditUserAccountChild getOne(CreditUserAccountChild,boolean)
+ List<CreditUserAccountChild> list(Long)
+ boolean operateMoney(CreditUserAccountChildExt)
}
class com.welab.loan.finance.app.service.flow.repaymentback.FinanceDuesBackCompont {
- RepaymentGoBackManager repaymentGoBackManager
+ FlowTaskNodeEnum flowTaskNode()
# void process(RepaymentBackFlowContext)
}
enum com.welab.loan.finance.enums.MarkTypeEnum {
+  NORMAL
+  SOLD
- Byte value
- String name
- String enName
+ {static} MarkTypeEnum getByValue(Byte)
}
class com.welab.loan.finance.model.SignMethodOperateHistoryExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> SignMethodOperateHistoryExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.SignMethodOperateHistoryExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andSecondProdCodeIsNull()
+ Criteria andSecondProdCodeIsNotNull()
+ Criteria andSecondProdCodeEqualTo(String)
+ Criteria andSecondProdCodeNotEqualTo(String)
+ Criteria andSecondProdCodeGreaterThan(String)
+ Criteria andSecondProdCodeGreaterThanOrEqualTo(String)
+ Criteria andSecondProdCodeLessThan(String)
+ Criteria andSecondProdCodeLessThanOrEqualTo(String)
+ Criteria andSecondProdCodeLike(String)
+ Criteria andSecondProdCodeNotLike(String)
+ Criteria andSecondProdCodeIn(List<String>)
+ Criteria andSecondProdCodeNotIn(List<String>)
+ Criteria andSecondProdCodeBetween(String,String)
+ Criteria andSecondProdCodeNotBetween(String,String)
+ Criteria andBeforeSigningMethodIsNull()
+ Criteria andBeforeSigningMethodIsNotNull()
+ Criteria andBeforeSigningMethodEqualTo(Integer)
+ Criteria andBeforeSigningMethodNotEqualTo(Integer)
+ Criteria andBeforeSigningMethodGreaterThan(Integer)
+ Criteria andBeforeSigningMethodGreaterThanOrEqualTo(Integer)
+ Criteria andBeforeSigningMethodLessThan(Integer)
+ Criteria andBeforeSigningMethodLessThanOrEqualTo(Integer)
+ Criteria andBeforeSigningMethodIn(List<Integer>)
+ Criteria andBeforeSigningMethodNotIn(List<Integer>)
+ Criteria andBeforeSigningMethodBetween(Integer,Integer)
+ Criteria andBeforeSigningMethodNotBetween(Integer,Integer)
+ Criteria andAfterSigningMethodIsNull()
+ Criteria andAfterSigningMethodIsNotNull()
+ Criteria andAfterSigningMethodEqualTo(Integer)
+ Criteria andAfterSigningMethodNotEqualTo(Integer)
+ Criteria andAfterSigningMethodGreaterThan(Integer)
+ Criteria andAfterSigningMethodGreaterThanOrEqualTo(Integer)
+ Criteria andAfterSigningMethodLessThan(Integer)
+ Criteria andAfterSigningMethodLessThanOrEqualTo(Integer)
+ Criteria andAfterSigningMethodIn(List<Integer>)
+ Criteria andAfterSigningMethodNotIn(List<Integer>)
+ Criteria andAfterSigningMethodBetween(Integer,Integer)
+ Criteria andAfterSigningMethodNotBetween(Integer,Integer)
+ Criteria andBeforeAmountFundedIsNull()
+ Criteria andBeforeAmountFundedIsNotNull()
+ Criteria andBeforeAmountFundedEqualTo(String)
+ Criteria andBeforeAmountFundedNotEqualTo(String)
+ Criteria andBeforeAmountFundedGreaterThan(String)
+ Criteria andBeforeAmountFundedGreaterThanOrEqualTo(String)
+ Criteria andBeforeAmountFundedLessThan(String)
+ Criteria andBeforeAmountFundedLessThanOrEqualTo(String)
+ Criteria andBeforeAmountFundedLike(String)
+ Criteria andBeforeAmountFundedNotLike(String)
+ Criteria andBeforeAmountFundedIn(List<String>)
+ Criteria andBeforeAmountFundedNotIn(List<String>)
+ Criteria andBeforeAmountFundedBetween(String,String)
+ Criteria andBeforeAmountFundedNotBetween(String,String)
+ Criteria andAfterAmountFundedIsNull()
+ Criteria andAfterAmountFundedIsNotNull()
+ Criteria andAfterAmountFundedEqualTo(String)
+ Criteria andAfterAmountFundedNotEqualTo(String)
+ Criteria andAfterAmountFundedGreaterThan(String)
+ Criteria andAfterAmountFundedGreaterThanOrEqualTo(String)
+ Criteria andAfterAmountFundedLessThan(String)
+ Criteria andAfterAmountFundedLessThanOrEqualTo(String)
+ Criteria andAfterAmountFundedLike(String)
+ Criteria andAfterAmountFundedNotLike(String)
+ Criteria andAfterAmountFundedIn(List<String>)
+ Criteria andAfterAmountFundedNotIn(List<String>)
+ Criteria andAfterAmountFundedBetween(String,String)
+ Criteria andAfterAmountFundedNotBetween(String,String)
+ Criteria andBeforeAutoOtpIsNull()
+ Criteria andBeforeAutoOtpIsNotNull()
+ Criteria andBeforeAutoOtpEqualTo(Integer)
+ Criteria andBeforeAutoOtpNotEqualTo(Integer)
+ Criteria andBeforeAutoOtpGreaterThan(Integer)
+ Criteria andBeforeAutoOtpGreaterThanOrEqualTo(Integer)
+ Criteria andBeforeAutoOtpLessThan(Integer)
+ Criteria andBeforeAutoOtpLessThanOrEqualTo(Integer)
+ Criteria andBeforeAutoOtpIn(List<Integer>)
+ Criteria andBeforeAutoOtpNotIn(List<Integer>)
+ Criteria andBeforeAutoOtpBetween(Integer,Integer)
+ Criteria andBeforeAutoOtpNotBetween(Integer,Integer)
+ Criteria andAfterAutoOtpIsNull()
+ Criteria andAfterAutoOtpIsNotNull()
+ Criteria andAfterAutoOtpEqualTo(Integer)
+ Criteria andAfterAutoOtpNotEqualTo(Integer)
+ Criteria andAfterAutoOtpGreaterThan(Integer)
+ Criteria andAfterAutoOtpGreaterThanOrEqualTo(Integer)
+ Criteria andAfterAutoOtpLessThan(Integer)
+ Criteria andAfterAutoOtpLessThanOrEqualTo(Integer)
+ Criteria andAfterAutoOtpIn(List<Integer>)
+ Criteria andAfterAutoOtpNotIn(List<Integer>)
+ Criteria andAfterAutoOtpBetween(Integer,Integer)
+ Criteria andAfterAutoOtpNotBetween(Integer,Integer)
+ Criteria andAdminIdIsNull()
+ Criteria andAdminIdIsNotNull()
+ Criteria andAdminIdEqualTo(Long)
+ Criteria andAdminIdNotEqualTo(Long)
+ Criteria andAdminIdGreaterThan(Long)
+ Criteria andAdminIdGreaterThanOrEqualTo(Long)
+ Criteria andAdminIdLessThan(Long)
+ Criteria andAdminIdLessThanOrEqualTo(Long)
+ Criteria andAdminIdIn(List<Long>)
+ Criteria andAdminIdNotIn(List<Long>)
+ Criteria andAdminIdBetween(Long,Long)
+ Criteria andAdminIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.SignMethodOperateHistoryExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.SignMethodOperateHistoryExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.test.vat.VatTest {
- BaseLoanDetailService loanDetailService
- BaseLoanDetailExtendService loanDetailExtendService
- DuesService duesService
- LendRepayDuesCouponImpl lendRepayDuesCoupon
- BaseFinanceDuesService baseFinanceDuesService
+ void costConfigurationTest()
+ void paymentSchedule()
+ void calcUpfrontFee()
+ void tryCalculateTest()
+ void findLendCouponByLoan()
+ void findListRepayInfoBycode()
+ void synDuesData()
}
class com.welab.loan.finance.app.base.BaseDuesAndRepayImportUpdateService {
- DuesRepayUpdateRecordMapper duesRepayUpdateRecordMapper
- DuesRepayUpdateRecordExtMapper duesRepayUpdateRecordExtMapper
+ PageInfo<DuesRepayUpdateRecord> listImportRecordPageByLoanNumber(String,Integer,Integer)
+ DuesRepayUpdateRecord getDuesAndRepayImportUpdateById(Long)
+ int saveRecord(DuesRepayUpdateRecord)
+ int save(DuesRepayUpdateRecordExtWithBLOBs)
+ DuesRepayUpdateRecordExtWithBLOBs getByRecordId(Long)
}
class com.welab.loan.finance.test.vat.VatRepaymentTest {
- IQueryDuesService iQueryDuesService
+ void testAdvance()
}
class com.welab.loan.finance.dto.MinPayAmountDetailDto {
- BigDecimal totalMinPayAmount
- BigDecimal totalServiceFee
- BigDecimal totalLateFee
- BigDecimal totalPrincipal
}
class com.welab.loan.finance.app.command.tb.lend.transfer.impl.SmpTransferService {
# String getPrefix()
+ String getKey()
}
class com.welab.loan.finance.utils.NumberUtils {
- <<Create>> NumberUtils()
+ {static} String findUpfrontProvisionRate(BigDecimal,Double)
+ {static} BigDecimal findProvisionStrToRate(String,BigDecimal)
+ {static} int findGongYueShu(int,int)
+ {static} void main(String[])
}
class com.welab.loan.finance.app.command.rebook.RebookTimeLimitCmdExe {
- BaseRebookTimeLimitService baseRebookTimeLimitService
- BaseLoanOverdueInfoService baseLoanOverdueInfoService
+ void save(LoanDetail,List<Dues>)
+ {static} void main(String[])
}
class com.welab.loan.finance.app.base.BaseFinanceTradingService {
- FinanceTradingMapper financeTradingMapper
- FinanceTradingExtMapper financeTradingExtMapper
+ List<FinanceTrading> list(FinanceTradingExample)
+ List<FinanceTrading> listForFinanceTradingDto(FinanceTradingDto)
+ boolean save(FinanceTrading)
+ List<Map<String,Object>> getPayLaterTrading(Map<String,Object>)
+ List<FinanceTradingExt> getNeedTransferPremiumLoans(Map<String,Object>)
+ List<String> queryHaveTransferPremium(Map<String,Object>)
+ List<FinanceTrading> list(List<String>,TradingTypeEnum)
+ List<String> listSuccess(List<String>,TradingTypeEnum,TradingStatusEnum)
+ List<FinanceTrading> list(List<String>)
}
class com.welab.loan.finance.test.cplan.CPlanTest {
- BaseLoanApplyPlansService loanApplyPlansService
- CPlanService cPlanService
- CPlanCalculationCmdExe cPlanCalculationCmdExe
- RepaymentService repaymentService
+ void countTest()
+ void testCPlanForCollection()
- void test1()
+ void testAllowC()
+ void findDuesByCredit()
+ void findDuesByCredit1()
+ void testCForApp()
+ void tryCPlanForCollection()
+ void tryRepayCPlanLoanDetail()
+ void testSubmitCplan()
}
class com.welab.loan.finance.model.InsuranceDetailExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> InsuranceDetailExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.loan.finance.model.InsuranceDetailExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andInsuranceRecordIdIsNull()
+ Criteria andInsuranceRecordIdIsNotNull()
+ Criteria andInsuranceRecordIdEqualTo(Long)
+ Criteria andInsuranceRecordIdNotEqualTo(Long)
+ Criteria andInsuranceRecordIdGreaterThan(Long)
+ Criteria andInsuranceRecordIdGreaterThanOrEqualTo(Long)
+ Criteria andInsuranceRecordIdLessThan(Long)
+ Criteria andInsuranceRecordIdLessThanOrEqualTo(Long)
+ Criteria andInsuranceRecordIdIn(List<Long>)
+ Criteria andInsuranceRecordIdNotIn(List<Long>)
+ Criteria andInsuranceRecordIdBetween(Long,Long)
+ Criteria andInsuranceRecordIdNotBetween(Long,Long)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andPolicyNumberIsNull()
+ Criteria andPolicyNumberIsNotNull()
+ Criteria andPolicyNumberEqualTo(String)
+ Criteria andPolicyNumberNotEqualTo(String)
+ Criteria andPolicyNumberGreaterThan(String)
+ Criteria andPolicyNumberGreaterThanOrEqualTo(String)
+ Criteria andPolicyNumberLessThan(String)
+ Criteria andPolicyNumberLessThanOrEqualTo(String)
+ Criteria andPolicyNumberLike(String)
+ Criteria andPolicyNumberNotLike(String)
+ Criteria andPolicyNumberIn(List<String>)
+ Criteria andPolicyNumberNotIn(List<String>)
+ Criteria andPolicyNumberBetween(String,String)
+ Criteria andPolicyNumberNotBetween(String,String)
+ Criteria andInsuranceCoverageIsNull()
+ Criteria andInsuranceCoverageIsNotNull()
+ Criteria andInsuranceCoverageEqualTo(Long)
+ Criteria andInsuranceCoverageNotEqualTo(Long)
+ Criteria andInsuranceCoverageGreaterThan(Long)
+ Criteria andInsuranceCoverageGreaterThanOrEqualTo(Long)
+ Criteria andInsuranceCoverageLessThan(Long)
+ Criteria andInsuranceCoverageLessThanOrEqualTo(Long)
+ Criteria andInsuranceCoverageIn(List<Long>)
+ Criteria andInsuranceCoverageNotIn(List<Long>)
+ Criteria andInsuranceCoverageBetween(Long,Long)
+ Criteria andInsuranceCoverageNotBetween(Long,Long)
+ Criteria andStartDateIsNull()
+ Criteria andStartDateIsNotNull()
+ Criteria andStartDateEqualTo(Date)
+ Criteria andStartDateNotEqualTo(Date)
+ Criteria andStartDateGreaterThan(Date)
+ Criteria andStartDateGreaterThanOrEqualTo(Date)
+ Criteria andStartDateLessThan(Date)
+ Criteria andStartDateLessThanOrEqualTo(Date)
+ Criteria andStartDateIn(List<Date>)
+ Criteria andStartDateNotIn(List<Date>)
+ Criteria andStartDateBetween(Date,Date)
+ Criteria andStartDateNotBetween(Date,Date)
+ Criteria andEndDateIsNull()
+ Criteria andEndDateIsNotNull()
+ Criteria andEndDateEqualTo(Date)
+ Criteria andEndDateNotEqualTo(Date)
+ Criteria andEndDateGreaterThan(Date)
+ Criteria andEndDateGreaterThanOrEqualTo(Date)
+ Criteria andEndDateLessThan(Date)
+ Criteria andEndDateLessThanOrEqualTo(Date)
+ Criteria andEndDateIn(List<Date>)
+ Criteria andEndDateNotIn(List<Date>)
+ Criteria andEndDateBetween(Date,Date)
+ Criteria andEndDateNotBetween(Date,Date)
+ Criteria andClaimStatusIsNull()
+ Criteria andClaimStatusIsNotNull()
+ Criteria andClaimStatusEqualTo(String)
+ Criteria andClaimStatusNotEqualTo(String)
+ Criteria andClaimStatusGreaterThan(String)
+ Criteria andClaimStatusGreaterThanOrEqualTo(String)
+ Criteria andClaimStatusLessThan(String)
+ Criteria andClaimStatusLessThanOrEqualTo(String)
+ Criteria andClaimStatusLike(String)
+ Criteria andClaimStatusNotLike(String)
+ Criteria andClaimStatusIn(List<String>)
+ Criteria andClaimStatusNotIn(List<String>)
+ Criteria andClaimStatusBetween(String,String)
+ Criteria andClaimStatusNotBetween(String,String)
+ Criteria andInsurancePaymentStatusIsNull()
+ Criteria andInsurancePaymentStatusIsNotNull()
+ Criteria andInsurancePaymentStatusEqualTo(String)
+ Criteria andInsurancePaymentStatusNotEqualTo(String)
+ Criteria andInsurancePaymentStatusGreaterThan(String)
+ Criteria andInsurancePaymentStatusGreaterThanOrEqualTo(String)
+ Criteria andInsurancePaymentStatusLessThan(String)
+ Criteria andInsurancePaymentStatusLessThanOrEqualTo(String)
+ Criteria andInsurancePaymentStatusLike(String)
+ Criteria andInsurancePaymentStatusNotLike(String)
+ Criteria andInsurancePaymentStatusIn(List<String>)
+ Criteria andInsurancePaymentStatusNotIn(List<String>)
+ Criteria andInsurancePaymentStatusBetween(String,String)
+ Criteria andInsurancePaymentStatusNotBetween(String,String)
+ Criteria andPaymentAmountIsNull()
+ Criteria andPaymentAmountIsNotNull()
+ Criteria andPaymentAmountEqualTo(Long)
+ Criteria andPaymentAmountNotEqualTo(Long)
+ Criteria andPaymentAmountGreaterThan(Long)
+ Criteria andPaymentAmountGreaterThanOrEqualTo(Long)
+ Criteria andPaymentAmountLessThan(Long)
+ Criteria andPaymentAmountLessThanOrEqualTo(Long)
+ Criteria andPaymentAmountIn(List<Long>)
+ Criteria andPaymentAmountNotIn(List<Long>)
+ Criteria andPaymentAmountBetween(Long,Long)
+ Criteria andPaymentAmountNotBetween(Long,Long)
+ Criteria andRelationIsNull()
+ Criteria andRelationIsNotNull()
+ Criteria andRelationEqualTo(String)
+ Criteria andRelationNotEqualTo(String)
+ Criteria andRelationGreaterThan(String)
+ Criteria andRelationGreaterThanOrEqualTo(String)
+ Criteria andRelationLessThan(String)
+ Criteria andRelationLessThanOrEqualTo(String)
+ Criteria andRelationLike(String)
+ Criteria andRelationNotLike(String)
+ Criteria andRelationIn(List<String>)
+ Criteria andRelationNotIn(List<String>)
+ Criteria andRelationBetween(String,String)
+ Criteria andRelationNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.loan.finance.model.InsuranceDetailExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.loan.finance.model.InsuranceDetailExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.loan.finance.test.credit.UnFreezeTest {
+ {static} void main(String[])
}
class com.welab.loan.finance.service.core.BaseFinanceRefundService {
- FinanceRefundMapper financeRefundMapper
+ int insertSelective(FinanceRefund)
+ long countByDateStr(String)
}
class com.welab.loan.finance.job.uvf.UvfFtpLoaderJob {
- UvfFileLoader uvfFileLoader
+ void execute(ShardingContext)
}
class com.welab.loan.finance.app.impl.AdvanceRepaymentImpl {
- AdvanceRepaymentConfirmCmdExe advanceRepaymentConfirmCmdExe
- AdvanceRepaymentQryExe advanceRepaymentQryExe
- AdvanceRepaymentEnableCmdExe advanceRepaymentEnableCmdExe
- BaseAdvanceMsgListService baseAdvanceMsgListService
+ Response<Object> advanceConfirm(AdvanceRepaymentInitiateCmd)
+ Response<Object> startAdvanceRepayment(AdvanceRepaymentStartCmd)
+ Response<Map<Long,Long>> getAdvanceMsgIds(AdvanceRepaymentQry)
+ Response<AdvanceRepaymentDTO> queryAdvanceRepaymentInfo(AdvanceRepaymentQry)
+ Response<Boolean> getAdvancedEnableStatus(AdvanceRepaymentQry)
+ Response<AdvanceRepaymentDTO> lastRecordByLoanNumber(AdvanceRepaymentQry)
}
class com.welab.loan.finance.service.other.CustomerService {
- ApplicationService applicationService
- BaseUserBankCardService baseUserBankCardService
- DocumentService documentService
- UserProfilesService userProfilesService
- IUserProfilesDubboService iUserProfilesDubboService
- BaseLoanService baseLoanService
- BaseDuesService baseDuesService
- BaseLoanDetailService baseLoanDetailService
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- TbServiceFacade tbServiceFacade
- String tbPartnerList
+ CustomerBeanVo findUserInfoByUserId(Long)
+ PageInfo<CustomerInfoVo> findUserInfoByPage(QueryUserProfilesDTOExt)
+ PageInfo<TbUserCreditInfoVO> findTbUserInfoByPage(TbQueryUserDTO)
+ List<String> tbPartnerList()
}
class com.welab.loan.finance.facade.approval.ApprovalFacade {
- WefendInfoService wefendInfoService
+ String getWedefendScore(String)
}
class com.welab.loan.finance.app.manager.UvfDocManager {
- BaseUvfDocService baseUvfDocService
- DocumentServiceFacade documentServiceFacade
+ void download(String,HttpServletResponse)
- void outputStream(HttpServletResponse,String,InputStream)
}
class com.welab.loan.finance.rabbitmq.LoanStatusConsumer {
- BaseLoanService baseLoanService
- BaseDuesService baseDuesService
- BaseLoanCodeService baseLoanCodeService
- BaseFinanceLendService lendService
+ void onMessage(Message)
}
class com.welab.loan.finance.service.other.LoanStatusNoticService {
- String queue
- BaseRabbitTemplate baseRabbitTemplate
+ void send(LoanStatusNoticDTO)
}
class com.welab.loan.finance.test.merchant.MerchantTest {
- MerchantTradingServiceImpl merchantTradingService
+ void testExport()
+ void testA()
}
class com.welab.loan.finance.utils.excel.ExcelSheet {
- String sheetName
- Map<String,String> headers
- Collection<T> dataset
+ String getSheetName()
+ void setSheetName(String)
+ Map<String,String> getHeaders()
+ void setHeaders(Map<String,String>)
+ Collection<T> getDataset()
+ void setDataset(Collection<T>)
}
class com.welab.loan.finance.dto.paylater.CalServiceFeeRspDTO {
- BigDecimal totalFee
- BigDecimal totalRate
}
enum com.welab.loan.finance.enums.TransTypeEnum {
+  PAYTRANS
+  ACCOUNTTRANS
+  REPAYMENTTRANS
- String value
- String name
- String enName
- <<Create>> TransTypeEnum(String,String,String)
+ String getValue()
+ String getName()
+ String getEnName()
+ boolean check(String)
+ {static} List getStatusList(boolean)
}
class com.welab.loan.finance.test.refund.refundTest {
- FinanceRepaymentTrackExtMapper financeRepaymentTrackExtMapper
- TrackService trackService
+ void testRefund()
+ void testTrack()
+ void sumPayAmountByTransId()
}
class com.welab.loan.finance.core.dto.dues.LoanProperty {
- BigDecimal amount
- boolean isLong
- int tenor
- int dayOrMonth
- boolean isHead
}
enum com.welab.loan.finance.enums.PlansRelationStatusEnum {
+  INIT
+  SIGN
+  USED
+  EXPIRED
+  CANCELED
- byte val
- String enDesc
- String desc
}


com.welab.loan.finance.app.command.tb.dues.costreq.CostReqBuilder <|.. com.welab.loan.finance.app.command.tb.dues.costreq.impl.TravelokaPayLaterCostReqBuilder
com.welab.loan.finance.dto.cmd.tb.BaseTbUserAccountTransCmd <|-- com.welab.loan.finance.dto.cmd.tb.FrozenTbUserAccountCmd
com.welab.loan.finance.model.DuesExample +.. com.welab.loan.finance.model.DuesExample$GeneratedCriteria
com.welab.loan.finance.model.DuesExample +.. com.welab.loan.finance.model.DuesExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.DuesExample$Criteria
com.welab.loan.finance.model.DuesExample +.. com.welab.loan.finance.model.DuesExample$Criterion
com.welab.loan.finance.service.CreditUserTagService <|.. com.welab.loan.finance.service.credit.CreditUserTagServiceImpl
com.welab.sea.util.dto.Query <|-- com.welab.loan.finance.dto.qry.AdvanceRepaymentQry
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.LoanOffLineSignJob
com.welab.loan.finance.job.base.AbstractExcelEmailJob <|-- com.welab.loan.finance.job.LoanOffLineSignJob
org.springframework.test.context.junit4.AbstractJUnit4SpringContextTests <|-- com.welab.loan.finance.test.SpringTest
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.paybills.PayBillsTest
com.welab.loan.finance.common.FinanceMqConstans +.. com.welab.loan.finance.common.FinanceMqConstans$exchange
com.welab.loan.finance.common.FinanceMqConstans +.. com.welab.loan.finance.common.FinanceMqConstans$queue
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.AstrapayJob
com.welab.loan.finance.model.BusinessCalendarsExample +.. com.welab.loan.finance.model.BusinessCalendarsExample$GeneratedCriteria
com.welab.loan.finance.model.BusinessCalendarsExample +.. com.welab.loan.finance.model.BusinessCalendarsExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.BusinessCalendarsExample$Criteria
com.welab.loan.finance.model.BusinessCalendarsExample +.. com.welab.loan.finance.model.BusinessCalendarsExample$Criterion
com.welab.loan.finance.dto.loan.BaseDto <|-- com.welab.loan.finance.dto.config.FinanceConfigDto
com.welab.loan.finance.vo.DuesExtVo <|-- com.welab.loan.finance.dto.paylater.DuesExtDTO
com.welab.loan.finance.model.UvfFileRepaymentExample +.. com.welab.loan.finance.model.UvfFileRepaymentExample$GeneratedCriteria
com.welab.loan.finance.model.UvfFileRepaymentExample +.. com.welab.loan.finance.model.UvfFileRepaymentExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.UvfFileRepaymentExample$Criteria
com.welab.loan.finance.model.UvfFileRepaymentExample +.. com.welab.loan.finance.model.UvfFileRepaymentExample$Criterion
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.CessieLoanCloseReqDTO
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.LoanListExportJob
com.welab.loan.finance.job.base.AbstractEmailJob <|-- com.welab.loan.finance.job.LoanListExportJob
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.dues.DuesAndRepayImportTest
com.welab.loan.finance.job.base.AbstractEmailJob <|-- com.welab.loan.finance.job.base.AbstractExcelEmailJob
com.welab.loan.finance.service.business.lend.AbstractLendService <|-- com.welab.loan.finance.service.business.lend.fifuvf.FifUvfLendServiceImpl
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.ApplyFPlanCmd
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.app.manager.DuesVATFeeMergeManagerTest
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.bca.BcaTransferSyncJob
java.io.Serializable <|.. com.welab.loan.finance.dto.TbCreditUserAccountDTO
com.yomahub.liteflow.core.NodeComponent <|-- com.welab.loan.finance.app.service.flow.AbstractFlowComponent
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.LoanDayExtVo
com.welab.loan.finance.app.command.tb.lend.lend.impl.TrioFinanceLendBuilder <|-- com.welab.loan.finance.app.command.tb.lend.lend.impl.SmpFinanceLendBuilder
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.RepaymentServiceTest
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.UvfRepaymentDto
com.welab.loan.finance.app.command.tb.lend.lend.impl.TrioFinanceLendBuilder <|-- com.welab.loan.finance.app.command.tb.lend.lend.impl.DayaFinanceLendBuilder
com.welab.loan.finance.service.InsuranceDetailDubboService <|.. com.welab.loan.finance.service.impl.InsuranceDetailDubboServiceImpl
com.welab.sea.util.dto.PageQuery <|-- com.welab.loan.finance.dto.qry.TbLoanQry
java.io.Serializable <|.. com.welab.loan.finance.response.PageBean
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.UvfLoanDto
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.dues.DuesManagerTest
com.welab.loan.finance.app.service.flow.AbstractFlowComponent <|-- com.welab.loan.finance.app.service.flow.repaymentback.VaAmountBackCompont
com.welab.application.vo.ProductRateConfigVO <|-- com.welab.loan.finance.vo.FinanceProductRateConfigVO
java.io.Serializable <|.. com.welab.loan.finance.dto.paylater.PayLaterLoanReqDTO
java.io.Serializable <|.. com.welab.loan.finance.vo.CalculationTagAmountVO
com.welab.common.msg.BaseMessageBody <|-- com.welab.loan.finance.vo.RepayTrackVo
com.welab.loan.finance.core.account.IAccountService <|.. com.welab.loan.finance.core.account.AccountServiceImpl
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.dto.cmd.tb.TbLendCallbackCmd
java.io.Serializable <|.. com.welab.loan.finance.vo.LoanTimeoutConfigVo
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.AdvanceRepaymentStartCmd
com.welab.loan.finance.provider.ServiceProvider <|-- com.welab.loan.finance.app.command.tb.lend.transfer.TbTransferServiceProvider
com.welab.loan.finance.core.mq.MqConstants +.. com.welab.loan.finance.core.mq.MqConstants$queue
com.welab.loan.finance.core.mq.MqConstants +.. com.welab.loan.finance.core.mq.MqConstants$exchange
com.welab.sea.util.bean.PageRequestDTO <|-- com.welab.loan.finance.vo.credit.CreditActivityAbTestRequestVo
com.welab.loan.finance.model.FinanceLendExample +.. com.welab.loan.finance.model.FinanceLendExample$GeneratedCriteria
com.welab.loan.finance.model.FinanceLendExample +.. com.welab.loan.finance.model.FinanceLendExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FinanceLendExample$Criteria
com.welab.loan.finance.model.FinanceLendExample +.. com.welab.loan.finance.model.FinanceLendExample$Criterion
com.welab.loan.finance.provider.ServiceKey <|-- com.welab.loan.finance.app.command.tb.dues.costreq.CostReqBuilder
com.welab.loan.finance.response.Serializable <|.. com.welab.loan.finance.response.CalculatorAmountVo
com.welab.loan.finance.app.service.flow.AbstractFlowComponent <|-- com.welab.loan.finance.app.service.flow.repaymentback.CreditUserAccountBackCompont
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.dto.LoanPlansContractDTO
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.vo.response.NsRepaymentVO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.eplan.EplanTest
com.welab.loan.finance.model.AbnormalRepaymentRecordExample +.. com.welab.loan.finance.model.AbnormalRepaymentRecordExample$GeneratedCriteria
com.welab.loan.finance.model.AbnormalRepaymentRecordExample +.. com.welab.loan.finance.model.AbnormalRepaymentRecordExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.AbnormalRepaymentRecordExample$Criteria
com.welab.loan.finance.model.AbnormalRepaymentRecordExample +.. com.welab.loan.finance.model.AbnormalRepaymentRecordExample$Criterion
com.welab.loan.finance.model.TbLendBatchExample +.. com.welab.loan.finance.model.TbLendBatchExample$GeneratedCriteria
com.welab.loan.finance.model.TbLendBatchExample +.. com.welab.loan.finance.model.TbLendBatchExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.TbLendBatchExample$Criteria
com.welab.loan.finance.model.TbLendBatchExample +.. com.welab.loan.finance.model.TbLendBatchExample$Criterion
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.FundBackDto
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.vat.VatDuesInitTest
java.io.Serializable <|.. com.welab.loan.finance.dto.qry.TackDetailForRefundQry
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.insurance.InsuranceTest
java.io.Serializable <|.. com.welab.loan.finance.dto.plan.CalEPlanAmountDTO
com.welab.loan.finance.service.DuesService <|.. com.welab.loan.finance.service.impl.DuesServiceImpl
com.welab.loan.finance.model.FlowTaskExample +.. com.welab.loan.finance.model.FlowTaskExample$GeneratedCriteria
com.welab.loan.finance.model.FlowTaskExample +.. com.welab.loan.finance.model.FlowTaskExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FlowTaskExample$Criteria
com.welab.loan.finance.model.FlowTaskExample +.. com.welab.loan.finance.model.FlowTaskExample$Criterion
com.welab.loan.finance.app.command.tb.lend.lend.TbFinanceLendBuilder <|.. com.welab.loan.finance.app.command.tb.lend.lend.impl.TravelokaPaylaterFinanceLendBuilder
com.welab.loan.finance.service.dues.IDuesService <|.. com.welab.loan.finance.app.impl.dues.DuesServiceImpl
com.welab.sea.util.dto.PageQuery <|-- com.welab.loan.finance.dto.cmd.tb.HsoLoanQry
java.io.Serializable <|.. com.welab.loan.finance.vo.LoanStateVO
com.welab.loan.finance.model.UvfFileLoanExample +.. com.welab.loan.finance.model.UvfFileLoanExample$GeneratedCriteria
com.welab.loan.finance.model.UvfFileLoanExample +.. com.welab.loan.finance.model.UvfFileLoanExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.UvfFileLoanExample$Criteria
com.welab.loan.finance.model.UvfFileLoanExample +.. com.welab.loan.finance.model.UvfFileLoanExample$Criterion
com.welab.loan.finance.app.service.flow.AbstractFlowComponent <|-- com.welab.loan.finance.app.service.flow.repaymentback.LoanStateBackCompont
com.welab.loan.finance.provider.ServiceProvider <|-- com.welab.loan.finance.app.command.tb.dues.costreq.CostReqBuilderServiceProvider
java.io.Serializable <|.. com.welab.loan.finance.dto.CreditUserTagConfigDTO
com.welab.loan.finance.app.service.flow.AbstractFlowComponent <|-- com.welab.loan.finance.app.service.flow.repaymentback.tb.TbLoanStateBackCompont
java.io.Serializable <|.. com.welab.loan.finance.dto.TbImportResDTO
com.welab.loan.finance.app.service.flow.AbstractFlowComponent <|-- com.welab.loan.finance.app.service.flow.repaymentback.UserRepaymentConfigBackCompont
com.welab.loan.finance.model.mongo.Doc <|-- com.welab.loan.finance.model.mongo.HsoTbLoanDoc
com.welab.loan.finance.service.business.PlanEmailBusiService +.. com.welab.loan.finance.service.business.PlanEmailBusiService$ConcatDueInfo
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.LoanServiceTest
java.io.Serializable <|.. com.welab.loan.finance.vo.PageVO
com.welab.loan.finance.provider.ServiceProvider <|-- com.welab.loan.finance.app.command.tb.lend.lend.TbFinanceLendBuilderProvider
com.welab.loan.finance.service.business.loaninfo.ILoanInfoService <|.. com.welab.loan.finance.service.business.loaninfo.AbstractLoanInfoService
com.welab.loan.finance.core.dues.AbstractCostService <|-- com.welab.loan.finance.core.dues.impl.EplanCostService
com.welab.loan.finance.service.business.event.ICallbackEvent <|.. com.welab.loan.finance.service.business.event.CallbackEventImpl
com.welab.sea.util.mq.api.MqMetaInfoRegistry <|.. com.welab.loan.finance.config.MqMetaInfoRegistryImpl
com.welab.loan.finance.model.CreditUserAccountExample +.. com.welab.loan.finance.model.CreditUserAccountExample$GeneratedCriteria
com.welab.loan.finance.model.CreditUserAccountExample +.. com.welab.loan.finance.model.CreditUserAccountExample$Criterion
com.welab.loan.finance.model.CreditUserAccountExample +.. com.welab.loan.finance.model.CreditUserAccountExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditUserAccountExample$Criteria
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.PlanDuesAmountDTO
com.welab.sea.util.dto.PageQuery <|-- com.welab.loan.finance.dto.qry.CollectionUserListQry
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.report.LoanOverdueInfoServiceImplTest
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.LoanTransactionJob
com.welab.loan.finance.model.CreditAccountTrackHistoryExample +.. com.welab.loan.finance.model.CreditAccountTrackHistoryExample$GeneratedCriteria
com.welab.loan.finance.model.CreditAccountTrackHistoryExample +.. com.welab.loan.finance.model.CreditAccountTrackHistoryExample$Criterion
com.welab.loan.finance.model.CreditAccountTrackHistoryExample +.. com.welab.loan.finance.model.CreditAccountTrackHistoryExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditAccountTrackHistoryExample$Criteria
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.CustomRangeDTO
com.welab.loan.finance.model.CreditUserTagLogExample +.. com.welab.loan.finance.model.CreditUserTagLogExample$GeneratedCriteria
com.welab.loan.finance.model.CreditUserTagLogExample +.. com.welab.loan.finance.model.CreditUserTagLogExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditUserTagLogExample$Criteria
com.welab.loan.finance.model.CreditUserTagLogExample +.. com.welab.loan.finance.model.CreditUserTagLogExample$Criterion
com.welab.loan.finance.service.business.lend.IService <|-- com.welab.loan.finance.service.business.lend.IRecoveryService
com.welab.loan.finance.model.UvfFileTaskExample +.. com.welab.loan.finance.model.UvfFileTaskExample$GeneratedCriteria
com.welab.loan.finance.model.UvfFileTaskExample +.. com.welab.loan.finance.model.UvfFileTaskExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.UvfFileTaskExample$Criteria
com.welab.loan.finance.model.UvfFileTaskExample +.. com.welab.loan.finance.model.UvfFileTaskExample$Criterion
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.PtpNotifyJob
com.welab.loan.finance.dto.loan.BaseDto <|-- com.welab.loan.finance.dto.loan.LoanMqDto
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.FifUvfExcelVo
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.CancelApplyCreditVO
com.welab.loan.finance.service.business.rebook.RebookAmountService +.. com.welab.loan.finance.service.business.rebook.RebookAmountService$RebookReceivedAmountVo
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.DuesReqDto
java.io.Serializable <|.. com.welab.loan.finance.dto.cmd.tb.HsoLoanImportCmd
com.welab.loan.finance.model.CreditUserAccountChild <|-- com.welab.loan.finance.model.ext.CreditUserAccountChildExt
java.io.Serializable <|.. com.welab.loan.finance.dto.cmd.tb.TravelokaLoanImportCmd
com.welab.loan.finance.model.LendReversalRepaymentExample +.. com.welab.loan.finance.model.LendReversalRepaymentExample$GeneratedCriteria
com.welab.loan.finance.model.LendReversalRepaymentExample +.. com.welab.loan.finance.model.LendReversalRepaymentExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LendReversalRepaymentExample$Criteria
com.welab.loan.finance.model.LendReversalRepaymentExample +.. com.welab.loan.finance.model.LendReversalRepaymentExample$Criterion
com.welab.loan.finance.service.repayment.RepaymentTrackService <|.. com.welab.loan.finance.app.impl.repayment.RepaymentTrackServiceImpl
com.welab.loan.finance.model.FinanceUserAccountDetailExample +.. com.welab.loan.finance.model.FinanceUserAccountDetailExample$GeneratedCriteria
com.welab.loan.finance.model.FinanceUserAccountDetailExample +.. com.welab.loan.finance.model.FinanceUserAccountDetailExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FinanceUserAccountDetailExample$Criteria
com.welab.loan.finance.model.FinanceUserAccountDetailExample +.. com.welab.loan.finance.model.FinanceUserAccountDetailExample$Criterion
com.welab.loan.finance.model.LoanUvfRepayment <|-- com.welab.loan.finance.model.ext.LoanUvfRepaymentExt
java.io.Serializable <|.. com.welab.loan.finance.vo.OverdueAmountDetailVO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.ns.NsQueryServiceTest
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.RepayInfoDto
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.repay.RepayTest
com.welab.loan.finance.utils.StringUtils <|-- com.welab.loan.finance.utils.StringUtils
com.welab.loan.finance.service.ITbLoanQueryService <|.. com.welab.loan.finance.app.impl.TbLoanCountQueryServiceImpl
com.welab.loan.finance.model.LoanDetailExtendExample +.. com.welab.loan.finance.model.LoanDetailExtendExample$GeneratedCriteria
com.welab.loan.finance.model.LoanDetailExtendExample +.. com.welab.loan.finance.model.LoanDetailExtendExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanDetailExtendExample$Criteria
com.welab.loan.finance.model.LoanDetailExtendExample +.. com.welab.loan.finance.model.LoanDetailExtendExample$Criterion
com.welab.loan.finance.model.LendReversalExample +.. com.welab.loan.finance.model.LendReversalExample$GeneratedCriteria
com.welab.loan.finance.model.LendReversalExample +.. com.welab.loan.finance.model.LendReversalExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LendReversalExample$Criteria
com.welab.loan.finance.model.LendReversalExample +.. com.welab.loan.finance.model.LendReversalExample$Criterion
com.welab.loan.finance.model.UvfFileContractExample +.. com.welab.loan.finance.model.UvfFileContractExample$GeneratedCriteria
com.welab.loan.finance.model.UvfFileContractExample +.. com.welab.loan.finance.model.UvfFileContractExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.UvfFileContractExample$Criteria
com.welab.loan.finance.model.UvfFileContractExample +.. com.welab.loan.finance.model.UvfFileContractExample$Criterion
com.welab.fund.dto.FundAccountInfoDTO <|-- com.welab.loan.finance.vo.response.FundAccountInfoVO
com.welab.loan.finance.model.LoanUvfDetailExample +.. com.welab.loan.finance.model.LoanUvfDetailExample$GeneratedCriteria
com.welab.loan.finance.model.LoanUvfDetailExample +.. com.welab.loan.finance.model.LoanUvfDetailExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanUvfDetailExample$Criteria
com.welab.loan.finance.model.LoanUvfDetailExample +.. com.welab.loan.finance.model.LoanUvfDetailExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.vo.RepaymentVO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.LoanWarrantyTest
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.UserBankCardDto
com.welab.loan.finance.model.BcaTransferExample +.. com.welab.loan.finance.model.BcaTransferExample$GeneratedCriteria
com.welab.loan.finance.model.BcaTransferExample +.. com.welab.loan.finance.model.BcaTransferExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.BcaTransferExample$Criteria
com.welab.loan.finance.model.BcaTransferExample +.. com.welab.loan.finance.model.BcaTransferExample$Criterion
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.TryRepayCPlanCmd
java.io.Serializable <|.. com.welab.loan.finance.dto.loan.BaseDto
com.welab.loan.finance.core.dues.AbstractCostService <|-- com.welab.loan.finance.core.dues.impl.MostCostService
com.welab.loan.finance.mapper.CreditActivityAbTestGroupUserRelationMapper <|-- com.welab.loan.finance.mapper.ext.CreditActivityAbTestGroupUserRelationExtMapper
java.io.Serializable <|.. com.welab.loan.finance.vo.LoanDetailExtVO
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.TryCouponInfoCmd
com.welab.loan.finance.app.service.flow.AbstractFlowComponent <|-- com.welab.loan.finance.app.service.flow.repaymentback.DuesBackCompont
java.io.Serializable <|.. com.welab.loan.finance.dto.CouponLoansAbleDTO
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.MaumodalOverduePushJob
com.welab.loan.finance.job.base.AbstractEmailJob <|-- com.welab.loan.finance.job.MaumodalOverduePushJob
com.welab.loan.finance.model.CreditActivityAbTestGroupUserRelation <|-- com.welab.loan.finance.model.ext.CreditActivityAbTestGroupUserRelationExt
com.welab.loan.finance.service.business.lend.IService <|-- com.welab.loan.finance.service.business.lend.ILendService
java.io.Serializable <|.. com.welab.loan.finance.response.AstraPayInfoDueVo
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.TappJob
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.OverdueQueryDto
com.welab.loan.finance.provider.ServiceProvider <|-- com.welab.loan.finance.app.command.tb.order.process.TbInvoicePostProcessServiceProvider
com.welab.loan.finance.model.LoanApplyPlans <|-- com.welab.loan.finance.model.ext.LoanApplyPlansExt
com.welab.loan.finance.response.Serializable <|.. com.welab.loan.finance.response.SeaDues
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.repair.RepairTest
com.welab.loan.finance.model.BankConfigExample +.. com.welab.loan.finance.model.BankConfigExample$GeneratedCriteria
com.welab.loan.finance.model.BankConfigExample +.. com.welab.loan.finance.model.BankConfigExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.BankConfigExample$Criteria
com.welab.loan.finance.model.BankConfigExample +.. com.welab.loan.finance.model.BankConfigExample$Criterion
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.AlfamartJob
java.io.Serializable <|.. com.welab.loan.finance.vo.OverdueVO
java.io.Serializable <|.. com.welab.loan.finance.dto.InsuranceDetailDTO
java.io.Serializable <|.. com.welab.loan.finance.dto.UpdateLabelDto
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.RepayDuesRspDTO
com.welab.loan.finance.response.Serializable <|.. com.welab.loan.finance.response.CalculatorItemVo
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.LoanInfoDTO
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.SignDTO
com.welab.loan.finance.model.CreditUserTagRuleDelayTriggerExample +.. com.welab.loan.finance.model.CreditUserTagRuleDelayTriggerExample$GeneratedCriteria
com.welab.loan.finance.model.CreditUserTagRuleDelayTriggerExample +.. com.welab.loan.finance.model.CreditUserTagRuleDelayTriggerExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditUserTagRuleDelayTriggerExample$Criteria
com.welab.loan.finance.model.CreditUserTagRuleDelayTriggerExample +.. com.welab.loan.finance.model.CreditUserTagRuleDelayTriggerExample$Criterion
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.bca.BcaTransferJob
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.LendStaticExtVo
com.welab.loan.finance.model.mongo.Doc <|-- com.welab.loan.finance.model.mongo.tbuser.TbUserDoc
com.welab.loan.finance.mapper.CreditLoanCancelMapper <|-- com.welab.loan.finance.mapper.ext.CreditLoanCancelExtMapper
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.BaseFinanceLendServiceTest
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.LendReversalPaymentUpdateJob
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.dto.AdvanceRepaymentDTO
java.io.Serializable <|.. com.welab.loan.finance.vo.ListDueRepayImportUpdateRecordVO
com.welab.loan.finance.model.FinanceRefundDetailExample +.. com.welab.loan.finance.model.FinanceRefundDetailExample$GeneratedCriteria
com.welab.loan.finance.model.FinanceRefundDetailExample +.. com.welab.loan.finance.model.FinanceRefundDetailExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FinanceRefundDetailExample$Criteria
com.welab.loan.finance.model.FinanceRefundDetailExample +.. com.welab.loan.finance.model.FinanceRefundDetailExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.vo.rebook.RebookCheckVO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.template.RepaymentTest
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.LoanDuesSynJob
java.io.Serializable <|.. com.welab.loan.finance.dto.UfiByTagDTO
java.io.Serializable <|.. com.welab.loan.finance.dto.plan.TryEPlanDTO
com.welab.loan.finance.model.BigFieldParamExample +.. com.welab.loan.finance.model.BigFieldParamExample$GeneratedCriteria
com.welab.loan.finance.model.BigFieldParamExample +.. com.welab.loan.finance.model.BigFieldParamExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.BigFieldParamExample$Criteria
com.welab.loan.finance.model.BigFieldParamExample +.. com.welab.loan.finance.model.BigFieldParamExample$Criterion
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.RestoreCreditVO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.DueTest
com.welab.loan.finance.model.CreditActivityAbTestGroupLoanRelationExample +.. com.welab.loan.finance.model.CreditActivityAbTestGroupLoanRelationExample$GeneratedCriteria
com.welab.loan.finance.model.CreditActivityAbTestGroupLoanRelationExample +.. com.welab.loan.finance.model.CreditActivityAbTestGroupLoanRelationExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditActivityAbTestGroupLoanRelationExample$Criteria
com.welab.loan.finance.model.CreditActivityAbTestGroupLoanRelationExample +.. com.welab.loan.finance.model.CreditActivityAbTestGroupLoanRelationExample$Criterion
com.welab.sea.util.dto.PageQuery <|-- com.welab.loan.finance.vo.CreditReLoanQryVO
java.io.Serializable <|.. com.welab.loan.finance.vo.CollectionProgramVO
com.welab.loan.finance.model.ReportDetailContractExample +.. com.welab.loan.finance.model.ReportDetailContractExample$GeneratedCriteria
com.welab.loan.finance.model.ReportDetailContractExample +.. com.welab.loan.finance.model.ReportDetailContractExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.ReportDetailContractExample$Criteria
com.welab.loan.finance.model.ReportDetailContractExample +.. com.welab.loan.finance.model.ReportDetailContractExample$Criterion
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.ApplyCPlanCmd
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.dues.DuesTest
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.CashLoanLendReversalJob
com.welab.loan.finance.job.AbstractLendReversalJob <|-- com.welab.loan.finance.job.CashLoanLendReversalJob
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.DelayLendJob
java.io.Serializable <|.. com.welab.loan.finance.vo.repayment.DuesAndRepaymentOperateVO
com.welab.loan.finance.app.command.tb.lend.transfer.TbTransferService <|.. com.welab.loan.finance.app.command.tb.lend.transfer.impl.TbDefaultTransferService
java.io.Serializable <|.. com.welab.loan.finance.dto.DueSimpleDTO
java.io.Serializable <|.. com.welab.loan.finance.dto.FPlansContractDTO
com.welab.loan.finance.mapper.PayBillsMapper <|-- com.welab.loan.finance.mapper.ext.PayBillsExtMapper
com.welab.loan.finance.dto.cmd.tb.BaseTbUserAccountTransCmd <|-- com.welab.loan.finance.dto.cmd.tb.RestoreTbUserAccountCmd
com.welab.loan.finance.app.command.tb.lend.transfer.TbTransferService <|.. com.welab.loan.finance.app.command.tb.lend.transfer.impl.RestockTransferService
com.welab.loan.finance.core.dues.AbstractCostService <|-- com.welab.loan.finance.core.dues.impl.MaumodalCostService
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.dto.qry.MerchantTradingQry
java.io.Serializable <|.. com.welab.loan.finance.response.CPlanTryCalculationListVO
java.io.Serializable <|.. com.welab.loan.finance.response.dues.CalDuesFeeVO
com.welab.loan.finance.model.ToBAgreementDocExample +.. com.welab.loan.finance.model.ToBAgreementDocExample$GeneratedCriteria
com.welab.loan.finance.model.ToBAgreementDocExample +.. com.welab.loan.finance.model.ToBAgreementDocExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.ToBAgreementDocExample$Criteria
com.welab.loan.finance.model.ToBAgreementDocExample +.. com.welab.loan.finance.model.ToBAgreementDocExample$Criterion
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.CheckCustomDto
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.ProductDtoExt
com.welab.loan.finance.app.service.tb.TbUserService +.. com.welab.loan.finance.app.service.tb.TbUserService$TbUserDetail
com.welab.loan.finance.app.service.tb.TbUser <|-- com.welab.loan.finance.app.service.tb.TbUserService$TbUserDetail
java.io.Serializable <|.. com.welab.loan.finance.vo.LoanPlanTypeCountVo
com.welab.loan.finance.model.LoanUvfTradeExample +.. com.welab.loan.finance.model.LoanUvfTradeExample$GeneratedCriteria
com.welab.loan.finance.model.LoanUvfTradeExample +.. com.welab.loan.finance.model.LoanUvfTradeExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanUvfTradeExample$Criteria
com.welab.loan.finance.model.LoanUvfTradeExample +.. com.welab.loan.finance.model.LoanUvfTradeExample$Criterion
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.over.OverDues
com.welab.loan.finance.dto.paylater.Serializable <|.. com.welab.loan.finance.dto.paylater.CreditHistoryLoanRspDTO
java.io.Serializable <|.. com.welab.loan.finance.dto.MultipleRepaymenDTO
java.io.Serializable <|.. com.welab.loan.finance.response.CPlanTryCalculationVO
com.welab.loan.finance.model.CreditActivityAbTestGroupExample +.. com.welab.loan.finance.model.CreditActivityAbTestGroupExample$GeneratedCriteria
com.welab.loan.finance.model.CreditActivityAbTestGroupExample +.. com.welab.loan.finance.model.CreditActivityAbTestGroupExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditActivityAbTestGroupExample$Criteria
com.welab.loan.finance.model.CreditActivityAbTestGroupExample +.. com.welab.loan.finance.model.CreditActivityAbTestGroupExample$Criterion
com.welab.loan.finance.model.LoanCouponExample +.. com.welab.loan.finance.model.LoanCouponExample$GeneratedCriteria
com.welab.loan.finance.model.LoanCouponExample +.. com.welab.loan.finance.model.LoanCouponExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanCouponExample$Criteria
com.welab.loan.finance.model.LoanCouponExample +.. com.welab.loan.finance.model.LoanCouponExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.dto.InvoiceImportResultDTO
com.welab.loan.finance.vo.TbLoanVO <|-- com.welab.loan.finance.vo.TravelokaLoanVO
com.welab.loan.finance.model.CreditUserTagRuleExample +.. com.welab.loan.finance.model.CreditUserTagRuleExample$GeneratedCriteria
com.welab.loan.finance.model.CreditUserTagRuleExample +.. com.welab.loan.finance.model.CreditUserTagRuleExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditUserTagRuleExample$Criteria
com.welab.loan.finance.model.CreditUserTagRuleExample +.. com.welab.loan.finance.model.CreditUserTagRuleExample$Criterion
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.ClearDownLoadJob
com.welab.loan.finance.calculator.IDueCalculator <|.. com.welab.loan.finance.calculator.FixedDateCalculatorV1
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.QuickUseCreditVO
java.io.Serializable <|.. com.welab.loan.finance.dto.SignConfigDto
com.welab.loan.finance.dto.qry.MerchantLoanQry <|-- com.welab.loan.finance.dto.cmd.ExportMerchantLoanCmd
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.LoanPlansRelationDTO
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$NS
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$Flexifit
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$Applications
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$Finances
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$Product
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$Overdue
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$Fund
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$GatewayTask
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$RepayChannel
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$TKB
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$FifUvf
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$LoanWarranty
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$Recharge
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$Contract
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$SkaChannel
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$TestCenter
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$PayLater
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$CreditTag
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$Tb
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$CreditReLoan
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$Hso
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$Loans_V3
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$CreditCancel
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$DuesAndRepayImportUpdate
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$CreditActivityAbTestURL
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$Traveloka
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$InsuranceRecordUrl
com.welab.loan.finance.common.Urls +.. com.welab.loan.finance.common.Urls$PayBillsUrl
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.PayTest
java.io.Serializable <|.. com.welab.loan.finance.dto.paylater.MerchantLoanDTO
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.DueIndexDTO
java.io.Serializable <|.. com.welab.loan.finance.dto.PageDto
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.CreditActivityAbTestJob
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.job.SendDisburseTaxEmailJobTest
com.welab.loan.finance.model.FinanceExportExample +.. com.welab.loan.finance.model.FinanceExportExample$GeneratedCriteria
com.welab.loan.finance.model.FinanceExportExample +.. com.welab.loan.finance.model.FinanceExportExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FinanceExportExample$Criteria
com.welab.loan.finance.model.FinanceExportExample +.. com.welab.loan.finance.model.FinanceExportExample$Criterion
com.welab.loan.finance.model.TbLoanExample +.. com.welab.loan.finance.model.TbLoanExample$GeneratedCriteria
com.welab.loan.finance.model.TbLoanExample +.. com.welab.loan.finance.model.TbLoanExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.TbLoanExample$Criteria
com.welab.loan.finance.model.TbLoanExample +.. com.welab.loan.finance.model.TbLoanExample$Criterion
com.welab.loan.finance.app.service.flow.AbstractFlowComponent <|-- com.welab.loan.finance.app.service.flow.repaymentback.RepaymentBackTagComponent
com.welab.loan.finance.model.LoanUserRepayExample +.. com.welab.loan.finance.model.LoanUserRepayExample$GeneratedCriteria
com.welab.loan.finance.model.LoanUserRepayExample +.. com.welab.loan.finance.model.LoanUserRepayExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanUserRepayExample$Criteria
com.welab.loan.finance.model.LoanUserRepayExample +.. com.welab.loan.finance.model.LoanUserRepayExample$Criterion
com.welab.loan.finance.model.mongo.tbuser.TbUserDoc <|-- com.welab.loan.finance.model.mongo.tbuser.RestockUserDoc
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.TransferLoanDto
com.welab.loan.finance.app.command.welcall.WelcomeCallLoansCmdExe +.. com.welab.loan.finance.app.command.welcall.WelcomeCallLoansCmdExe$WelCallQry
com.welab.loan.finance.model.LoanDuesLogExample +.. com.welab.loan.finance.model.LoanDuesLogExample$GeneratedCriteria
com.welab.loan.finance.model.LoanDuesLogExample +.. com.welab.loan.finance.model.LoanDuesLogExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanDuesLogExample$Criteria
com.welab.loan.finance.model.LoanDuesLogExample +.. com.welab.loan.finance.model.LoanDuesLogExample$Criterion
com.welab.loan.finance.service.TrackService <|.. com.welab.loan.finance.service.impl.TrackServiceImpl
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.BimaLendReversalJob
com.welab.loan.finance.job.CashLoanLendReversalJob <|-- com.welab.loan.finance.job.BimaLendReversalJob
com.welab.application.common.AppUtil <|-- com.welab.loan.finance.test.credit.ApplicationUtil
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.QueryRepossessRepaymentDto
com.welab.loan.finance.app.command.tb.order.process.TbInvoicePostProcessService <|.. com.welab.loan.finance.app.command.tb.order.process.impl.TravelokaPaylaterInvoicePostProcessService
com.welab.loan.finance.utils.ExcelUtil +.. com.welab.loan.finance.utils.ExcelUtil$ExcelListener
com.welab.loan.finance.utils.AnalysisEventListener <|-- com.welab.loan.finance.utils.ExcelUtil$ExcelListener
java.io.Serializable <|.. com.welab.loan.finance.dto.cmd.tb.DefaultLoanImportCmd
java.io.Serializable <|.. com.welab.loan.finance.response.Due
java.io.Serializable <|.. com.welab.loan.finance.vo.tb.HsoLoanVO
java.io.Serializable <|.. com.welab.loan.finance.dto.plan.EUnPayAmountDTO
com.welab.loan.finance.dto.paylater.Serializable <|.. com.welab.loan.finance.dto.paylater.CalServiceFeeReqDTO
java.io.Serializable <|.. com.welab.loan.finance.vo.ReportOverdueInfoVO
com.welab.sea.util.dto.PageQuery <|-- com.welab.loan.finance.dto.cmd.AbstractNsListQry
com.welab.loan.finance.model.Dues <|-- com.welab.loan.finance.model.ext.DuesExtItem
com.welab.loan.finance.model.LoanDelayExample +.. com.welab.loan.finance.model.LoanDelayExample$GeneratedCriteria
com.welab.loan.finance.model.LoanDelayExample +.. com.welab.loan.finance.model.LoanDelayExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanDelayExample$Criteria
com.welab.loan.finance.model.LoanDelayExample +.. com.welab.loan.finance.model.LoanDelayExample$Criterion
com.welab.loan.finance.service.LoanService <|.. com.welab.loan.finance.service.impl.LoanServiceImpl
com.welab.loan.finance.app.service.IServicekey <|.. com.welab.loan.finance.app.service.tb.AbstractTbLoanService
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.FinanceLendBackDto
java.io.Serializable <|.. com.welab.loan.finance.dto.QueryRemainingAmountDTO
com.welab.loan.finance.model.LoanDetail <|-- com.welab.loan.finance.model.ext.LoanDetailExt
com.welab.sea.util.dto.PageQuery <|-- com.welab.loan.finance.dto.qry.MerchantRepaymentQry
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.dto.TryRepayCPlanDTO
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.CreateOverdueJob
com.welab.loan.finance.core.loan.user.ILoanUserRepay <|.. com.welab.loan.finance.core.loan.user.LoanUserRepayImpl
java.io.Serializable <|.. com.welab.loan.finance.dto.tb.TbOverdueNotifyDTO
com.welab.loan.finance.app.service.credit.loan.AbstractCreditLoanService <|-- com.welab.loan.finance.app.service.credit.loan.ShortLoanService
com.welab.loan.finance.app.service.paybills.AbstractPayBillsService <|-- com.welab.loan.finance.app.service.paybills.BcaPayBillsService
com.welab.loan.finance.app.service.paybills.BcaPayBillsService +.. com.welab.loan.finance.app.service.paybills.BcaPayBillsService$BcaPayBillsContext
com.welab.loan.finance.app.service.paybills.PayBillsContext <|-- com.welab.loan.finance.app.service.paybills.BcaPayBillsService$BcaPayBillsContext
com.welab.loan.finance.model.LendReversalRepaymentDetailExample +.. com.welab.loan.finance.model.LendReversalRepaymentDetailExample$GeneratedCriteria
com.welab.loan.finance.model.LendReversalRepaymentDetailExample +.. com.welab.loan.finance.model.LendReversalRepaymentDetailExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LendReversalRepaymentDetailExample$Criteria
com.welab.loan.finance.model.LendReversalRepaymentDetailExample +.. com.welab.loan.finance.model.LendReversalRepaymentDetailExample$Criterion
com.welab.loan.finance.model.LoanMqExample +.. com.welab.loan.finance.model.LoanMqExample$GeneratedCriteria
com.welab.loan.finance.model.LoanMqExample +.. com.welab.loan.finance.model.LoanMqExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanMqExample$Criteria
com.welab.loan.finance.model.LoanMqExample +.. com.welab.loan.finance.model.LoanMqExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.vo.LoansFlagParamReqVO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.cplan.CPlanManagerTest
com.welab.loan.finance.model.CreditAbtestExportExample +.. com.welab.loan.finance.model.CreditAbtestExportExample$GeneratedCriteria
com.welab.loan.finance.model.CreditAbtestExportExample +.. com.welab.loan.finance.model.CreditAbtestExportExample$Criterion
com.welab.loan.finance.model.CreditAbtestExportExample +.. com.welab.loan.finance.model.CreditAbtestExportExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditAbtestExportExample$Criteria
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.ReversalTest
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.TravelokaPaylaterVaSyncJob
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.LoanReversalJob
com.welab.loan.finance.job.base.AbstractExcelEmailJob <|-- com.welab.loan.finance.job.LoanReversalJob
com.welab.loan.finance.app.service.IServicekey <|.. com.welab.loan.finance.app.service.tb.AbstractTbAgreementService
com.welab.loan.finance.core.dues.AbstractCostService <|-- com.welab.loan.finance.core.dues.impl.DdmCostService
com.welab.loan.finance.app.service.flow.AbstractFlowComponent <|-- com.welab.loan.finance.app.service.flow.repaymentback.tb.TbVaAmountBackCompont
java.io.Serializable <|.. com.welab.loan.finance.vo.request.InsuranceRecordReqVO
com.welab.loan.finance.service.business.loaninfo.AbstractLoanInfoService <|-- com.welab.loan.finance.service.business.loaninfo.fifuvf.FifUvfLoanInfoServiceImpl
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.maumodal.MaumodalTest
java.io.Serializable <|.. com.welab.loan.finance.dto.RepaymentLoanDTO
com.welab.sea.util.dto.Query <|-- com.welab.loan.finance.dto.qry.UnFinishLoanAmountQry
com.welab.loan.finance.response.Serializable <|.. com.welab.loan.finance.response.CalculatorVo
com.welab.loan.finance.app.service.flow.AbstractFlowComponent <|-- com.welab.loan.finance.app.service.flow.repaymentback.RepaymentTrackBackCompont
com.welab.loan.finance.model.TbUserExample +.. com.welab.loan.finance.model.TbUserExample$GeneratedCriteria
com.welab.loan.finance.model.TbUserExample +.. com.welab.loan.finance.model.TbUserExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.TbUserExample$Criteria
com.welab.loan.finance.model.TbUserExample +.. com.welab.loan.finance.model.TbUserExample$Criterion
com.welab.loan.finance.mapper.CreditUserAccountInfoMapper <|-- com.welab.loan.finance.mapper.ext.CreditUserAccountInfoExtMapper
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.tb.TbDuesUpdateJob
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.CreditUserAccountDetailVO
java.io.Serializable <|.. com.welab.loan.finance.dto.plan.TryEPlanDetailDTO
java.io.Serializable <|.. com.welab.loan.finance.dto.cmd.tb.TbUserImportCmd
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.tb.PayLaterTradingJob
com.welab.loan.finance.job.base.AbstractExcelEmailJob <|-- com.welab.loan.finance.job.tb.PayLaterTradingJob
java.io.Serializable <|.. com.welab.loan.finance.dto.LoanOverdueInfoDTO
com.welab.loan.finance.service.CreditUserAccountService <|.. com.welab.loan.finance.service.credit.CreditUserAccountServiceImpl
com.welab.loan.finance.app.command.tb.order.loandetail.TbLoanDetailBuilder <|.. com.welab.loan.finance.app.command.tb.order.loandetail.impl.TravelokaPaylaterTbLoanDetailBuilder
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.SendC1PushCmd
com.welab.loan.finance.response.Serializable <|.. com.welab.loan.finance.response.FinanceLendVo
com.welab.loan.finance.mapper.CreditActivityAbTestGroupUserTagRelationMapper <|-- com.welab.loan.finance.mapper.ext.CreditActivityAbTestGroupUserTagRelationExtMapper
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.tools.DataInitTest
com.welab.loan.finance.app.command.tb.dues.costreq.CostReqBuilder <|.. com.welab.loan.finance.app.command.tb.dues.costreq.impl.RestockCostReqBuilder
com.welab.loan.finance.calculator.IDueCalculator <|.. com.welab.loan.finance.calculator.FixedDateCalculatorV3
java.io.Serializable <|.. com.welab.loan.finance.dto.tb.Dues
com.welab.loan.finance.dto.loan.BaseDto <|-- com.welab.loan.finance.dto.dues.DuesDto
com.welab.loan.finance.provider.ServiceKey <|-- com.welab.loan.finance.app.command.tb.lend.transfer.TbTransferService
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.tb.TravelokaPaylaterTest
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.loan.LoanCancelTest
java.io.Serializable <|.. com.welab.loan.finance.vo.TransferCmd
java.io.Serializable <|.. com.welab.loan.finance.dto.UserTransDTO
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.DuesDto
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.redis.RedisTest
com.welab.loan.finance.service.DuesQueryService <|.. com.welab.loan.finance.app.impl.DuesQueryServiceImpl
com.welab.loan.finance.app.service.credit.loan.AbstractCreditLoanService <|-- com.welab.loan.finance.app.manager.credit.loanList.ClLongLoanManager
com.welab.loan.finance.model.PayBillsExample +.. com.welab.loan.finance.model.PayBillsExample$GeneratedCriteria
com.welab.loan.finance.model.PayBillsExample +.. com.welab.loan.finance.model.PayBillsExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.PayBillsExample$Criteria
com.welab.loan.finance.model.PayBillsExample +.. com.welab.loan.finance.model.PayBillsExample$Criterion
com.welab.common.exception.FastRuntimeException <|-- com.welab.loan.finance.exception.FlowTaskRuntimeException
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.UpdateCreditUserAccountVO
com.welab.loan.finance.model.FinanceRepaymentTrack <|-- com.welab.loan.finance.model.ext.FinanceRepaymentTrackExt
com.welab.loan.finance.core.dto.DiscountDuesDTO <|-- com.welab.loan.finance.core.dto.DeductDuesDTO
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.fdc.LateOverDayJob
com.welab.loan.finance.core.dues.AbstractCostService <|-- com.welab.loan.finance.core.dues.impl.RebookCostService
com.welab.loan.finance.core.dues.impl.RebookCostService +.. com.welab.loan.finance.core.dues.impl.RebookCostService$CostItem
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.AdvanceRepaymentInitiateCmd
com.welab.loan.finance.model.BcaTransfer <|-- com.welab.loan.finance.model.ext.BcaTransferExt
com.welab.loan.finance.service.PlanService <|.. com.welab.loan.finance.service.impl.PlanServiceImpl
com.welab.loan.finance.mapper.CreditActivityAbTestMapper <|-- com.welab.loan.finance.mapper.ext.CreditActivityAbTestExtMapper
com.welab.loan.finance.dto.TryPlanRepaymentDTO <|-- com.welab.loan.finance.vo.TryPlanRepaymentExtDTO
com.welab.loan.finance.core.dues.AbstractCostService <|-- com.welab.loan.finance.core.dues.impl.RestockCostService
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.credit.CreditTest
java.io.Serializable <|.. com.welab.loan.finance.dto.CreditUserAccountStatusLogDTO
java.io.Serializable <|.. com.welab.loan.finance.dto.plan.CalCPlanDetailAmountDTO
java.io.Serializable <|.. com.welab.loan.finance.vo.DuesVO
java.io.Serializable <|.. com.welab.loan.finance.dto.paylater.PayLaterLimitReqDTO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.LoanCessieInfoServiceTest
com.welab.loan.finance.model.FinanceTrading <|-- com.welab.loan.finance.model.ext.FinanceTradingExt
com.welab.loan.finance.dto.cmd.tb.BaseTbUserAccountTransCmd <|-- com.welab.loan.finance.dto.cmd.tb.DeductionTbUserAccountCmd
com.welab.loan.finance.dto.cmd.AbstractNsListQry <|-- com.welab.loan.finance.dto.cmd.NsRepaymentListQry
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.vo.request.CreditUserAccountReq
java.io.Serializable <|.. com.welab.loan.finance.dto.UserPlanInfoDto
com.welab.loan.finance.model.FinanceUserThirdpartyAccountExample +.. com.welab.loan.finance.model.FinanceUserThirdpartyAccountExample$GeneratedCriteria
com.welab.loan.finance.model.FinanceUserThirdpartyAccountExample +.. com.welab.loan.finance.model.FinanceUserThirdpartyAccountExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FinanceUserThirdpartyAccountExample$Criteria
com.welab.loan.finance.model.FinanceUserThirdpartyAccountExample +.. com.welab.loan.finance.model.FinanceUserThirdpartyAccountExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.vo.ActivityRepaymentVO
com.welab.loan.finance.model.LoanUvfDuesExample +.. com.welab.loan.finance.model.LoanUvfDuesExample$GeneratedCriteria
com.welab.loan.finance.model.LoanUvfDuesExample +.. com.welab.loan.finance.model.LoanUvfDuesExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanUvfDuesExample$Criteria
com.welab.loan.finance.model.LoanUvfDuesExample +.. com.welab.loan.finance.model.LoanUvfDuesExample$Criterion
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.product.ProductDemo
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.lend.LendTest
com.welab.sea.util.dto.Query <|-- com.welab.loan.finance.dto.qry.BatchTbCreditUserAccountQry
java.io.Serializable <|.. com.welab.loan.finance.dto.cmd.tb.TbAgreementImportCmd
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.CreateCPlanContractCmd
com.welab.loan.finance.model.CreditUserAccountDetailExample +.. com.welab.loan.finance.model.CreditUserAccountDetailExample$GeneratedCriteria
com.welab.loan.finance.model.CreditUserAccountDetailExample +.. com.welab.loan.finance.model.CreditUserAccountDetailExample$Criterion
com.welab.loan.finance.model.CreditUserAccountDetailExample +.. com.welab.loan.finance.model.CreditUserAccountDetailExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditUserAccountDetailExample$Criteria
com.welab.loan.finance.app.service.credit.loan.AbstractCreditLoanService <|-- com.welab.loan.finance.app.manager.credit.loanList.ClShortLoanManager
com.welab.loan.finance.model.LoanUvfInputExample +.. com.welab.loan.finance.model.LoanUvfInputExample$GeneratedCriteria
com.welab.loan.finance.model.LoanUvfInputExample +.. com.welab.loan.finance.model.LoanUvfInputExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanUvfInputExample$Criteria
com.welab.loan.finance.model.LoanUvfInputExample +.. com.welab.loan.finance.model.LoanUvfInputExample$Criterion
com.welab.loan.finance.utils.RequsetParamUtils +.. com.welab.loan.finance.utils.RequsetParamUtils$ICallBack
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.PremiumTransferJob
java.io.Serializable <|.. com.welab.loan.finance.core.dto.credit.CreditActivityAbTest2RedisDto
com.welab.loan.finance.model.CreditActivityAbTest <|-- com.welab.loan.finance.core.dto.credit.CreditActivityAbTest2RedisDto
java.io.Serializable <|.. com.welab.loan.finance.vo.tb.TbPendRepayVO
com.welab.sea.util.dto.Query <|-- com.welab.loan.finance.dto.qry.UserMaxDpdQry
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.CreateC1ContractCmd
com.welab.loan.finance.dto.ApplyPlanDTO <|-- com.welab.loan.finance.dto.ReliefProgramDTO
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.CalPlanAmountDto
com.welab.loan.finance.service.TbLoanQueryDubboService <|.. com.welab.loan.finance.app.service.tb.TbLoanQueryDubboServiceImpl
com.welab.loan.finance.dto.cmd.ApplyFPlanCmd <|-- com.welab.loan.finance.dto.cmd.BatchApplyFPlanCmd
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.dues.DecountTest
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.LoanCouponCalDto
com.welab.loan.finance.model.CreditReLoanExample +.. com.welab.loan.finance.model.CreditReLoanExample$GeneratedCriteria
com.welab.loan.finance.model.CreditReLoanExample +.. com.welab.loan.finance.model.CreditReLoanExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditReLoanExample$Criteria
com.welab.loan.finance.model.CreditReLoanExample +.. com.welab.loan.finance.model.CreditReLoanExample$Criterion
com.welab.loan.finance.model.RebookTimeLimitExample +.. com.welab.loan.finance.model.RebookTimeLimitExample$GeneratedCriteria
com.welab.loan.finance.model.RebookTimeLimitExample +.. com.welab.loan.finance.model.RebookTimeLimitExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.RebookTimeLimitExample$Criteria
com.welab.loan.finance.model.RebookTimeLimitExample +.. com.welab.loan.finance.model.RebookTimeLimitExample$Criterion
com.welab.loan.finance.service.business.lend.AbstractLendService <|-- com.welab.loan.finance.service.business.lend.maucash.MaucashLendServiceImpl
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.vo.response.NsLoanManagementVO
java.io.Serializable <|.. com.welab.loan.finance.dto.FlexRepaymentResult
com.welab.loan.finance.model.CreditUserTagHistoryExample +.. com.welab.loan.finance.model.CreditUserTagHistoryExample$GeneratedCriteria
com.welab.loan.finance.model.CreditUserTagHistoryExample +.. com.welab.loan.finance.model.CreditUserTagHistoryExample$Criterion
com.welab.loan.finance.model.CreditUserTagHistoryExample +.. com.welab.loan.finance.model.CreditUserTagHistoryExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditUserTagHistoryExample$Criteria
com.welab.loan.finance.mapper.CreditUserAccountMapper <|-- com.welab.loan.finance.mapper.ext.CreditUserAccountExtMapper
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.CouponDues
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.DuesAmountExtVo
com.welab.loan.finance.model.CreditUserAccount <|-- com.welab.loan.finance.model.ext.CreditUserAccountExt
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.QueryUserProfilesDTOExt
com.welab.loan.finance.app.service.flow.AbstractFlowComponent <|-- com.welab.loan.finance.app.service.flow.repaymentback.LoanRepaymentBackCompont
com.welab.loan.finance.model.CreditActivityAbTestExample +.. com.welab.loan.finance.model.CreditActivityAbTestExample$GeneratedCriteria
com.welab.loan.finance.model.CreditActivityAbTestExample +.. com.welab.loan.finance.model.CreditActivityAbTestExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditActivityAbTestExample$Criteria
com.welab.loan.finance.model.CreditActivityAbTestExample +.. com.welab.loan.finance.model.CreditActivityAbTestExample$Criterion
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.LoanOffLineRepayJob
com.welab.loan.finance.job.base.AbstractExcelEmailJob <|-- com.welab.loan.finance.job.LoanOffLineRepayJob
com.welab.loan.finance.dto.cmd.tb.TravelokaLoanImportCmd <|-- com.welab.loan.finance.dto.cmd.tb.RestockLoanImportCmd
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.CouponLoansAbleCmd
com.welab.loan.finance.model.mongo.Doc <|-- com.welab.loan.finance.model.mongo.TbBaseLoanDoc
java.io.Serializable <|.. com.welab.loan.finance.vo.response.FPlansContractVO
com.welab.loan.finance.model.FinanceDuesExample +.. com.welab.loan.finance.model.FinanceDuesExample$GeneratedCriteria
com.welab.loan.finance.model.FinanceDuesExample +.. com.welab.loan.finance.model.FinanceDuesExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FinanceDuesExample$Criteria
com.welab.loan.finance.model.FinanceDuesExample +.. com.welab.loan.finance.model.FinanceDuesExample$Criterion
com.welab.loan.finance.model.LoanDuesConfigExample +.. com.welab.loan.finance.model.LoanDuesConfigExample$GeneratedCriteria
com.welab.loan.finance.model.LoanDuesConfigExample +.. com.welab.loan.finance.model.LoanDuesConfigExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanDuesConfigExample$Criteria
com.welab.loan.finance.model.LoanDuesConfigExample +.. com.welab.loan.finance.model.LoanDuesConfigExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.vo.FinanceRepaymentTrackVO
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.tb.RestockDuesUpdateCmd
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.CessieLoanReqDTO
com.welab.loan.finance.vo.UserBankcardVO <|-- com.welab.loan.finance.vo.UserBankcardRespVO
com.welab.loan.finance.response.LoanDetailVo <|-- com.welab.loan.finance.response.LoanDetailDueExtVo
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.vo.TbDisbursementVO
com.welab.loan.finance.job.base.AbstractExcelEmailJob <|-- com.welab.loan.finance.job.AlfamartHandel
com.welab.loan.finance.service.business.lend.maucash.MaucashLendServiceImpl <|-- com.welab.loan.finance.service.business.lend.maumodal.MaumodalLendServiceImpl
com.welab.loan.finance.model.CreditAccountTrackExample +.. com.welab.loan.finance.model.CreditAccountTrackExample$GeneratedCriteria
com.welab.loan.finance.model.CreditAccountTrackExample +.. com.welab.loan.finance.model.CreditAccountTrackExample$Criterion
com.welab.loan.finance.model.CreditAccountTrackExample +.. com.welab.loan.finance.model.CreditAccountTrackExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditAccountTrackExample$Criteria
com.welab.loan.finance.model.FinanceUserAccountExample +.. com.welab.loan.finance.model.FinanceUserAccountExample$GeneratedCriteria
com.welab.loan.finance.model.FinanceUserAccountExample +.. com.welab.loan.finance.model.FinanceUserAccountExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FinanceUserAccountExample$Criteria
com.welab.loan.finance.model.FinanceUserAccountExample +.. com.welab.loan.finance.model.FinanceUserAccountExample$Criterion
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.vat.VatOverdueFullInitCmdExeTest
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.vo.LoanNumberAmountDTO
com.welab.loan.finance.model.CreditUserTagConfigExample +.. com.welab.loan.finance.model.CreditUserTagConfigExample$GeneratedCriteria
com.welab.loan.finance.model.CreditUserTagConfigExample +.. com.welab.loan.finance.model.CreditUserTagConfigExample$Criterion
com.welab.loan.finance.model.CreditUserTagConfigExample +.. com.welab.loan.finance.model.CreditUserTagConfigExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditUserTagConfigExample$Criteria
java.io.Serializable <|.. com.welab.loan.finance.dto.FinanceFundRateConfigVO
com.welab.loan.finance.service.ICreditUserTagRuleService <|.. com.welab.loan.finance.service.impl.CreditUserTagRuleServiceImpl
java.io.Serializable <|.. com.welab.loan.finance.model.DuesRepayUpdateRecord
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.dto.TryRepayCPlanLoanDTO
com.welab.loan.finance.app.command.tb.lend.lend.TbFinanceLendBuilder <|.. com.welab.loan.finance.app.command.tb.lend.lend.impl.TrioFinanceLendBuilder
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.PaylaterLendReversalJob
com.welab.loan.finance.job.AbstractLendReversalJob <|-- com.welab.loan.finance.job.PaylaterLendReversalJob
com.welab.loan.finance.model.CreditBigFieldRelationExample +.. com.welab.loan.finance.model.CreditBigFieldRelationExample$GeneratedCriteria
com.welab.loan.finance.model.CreditBigFieldRelationExample +.. com.welab.loan.finance.model.CreditBigFieldRelationExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditBigFieldRelationExample$Criteria
com.welab.loan.finance.model.CreditBigFieldRelationExample +.. com.welab.loan.finance.model.CreditBigFieldRelationExample$Criterion
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.ApplyPlanDTO
java.io.Serializable <|.. com.welab.loan.finance.dto.plan.CalEPlanDetailAmountDTO
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.CreditAccountRecordMigrateJob
com.welab.loan.finance.app.base.BaseFinanceTradingService <|-- com.welab.loan.finance.app.manager.FinanceTradingManager
com.welab.loan.finance.service.UserTransService <|.. com.welab.loan.finance.service.impl.UserTransServiceImpl
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.QueryCustomRangeCmd
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.TagProductVO
com.welab.loan.finance.model.mongo.tbuser.TbUserDoc <|-- com.welab.loan.finance.model.mongo.tbuser.BaseUserDoc
com.welab.loan.finance.dto.cmd.tb.TbUserImportCmd <|-- com.welab.loan.finance.dto.cmd.tb.RestockUserCmd
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.ProductRateConfigTest
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.FundRefundTest
com.welab.loan.finance.service.LendService <|.. com.welab.loan.finance.service.impl.LendServiceImpl
org.springframework.context.ApplicationContextAware <|.. com.welab.loan.finance.utils.SpringUtils
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.ScaffoldTest
java.io.Serializable <|.. com.welab.loan.finance.response.dues.TryCalDuesVO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.FifUvf.FifUvfTest
com.welab.loan.finance.model.LoanUvfDocExample +.. com.welab.loan.finance.model.LoanUvfDocExample$GeneratedCriteria
com.welab.loan.finance.model.LoanUvfDocExample +.. com.welab.loan.finance.model.LoanUvfDocExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanUvfDocExample$Criteria
com.welab.loan.finance.model.LoanUvfDocExample +.. com.welab.loan.finance.model.LoanUvfDocExample$Criterion
com.welab.loan.finance.provider.ServiceProvider <|-- com.welab.loan.finance.app.command.tb.order.validate.TbInvoiceValidateServiceProvider
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.CPlanConfirmCmd
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.LendDto
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.vo.HomePageAhassInfoVO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.loan.LoanTest
com.welab.loan.finance.service.credit.usertag.CreditUserTagRuleService +.. com.welab.loan.finance.service.credit.usertag.CreditUserTagRuleService$BestRuleRes
com.welab.loan.finance.service.credit.usertag.CreditUserTagRuleService +.. com.welab.loan.finance.service.credit.usertag.CreditUserTagRuleService$UpdateTagCallBackRes
com.welab.loan.finance.service.credit.usertag.CreditUserTagRuleService +.. com.welab.loan.finance.service.credit.usertag.CreditUserTagRuleService$IUpdateTagCallBack
com.welab.loan.finance.service.OverdueQueryService <|.. com.welab.loan.finance.service.impl.OverdueQueryServiceImpl
com.welab.loan.finance.app.service.credit.loan.AbstractCreditLoanService <|-- com.welab.loan.finance.app.manager.credit.loanList.NocheckInstallmentLoanManager
com.welab.loan.finance.model.LoanPlansContractExample +.. com.welab.loan.finance.model.LoanPlansContractExample$GeneratedCriteria
com.welab.loan.finance.model.LoanPlansContractExample +.. com.welab.loan.finance.model.LoanPlansContractExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanPlansContractExample$Criteria
com.welab.loan.finance.model.LoanPlansContractExample +.. com.welab.loan.finance.model.LoanPlansContractExample$Criterion
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.TryRepayPlanDetailCmd
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.TagConfigVO
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.RepaymentImportCmd
java.io.Serializable <|.. com.welab.loan.finance.dto.cmd.CheckCustomCmd
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.credit.CreditMigrateUserServiceTest
com.welab.loan.finance.model.LoanUvfDetail <|-- com.welab.loan.finance.model.ext.LoanUvfDetailExt
java.io.Serializable <|.. com.welab.loan.finance.dto.plan.TryRepayCPlanLoanDetailDto
com.welab.loan.finance.dto.plan.TryRepayCPlanLoanDetailDto +.. com.welab.loan.finance.dto.plan.TryRepayCPlanLoanDetailDto$PeriodInfo
com.welab.loan.finance.dto.plan.Serializable <|.. com.welab.loan.finance.dto.plan.TryRepayCPlanLoanDetailDto$PeriodInfo
com.welab.loan.finance.model.OperateLoanDetailExtendFlagHistoryExample +.. com.welab.loan.finance.model.OperateLoanDetailExtendFlagHistoryExample$GeneratedCriteria
com.welab.loan.finance.model.OperateLoanDetailExtendFlagHistoryExample +.. com.welab.loan.finance.model.OperateLoanDetailExtendFlagHistoryExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.OperateLoanDetailExtendFlagHistoryExample$Criteria
com.welab.loan.finance.model.OperateLoanDetailExtendFlagHistoryExample +.. com.welab.loan.finance.model.OperateLoanDetailExtendFlagHistoryExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.dto.qry.LoanOverdueQry
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.UvfLoaderTest
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.dto.LoanDueIndexDuesDTO
com.welab.loan.finance.response.LoanDetailVo <|-- com.welab.loan.finance.response.LoanDetailExtVo
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.TbSendLendCmd
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.DuesExtVo
com.welab.loan.finance.model.InsuranceRecordExample +.. com.welab.loan.finance.model.InsuranceRecordExample$GeneratedCriteria
com.welab.loan.finance.model.InsuranceRecordExample +.. com.welab.loan.finance.model.InsuranceRecordExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.InsuranceRecordExample$Criteria
com.welab.loan.finance.model.InsuranceRecordExample +.. com.welab.loan.finance.model.InsuranceRecordExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.dto.SelectDTO
com.welab.loan.finance.dto.paylater.Serializable <|.. com.welab.loan.finance.dto.paylater.RepayUnPayDTO
java.io.Serializable <|.. com.welab.loan.finance.dto.RepaymentDto
com.welab.loan.finance.core.overdue.AbstractCalLateFee <|-- com.welab.loan.finance.core.overdue.credit.CreditCalLateFeeImpl
com.welab.loan.finance.service.other.disburse_tax.DisburseTaxHandler <|-- com.welab.loan.finance.service.other.disburse_tax.MaumodalDisburseTaxHandler
com.welab.loan.finance.core.dues.vat.VatCost <|.. com.welab.loan.finance.core.dues.vat.impl.ServiceFeeVatCost
com.welab.loan.finance.service.business.trade.BaseTradeService <|-- com.welab.loan.finance.service.business.trade.UVFTradeService
java.io.Serializable <|.. com.welab.loan.finance.vo.BaseRepaymentAmountInfoVo
com.welab.loan.finance.model.LoanCodeExample +.. com.welab.loan.finance.model.LoanCodeExample$GeneratedCriteria
com.welab.loan.finance.model.LoanCodeExample +.. com.welab.loan.finance.model.LoanCodeExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanCodeExample$Criteria
com.welab.loan.finance.model.LoanCodeExample +.. com.welab.loan.finance.model.LoanCodeExample$Criterion
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.FifUvf.UfiMotorTest
com.welab.loan.finance.model.DuesRepayUpdateRecordExtExample +.. com.welab.loan.finance.model.DuesRepayUpdateRecordExtExample$GeneratedCriteria
com.welab.loan.finance.model.DuesRepayUpdateRecordExtExample +.. com.welab.loan.finance.model.DuesRepayUpdateRecordExtExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.DuesRepayUpdateRecordExtExample$Criteria
com.welab.loan.finance.model.DuesRepayUpdateRecordExtExample +.. com.welab.loan.finance.model.DuesRepayUpdateRecordExtExample$Criterion
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.tb.TbTest
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.AmountExtVo
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.UvfDueDto
com.welab.loan.finance.model.LoanPlansLogExample +.. com.welab.loan.finance.model.LoanPlansLogExample$GeneratedCriteria
com.welab.loan.finance.model.LoanPlansLogExample +.. com.welab.loan.finance.model.LoanPlansLogExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanPlansLogExample$Criteria
com.welab.loan.finance.model.LoanPlansLogExample +.. com.welab.loan.finance.model.LoanPlansLogExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.vo.ImportResVO
com.welab.loan.finance.core.loan.transform.ITransformDues <|.. com.welab.loan.finance.core.loan.transform.TransformDuesImpl
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.CouponRepaymentVo
com.welab.loan.finance.mapper.CreditUserAccountChildMapper <|-- com.welab.loan.finance.mapper.ext.CreditUserAccountChildExtMapper
com.welab.loan.finance.core.dues.AbstractCostService <|-- com.welab.loan.finance.core.dues.impl.HsoCostService
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.PaymentDto
java.io.Serializable <|.. com.welab.loan.finance.dto.SendRepaymentDTO
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.LoanCouponDetailDTO
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.SigapRepayJob
com.welab.loan.finance.job.base.AbstractExcelEmailJob <|-- com.welab.loan.finance.job.SigapRepayJob
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.tb.FlexRepaymentImportCmdExeTest
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.credit.UserTagRuleTest
java.io.Serializable <|.. com.welab.loan.finance.model.ext.TbLoanExt
com.welab.loan.finance.core.loan.repay.IUserRepayAmount <|.. com.welab.loan.finance.core.loan.repay.UserRepayAmountImpl
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.dues.DuesQueryTest
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.va.VATest
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.LateFeeDto
java.io.Serializable <|.. com.welab.loan.finance.dto.RepaymentScheduleInfoDTO
java.io.Serializable <|.. com.welab.loan.finance.vo.response.SignHistoryVO
com.welab.application.vo.ProductRateConfigVO <|-- com.welab.loan.finance.vo.ProductRateConfigExtendVO
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.MulRepaymentDTO
com.welab.loan.finance.service.CreditTagConfigService <|.. com.welab.loan.finance.app.impl.CreditConfigImpl
com.welab.loan.finance.service.FinanceConfigService <|.. com.welab.loan.finance.service.impl.FinanceConfigServiceImpl
java.io.Serializable <|.. com.welab.loan.finance.dto.cmd.tb.TbBatch
java.io.Serializable <|.. com.welab.loan.finance.vo.ReportOverdueDaysVO
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.dto.cmd.tb.TravelokaLendCallbackCmd
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.UvfLoanDocDto
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.TbQueryUserDTO
com.welab.loan.finance.model.DuesRepayUpdateRecordExample +.. com.welab.loan.finance.model.DuesRepayUpdateRecordExample$GeneratedCriteria
com.welab.loan.finance.model.DuesRepayUpdateRecordExample +.. com.welab.loan.finance.model.DuesRepayUpdateRecordExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.DuesRepayUpdateRecordExample$Criteria
com.welab.loan.finance.model.DuesRepayUpdateRecordExample +.. com.welab.loan.finance.model.DuesRepayUpdateRecordExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.response.EPlanDuesVO
com.welab.loan.finance.app.service.paybills.AbstractPayBillsService <|-- com.welab.loan.finance.app.service.paybills.BniPayBillsService
com.welab.loan.finance.app.service.paybills.BniPayBillsService +.. com.welab.loan.finance.app.service.paybills.BniPayBillsService$BniPayBillsContext
com.welab.loan.finance.app.service.paybills.PayBillsContext <|-- com.welab.loan.finance.app.service.paybills.BniPayBillsService$BniPayBillsContext
com.welab.loan.finance.model.UVFRepossessRepaymentExample +.. com.welab.loan.finance.model.UVFRepossessRepaymentExample$GeneratedCriteria
com.welab.loan.finance.model.UVFRepossessRepaymentExample +.. com.welab.loan.finance.model.UVFRepossessRepaymentExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.UVFRepossessRepaymentExample$Criteria
com.welab.loan.finance.model.UVFRepossessRepaymentExample +.. com.welab.loan.finance.model.UVFRepossessRepaymentExample$Criterion
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.TappApplyCmd
com.welab.loan.finance.model.LoanApplyRepaymentExample +.. com.welab.loan.finance.model.LoanApplyRepaymentExample$GeneratedCriteria
com.welab.loan.finance.model.LoanApplyRepaymentExample +.. com.welab.loan.finance.model.LoanApplyRepaymentExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanApplyRepaymentExample$Criteria
com.welab.loan.finance.model.LoanApplyRepaymentExample +.. com.welab.loan.finance.model.LoanApplyRepaymentExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.dto.cmd.tb.TbInvoice
com.welab.loan.finance.service.other.disburse_tax.DisburseTaxHandler <|-- com.welab.loan.finance.service.other.disburse_tax.ToBDisburseTaxHandler
java.io.Serializable <|.. com.welab.loan.finance.response.EPlanTryCalculationVO
com.welab.loan.finance.model.CreditUserAccountStatusLogExample +.. com.welab.loan.finance.model.CreditUserAccountStatusLogExample$GeneratedCriteria
com.welab.loan.finance.model.CreditUserAccountStatusLogExample +.. com.welab.loan.finance.model.CreditUserAccountStatusLogExample$Criterion
com.welab.loan.finance.model.CreditUserAccountStatusLogExample +.. com.welab.loan.finance.model.CreditUserAccountStatusLogExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditUserAccountStatusLogExample$Criteria
java.io.Serializable <|.. com.welab.loan.finance.dto.CalculationTagAmountDTO
com.welab.loan.finance.core.dues.vat.VatCost <|.. com.welab.loan.finance.core.dues.vat.impl.AdminFeeVatCost
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.tb.RestockTest
java.io.Serializable <|.. com.welab.loan.finance.dto.plan.EPlanAmountDTO
com.welab.loan.finance.model.AdvanceMsgList <|-- com.welab.loan.finance.model.ext.AdvanceMsgListExt
java.io.Serializable <|.. com.welab.loan.finance.dto.tb.TravelokaDuesVO
com.welab.loan.finance.core.loan.rest.IVirtualAccount <|.. com.welab.loan.finance.core.loan.rest.VirtualAccountImpl
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.ScheduleAmountDto
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.CustomerLoanBackDto
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.credit.migrate.MigrateControllerTest
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.RebookTest
com.welab.loan.finance.provider.ServiceProvider <|-- com.welab.loan.finance.app.command.tb.order.loandetail.TbLoanDetailBuilderProvider
com.welab.loan.finance.core.dues.AbstractCostService <|-- com.welab.loan.finance.core.dues.impl.TappCostService
com.welab.loan.finance.model.CreditUserAccountInfoExample +.. com.welab.loan.finance.model.CreditUserAccountInfoExample$GeneratedCriteria
com.welab.loan.finance.model.CreditUserAccountInfoExample +.. com.welab.loan.finance.model.CreditUserAccountInfoExample$Criterion
com.welab.loan.finance.model.CreditUserAccountInfoExample +.. com.welab.loan.finance.model.CreditUserAccountInfoExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditUserAccountInfoExample$Criteria
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.BankConfigTest
com.welab.loan.finance.service.loan.ILoanService <|.. com.welab.loan.finance.app.impl.loan.LoanServiceImpl
com.welab.loan.finance.utils.PlanPtpNotifyUtils +.. com.welab.loan.finance.utils.PlanPtpNotifyUtils$RepaymentPlanDTO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.tools.DataRecoveryTest
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.dues.DuesDeductTest
com.welab.loan.finance.model.mongo.Doc <|-- com.welab.loan.finance.model.mongo.TbLoanDoc
java.io.Serializable <|.. com.welab.loan.finance.vo.FinanceTradingVO
com.welab.loan.finance.service.userTag.IUserTagService <|.. com.welab.loan.finance.app.impl.userTag.UserTagServiceImpl
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.BasePayServiceTest
com.welab.loan.finance.core.dues.AbstractCostService <|-- com.welab.loan.finance.core.dues.impl.CreditCostService
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.CheckUnFinishedLoanDto
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.SignMethodTest
java.io.Serializable <|.. com.welab.loan.finance.dto.paylater.PayLaterLoanRspDTO
com.welab.loan.finance.model.CreditUserAccountInfo <|-- com.welab.loan.finance.model.ext.CreditUserAccountInfoExt
com.welab.loan.finance.config.Filter <|.. com.welab.loan.finance.config.DubboRemoteLogFilter
com.welab.loan.finance.dto.loan.BaseDto <|-- com.welab.loan.finance.dto.loan.LoanDetailExtendDto
com.welab.loan.finance.service.TbService <|.. com.welab.loan.finance.app.command.tb.TbServiceImpl
com.welab.loan.finance.service.LoanCouponService <|.. com.welab.loan.finance.service.impl.CouponServiceImpl
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.LendReversalTest
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.RepaymentData
com.welab.loan.finance.provider.ServiceKey <|-- com.welab.loan.finance.app.command.tb.order.process.TbInvoicePostProcessService
java.io.Serializable <|.. com.welab.loan.finance.vo.response.paybills.BillReverseInfoVO
java.io.Serializable <|.. com.welab.loan.finance.dto.paylater.MerchantTradingDTO
java.io.Serializable <|.. com.welab.loan.finance.dto.paylater.MerchantRepaymentLoanDTO
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.DuesBackupJob
com.welab.loan.finance.service.PayLaterService <|.. com.welab.loan.finance.service.impl.PayLaterServiceImpl
com.welab.loan.finance.service.other.disburse_tax.DisburseTaxHandler <|-- com.welab.loan.finance.service.other.disburse_tax.MaucashDisburseTaxHandler
com.welab.sea.util.dto.PageQuery <|-- com.welab.loan.finance.dto.qry.MerchantLoanQry
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.advance.AdvanceTest
com.welab.loan.finance.model.UserAdvancePaymentExample +.. com.welab.loan.finance.model.UserAdvancePaymentExample$GeneratedCriteria
com.welab.loan.finance.model.UserAdvancePaymentExample +.. com.welab.loan.finance.model.UserAdvancePaymentExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.UserAdvancePaymentExample$Criteria
com.welab.loan.finance.model.UserAdvancePaymentExample +.. com.welab.loan.finance.model.UserAdvancePaymentExample$Criterion
com.welab.loan.finance.model.LoanUvfRepaymentExample +.. com.welab.loan.finance.model.LoanUvfRepaymentExample$GeneratedCriteria
com.welab.loan.finance.model.LoanUvfRepaymentExample +.. com.welab.loan.finance.model.LoanUvfRepaymentExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanUvfRepaymentExample$Criteria
com.welab.loan.finance.model.LoanUvfRepaymentExample +.. com.welab.loan.finance.model.LoanUvfRepaymentExample$Criterion
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.track.TrackTest
com.welab.loan.finance.model.RechargeLogExample +.. com.welab.loan.finance.model.RechargeLogExample$GeneratedCriteria
com.welab.loan.finance.model.RechargeLogExample +.. com.welab.loan.finance.model.RechargeLogExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.RechargeLogExample$Criteria
com.welab.loan.finance.model.RechargeLogExample +.. com.welab.loan.finance.model.RechargeLogExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.dto.UserUnsettledLoanDto
com.welab.loan.finance.model.FinanceRefundExample +.. com.welab.loan.finance.model.FinanceRefundExample$GeneratedCriteria
com.welab.loan.finance.model.FinanceRefundExample +.. com.welab.loan.finance.model.FinanceRefundExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FinanceRefundExample$Criteria
com.welab.loan.finance.model.FinanceRefundExample +.. com.welab.loan.finance.model.FinanceRefundExample$Criterion
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.EPlanTryDueDto
com.welab.common.exception.FastRuntimeException <|-- com.welab.loan.finance.exception.PayGatewayException
com.welab.loan.finance.service.ILoanQueryService <|.. com.welab.loan.finance.app.impl.LoanQueryServiceImpl
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.OverdueDayDTO
com.welab.loan.finance.service.LoanUserTelService <|.. com.welab.loan.finance.service.impl.LoanUserTelServiceImpl
com.welab.loan.finance.app.command.tb.lend.transfer.TbTransferService <|.. com.welab.loan.finance.app.command.tb.lend.transfer.impl.TrioTransferService
com.welab.loan.finance.model.FinanceUserAccountBalanceBakExample +.. com.welab.loan.finance.model.FinanceUserAccountBalanceBakExample$GeneratedCriteria
com.welab.loan.finance.model.FinanceUserAccountBalanceBakExample +.. com.welab.loan.finance.model.FinanceUserAccountBalanceBakExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FinanceUserAccountBalanceBakExample$Criteria
com.welab.loan.finance.model.FinanceUserAccountBalanceBakExample +.. com.welab.loan.finance.model.FinanceUserAccountBalanceBakExample$Criterion
com.welab.loan.finance.model.FinanceErrorExample +.. com.welab.loan.finance.model.FinanceErrorExample$GeneratedCriteria
com.welab.loan.finance.model.FinanceErrorExample +.. com.welab.loan.finance.model.FinanceErrorExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FinanceErrorExample$Criteria
com.welab.loan.finance.model.FinanceErrorExample +.. com.welab.loan.finance.model.FinanceErrorExample$Criterion
com.welab.loan.finance.model.AdvanceMsgListExample +.. com.welab.loan.finance.model.AdvanceMsgListExample$GeneratedCriteria
com.welab.loan.finance.model.AdvanceMsgListExample +.. com.welab.loan.finance.model.AdvanceMsgListExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.AdvanceMsgListExample$Criteria
com.welab.loan.finance.model.AdvanceMsgListExample +.. com.welab.loan.finance.model.AdvanceMsgListExample$Criterion
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.FinanceErrorBackDto
java.io.Serializable <|.. com.welab.loan.finance.response.EPlanTryCalculationListVO
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.CancelCouponForUserCmd
com.welab.loan.finance.response.Serializable <|.. com.welab.loan.finance.response.LoanDetailVo
com.welab.sea.util.dto.PageQuery <|-- com.welab.loan.finance.dto.qry.LoanQry
com.welab.loan.finance.model.FinanceConfigExample +.. com.welab.loan.finance.model.FinanceConfigExample$GeneratedCriteria
com.welab.loan.finance.model.FinanceConfigExample +.. com.welab.loan.finance.model.FinanceConfigExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FinanceConfigExample$Criteria
com.welab.loan.finance.model.FinanceConfigExample +.. com.welab.loan.finance.model.FinanceConfigExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.vo.response.UfiMotorImportErrorVO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.amin.LoanServiceTest
java.io.Serializable <|.. com.welab.loan.finance.dto.paylater.CreditUserAccountDTO
java.io.Serializable <|.. com.welab.loan.finance.dto.UserCardDTO
com.welab.loan.finance.core.dues.AbstractCostService <|-- com.welab.loan.finance.core.dues.impl.TbDefaultCostService
com.welab.loan.finance.core.overdue.ICalLateFee <|.. com.welab.loan.finance.core.overdue.AbstractCalLateFee
com.welab.loan.finance.app.service.flow.AbstractFlowComponent <|-- com.welab.loan.finance.app.service.flow.repaymentback.RefundBackCompont
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.LoanTransDetailDTO
java.io.Serializable <|.. com.welab.loan.finance.dto.plan.TryCPlanDetailParamDTO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.credit.activity.ApplyUseCredit
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.LendTest
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.fplan.FplanTest
java.io.Serializable <|.. com.welab.loan.finance.dto.plan.TryCPlanParamDTO
java.io.Serializable <|.. com.welab.loan.finance.vo.response.paybills.BillRechargeInfoVO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.message.MessageAppFacadeTest
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.paylater.CreditHistoryLoanReqDTO
com.welab.loan.finance.service.RebookService <|.. com.welab.loan.finance.service.business.rebook.RebookServiceImpl
java.io.Serializable <|.. com.welab.loan.finance.dto.cmd.tb.TbLoanImportCmd
com.welab.loan.finance.model.LoanApplyPlansExample +.. com.welab.loan.finance.model.LoanApplyPlansExample$GeneratedCriteria
com.welab.loan.finance.model.LoanApplyPlansExample +.. com.welab.loan.finance.model.LoanApplyPlansExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanApplyPlansExample$Criteria
com.welab.loan.finance.model.LoanApplyPlansExample +.. com.welab.loan.finance.model.LoanApplyPlansExample$Criterion
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.coupon.LoanCouponTest
com.welab.loan.finance.service.business.lend.IService <|-- com.welab.loan.finance.service.business.lend.ITransferService
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.CessieDpdRspDTO
com.welab.loan.finance.model.CreditUserAccountChildExample +.. com.welab.loan.finance.model.CreditUserAccountChildExample$GeneratedCriteria
com.welab.loan.finance.model.CreditUserAccountChildExample +.. com.welab.loan.finance.model.CreditUserAccountChildExample$Criterion
com.welab.loan.finance.model.CreditUserAccountChildExample +.. com.welab.loan.finance.model.CreditUserAccountChildExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditUserAccountChildExample$Criteria
com.welab.loan.finance.core.dues.AbstractCostService <|-- com.welab.loan.finance.core.dues.impl.PaylaterCostService
com.welab.loan.finance.app.service.flow.AbstractFlowComponent <|-- com.welab.loan.finance.app.service.flow.repaymentback.tb.TbCreditUserAccountBackCompont
com.welab.loan.finance.model.CreditActivityAbTestGroupUserTagRelationExample +.. com.welab.loan.finance.model.CreditActivityAbTestGroupUserTagRelationExample$GeneratedCriteria
com.welab.loan.finance.model.CreditActivityAbTestGroupUserTagRelationExample +.. com.welab.loan.finance.model.CreditActivityAbTestGroupUserTagRelationExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditActivityAbTestGroupUserTagRelationExample$Criteria
com.welab.loan.finance.model.CreditActivityAbTestGroupUserTagRelationExample +.. com.welab.loan.finance.model.CreditActivityAbTestGroupUserTagRelationExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.vo.RebookDetailVO
com.welab.loan.finance.vo.RebookDetailVO +.. com.welab.loan.finance.vo.RebookDetailVO$OldOrder
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.RebookDetailVO$OldOrder
com.welab.loan.finance.vo.RebookDetailVO +.. com.welab.loan.finance.vo.RebookDetailVO$NewOrder
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.RebookDetailVO$NewOrder
com.welab.loan.finance.service.business.lend.ITransferService <|-- com.welab.loan.finance.service.business.lend.IBatchTransferService
com.welab.loan.finance.app.service.credit.loan.AbstractCreditLoanService <|-- com.welab.loan.finance.app.service.credit.loan.SigapLoanService
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.BankTest
com.welab.loan.finance.model.LoanReversalExample +.. com.welab.loan.finance.model.LoanReversalExample$GeneratedCriteria
com.welab.loan.finance.model.LoanReversalExample +.. com.welab.loan.finance.model.LoanReversalExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanReversalExample$Criteria
com.welab.loan.finance.model.LoanReversalExample +.. com.welab.loan.finance.model.LoanReversalExample$Criterion
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.OverdueQueryServiceTest
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.OverDuesDto
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.LoanDetailTest
com.welab.sea.util.dto.Query <|-- com.welab.loan.finance.dto.qry.FPlanDuesQry
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.dto.cmd.tb.RestockLendCallbackCmd
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.DuesBackDto
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.AbstractLendReversalJob
com.welab.loan.finance.job.AbstractLendReversalJob +.. com.welab.loan.finance.job.AbstractLendReversalJob$ReversalGroup
com.welab.loan.finance.job.AbstractLendReversalJob +.. com.welab.loan.finance.job.AbstractLendReversalJob$ReversalBill
com.welab.loan.finance.job.AbstractLendReversalJob +.. com.welab.loan.finance.job.AbstractLendReversalJob$Account
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.RepaymentTest
com.welab.loan.finance.dto.cmd.AbstractNsListQry <|-- com.welab.loan.finance.dto.cmd.NsDueListQry
com.welab.loan.finance.model.CreditActivityAbTest <|-- com.welab.loan.finance.model.ext.CreditActivityAbTestExt
com.welab.loan.finance.model.Dues <|-- com.welab.loan.finance.model.ext.VatInitLoanDues
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.vo.TbLoanVO
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.CheckCPlanCustomAmountCmd
java.io.Serializable <|.. com.welab.loan.finance.response.AstraPayInfoVo
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.LoanInfoTest
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.LoanRefundJob
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.LoanOffLineLendJob
com.welab.loan.finance.job.base.AbstractExcelEmailJob <|-- com.welab.loan.finance.job.LoanOffLineLendJob
com.welab.sea.util.dto.PageQuery <|-- com.welab.loan.finance.dto.cmd.tb.TravelokaLoanQry
com.welab.sea.util.dto.Query <|-- com.welab.loan.finance.dto.qry.TbCreditUserAccountQry
com.welab.sea.util.dto.PageQuery <|-- com.welab.loan.finance.dto.cmd.TbRepaymentQry
com.welab.loan.finance.core.config.AbstractConfig <|-- com.welab.loan.finance.core.config.MultiServiceConfiguration
java.io.Serializable <|.. com.welab.loan.finance.dto.BankConfigDTO
com.welab.loan.finance.service.business.lend.ILendService <|.. com.welab.loan.finance.service.business.lend.AbstractLendService
com.welab.loan.finance.service.business.lend.IBatchTransferService <|.. com.welab.loan.finance.service.business.lend.AbstractLendService
com.welab.loan.finance.service.business.lend.IRecoveryService <|.. com.welab.loan.finance.service.business.lend.AbstractLendService
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.FlexifitResignJob
java.io.Serializable <|.. com.welab.loan.finance.dto.tb.TbRepaymentDTO
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.PermataTransferJob
java.io.Serializable <|.. com.welab.loan.finance.vo.CollectionUserListVO
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.LoanDataDTO
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.vo.CPlanContractVO
java.io.Serializable <|.. com.welab.loan.finance.response.EPlanTryCalculationDetailVO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.coupon.TransformDuesTest
com.welab.loan.finance.model.LoanTimeoutConfigExample +.. com.welab.loan.finance.model.LoanTimeoutConfigExample$GeneratedCriteria
com.welab.loan.finance.model.LoanTimeoutConfigExample +.. com.welab.loan.finance.model.LoanTimeoutConfigExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanTimeoutConfigExample$Criteria
com.welab.loan.finance.model.LoanTimeoutConfigExample +.. com.welab.loan.finance.model.LoanTimeoutConfigExample$Criterion
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.LoanTimeOutJob
com.welab.loan.finance.core.dues.AbstractCostService <|-- com.welab.loan.finance.core.dues.impl.TbTravelokaPayLaterCostService
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.CreditUserTagRuleDelayTriggerJob
com.welab.loan.finance.service.business.repayment.IModDuesService <|.. com.welab.loan.finance.service.business.repayment.ModDuesServiceImpl
com.welab.loan.finance.core.dues.AbstractCostService <|-- com.welab.loan.finance.core.dues.impl.EplanTryCalculateCostService
java.io.Serializable <|.. com.welab.loan.finance.dto.TbUserCreditAmountDTO
com.welab.loan.finance.core.loan.lend.ILendTransferService <|.. com.welab.loan.finance.core.loan.lend.LendTransferServiceImpl
com.welab.loan.finance.vo.CollectionRepaymentVo <|-- com.welab.loan.finance.vo.TestRepaymentVo
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.credit.CreditCancelTest
com.welab.loan.finance.model.FinanceFundExample +.. com.welab.loan.finance.model.FinanceFundExample$GeneratedCriteria
com.welab.loan.finance.model.FinanceFundExample +.. com.welab.loan.finance.model.FinanceFundExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FinanceFundExample$Criteria
com.welab.loan.finance.model.FinanceFundExample +.. com.welab.loan.finance.model.FinanceFundExample$Criterion
com.welab.loan.finance.core.dues.ICostService <|.. com.welab.loan.finance.core.dues.AbstractCostService
java.io.Serializable <|.. com.welab.loan.finance.dto.cmd.tb.InvoiceCmd
com.welab.loan.finance.model.UvfFileRepaymentDetailExample +.. com.welab.loan.finance.model.UvfFileRepaymentDetailExample$GeneratedCriteria
com.welab.loan.finance.model.UvfFileRepaymentDetailExample +.. com.welab.loan.finance.model.UvfFileRepaymentDetailExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.UvfFileRepaymentDetailExample$Criteria
com.welab.loan.finance.model.UvfFileRepaymentDetailExample +.. com.welab.loan.finance.model.UvfFileRepaymentDetailExample$Criterion
com.welab.loan.finance.model.FinanceTradingExample +.. com.welab.loan.finance.model.FinanceTradingExample$GeneratedCriteria
com.welab.loan.finance.model.FinanceTradingExample +.. com.welab.loan.finance.model.FinanceTradingExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FinanceTradingExample$Criteria
com.welab.loan.finance.model.FinanceTradingExample +.. com.welab.loan.finance.model.FinanceTradingExample$Criterion
com.welab.loan.finance.model.OverdueExample +.. com.welab.loan.finance.model.OverdueExample$GeneratedCriteria
com.welab.loan.finance.model.OverdueExample +.. com.welab.loan.finance.model.OverdueExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.OverdueExample$Criteria
com.welab.loan.finance.model.OverdueExample +.. com.welab.loan.finance.model.OverdueExample$Criterion
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.credit.CustomerTest
java.io.Serializable <|.. com.welab.loan.finance.dto.CreditAccountTrackCmd
com.welab.loan.finance.provider.ServiceKey <|-- com.welab.loan.finance.app.command.tb.order.loandetail.TbLoanDetailBuilder
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.PaymentScheduleDto
com.welab.loan.finance.vo.request.FifUvfMotorLoanReq <|-- com.welab.loan.finance.vo.request.UvfChannellingLoanReq
java.io.Serializable <|.. com.welab.loan.finance.dto.tb.TbRepaymentNotifyDTO
com.welab.loan.finance.service.IMerchantTradingService <|.. com.welab.loan.finance.service.impl.MerchantTradingServiceImpl
com.welab.loan.finance.service.business.repayment.IRepaymentService <|.. com.welab.loan.finance.service.business.repayment.AbstractRepaymentService
java.io.Serializable <|.. com.welab.loan.finance.vo.response.LoanPlansContractVO
java.io.Serializable <|.. com.welab.loan.finance.dto.qry.LoanCouponQry
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.vo.TbRepaymentVO
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.FifUvfMotorLoanVo
com.welab.loan.finance.app.service.paybills.AbstractPayBillsService +.. com.welab.loan.finance.app.service.paybills.AbstractPayBillsService$PayBillsContext
com.welab.loan.finance.app.service.paybills.PayBills <|-- com.welab.loan.finance.app.service.paybills.AbstractPayBillsService$PayBillsContext
com.welab.loan.finance.model.CreditAccountRemainingTrackExample +.. com.welab.loan.finance.model.CreditAccountRemainingTrackExample$GeneratedCriteria
com.welab.loan.finance.model.CreditAccountRemainingTrackExample +.. com.welab.loan.finance.model.CreditAccountRemainingTrackExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditAccountRemainingTrackExample$Criteria
com.welab.loan.finance.model.CreditAccountRemainingTrackExample +.. com.welab.loan.finance.model.CreditAccountRemainingTrackExample$Criterion
com.welab.loan.finance.dto.cmd.AbstractNsListQry <|-- com.welab.loan.finance.dto.cmd.NsLoanListQry
com.welab.loan.finance.service.FinanceUserBankcardSevice <|.. com.welab.loan.finance.service.impl.FinanceUserBankcardSeviceImpl
com.welab.loan.finance.core.dues.vat.VatCost <|.. com.welab.loan.finance.core.dues.vat.impl.CarryingFeeVatCost
java.io.Serializable <|.. com.welab.loan.finance.model.BankConfig
com.welab.loan.finance.model.CreditProxyIncomeLogExample +.. com.welab.loan.finance.model.CreditProxyIncomeLogExample$GeneratedCriteria
com.welab.loan.finance.model.CreditProxyIncomeLogExample +.. com.welab.loan.finance.model.CreditProxyIncomeLogExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditProxyIncomeLogExample$Criteria
com.welab.loan.finance.model.CreditProxyIncomeLogExample +.. com.welab.loan.finance.model.CreditProxyIncomeLogExample$Criterion
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.CustomAdvanceJob
com.welab.sea.util.dto.PageQuery <|-- com.welab.loan.finance.dto.cmd.TbDisbursementQry
com.welab.loan.finance.service.IEplanService <|.. com.welab.loan.finance.app.impl.IEplanServiceImpl
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.vo.request.QueryPayLaterLoanVo
java.io.Serializable <|.. com.welab.loan.finance.dto.tb.TbLendNotifyDTO
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.LendReversalReportJob
com.welab.loan.finance.job.base.AbstractExcelEmailJob <|-- com.welab.loan.finance.job.LendReversalReportJob
java.io.Serializable <|.. com.welab.loan.finance.dto.paylater.QuotaByMonthlyIncomDTO
java.io.Serializable <|.. com.welab.loan.finance.dto.paylater.PayLaterLoanDTO
com.welab.loan.finance.model.CreditUserTagConfig <|-- com.welab.loan.finance.model.ext.CreditUserTagExt
java.io.Serializable <|.. com.welab.loan.finance.dto.LoanCouponDTO
com.welab.loan.finance.model.LoanPlansRelationExample +.. com.welab.loan.finance.model.LoanPlansRelationExample$GeneratedCriteria
com.welab.loan.finance.model.LoanPlansRelationExample +.. com.welab.loan.finance.model.LoanPlansRelationExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanPlansRelationExample$Criteria
com.welab.loan.finance.model.LoanPlansRelationExample +.. com.welab.loan.finance.model.LoanPlansRelationExample$Criterion
com.welab.loan.finance.dto.loan.BaseDto <|-- com.welab.loan.finance.dto.loan.LoanDetailDto
com.welab.loan.finance.model.CreditActivityAbTest <|-- com.welab.loan.finance.core.dto.credit.CreditActivityAbTestDto
com.welab.sea.util.dto.PageQuery <|-- com.welab.loan.finance.dto.cmd.TbDuesQry
com.welab.loan.finance.core.dues.AbstractCostService <|-- com.welab.loan.finance.core.dues.impl.EplanV2CostService
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.TransItemDTO
com.welab.loan.finance.service.repayment.IRepaymentService <|.. com.welab.loan.finance.app.impl.repayment.RepaymentServiceImpl
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.UVFMotorRepossessRepaymentVo
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.TrackVo
java.io.Serializable <|.. com.welab.loan.finance.vo.EContractInfoVO
java.io.Serializable <|.. com.welab.loan.finance.vo.request.SignMethodConfigVO
com.welab.loan.finance.model.LoanCreditRuleExample +.. com.welab.loan.finance.model.LoanCreditRuleExample$GeneratedCriteria
com.welab.loan.finance.model.LoanCreditRuleExample +.. com.welab.loan.finance.model.LoanCreditRuleExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanCreditRuleExample$Criteria
com.welab.loan.finance.model.LoanCreditRuleExample +.. com.welab.loan.finance.model.LoanCreditRuleExample$Criterion
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.JobTest
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.GatewayTest
com.welab.loan.finance.core.dues.AbstractCostService <|-- com.welab.loan.finance.core.dues.impl.NSCostService
com.welab.loan.finance.core.dues.vat.VatCost <|.. com.welab.loan.finance.core.dues.vat.impl.LateFeeVatCost
com.welab.loan.finance.app.manager.credit.product.AbstractCreditProductListManager <|-- com.welab.loan.finance.app.manager.credit.product.CreditCLProductListManager
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.va_sync.VaSyncCacheCleanJob
com.welab.loan.finance.model.FinanceUserBankcardLogExample +.. com.welab.loan.finance.model.FinanceUserBankcardLogExample$GeneratedCriteria
com.welab.loan.finance.model.FinanceUserBankcardLogExample +.. com.welab.loan.finance.model.FinanceUserBankcardLogExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FinanceUserBankcardLogExample$Criteria
com.welab.loan.finance.model.FinanceUserBankcardLogExample +.. com.welab.loan.finance.model.FinanceUserBankcardLogExample$Criterion
com.welab.loan.finance.model.Overdue <|-- com.welab.loan.finance.core.dto.overdue.OverdueDTO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.alfamart.AlfamartSimpleTest
com.welab.loan.finance.model.CreditUserAccountDetail <|-- com.welab.loan.finance.model.ext.CreditUserAccountDetailExt
com.welab.loan.finance.model.UserAdvancePaymentExtndExample +.. com.welab.loan.finance.model.UserAdvancePaymentExtndExample$GeneratedCriteria
com.welab.loan.finance.model.UserAdvancePaymentExtndExample +.. com.welab.loan.finance.model.UserAdvancePaymentExtndExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.UserAdvancePaymentExtndExample$Criteria
com.welab.loan.finance.model.UserAdvancePaymentExtndExample +.. com.welab.loan.finance.model.UserAdvancePaymentExtndExample$Criterion
com.welab.loan.finance.service.config.IConfigService <|.. com.welab.loan.finance.app.impl.config.ConfigServiceImpl
java.io.Serializable <|.. com.welab.loan.finance.dto.CollectionLoanOverDueInfoDTO
com.welab.loan.finance.model.FinanceUserBankcard <|-- com.welab.loan.finance.vo.response.UserBankcardResVo
java.io.Serializable <|.. com.welab.loan.finance.vo.request.LoanWarrantyVo
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.LendVo
com.welab.loan.finance.model.CreditLoanCancelExample +.. com.welab.loan.finance.model.CreditLoanCancelExample$GeneratedCriteria
com.welab.loan.finance.model.CreditLoanCancelExample +.. com.welab.loan.finance.model.CreditLoanCancelExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditLoanCancelExample$Criteria
com.welab.loan.finance.model.CreditLoanCancelExample +.. com.welab.loan.finance.model.CreditLoanCancelExample$Criterion
com.welab.loan.finance.service.loan.DisbursementCapService <|.. com.welab.loan.finance.app.impl.loan.DisbursementCapServiceImpl
com.welab.loan.finance.model.LoanDetailExample +.. com.welab.loan.finance.model.LoanDetailExample$GeneratedCriteria
com.welab.loan.finance.model.LoanDetailExample +.. com.welab.loan.finance.model.LoanDetailExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanDetailExample$Criteria
com.welab.loan.finance.model.LoanDetailExample +.. com.welab.loan.finance.model.LoanDetailExample$Criterion
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.lend.BcaLendTest
com.welab.loan.finance.mapper.CreditActivityAbTestGroupLoanRelationMapper <|-- com.welab.loan.finance.mapper.ext.CreditActivityAbTestGroupLoanRelationExtMapper
java.io.Serializable <|.. com.welab.loan.finance.dto.plan.EPlanRateDTO
com.welab.common.exception.FastRuntimeException <|-- com.welab.loan.finance.exception.BusinessException
com.welab.loan.finance.app.command.plan.AbstractPlan <|-- com.welab.loan.finance.app.command.plan.CPlanExe
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.RepaymentTrackVo
com.welab.loan.finance.model.LoanTransactionExample +.. com.welab.loan.finance.model.LoanTransactionExample$GeneratedCriteria
com.welab.loan.finance.model.LoanTransactionExample +.. com.welab.loan.finance.model.LoanTransactionExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanTransactionExample$Criteria
com.welab.loan.finance.model.LoanTransactionExample +.. com.welab.loan.finance.model.LoanTransactionExample$Criterion
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.credit.CreditUseTest
com.welab.loan.finance.service.business.fund.IFundMatchService <|.. com.welab.loan.finance.service.business.fund.FundMatchServiceImpl
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.McEditLoanAmountJob
java.io.Serializable <|.. com.welab.loan.finance.dto.paylater.CreditUserTagChangeDTO
com.welab.loan.finance.model.FinanceUserBankcardExample +.. com.welab.loan.finance.model.FinanceUserBankcardExample$GeneratedCriteria
com.welab.loan.finance.model.FinanceUserBankcardExample +.. com.welab.loan.finance.model.FinanceUserBankcardExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FinanceUserBankcardExample$Criteria
com.welab.loan.finance.model.FinanceUserBankcardExample +.. com.welab.loan.finance.model.FinanceUserBankcardExample$Criterion
com.welab.loan.finance.core.overdue.AbstractCalLateFee <|-- com.welab.loan.finance.core.overdue.most.MostCalLateFeeImpl
com.welab.loan.finance.app.service.flow.AbstractFlowComponent <|-- com.welab.loan.finance.app.service.flow.repaymentback.RepaymentBackToAwdaComponent
com.welab.loan.finance.app.service.credit.loan.AbstractCreditLoanService <|-- com.welab.loan.finance.app.service.credit.loan.LongLoanService
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.advance.AdvanceRepaymentTest
java.io.Serializable <|.. com.welab.loan.finance.response.DueRsp
com.welab.loan.finance.app.command.tb.order.loandetail.TbLoanDetailBuilder <|.. com.welab.loan.finance.app.command.tb.order.loandetail.impl.GadaTbLoanDetailBuilder
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.dto.TryApplyFPlanDTO
com.welab.loan.finance.dto.TbCreditUserAccountDTO <|-- com.welab.loan.finance.dto.TbCreditUserAccountExtDTO
com.welab.loan.finance.service.business.repayment.IQueryDuesService <|.. com.welab.loan.finance.service.business.repayment.QueryDuesServiceImpl
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.flow.RepaymentBackFlowTest
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.SendDisburseTaxEmailJob
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.RepaymentTracBackDto
com.welab.loan.finance.model.FinanceRepaymentTrackExample +.. com.welab.loan.finance.model.FinanceRepaymentTrackExample$GeneratedCriteria
com.welab.loan.finance.model.FinanceRepaymentTrackExample +.. com.welab.loan.finance.model.FinanceRepaymentTrackExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FinanceRepaymentTrackExample$Criteria
com.welab.loan.finance.model.FinanceRepaymentTrackExample +.. com.welab.loan.finance.model.FinanceRepaymentTrackExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.dto.DataDictionaryDTO
java.io.Serializable <|.. com.welab.loan.finance.dto.cmd.tb.GadaInvoiceExtCmd
com.welab.loan.finance.model.CreditActivityAbTestGroup <|-- com.welab.loan.finance.model.ext.CreditActivityAbTestGroupExt
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.CancelCouponCmd
java.io.Serializable <|.. com.welab.loan.finance.dto.paylater.PayLaterLimitRspDTO
java.io.Serializable <|.. com.welab.loan.finance.dto.EPlanApplyDTO
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.model.mongo.Doc
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.FlowTaskRerunJob
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.LoanReFundEmailJob
com.welab.loan.finance.job.base.AbstractExcelEmailJob <|-- com.welab.loan.finance.job.LoanReFundEmailJob
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.MongoTest
com.welab.loan.finance.service.business.loaninfo.AbstractLoanInfoService <|-- com.welab.loan.finance.service.business.loaninfo.maucash.MaucashLoanInfoServiceImpl
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.CalculationPlanDTO
com.welab.loan.finance.app.command.tb.order.validate.TbInvoiceValidateService <|.. com.welab.loan.finance.app.command.tb.order.validate.impl.TravelokaPaylaterInvoiceValidateService
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.dto.LoanDuesDTO
java.io.Serializable <|.. com.welab.loan.finance.dto.FinanceUserBankcardDto
com.welab.loan.finance.model.LoanUserRepayDetailExample +.. com.welab.loan.finance.model.LoanUserRepayDetailExample$GeneratedCriteria
com.welab.loan.finance.model.LoanUserRepayDetailExample +.. com.welab.loan.finance.model.LoanUserRepayDetailExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanUserRepayDetailExample$Criteria
com.welab.loan.finance.model.LoanUserRepayDetailExample +.. com.welab.loan.finance.model.LoanUserRepayDetailExample$Criterion
com.welab.loan.finance.response.Serializable <|.. com.welab.loan.finance.response.EPlanTryDueVO
com.welab.common.exception.FastRuntimeException <|-- com.welab.loan.finance.exception.LendException
com.welab.loan.finance.model.DuesRepayUpdateRecordExt <|-- com.welab.loan.finance.model.DuesRepayUpdateRecordExtWithBLOBs
com.welab.loan.finance.model.UvfFileRepaymentPkkfrekapExample +.. com.welab.loan.finance.model.UvfFileRepaymentPkkfrekapExample$GeneratedCriteria
com.welab.loan.finance.model.UvfFileRepaymentPkkfrekapExample +.. com.welab.loan.finance.model.UvfFileRepaymentPkkfrekapExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.UvfFileRepaymentPkkfrekapExample$Criteria
com.welab.loan.finance.model.UvfFileRepaymentPkkfrekapExample +.. com.welab.loan.finance.model.UvfFileRepaymentPkkfrekapExample$Criterion
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.LoanBackDto
com.welab.loan.finance.app.service.flow.AbstractFlowComponent <|-- com.welab.loan.finance.app.service.flow.repaymentback.tb.TbDuesBackCompont
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.ProductRateConfigDtoExt
com.welab.loan.finance.app.command.tb.order.loandetail.TbLoanDetailBuilder <|.. com.welab.loan.finance.app.command.tb.order.loandetail.impl.RestockTbLoanDetailBuilder
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.CalCplanRepayDTO
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.CustomRepayCmd
com.welab.loan.finance.core.config.PlanConfig +.. com.welab.loan.finance.core.config.PlanConfig$Config
java.io.Serializable <|.. com.welab.loan.finance.dto.FlexRepaymentDto
com.welab.loan.finance.service.business.loaninfo.maucash.MaucashLoanInfoServiceImpl <|-- com.welab.loan.finance.service.business.loaninfo.maumodal.MaumodalLoanInfoServiceImpl
java.io.Serializable <|.. com.welab.loan.finance.vo.UserBankcardVO
java.io.Serializable <|.. com.welab.loan.finance.vo.request.CreateC1PlanContractVo
org.springframework.web.filter.OncePerRequestFilter <|-- com.welab.loan.finance.filter.LogFilter
com.welab.loan.finance.core.loan.coupon.ILendRepayDuesCoupon <|.. com.welab.loan.finance.core.loan.coupon.LendRepayDuesCouponImpl
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.dto.DuesRepayMentDTO
com.welab.loan.finance.service.LevenshteinScoreService <|.. com.welab.loan.finance.service.impl.LevenshteinScoreServiceImpl
com.welab.loan.finance.app.command.tb.dues.costreq.CostReqBuilder <|.. com.welab.loan.finance.app.command.tb.dues.costreq.impl.HsoCostReqBuilder
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.HsoDuesUpdateCmd
java.io.Serializable <|.. com.welab.loan.finance.core.dto.overdue.LoanMaxOverDueDayDTO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.excel.ExportExcelTest
com.welab.loan.finance.model.CreditActivityAbTestGroupUserRelationExample +.. com.welab.loan.finance.model.CreditActivityAbTestGroupUserRelationExample$GeneratedCriteria
com.welab.loan.finance.model.CreditActivityAbTestGroupUserRelationExample +.. com.welab.loan.finance.model.CreditActivityAbTestGroupUserRelationExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditActivityAbTestGroupUserRelationExample$Criteria
com.welab.loan.finance.model.CreditActivityAbTestGroupUserRelationExample +.. com.welab.loan.finance.model.CreditActivityAbTestGroupUserRelationExample$Criterion
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.MulLoanDTO
com.welab.sea.util.dto.Query <|-- com.welab.loan.finance.dto.qry.C1PlanContractQry
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.LoanCouponDetailVo
java.io.Serializable <|.. com.welab.loan.finance.dto.TryActivityDto
java.io.Serializable <|.. com.welab.loan.finance.dto.cmd.tb.TbLoanDetailRate
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.PaymentTests
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.TryPlanRepaymentDTO
com.welab.loan.finance.provider.ServiceKey <|-- com.welab.loan.finance.app.command.tb.order.validate.TbInvoiceValidateService
com.welab.loan.finance.app.command.tb.lend.transfer.impl.TrioTransferService <|-- com.welab.loan.finance.app.command.tb.lend.transfer.impl.DayaTransferService
com.welab.loan.finance.model.Comparable <|.. com.welab.loan.finance.model.CreditUserTagConfig
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.CessieLoanRspDTO
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.TryApplyFPlanCmd
com.welab.loan.finance.service.HsoDubboService <|.. com.welab.loan.finance.app.impl.HsoDubboServiceImpl
com.welab.loan.finance.model.MatrixDisbursementCapLogExample +.. com.welab.loan.finance.model.MatrixDisbursementCapLogExample$GeneratedCriteria
com.welab.loan.finance.model.MatrixDisbursementCapLogExample +.. com.welab.loan.finance.model.MatrixDisbursementCapLogExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.MatrixDisbursementCapLogExample$Criteria
com.welab.loan.finance.model.MatrixDisbursementCapLogExample +.. com.welab.loan.finance.model.MatrixDisbursementCapLogExample$Criterion
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.TrackDto
com.welab.loan.finance.core.overdue.IModLateService <|.. com.welab.loan.finance.core.overdue.mod.ModLateServiceImpl
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.LoanPlansContractBusiServiceTest
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.TappRepaymentCmd
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.mongo.TemplateTest
java.io.Serializable <|.. com.welab.loan.finance.vo.response.SignHistoryDetailVO
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.QueryCPlanAmountCmd
java.io.Serializable <|.. com.welab.loan.finance.dto.plan.CalCPlanAmountDTO
java.io.Serializable <|.. com.welab.loan.finance.vo.rebook.RebookApplyLimitVO
com.welab.loan.finance.model.FinanceUserAccountDetail <|-- com.welab.loan.finance.model.ext.FinanceUserAccountDetailExt
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.ApplyFPlanDTO
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.ApplyUseCreditVO
java.io.Serializable <|.. com.welab.loan.finance.vo.FinanceConfigVO
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.CreditUserAccountVO
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.ExportDto
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.credit.CreditConfigTest
java.io.Serializable <|.. com.welab.loan.finance.vo.LoanDetailVO
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.CalculatorOverdueJob
com.welab.loan.finance.job.base.AbstractEmailJob <|-- com.welab.loan.finance.job.CalculatorOverdueJob
com.welab.loan.finance.model.mongo.tbuser.TbUserDoc <|-- com.welab.loan.finance.model.mongo.tbuser.HsoUserDoc
com.welab.loan.finance.model.mongo.tbuser.HsoUserDoc +.. com.welab.loan.finance.model.mongo.tbuser.HsoUserDoc$SalesInfo
com.welab.loan.finance.provider.ServiceKey <|-- com.welab.loan.finance.app.command.tb.lend.lend.TbFinanceLendBuilder
com.welab.loan.finance.mapper.CreditActivityAbTestGroupMapper <|-- com.welab.loan.finance.mapper.ext.CreditActivityAbTestGroupExtMapper
com.welab.loan.finance.app.command.tb.dues.costreq.CostReqBuilder <|.. com.welab.loan.finance.app.command.tb.dues.costreq.impl.DefaultCostReqBuilder
java.io.Serializable <|.. com.welab.loan.finance.core.dto.va.TravelokaPaylaterAmountDTO
java.io.Serializable <|.. com.welab.loan.finance.response.dues.RepayDuesVO
com.welab.loan.finance.service.RepaymentService <|.. com.welab.loan.finance.service.impl.RepaymentServiceImpl
com.welab.loan.finance.model.LoanCouponDetailExample +.. com.welab.loan.finance.model.LoanCouponDetailExample$GeneratedCriteria
com.welab.loan.finance.model.LoanCouponDetailExample +.. com.welab.loan.finance.model.LoanCouponDetailExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanCouponDetailExample$Criteria
com.welab.loan.finance.model.LoanCouponDetailExample +.. com.welab.loan.finance.model.LoanCouponDetailExample$Criterion
com.welab.sea.util.dto.Command <|-- com.welab.loan.finance.dto.cmd.tb.BaseTbUserAccountTransCmd
com.welab.loan.finance.service.InvitePeopleService <|.. com.welab.loan.finance.service.impl.InvitePeopleServiceImpl
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.cmd.tb.HsoLimitQry
com.welab.loan.finance.calculator.IDueCalculator <|.. com.welab.loan.finance.calculator.FixedDateCalculatorV2
com.welab.loan.finance.core.dues.AbstractCostService <|-- com.welab.loan.finance.core.dues.impl.FlexifitCostService
com.welab.sea.util.dto.DTO <|-- com.welab.loan.finance.vo.response.NsDueVO
java.io.Serializable <|.. com.welab.loan.finance.model.ext.PendLendLoanExt
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.tb.Tb2Test
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.bca.BcaTransferReportJob
com.welab.loan.finance.job.base.AbstractEmailJob <|-- com.welab.loan.finance.job.bca.BcaTransferReportJob
com.welab.loan.finance.job.bca.BcaTransferReportJob +.. com.welab.loan.finance.job.bca.BcaTransferReportJob$TaskExt
com.welab.loan.finance.job.bca.TaskVO <|-- com.welab.loan.finance.job.bca.BcaTransferReportJob$TaskExt
com.welab.loan.finance.service.LoanOverdueInfoService <|.. com.welab.loan.finance.service.impl.LoanOverdueInfoServiceImpl
java.io.Serializable <|.. com.welab.loan.finance.dto.ReportOverdueInfoDTO
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.UseCreditVO
com.welab.loan.finance.app.manager.credit.product.AbstractCreditProductListManager <|-- com.welab.loan.finance.app.manager.credit.product.CreditPLProductListManager
com.welab.loan.finance.service.CreditUserInfoService <|.. com.welab.loan.finance.app.impl.CreditUserInfoServiceImple
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.RateTypeDetailDTO
java.io.Serializable <|.. com.welab.loan.finance.vo.RepayConfigVO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.credit.activity.CreditAbtest
com.welab.loan.finance.model.LoanOverdueInfoExample +.. com.welab.loan.finance.model.LoanOverdueInfoExample$GeneratedCriteria
com.welab.loan.finance.model.LoanOverdueInfoExample +.. com.welab.loan.finance.model.LoanOverdueInfoExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.LoanOverdueInfoExample$Criteria
com.welab.loan.finance.model.LoanOverdueInfoExample +.. com.welab.loan.finance.model.LoanOverdueInfoExample$Criterion
com.welab.loan.finance.dto.Serializable <|.. com.welab.loan.finance.dto.CalculatorDto
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.credit.CreditTrackTest
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.LoanCouponExpireJob
com.welab.loan.finance.model.FlowTaskTrackExample +.. com.welab.loan.finance.model.FlowTaskTrackExample$GeneratedCriteria
com.welab.loan.finance.model.FlowTaskTrackExample +.. com.welab.loan.finance.model.FlowTaskTrackExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FlowTaskTrackExample$Criteria
com.welab.loan.finance.model.FlowTaskTrackExample +.. com.welab.loan.finance.model.FlowTaskTrackExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.dto.MaxOverDueDto
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.RepayTrackDto
com.welab.loan.finance.dto.PageDto <|-- com.welab.loan.finance.dto.FinanceTradingDto
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.RateTest
com.welab.loan.finance.model.flow.BaseFlowContext <|-- com.welab.loan.finance.model.flow.RepaymentBackFlowContext
com.welab.loan.finance.service.business.repayment.maucash.AbstractRepaymentService <|-- com.welab.loan.finance.service.business.repayment.maucash.MaucashRepaymentServiceImpl
com.welab.loan.finance.service.LoanTimeoutConfigService <|.. com.welab.loan.finance.service.impl.LoanTimeoutConfigServiceImpl
com.welab.loan.finance.dto.cmd.ApplyCPlanCmd <|-- com.welab.loan.finance.dto.cmd.BatchApplyCPlanCmd
java.io.Serializable <|.. com.welab.loan.finance.dto.payment.UserAdvancePaymentDTO
com.welab.loan.finance.model.mongo.tbuser.TbUserDoc <|-- com.welab.loan.finance.model.mongo.tbuser.TravelokaUserDoc
com.welab.loan.finance.model.CreditUserLoanExample +.. com.welab.loan.finance.model.CreditUserLoanExample$GeneratedCriteria
com.welab.loan.finance.model.CreditUserLoanExample +.. com.welab.loan.finance.model.CreditUserLoanExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.CreditUserLoanExample$Criteria
com.welab.loan.finance.model.CreditUserLoanExample +.. com.welab.loan.finance.model.CreditUserLoanExample$Criterion
java.io.Serializable <|.. com.welab.loan.finance.model.ext.LoanPlanCount
com.welab.loan.finance.model.FundAccountExample +.. com.welab.loan.finance.model.FundAccountExample$GeneratedCriteria
com.welab.loan.finance.model.FundAccountExample +.. com.welab.loan.finance.model.FundAccountExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.FundAccountExample$Criteria
com.welab.loan.finance.model.FundAccountExample +.. com.welab.loan.finance.model.FundAccountExample$Criterion
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.credit.CreditTagTest
com.welab.sea.util.dto.PageQuery <|-- com.welab.loan.finance.vo.response.paybills.BillsQry
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.AstrapayRepaymentNotifyJob
com.welab.loan.finance.job.AstrapayRepaymentNotifyJob +.. com.welab.loan.finance.job.AstrapayRepaymentNotifyJob$AstrapayRepaymentVO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.OverdueTest
com.welab.sea.util.dto.PageQuery <|-- com.welab.loan.finance.dto.qry.TbLoanPendRepayQry
java.io.Serializable <|.. com.welab.loan.finance.vo.OverDuesVO
com.welab.loan.finance.dto.cmd.tb.TbUserImportCmd <|-- com.welab.loan.finance.dto.cmd.tb.TravelokaUserImportCmd
com.welab.loan.finance.vo.Serializable <|.. com.welab.loan.finance.vo.ProductExtVO
com.welab.loan.finance.mapper.TbUserMapper <|-- com.welab.loan.finance.mapper.ext.TbUserExtMapper
com.welab.sea.util.dto.PageQuery <|-- com.welab.loan.finance.dto.cmd.tb.TbUserQry
com.welab.loan.finance.model.LoanDetailExtend <|-- com.welab.loan.finance.core.dto.LoanDetailExtendDto
com.welab.loan.finance.service.CPlanService <|.. com.welab.loan.finance.app.impl.CPlanServiceImpl
com.welab.loan.finance.app.service.flow.AbstractFlowComponent <|-- com.welab.loan.finance.app.service.flow.repaymentback.FinanceDuesBackCompont
com.welab.loan.finance.model.SignMethodOperateHistoryExample +.. com.welab.loan.finance.model.SignMethodOperateHistoryExample$GeneratedCriteria
com.welab.loan.finance.model.SignMethodOperateHistoryExample +.. com.welab.loan.finance.model.SignMethodOperateHistoryExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.SignMethodOperateHistoryExample$Criteria
com.welab.loan.finance.model.SignMethodOperateHistoryExample +.. com.welab.loan.finance.model.SignMethodOperateHistoryExample$Criterion
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.vat.VatTest
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.vat.VatRepaymentTest
java.io.Serializable <|.. com.welab.loan.finance.dto.MinPayAmountDetailDto
com.welab.loan.finance.app.command.tb.lend.transfer.impl.TrioTransferService <|-- com.welab.loan.finance.app.command.tb.lend.transfer.impl.SmpTransferService
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.cplan.CPlanTest
com.welab.loan.finance.model.InsuranceDetailExample +.. com.welab.loan.finance.model.InsuranceDetailExample$GeneratedCriteria
com.welab.loan.finance.model.InsuranceDetailExample +.. com.welab.loan.finance.model.InsuranceDetailExample$Criteria
com.welab.loan.finance.model.GeneratedCriteria <|-- com.welab.loan.finance.model.InsuranceDetailExample$Criteria
com.welab.loan.finance.model.InsuranceDetailExample +.. com.welab.loan.finance.model.InsuranceDetailExample$Criterion
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.loan.finance.job.uvf.UvfFtpLoaderJob
com.welab.loan.finance.service.AdvanceRepaymentService <|.. com.welab.loan.finance.app.impl.AdvanceRepaymentImpl
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.merchant.MerchantTest
com.welab.loan.finance.dto.paylater.Serializable <|.. com.welab.loan.finance.dto.paylater.CalServiceFeeRspDTO
com.welab.loan.finance.test.SimpleTest <|-- com.welab.loan.finance.test.refund.refundTest
@enduml