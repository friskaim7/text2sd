@startuml
class com.welab.moon.test.app.service.HomePageServiceTest {
- HomePageService homePageService
+ void hso()
+ void trio()
}
class com.welab.moon.controller.TbCreditLimitController {
- TbCreditLimitService tbCreditLimitService
- TbCreditUserAccountManager tbCreditUserAccountManager
+ Response<PageInfo<AhassLimitVO>> ahassLimit(Long,Long,HsoLimitDTO)
+ Response ahassLimitExport(HttpServletResponse,Long,Long,HsoLimitDTO)
+ Response<TbCreditUserAccountVO> creditAccount(Long)
}
class com.welab.moon.model.dto.gada.PreApprovalInfoDTO {
- String status
- String partner
- String uniqueCodeBuyer
- String storeAddress
- String merchantType
- String storeCode
- String storeName
- String businessCategory
- String dateJoined
- Long provinceId
- Long cityId
- String district
- String zipCode
- Long lastYearTotalTransactionUnit01
- Long lastYearTotalTransactionUnit02
- Long lastYearTotalTransactionUnit03
- Long lastYearTotalTransactionUnit04
- Long lastYearTotalTransactionUnit05
- Long lastYearTotalTransactionUnit06
- Long lastYearTotalTransactionUnit07
- Long lastYearTotalTransactionUnit08
- Long lastYearTotalTransactionUnit09
- Long lastYearTotalTransactionUnit10
- Long lastYearTotalTransactionUnit11
- Long lastYearTotalTransactionUnit12
- Long thisYearTotalTransactionUnit01
- Long thisYearTotalTransactionUnit02
- Long thisYearTotalTransactionUnit03
- Long thisYearTotalTransactionUnit04
- Long thisYearTotalTransactionUnit05
- Long thisYearTotalTransactionUnit06
- Long thisYearTotalTransactionUnit07
- Long thisYearTotalTransactionUnit08
- Long thisYearTotalTransactionUnit09
- Long thisYearTotalTransactionUnit10
- Long thisYearTotalTransactionUnit11
- Long thisYearTotalTransactionUnit12
- Long lastYearTotalTransactionRp01
- Long lastYearTotalTransactionRp02
- Long lastYearTotalTransactionRp03
- Long lastYearTotalTransactionRp04
- Long lastYearTotalTransactionRp05
- Long lastYearTotalTransactionRp06
- Long lastYearTotalTransactionRp07
- Long lastYearTotalTransactionRp08
- Long lastYearTotalTransactionRp09
- Long lastYearTotalTransactionRp10
- Long lastYearTotalTransactionRp11
- Long lastYearTotalTransactionRp12
- Long thisYearTotalTransactionRp01
- Long thisYearTotalTransactionRp02
- Long thisYearTotalTransactionRp03
- Long thisYearTotalTransactionRp04
- Long thisYearTotalTransactionRp05
- Long thisYearTotalTransactionRp06
- Long thisYearTotalTransactionRp07
- Long thisYearTotalTransactionRp08
- Long thisYearTotalTransactionRp09
- Long thisYearTotalTransactionRp10
- Long thisYearTotalTransactionRp11
- Long thisYearTotalTransactionRp12
- String cashPayment
- String otherPayment
- int last3MonthTrxCount
- int last6MonthTrxCount
- String last3And6PassFalg
- BigDecimal lastYearAndThisYearTrxAvg
- BigDecimal last6MonthTrxAvg
- BigDecimal purchaseTrendRate
- String purchaseTrend
- BigDecimal revenue
- BigDecimal dbrCalculation
- String acceptFalg
- Long plafondLimit
- String approvalStatus
}
class com.welab.moon.test.app.service.TbAgreementTest {
- TbAgreementService tbAgreementService
- TbSignUpKeyManager tbSignUpKeyManager
- BaseTbUserService baseTbUserService
- BaseTbLoanService baseTbLoanService
- ProductConfigCmdExe productConfigCmdExe
+ void tbAgreementListTest()
+ void tbAgreementViewTest()
+ void tbAgreementDownLoadTest()
+ void getGadaRate()
}
class com.welab.moon.mq.listener.TbOverdueListener {
- BaseTbLoanService baseTbLoanService
+ void onMessage(Message)
}
class com.welab.moon.app.model.traveloka.KtpAddress {
- String province
- String city
- String area
- String village
- Date streetLine
- String postCode
}
class com.welab.moon.model.TbUser {
- Long id
- String partner
- Long userId
- String name
- String picName
- String mobile
- String nik
- String email
- String docId
- Long parentUserId
- String partnerUserNo
- Byte userType
- Boolean deleted
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getPartner()
+ void setPartner(String)
+ Long getUserId()
+ void setUserId(Long)
+ String getName()
+ void setName(String)
+ String getPicName()
+ void setPicName(String)
+ String getMobile()
+ void setMobile(String)
+ String getNik()
+ void setNik(String)
+ String getEmail()
+ void setEmail(String)
+ String getDocId()
+ void setDocId(String)
+ Long getParentUserId()
+ void setParentUserId(Long)
+ String getPartnerUserNo()
+ void setPartnerUserNo(String)
+ Byte getUserType()
+ void setUserType(Byte)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.moon.model.dto.gada.apply.UpdateTbCreditApplyDTO {
- String applyCode
- Long approvedAmount
- Byte status
}
class com.welab.moon.app.command.TbBankInfoCmdExe {
- BaseTbConfigsService baseTbConfigsService
+ Map<String,TbConfigs> execute(Long)
}
class com.welab.moon.service.impl.RestoreTbUserServiceImpl {
- RestoreTbUserAccountCmdExe restoreTbUserAccountCmdExe
+ Response<Void> restoreTbUserAccount(RestoreTbUserAccountDTO)
}
class com.welab.moon.model.vo.UserPartnerInfoVO {
- Boolean hasPartnerUser
- Integer level
}
class com.welab.moon.model.dto.gada.apply.BusinessProfileDTO {
- String nameOfbusinessEntity
- String formOfBusinessEntity
- String placeOfEstablishmentOfBusinessEntities
- String deedOfEstablishmentNumber
- String deedOfEstablishmentDate
- String haveaDeedOfChange
- String lastAmendmentDeedNumber
- String lastAmendmentDeedDate
- String npwp
- String npwpUrl
- String legalityOfBusinessEntities
- String nib
- String nibUrl
- String storeWareHouseAddress
- String businessEntityWard
- String businessEntitySubDistrict
- String regencyOrCityBusinessEntity
- String businessEntityZipCode
- String goPublic
- String photoOfPowerOfAttorneyInChargeUrl
- String personInChargeIdentityNumber
- String photoIdOfThePersonInChargeUrl
- String nameOfPersonInChargeAccordingToIdentity
- String birthplaceOfPersonInCharge
- String genderOfPersonInCharge
- String addressOfPersonInCharge
- String rtOfPersonInCharge
- String rwOfPersonInCharge
- String subDistrictOfPersonInCharge
- String cityOfPersonInCharge
- String provinceOfPersonInCharge
- String wardOfPersonInCharge
- String zipCodeOfPersonInCharge
- String picPosition
}
class com.welab.moon.app.service.credit.trio.TrioLoanImportService {
- MongoManager mongoManager
- BaseTbLoanService baseTbLoanService
- TbCreditUserAccountManager tbCreditUserAccountManager
- BaseTbUserDocService baseTbUserDocService
- ProductRateConfigFacade productRateConfigFacade
- BaseToBLoanAgreementService baseToBLoanAgreementService
- DisbursementCmdExe disbursementCmdExe
- String trioAgreementCheckBeginTime
- {static} ThreadLocal<Map<Long,Boolean>> USER_DOC_CHECK_CACHE
- {static} ThreadLocal<Set<String>> FAST_LEND_BATCH_NO
+ {static} int AGREEMENT_DOC_EXPIRED_DAY
- {static} Long FAST_LEND_MAX_AMOUNT_LIMIT
+ List<InvoiceImportBO> doHandelImportData(ImportLoanDTO)
+ TbImportVO checkImportData(List<InvoiceImportBO>,Long)
+ List<InvoiceImportBO> doHandelFile(MultipartFile[])
# void successCallBack(ImportLoanDTO)
# void errorCallBack(ImportLoanDTO,Exception)
- List<InvoiceImportBO> handleData(List<String>)
- InvoiceImportBO buildInvoiceImportBO(String,Map<String,TbUser>)
- TrioTbLoanDoc insertTbLoanDoc(InvoiceImportBO)
- boolean validateFields(InvoiceImportBO,List<String>,int,int)
- boolean validateBiz(InvoiceImportBO,Map<String,TbUser>,List<String>,List<String>,int,int,Long,ProductRateConfigVO)
- boolean checkSigningStatus(List<String>,TbUser)
# TbLoan buildTbLoan(InvoiceImportBO)
+ String getKey()
}
class com.welab.moon.model.dto.TbAgreementDocDTO {
- Long id
- String partner
- String tbLoanNumber
- String mobile
- Boolean enabled
- Long adminId
- Date createdAt
- Date updatedAt
- Byte signingStatus
- Byte signingMethod
- Date expiredAt
- Date signingAt
}
class com.welab.moon.app.base.credit.BaseTbCreditApplyService {
- TbCreditApplyExtMapper tbCreditApplyMapper
+ TbCreditApply selectLastByPartnerAndApplyCode(String,String)
+ List<TbCreditApply> selectByPartnerAndApplyCodes(String,List<String>)
+ List<TbCreditApply> selectListByPartnerAndApplyCodesAndStatus(String,List<String>,List<Byte>)
+ List<TbCreditApply> selectListByPartnerAndCustomerCodesAndStatus(String,List<String>,List<Byte>)
+ int batchInsert(List<TbCreditApply>)
+ int insertSelective(TbCreditApply)
+ int updateByPrimaryKeySelective(TbCreditApply)
+ int updateDeleted(String)
+ int updateByApplyCode(TbCreditApply)
+ PageInfo<TbCreditApply> selectPage(ApplyQryVO)
}
class com.welab.moon.model.mongo.TravelokaTbLoanDoc {
- String partner
- String orderNo
- Date disbursedAt
- String tenor
- String customerSegment
- String partnerProductType
- String interestRate
- Date dueDatePayment
- List<Dues> dues
- String contract
}
class com.welab.moon.app.command.TbPersonalRegMailCmdExe {
- DocumentService documentService
- MessageEmailFacade messageEmailFacade
- RegionServiceFacade regionServiceFacade
- BaseTbConfigsService baseTbConfigsService
# String appId
- DocumentServiceFacade documentServiceFacade
- String FILE_DOWNLOAD_URL
- MongodbFileService mongodbFileService
+ void send(PersonalRegBO)
- String createContent(PersonalRegBO)
- List<Document2FileBO> buildAttachmentFile(PersonalRegBO)
- List<PersonalRegBO> buildPersonalRegDoc(PersonalRegBO)
- TbConfigs getConfig(Map<String,Map<String,TbConfigs>>,TbConfigsEnum,String)
}
class com.welab.moon.model.bo.BuildLoanBO {
- LoanDoc loanDoc
- UserDoc userDoc
- LoanDuesDTO loanDuesDTO
- TbAgreementDoc agreementDoc
}
class com.welab.moon.model.dto.ConfirmLoanDTO {
- String loanNumber
- Long userId
- Long amount
- ConfirmStatusEnum confirmStatus
}
class com.welab.moon.model.mongo.tbuser.TravelokaPaylateUserDoc {
- UserProfile userProfile
- WorkProfile workProfile
- List<ContactList> contactList
}
class com.welab.moon.config.DisbursementJobConfig {
- String strategy
- String cron
- String allowLoanStates
- Boolean skipWeekend
- Boolean skipHoliday
}
class com.welab.moon.model.dto.TbCreditUserAccountInfoDTO {
- Long sumMoney
- Long useMoney
- Long freezeMoney
- Long availableMoney
- String accountStatus
- Byte status
}
class com.welab.moon.utils.RandomUtils {
- {static} Random RAND
- <<Create>> RandomUtils()
+ {static} String random4()
+ {static} String randomNumber(int)
}
class com.welab.moon.model.TbCreditUserAccountLogExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> TbCreditUserAccountLogExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.moon.model.TbCreditUserAccountLogExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andAccountIdIsNull()
+ Criteria andAccountIdIsNotNull()
+ Criteria andAccountIdEqualTo(Long)
+ Criteria andAccountIdNotEqualTo(Long)
+ Criteria andAccountIdGreaterThan(Long)
+ Criteria andAccountIdGreaterThanOrEqualTo(Long)
+ Criteria andAccountIdLessThan(Long)
+ Criteria andAccountIdLessThanOrEqualTo(Long)
+ Criteria andAccountIdIn(List<Long>)
+ Criteria andAccountIdNotIn(List<Long>)
+ Criteria andAccountIdBetween(Long,Long)
+ Criteria andAccountIdNotBetween(Long,Long)
+ Criteria andSumMoneyIsNull()
+ Criteria andSumMoneyIsNotNull()
+ Criteria andSumMoneyEqualTo(Long)
+ Criteria andSumMoneyNotEqualTo(Long)
+ Criteria andSumMoneyGreaterThan(Long)
+ Criteria andSumMoneyGreaterThanOrEqualTo(Long)
+ Criteria andSumMoneyLessThan(Long)
+ Criteria andSumMoneyLessThanOrEqualTo(Long)
+ Criteria andSumMoneyIn(List<Long>)
+ Criteria andSumMoneyNotIn(List<Long>)
+ Criteria andSumMoneyBetween(Long,Long)
+ Criteria andSumMoneyNotBetween(Long,Long)
+ Criteria andUseMoneyIsNull()
+ Criteria andUseMoneyIsNotNull()
+ Criteria andUseMoneyEqualTo(Long)
+ Criteria andUseMoneyNotEqualTo(Long)
+ Criteria andUseMoneyGreaterThan(Long)
+ Criteria andUseMoneyGreaterThanOrEqualTo(Long)
+ Criteria andUseMoneyLessThan(Long)
+ Criteria andUseMoneyLessThanOrEqualTo(Long)
+ Criteria andUseMoneyIn(List<Long>)
+ Criteria andUseMoneyNotIn(List<Long>)
+ Criteria andUseMoneyBetween(Long,Long)
+ Criteria andUseMoneyNotBetween(Long,Long)
+ Criteria andFreezeMoneyIsNull()
+ Criteria andFreezeMoneyIsNotNull()
+ Criteria andFreezeMoneyEqualTo(Long)
+ Criteria andFreezeMoneyNotEqualTo(Long)
+ Criteria andFreezeMoneyGreaterThan(Long)
+ Criteria andFreezeMoneyGreaterThanOrEqualTo(Long)
+ Criteria andFreezeMoneyLessThan(Long)
+ Criteria andFreezeMoneyLessThanOrEqualTo(Long)
+ Criteria andFreezeMoneyIn(List<Long>)
+ Criteria andFreezeMoneyNotIn(List<Long>)
+ Criteria andFreezeMoneyBetween(Long,Long)
+ Criteria andFreezeMoneyNotBetween(Long,Long)
+ Criteria andOperateSumMoneyIsNull()
+ Criteria andOperateSumMoneyIsNotNull()
+ Criteria andOperateSumMoneyEqualTo(Long)
+ Criteria andOperateSumMoneyNotEqualTo(Long)
+ Criteria andOperateSumMoneyGreaterThan(Long)
+ Criteria andOperateSumMoneyGreaterThanOrEqualTo(Long)
+ Criteria andOperateSumMoneyLessThan(Long)
+ Criteria andOperateSumMoneyLessThanOrEqualTo(Long)
+ Criteria andOperateSumMoneyIn(List<Long>)
+ Criteria andOperateSumMoneyNotIn(List<Long>)
+ Criteria andOperateSumMoneyBetween(Long,Long)
+ Criteria andOperateSumMoneyNotBetween(Long,Long)
+ Criteria andOperateUseMoneyIsNull()
+ Criteria andOperateUseMoneyIsNotNull()
+ Criteria andOperateUseMoneyEqualTo(Long)
+ Criteria andOperateUseMoneyNotEqualTo(Long)
+ Criteria andOperateUseMoneyGreaterThan(Long)
+ Criteria andOperateUseMoneyGreaterThanOrEqualTo(Long)
+ Criteria andOperateUseMoneyLessThan(Long)
+ Criteria andOperateUseMoneyLessThanOrEqualTo(Long)
+ Criteria andOperateUseMoneyIn(List<Long>)
+ Criteria andOperateUseMoneyNotIn(List<Long>)
+ Criteria andOperateUseMoneyBetween(Long,Long)
+ Criteria andOperateUseMoneyNotBetween(Long,Long)
+ Criteria andOperateFreezeMoneyIsNull()
+ Criteria andOperateFreezeMoneyIsNotNull()
+ Criteria andOperateFreezeMoneyEqualTo(Long)
+ Criteria andOperateFreezeMoneyNotEqualTo(Long)
+ Criteria andOperateFreezeMoneyGreaterThan(Long)
+ Criteria andOperateFreezeMoneyGreaterThanOrEqualTo(Long)
+ Criteria andOperateFreezeMoneyLessThan(Long)
+ Criteria andOperateFreezeMoneyLessThanOrEqualTo(Long)
+ Criteria andOperateFreezeMoneyIn(List<Long>)
+ Criteria andOperateFreezeMoneyNotIn(List<Long>)
+ Criteria andOperateFreezeMoneyBetween(Long,Long)
+ Criteria andOperateFreezeMoneyNotBetween(Long,Long)
+ Criteria andTransTypeIsNull()
+ Criteria andTransTypeIsNotNull()
+ Criteria andTransTypeEqualTo(Byte)
+ Criteria andTransTypeNotEqualTo(Byte)
+ Criteria andTransTypeGreaterThan(Byte)
+ Criteria andTransTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTransTypeLessThan(Byte)
+ Criteria andTransTypeLessThanOrEqualTo(Byte)
+ Criteria andTransTypeIn(List<Byte>)
+ Criteria andTransTypeNotIn(List<Byte>)
+ Criteria andTransTypeBetween(Byte,Byte)
+ Criteria andTransTypeNotBetween(Byte,Byte)
+ Criteria andTransIdIsNull()
+ Criteria andTransIdIsNotNull()
+ Criteria andTransIdEqualTo(String)
+ Criteria andTransIdNotEqualTo(String)
+ Criteria andTransIdGreaterThan(String)
+ Criteria andTransIdGreaterThanOrEqualTo(String)
+ Criteria andTransIdLessThan(String)
+ Criteria andTransIdLessThanOrEqualTo(String)
+ Criteria andTransIdLike(String)
+ Criteria andTransIdNotLike(String)
+ Criteria andTransIdIn(List<String>)
+ Criteria andTransIdNotIn(List<String>)
+ Criteria andTransIdBetween(String,String)
+ Criteria andTransIdNotBetween(String,String)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.moon.model.TbCreditUserAccountLogExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.moon.model.TbCreditUserAccountLogExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.moon.mq.listener.TbDisbursementListener {
- TbDisbursementNotifyCmdExe tbDisbursementNotifyCmdExe
- BaseTbLoanService baseTbLoanService
- BaseTbLendBatchService baseTbLendBatchService
+ void onMessage(Message)
}
class com.welab.moon.model.dto.RepNotifyDTO {
- String loanNumber
- Long repaymentAmount
- Long userId
- Boolean isClose
- Long amount
- Boolean isOverDue
}
class com.welab.moon.app.command.CreateGadaTbLoanCmdExe {
- BaseTbLoanService baseTbLoanService
- FundLoansServiceFacade fundLoansServiceFacade
- BaseTbLendBatchService baseTbLendBatchService
- AgreementCmdExe agreementCmdExe
- TbCreditUserAccountManager tbCreditUserAccountManager
- ProductRateConfigFacade productRateConfigFacade
- FreezeTbUserAccountBalanceCmdExe freezeTbUserAccountBalanceCmdExe
- BaseTbUserService baseTbUserService
- TbLoanDubboServiceImpl tbLoanDubboService
+ String doHandel(TbLoanDTO)
- TbLoan createTbLoan(TbLoanDTO,PartnerEnum,GadaDetail)
- void createAgreement(TbLoan,PartnerEnum,Date)
+ String getPartner()
- void freezeAccountMoney(TbLoan)
}
class com.welab.moon.model.dto.GadaDetail {
- Date expiredAt
- String period
}
class com.welab.moon.app.model.traveloka.WorkAddress {
- String province
- String city
- String area
- String village
- Date streetLine
- String postCode
}
class com.welab.moon.app.command.agreement.AgreementViewStatisticsCmdExe {
- JedisCluster jedisCluster
- CollectEventServiceFacade collectEventServiceFacade
+ void doHandel(TbLoan)
}
class com.welab.moon.facade.approval.GadaLoansServiceFacade {
- GadaLoansService gadaLoansService
+ GadaCheckDTO check(String)
}
class com.welab.moon.model.dto.LoansQueryDTO {
}
class com.welab.moon.app.base.BaseTbConfigsService {
- TbConfigExtMapper tbConfigExtMapper
- TbConfigsMapper tbConfigsMapper
+ TbConfigs findByTypeAndKeyAndOrgId(String,String,Long)
+ List<TbConfigs> findByTypeAndOrgId(String,Long)
+ List<TbConfigs> findByTypesAndOrgId(List<String>,Long)
+ Map<String,List<TbConfigs>> findByTypesAndOrgId(String,Long)
+ Map<String,Map<String,TbConfigs>> findConfigMap(String,Long)
+ int insertSelective(TbConfigs)
}
class com.welab.moon.app.base.BaseTbLendBatchService {
- TbLendBatchExtMapper tbLendBatchMapper
+ int save(TbLendBatch)
+ List<TbLendBatch> list(TbLendBatchExample)
+ TbLendBatch findOne(String)
+ void deleteLendBatch(List<String>)
+ TbLendBatch findOneByTrio(String)
+ TbLendBatch findOneByPartner(String,String)
+ void update(TbLendBatch)
+ void updateStatusByBatchNo(String,Integer)
+ List<String> findBatchLendNoList(Date,Date,String)
+ List<TbLendBatch> findBatchLends(Integer,Date,Date,String)
+ TbLendBatch findOneInit(Date,Date,String,Long)
+ TbLendBatch findBatchLendNo(Date,Date,String)
+ int deleteInvalidLendBatch(String,Date,Date)
}
class com.welab.moon.facade.message.MessageEmailFacade {
- MessageEmailService messageEmailService
- BaseTbUserService baseTbUserService
- VirtualAccountServiceFacade virtualAccountServiceFacade
- DueServiceFacade dueServiceFacade
- AgreementCmdExe agreementCmdExe
- ProductRateConfigFacade productRateConfigFacade
- MongoManager mongoManager
- TbConfigsManager tbConfigsManager
- {static} List<String> NO_SHOW_ALFAMART_PARTNER
# String appId
+ void sendLoanSuccessEmailToTb(TbLoan,TbUser,String,PartnerEnum)
+ void sendRepaymentEmailToUser(String,TbLoan,TbUser,String,PartnerEnum,String)
+ void sendRepaymentEmailToTb(String,TbLoan,TbUser,String,PartnerEnum,String)
- void sendEmail(String,TbLoan,TbUser,MailDTO,String)
+ void sendLoanSuccessEmail2Traveloka(List<String>,String,String,List<String>,Map<String,String>)
+ void sendEmail(MailDTO)
+ void sendOptEmail(TbUser,DayaTbLoanDoc,TbLoan,TbUser,String,String,String,String)
- void buildAttachment(MailDTO,String)
- int getTenor(String)
}
class com.welab.moon.model.vo.TbNoticeVO {
- Long id
- String term
- Date lendAt
- Long userId
}
class com.welab.moon.model.bo.credit.BacthTbCreditUserAccountLogParamBO {
- byte excludeAccountStatus
- List<Long> userIds
- long operateSumMoney
- long operateUseMoney
- long operateFreezeMoney
- byte transType
- String transId
- String remark
- boolean isBlack
}
class com.welab.moon.model.ext.TbLoanExt {
- {static} long serialVersionUID
- Long id
- Long userId
- Long parentUserId
- Date createdAt
- Date updatedAt
- Boolean deleted
- String partner
- String orderNo
- String loanNumber
- String batchNo
- String lendBatchNo
- String secondProdCode
- String contractNo
- Long amount
- String term
- String billingNo
- Date businessTime
- String docId
- String resId
- Long fundId
- String partnerUserNo
}
abstract class com.welab.moon.test.BaseEnv {
# {static} JdbcTemplate jdbcTemplate
# {static} OssClientUtil ossClient
# {static} MongoTemplate mongoTemplate
- {static} Map<String,Object> getTestConfig()
- {static} Map<String,Object> getProConfig()
# String buildDocumentSql(Map<String,Object>)
# String getFileUrl(Map<String,Object>,Date)
# String getOssKey(String,String)
# String getFileUrl(String,String,Date)
# List<Map<String,Object>> getDocumentList(Map<String,Object>)
# void downloandFile(String,Map<String,Object>)
}
class com.welab.moon.model.vo.AhassLimitVO {
- String region
- String customerId
- String customerName
- String agentPic
- String mobile
- String email
- Long useMoney
- Long residueMoney
- Long sumMoney
}
enum com.welab.moon.enums.LoanNumberTypeEnum {
+  TRAVELOKA
+  TRAVELOKA_PAYLATE
+  HSO
+  AOP
+  TRIO
+  GADA
+  RESTOCK
+  DAYA
+  SMP
- String startWith
- String desc
- String productType
- Integer type
+ {static} String generateLoanNumber(LoanNumberTypeEnum)
}
class com.welab.moon.utils.BigDecimalUtils {
- <<Create>> BigDecimalUtils()
+ {static} BigDecimal divideAndRoundHalfUp(BigDecimal,BigDecimal,int)
+ {static} BigDecimal divideAndRoundHalfUp(Long,Long,int)
+ {static} BigDecimal multiplyAndRoundHalfUp(BigDecimal,BigDecimal,int)
+ {static} BigDecimal min(BigDecimal,BigDecimal)
+ {static} BigDecimal max(BigDecimal,BigDecimal)
}
class com.welab.moon.test.app.service.gada.UpdateGadaCity {
+ {static} void main(String[])
}
class com.welab.moon.facade.application.RegionServiceFacade {
- RegionService regionService
+ IndoRegionsDTO getIndoRegionByVillage(String)
+ List<IndoRegionsDTO> getIndoRegionByVillage()
}
class com.welab.moon.mq.RabbitConfiguration {
+ Queue valoanRepaymentQueue()
+ Queue tbRepaymentQueue()
+ Queue tbOverdueQueue()
+ Queue syncTbLoanRepaymentStateQueue()
+ Queue tbLoanDisQueue()
+ Queue tbCreditAccountFreezeBlackQueue()
+ Queue tbAgreementStatusNotifyQueue()
+ Queue approvalGadaLoansQueue()
+ Queue gadaCreditUserAccountInitQueue()
+ FanoutExchange buildOverdueTaskCompletedExchange()
+ FanoutExchange buildRepaymentExchange()
+ FanoutExchange buildTBOverdueExchange()
+ FanoutExchange buildDisbursementExchange()
+ Binding overdueTaskCompletedBinding()
+ Binding repaymentBinding()
+ Binding overdueBinding()
+ Binding disbursementBinding()
}
class com.welab.moon.mq.RabbitConfiguration$QueueConstants {
+ {static} String VA_LOAN_REPAYMENT_QUEUE
+ {static} String TB_REPAYMENT_QUEUE
+ {static} String TB_OVERDUE_QUEUE
+ {static} String SYNC_TB_LOAN_STATE_QUEUE
+ {static} String TB_LOAN_SUCCESS_QUEUE
+ {static} String TB_CREDIT_ACCOUNT_FREEZE_BLACK_QUEUE
+ {static} String TB_AGREEMENT_STATUS_NOTIFY_QUEUE
+ {static} String APPROVAL_GADA_LOANS_QUEUE
+ {static} String GADA_CREDIT_USER_ACCOUNT_INIT_QUEUE
+ {static} String CREDIT_CREDITAPPLY_NOTIFY_QUEUE
}
class com.welab.moon.mq.RabbitConfiguration$ExchangeConstants {
+ {static} String OVERDUE_TASK_COMPLETED_EXCHANGE
}
enum com.welab.moon.enums.TbDisMsgTmplEnum {
+  AOP
+  HSO
+  TRIO
+  GADA
+  DAYA
+  SMP
- String partner
- String fileName
- String templateName
- String appTemplateName
+ {static} TbDisMsgTmplEnum findByPartner(String)
}
interface com.welab.moon.mapper.ext.TbUserExtMapper {
~ int inserts(List<TbUser>)
~ String findParterUserDocIdBy(String)
~ long findParterUserIdBy(String)
~ List<TbUserCreditAmountDTO> queryTbUserCreditAmount(List<Long>,String,List<String>)
~ List<String> selectTbUserNamesByParentUserId(Long)
}
class com.welab.moon.facade.finance.LoanOverdueInfoServiceFacade {
- LoanOverdueInfoService loanOverdueInfoService
+ Map<Long,Integer> getUserMaxDpd(UserMaxDpdQry)
+ int getUserMaxDpdByUserId(LoanOverdueQry)
}
class com.welab.moon.model.dto.gada.query.GadaUserInfoDTO {
- Long userId
- String userType
- String mobile
- String email
- Long selfieImageId
- String uid
- String storeAddress
- String storeWard
- String storeSubDistrict
- String storeDistrict
- String storeCity
- String storeProvince
- String storeZipCode
- Long storePhotoImageId
- Long frontSideOfTheBuildingSelfieImageId
- Long businessProductSelfieImageId
- String emergencyContact1
- String emergencyContact1Name
- String emergencyContact2
- String emergencyContact2Name
- GadaPersonDTO personInfo
- GadaBusinessDTO businessInfo
}
class com.welab.moon.test.app.service.trio.TrioImportUserTest {
- ImportTbUserManage importTbUserManage
+ String getCmCode()
+ LinkedHashMap<String,String> head()
+ void importTest()
+ void importTestFiledIsNull()
+ void importTestDuplicate()
- List<TrioImportTbUserBO> buildTrioImportTbUserBO()
+ MultipartFile createMfileByPath(File)
}
class com.welab.moon.model.bo.TbLoanBO {
- String orderNo
- String loanNumber
- String batchNo
- String lendBatchNo
- Long userId
- String secondProdCode
- String contractNo
- Long amount
- String term
- String billingNo
- Date businessTime
- String docId
- String resId
- Byte loanState
- Date lendAt
- BigDecimal rate
- TravelokaDuesVO travelokaDuesVO
}
class com.welab.moon.app.manage.TbUserManage {
- BaseTbUserService baseTbUserService
- UserServiceFacade userServiceFacade
- MongoManager mongoManager
+ void updateUserLevel1Info(UpdateUserLevel1InfoVO)
+ PageInfo<UserLevel1InfoVO> queryLevel1User(TbUserQryVO)
}
interface com.welab.moon.service.ITbTravelokaService {
~ TravelokaUserInfoVO findByUserId(Long)
~ TbUserVO findTbUserByNik(String)
~ List<TravelokaBaseUserInfoVO> findByUserIdList(List<Long>)
~ Response<List<CreateTravelokaVO>> createTraveloka(List<TravelokaDTO>)
~ TravelokaDuesVO findByLoanNumber(String)
~ Response repayment(List<TravelokaRepaymentDTO>)
~ Response<List<TravelokaRepaymentDTO>> queryRepaymentTrack(List<String>)
}
class com.welab.moon.model.bo.ImportTbUserBO {
- T importData
- String errorMsg
- Long userId
- Long partnerUserId
- String partner
}
class com.welab.moon.model.dto.RestoreTbUserAccountDTO {
- Long userId
- String transId
- String remark
- Long restoreMoney
- boolean isRepaymentTrigger
- boolean isDisbursement
}
class com.welab.moon.model.vo.AgreementFileVO {
- Date upLoadDate
- String agreementName
- String url
- Long id
- String uploadUser
}
class com.welab.moon.model.dto.traveloka.Dues {
- Long principal
- Long interest
- Integer dueIndex
}
class com.welab.moon.app.command.traveloka.TravelokaRepaymenCmdExe {
- TbServiceFacade tbServiceFacade
- MongoManager mongoManager
+ void execute(List<TravelokaRepaymentDTO>)
}
class com.welab.moon.controller.HomeController {
- HomePageService homePageService
- NotificationServiceFacade notificationServiceFacade
+ Response<List<HomePageListVO>> homePageList(Long,String)
+ Response saveSelectedStatus(Long,String,List<String>)
+ Response<List<NoteTipsBaseDTO>> getNotification(Long,String,Byte)
}
class com.welab.moon.app.base.credit.BaseTbCreditUserAccountLogService {
- TbCreditUserAccountLogExtMapper tbCreditUserAccountLogMapper
+ void insertSelective(TbCreditUserAccountLog)
+ int batchSaveFreezeOrBlackLog(BacthTbCreditUserAccountLogParamBO)
+ TbCreditUserAccountLog findFreezeLogByAidAndTid(Long,String)
}
class com.welab.moon.model.bo.TokoImportTbUserBO {
- String merchantCode
- String customerCode
- String agreementNo
- String agreementDate
- String currentLimit
- String address
- String agentId
- String agentName
- String agentPic
- String mobile2
- String storeName
- String agentType
- String startSince
- String duration
- String invoiceFin
- String branchNumber
- String branchName
- String empNo
- String pitNo
- String sparepartVolLastYear
- String oilVolLastYear
- String sparepartVolThisYear
- String oilVolThisYear
- String unitLastYear
- String unitThisYear
- String colabDuration
- Integer overdueInsight
}
class com.welab.moon.app.command.credit.gada.GadaCreditApplyCmdExe {
- BaseTbCreditApplyService baseTbCreditApplyService
- MongoManager mongoManager
- BaseTbUserService baseTbUserService
- IndoRegionsServiceFacade indoRegionsServiceFacade
- WhiteListServiceFacade whiteListServiceFacade
- ThreadLocal<Set<String>> PRE_APPLY
- CommonHelper<GadaCreditApplyDoc> commonHelper
- String[] applyField
+ TbImportVO execute(Long,MultipartFile)
+ void exportExcel(Set<String>)
+ void calculation(GadaCreditApplyDoc,TbCreditApply)
- int getLastMonthGreaterThanValCount(List<Long>,int,int)
- Long getLastMonthTotalTransactionRpAmount(List<Long>,int)
- int getLastNotNullValMonth(GadaCreditApplyDoc,String,int,int)
- Object getGadaCreditApplyVal(GadaCreditApplyDoc,String,int)
- String buildProperty(String,int)
# String attachmentName(PageQryBO)
# LinkedHashMap<String,String> getExcelHeadMap(PageQryBO)
# Long getTotalCount(PageQryBO)
# List getDataList(PageQryBO)
# MailDTO buildMail(MailDTO,PageQryBO)
}
class com.welab.moon.model.vo.CancelLoanInfoVO {
- String orderNo
- Date invoiceDate
- String customerName
- Byte status
- String statusStr
- String term
- String address
- Long amount
- String userDocId
- String loanDocId
- String signingStatusStr
- Date expiredDate
}
class com.welab.moon.model.vo.DayaExcelVO {
- String cmCode
- String customerName
- String invoiceNo
- String invoiceDate
- String expDate
- String amount
- String goods
}
class com.welab.moon.app.command.agreement.AgreementFileListCmdExe {
- DocumentService documentService
- BaseTbUserService baseTbUserService
- MongoManager mongoManager
+ List<AgreementFileVO> doHandel(Long)
}
class com.welab.moon.app.command.credit.UnFreezeTbUserAccountBalanceCmdExe {
- BaseTbCreditUserAccountService baseTbCreditUserAccountService
- BaseTbCreditUserAccountLogService baseTbCreditUserAccountLogService
- BaseTbUserService baseTbUserService
+ void execute(FreezeTbUserAccountBalanceBO)
}
class com.welab.moon.model.dto.TbAddressConfigDTO {
- Integer type
- Integer provinceId
- Integer cityId
- Integer areaId
}
class com.welab.moon.model.mongo.TbLoanDoc {
- String invoiceNo
- String amount
- String customerName
- String partner
- String orderNo
- String loanNumber
- String mobile
- Long principal
- Long upfrontAD
- Long upfrontPV
- Long upfrontIF
- Long upfrontPF
- Long repayAD
- Long repayPV
- Long repayIF
- Long repayPF
- Double lfDayPercent
- Long amountDisbursed
- String tenor
- Long commercialFee
- String accountNo
- String bankName
- String to
- String disbursementTime
- String by
- String productCode
- String funder
- String disbursementCommand
- Long dpd
- Date actualDisbursementTime
- Date uploadDate
- Long outstandingAmount
}
class com.welab.moon.model.mongo.tbuser.GadaUserDoc {
- String regionCode
- String cmCode
- String agentId
- String retailerName
- String storeLocationCoordinate
- Long provinceId
- Long cityId
- String district
- String zipCode
- String posisiToko
- String businessType
- String ktpPict
- String selfieKtp
- String selfieStore
- String legalityType
- String startSince
- String duration
- String branchNumber
- String branchName
- String rp
- String unit
- String paymentMethod
- String currentLimit
- String newPlafondLimit
- String overdueInsight
- String agentName
- String mobile2
- String agentType
- Boolean isGada
}
class com.welab.moon.config.TbDisbursementReportConfig {
- String emailTitle
- String emailContent
- String emailAttachmentName
- String emailReceiveCode
- String templateName
- Boolean parentNoGroupSend
}
class com.welab.moon.model.TbConfigsExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> TbConfigsExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.moon.model.TbConfigsExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(String)
+ Criteria andTypeNotEqualTo(String)
+ Criteria andTypeGreaterThan(String)
+ Criteria andTypeGreaterThanOrEqualTo(String)
+ Criteria andTypeLessThan(String)
+ Criteria andTypeLessThanOrEqualTo(String)
+ Criteria andTypeLike(String)
+ Criteria andTypeNotLike(String)
+ Criteria andTypeIn(List<String>)
+ Criteria andTypeNotIn(List<String>)
+ Criteria andTypeBetween(String,String)
+ Criteria andTypeNotBetween(String,String)
+ Criteria andKeyIsNull()
+ Criteria andKeyIsNotNull()
+ Criteria andKeyEqualTo(String)
+ Criteria andKeyNotEqualTo(String)
+ Criteria andKeyGreaterThan(String)
+ Criteria andKeyGreaterThanOrEqualTo(String)
+ Criteria andKeyLessThan(String)
+ Criteria andKeyLessThanOrEqualTo(String)
+ Criteria andKeyLike(String)
+ Criteria andKeyNotLike(String)
+ Criteria andKeyIn(List<String>)
+ Criteria andKeyNotIn(List<String>)
+ Criteria andKeyBetween(String,String)
+ Criteria andKeyNotBetween(String,String)
+ Criteria andValueIsNull()
+ Criteria andValueIsNotNull()
+ Criteria andValueEqualTo(String)
+ Criteria andValueNotEqualTo(String)
+ Criteria andValueGreaterThan(String)
+ Criteria andValueGreaterThanOrEqualTo(String)
+ Criteria andValueLessThan(String)
+ Criteria andValueLessThanOrEqualTo(String)
+ Criteria andValueLike(String)
+ Criteria andValueNotLike(String)
+ Criteria andValueIn(List<String>)
+ Criteria andValueNotIn(List<String>)
+ Criteria andValueBetween(String,String)
+ Criteria andValueNotBetween(String,String)
+ Criteria andDescriptionIsNull()
+ Criteria andDescriptionIsNotNull()
+ Criteria andDescriptionEqualTo(String)
+ Criteria andDescriptionNotEqualTo(String)
+ Criteria andDescriptionGreaterThan(String)
+ Criteria andDescriptionGreaterThanOrEqualTo(String)
+ Criteria andDescriptionLessThan(String)
+ Criteria andDescriptionLessThanOrEqualTo(String)
+ Criteria andDescriptionLike(String)
+ Criteria andDescriptionNotLike(String)
+ Criteria andDescriptionIn(List<String>)
+ Criteria andDescriptionNotIn(List<String>)
+ Criteria andDescriptionBetween(String,String)
+ Criteria andDescriptionNotBetween(String,String)
+ Criteria andSortIsNull()
+ Criteria andSortIsNotNull()
+ Criteria andSortEqualTo(Integer)
+ Criteria andSortNotEqualTo(Integer)
+ Criteria andSortGreaterThan(Integer)
+ Criteria andSortGreaterThanOrEqualTo(Integer)
+ Criteria andSortLessThan(Integer)
+ Criteria andSortLessThanOrEqualTo(Integer)
+ Criteria andSortIn(List<Integer>)
+ Criteria andSortNotIn(List<Integer>)
+ Criteria andSortBetween(Integer,Integer)
+ Criteria andSortNotBetween(Integer,Integer)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andOrgIdIsNull()
+ Criteria andOrgIdIsNotNull()
+ Criteria andOrgIdEqualTo(Long)
+ Criteria andOrgIdNotEqualTo(Long)
+ Criteria andOrgIdGreaterThan(Long)
+ Criteria andOrgIdGreaterThanOrEqualTo(Long)
+ Criteria andOrgIdLessThan(Long)
+ Criteria andOrgIdLessThanOrEqualTo(Long)
+ Criteria andOrgIdIn(List<Long>)
+ Criteria andOrgIdNotIn(List<Long>)
+ Criteria andOrgIdBetween(Long,Long)
+ Criteria andOrgIdNotBetween(Long,Long)
}
class com.welab.moon.model.TbConfigsExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.moon.model.TbConfigsExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
interface com.welab.moon.mapper.TbTravelokaModifyLogMapper {
~ long countByExample(TbTravelokaModifyLogExample)
~ int deleteByExample(TbTravelokaModifyLogExample)
~ int deleteByPrimaryKey(Long)
~ int insert(TbTravelokaModifyLog)
~ int insertSelective(TbTravelokaModifyLog)
~ List<TbTravelokaModifyLog> selectByExample(TbTravelokaModifyLogExample)
~ TbTravelokaModifyLog selectByPrimaryKey(Long)
~ int updateByExampleSelective(TbTravelokaModifyLog,TbTravelokaModifyLogExample)
~ int updateByExample(TbTravelokaModifyLog,TbTravelokaModifyLogExample)
~ int updateByPrimaryKeySelective(TbTravelokaModifyLog)
~ int updateByPrimaryKey(TbTravelokaModifyLog)
}
class com.welab.moon.app.manage.PartnerBankInfoManage {
- BaseTbConfigsService baseTbConfigsService
- BaseTbUserService baseTbUserService
+ Map<String,PartnerBankInfo> getPartnerBankInfo(PartnerEnum)
+ PartnerBankInfo getPartnerDisbursementBankInfo(PartnerEnum,String)
+ PartnerBankInfo getPartnerDisbursementBankInfo(Long)
- PartnerBankInfo configs2PartnerBankInfo(TbConfigs)
}
class com.welab.moon.app.model.traveloka.TravelokaVO {
- UserProfile userProfile
- WorkProfile workProfile
- List<ContactList> contactList
- List<Loans> loans
}
enum com.welab.moon.enums.TravelokaSecondEnum {
+  TVLK1
+  TVLK2
+  TVLK3
+  TVLK4
+  TVLK5
+  TVLK6
- Integer segment
- String secondCode
+ {static} String findBySecondProductCode(Integer)
+ {static} Integer findBySegment(String)
}
class com.welab.moon.app.service.credit.hso.HsoTbLoanService {
# void buildSingleLoan(TbLoansVO,BuildLoanBO<HsoTbLoanDoc,HsoUserDoc>)
+ String getKey()
+ LinkedHashMap<String,String> getExportTitle()
}
class com.welab.moon.model.vo.TbLoansInfoVO {
- String partner
- String orderNo
- String loanNumber
- String batchNo
- String lendBatchNo
- Long userId
- String secondProdCode
- String contractNo
- Long amount
- String term
- String billingNo
- Date businessTime
- String docId
- String resId
- Byte loanState
- Date lendAt
}
enum com.welab.moon.enums.TbRegTypeEnum {
+  PERSONAL
+  BUSINESS
- String type
- String desc
}
class com.welab.moon.model.dto.VaLoanInfoQueryDTO {
- String loanNo
- String bankCode
- Date beginDisbursementDate
- Date endDisbursementDate
}
class com.welab.moon.model.vo.user.UpdateUserLevel1InfoVO {
- String password
}
class com.welab.moon.app.manage.TbLoanManage {
- HsoTbLoanService hsoTbLoanService
+ PageInfo<TbLoansVO> tbLoanList(QueryLoansDTO)
+ List<TbLoansVO> exportLoans(QueryLoansDTO)
+ Map<String,List<Map<String,Object>>> config()
}
class com.welab.moon.filter.LogFilter {
- {static} Logger LOGGER
- {static} String NOTIFICATION_PREFIX
- {static} String REQUEST_PREFIX
- {static} String RESPONSE_PREFIX
- AtomicLong _id
# void doFilterInternal(HttpServletRequest,HttpServletResponse,FilterChain)
+ void destroy()
- void log(StringBuilder)
- StringBuilder prefixId(StringBuilder,long)
- void printRequestLine(StringBuilder,String,long,String,String)
- void printResponseLine(StringBuilder,String,long,int)
- void printPrefixedHeaders(StringBuilder,long,String,HttpServletRequest)
}
class com.welab.moon.app.service.TbUnConfirmLoanTriggerService {
- DayaCancelLoanCmdExe dayaCancelLoanCmdExe
- BaseTbConfirmLoanTriggerService baseTbConfirmLoanTriggerService
- MongoManager mongoManager
- BaseToBLoanAgreementService baseToBLoanAgreementService
- BaseTbUserAgentRelService baseTbUserAgentRelService
+ CancelLoanResultVO importCancelLoan(Long,MultipartFile,String)
+ PageInfo<CancelLoanInfoVO> selectPageInfo(CancelLoanInfoQryVO)
}
class com.welab.moon.model.mongo.tbuser.TokoUserDoc {
- {static} long serialVersionUID
- String merchantCode
- String customerCode
- String agreementNo
- String agreementDate
- Long currentLimit
- String status
- String address
- String agentId
- String agentName
- String mobile2
- String storeName
- String agentType
- String startSince
- String duration
- String invoiceFin
- String branchNumber
- String branchName
- String empNo
- String pitNo
- String sparepartVolLastyear
- String oilVolLastYear
- String sparepartVolThisYear
- String oilVolThisYear
- String unitLastYear
- String unitThisYear
- String colabDuration
- Integer overdueInsight
- Boolean isAop
- String bankCode
- String bankAccount
- Boolean isToko
}
interface com.welab.moon.mapper.TbCreditUserAccountLogMapper {
~ long countByExample(TbCreditUserAccountLogExample)
~ int deleteByExample(TbCreditUserAccountLogExample)
~ int deleteByPrimaryKey(Long)
~ int insert(TbCreditUserAccountLog)
~ int insertSelective(TbCreditUserAccountLog)
~ List<TbCreditUserAccountLog> selectByExample(TbCreditUserAccountLogExample)
~ TbCreditUserAccountLog selectByPrimaryKey(Long)
~ int updateByExampleSelective(TbCreditUserAccountLog,TbCreditUserAccountLogExample)
~ int updateByExample(TbCreditUserAccountLog,TbCreditUserAccountLogExample)
~ int updateByPrimaryKeySelective(TbCreditUserAccountLog)
~ int updateByPrimaryKey(TbCreditUserAccountLog)
}
class com.welab.moon.app.base.BaseTbUserDocService {
- MongoManager mongoManager
- BaseTbUserService baseTbUserService
+ TbUserDetail<T> getUserDetail(Long,Class<T>)
+ TbUserDetail<BaseUserDoc> getUserDetail(Long)
}
class com.welab.moon.app.base.BaseTbUserDocService$TbUserDetail {
- T detail
}
class com.welab.moon.model.mongo.tbuser.SmpUserDoc {
- String partnerUserNo
- String customerCode
- String agentName
- String mobile2
- String currentLimit
- String overdueInsight
- Boolean isAhass
}
class com.welab.moon.test.app.service.daya.DayaImportUserTest {
- ImportTbUserManage importTbUserManage
+ String getCmCode()
+ LinkedHashMap<String,String> head()
+ void importTest()
+ void importTestFiledIsNull()
+ void importTestDuplicate()
- List<DayaImportTbUserBO> buildDayaImportTbUserBO()
+ MultipartFile createMfileByPath(File)
}
class com.welab.moon.app.command.TbRegisterMailCmdExe {
- DocumentService documentService
- MessageEmailFacade messageEmailFacade
# String appId
- DocumentServiceFacade documentServiceFacade
- BaseTbConfigsService baseTbConfigsService
- String FILE_DOWNLOAD_URL
- MongodbFileService mongodbFileService
+ void send(BusinessRegBO)
- String createContent(BusinessRegBO)
- List<Document2FileBO> buildAttachmentFile(BusinessRegBO)
- List<BusinessRegBO> buildBusinessRegDoc(BusinessRegBO)
}
class com.welab.moon.controller.ConfigController {
- ConfigService configService
- BaseTbConfigsService baseTbConfigsService
- TbAddressConfigService tbAddressConfigService
- JedisCluster jedisCluster
- BaseTbUserService baseTbUserService
- TbLoanManage tbLoanManage
+ Response<Map<String,List<Map<String,Object>>>> config()
+ Response<Set<String>> getStoreNameList(Long)
+ Response<TncConfigVO> getTncConfig(Long,Long)
+ Response<Map<String,List<TbConfigs>>> tbConfig(Long,String)
+ Response<List<IndoRegionsVO>> tbAddressConfig(TbAddressConfigDTO)
}
abstract class com.welab.moon.app.service.AbstractTbLoanImport {
- FreezeTbUserAccountBalanceCmdExe freezeTbUserAccountBalanceCmdExe
- BaseTbLoanService baseTbLoanService
- BaseTbUserService baseTbUserService
- FundLoansServiceFacade fundLoansServiceFacade
- BaseTbLendBatchService baseTbLendBatchService
- TbServiceFacade tbServiceFacade
- JedisCluster jedisCluster
- MessagePushCmdExe messagePushCmdExe
- {static} String TB_LOAN_KEY
- {static} String TB_LOAN_IMPORT_SWITCH_KEY
+ T doHandel(ImportLoanDTO)
+ {abstract}List<InvoiceImportBO> doHandelImportData(ImportLoanDTO)
+ {abstract}T checkImportData(List<InvoiceImportBO>,Long)
# void successCallBack(ImportLoanDTO)
# void errorCallBack(ImportLoanDTO,Exception)
# TbLoan buildTbLoan(InvoiceImportBO)
+ TbLoan createTbLoan(InvoiceImportBO)
+ void freezeAccountMoney(InvoiceImportBO,String)
+ void insertFinance(List<InvoiceImportBO>)
+ TbUser findTbUserWithCache(String,String,Map<String,TbUser>)
+ Long matchFund(InvoiceImportBO)
+ boolean initTbLendBatch(String,String,long,Date)
# void pushMessage(String)
}
enum com.welab.moon.enums.TbConfirmLoanTriggerStatusEnum {
+  PENDING
+  SUCCESS
+  EXPIRED
- byte status
- String desc
- String showName
+ {static} Map<Byte,TbConfirmLoanTriggerStatusEnum> getStatusMap()
}
class com.welab.moon.app.service.VaLoanInfoService {
- BaseVaLoanInfoService baseVaLoanInfoService
- VirtualAccountServiceFacade virtualAccountServiceFacade
- BackstageConfigServiceFacade backstageConfigServiceFacade
+ {static} String EXTERNAL_ID
+ VaLoanInfoRspVO createVaLoan(VaLoanInfoEssentialVO)
+ PageInfo<VaLoanInfoRspVO> getPageVaLoanInfo(VaLoanInfoQueryDTO)
+ VaLoanInfo getVaLoanInfo(Long)
+ int loanRepayment(String,Long)
+ void refreshLoanInfo(VaLoanInfo)
+ Map<String,Long> getWhtFundInfo()
- void initFee(VaLoanInfo)
- void initLateFee(VaLoanInfo,int)
- void initVatFee(VaLoanInfo)
}
class com.welab.moon.controller.TbAgreementController {
- TbAgreementService tbAgreementService
- DocumentService documentService
- MessagePushCmdExe messagePushCmdExe
+ Response signing(TbAgreementSignReq)
+ Response<SignUpVO> verifySignUp(String)
+ Response<Integer> verifyAhassSignUp(String)
+ Response<String> agreementView(String)
+ Response downLoadByLoan(String)
+ Response downLoad(Long)
+ Response<PageInfo<ToBAgreementVO>> listAgreement(PageTbAgreementParamDTO)
+ Response<Void> agreementViewStatistics(String)
+ Response<PageInfo<AgreementFileVO>> agreementFileList(AgreementFileListDTO)
+ Response<Map<String,List<AgreementFileVO>>> agreementFileListGroup(Long,Integer)
+ Response<Void> agreementFileUpload(Long,MultipartFile,String)
+ Response<Void> agreementFileUpload(Long)
+ Response<Void> retrySend(String)
}
class com.welab.moon.model.vo.user.TbUserQryVO {
- String partner
- String mobile
- String code
- Byte userLevel
}
class com.welab.moon.model.vo.AgreementFileListDTO {
- String cmCode
}
class com.welab.moon.model.TbAgreementDoc {
- Long id
- String partner
- String tbLoanNumber
- String mobile
- Boolean enabled
- Long adminId
- Date createdAt
- Date updatedAt
- Byte signingStatus
- Byte signingMethod
- Date expiredAt
- Date signingAt
+ Long getId()
+ void setId(Long)
+ String getPartner()
+ void setPartner(String)
+ String getTbLoanNumber()
+ void setTbLoanNumber(String)
+ String getMobile()
+ void setMobile(String)
+ Boolean getEnabled()
+ void setEnabled(Boolean)
+ Long getAdminId()
+ void setAdminId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Byte getSigningStatus()
+ void setSigningStatus(Byte)
+ Byte getSigningMethod()
+ void setSigningMethod(Byte)
+ Date getExpiredAt()
+ void setExpiredAt(Date)
+ Date getSigningAt()
+ void setSigningAt(Date)
}
class com.welab.moon.config.credit.ProductConfig {
- Integer tenor
}
class com.welab.moon.test.app.service.traveloka.TravelokaDisbursementNotifyTest {
- MessageEmailFacade messageEmailFacade
+ void travelokaNotifyTest()
- Map<String,String> createAttachment(List<TravelokaExcelBO>)
- String getFileString(String,List,LinkedHashMap<String,String>)
}
class com.welab.moon.test.app.service.TbCreditLimitTest {
- TbCreditLimitService tbCreditLimitService
- TbCreditUserAccountManager tbCreditUserAccountManager
+ void ahassLimitPageTest()
+ void ahassLimitPageExportTest()
+ void getTbCreditUserAccountTest()
}
class com.welab.moon.mq.produce.MqProduceService {
# AmqpTemplate rabbitTemplate
+ boolean sendAgreementStatusNotify(AgreementStatusNotifyBO)
+ boolean sendGadaApprovalLoans(GadaApprovalLoansDTO)
+ boolean sendGadaSAign(TbCreditApply,TbUser)
+ boolean sendSubmitGadaData(TbUser)
}
class com.welab.moon.model.TbUserAgentRelExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> TbUserAgentRelExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.moon.model.TbUserAgentRelExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andAgentUserIdIsNull()
+ Criteria andAgentUserIdIsNotNull()
+ Criteria andAgentUserIdEqualTo(Long)
+ Criteria andAgentUserIdNotEqualTo(Long)
+ Criteria andAgentUserIdGreaterThan(Long)
+ Criteria andAgentUserIdGreaterThanOrEqualTo(Long)
+ Criteria andAgentUserIdLessThan(Long)
+ Criteria andAgentUserIdLessThanOrEqualTo(Long)
+ Criteria andAgentUserIdIn(List<Long>)
+ Criteria andAgentUserIdNotIn(List<Long>)
+ Criteria andAgentUserIdBetween(Long,Long)
+ Criteria andAgentUserIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.moon.model.TbUserAgentRelExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.moon.model.TbUserAgentRelExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.moon.app.manage.ImportTbLoanManage {
+ Response tbLoanImport(ImportLoanDTO)
}
class com.welab.moon.model.vo.TrioCheckResultVO {
- {static} long serialVersionUID
- TbLoan tbLoan
- TbLendBatch tbLendBatch
}
class com.welab.moon.controller.TbCreditApplyController {
- TbCreditApplyService tbCreditApplyService
+ Response<TbImportVO> importApply(Long,String,MultipartFile)
+ Response<PageInfo<GadaApplyInfoVO>> applyList(Long,String,ApplyQryVO)
+ void applyExport(Long,String,ApplyQryVO,HttpServletResponse)
}
class com.welab.moon.model.vo.TbCreditUserAccountVO {
- Long id
- Long userId
- Long sumMoney
- Long useMoney
- Long freezeMoney
- Long availableMoney
- String accountStatus
- Byte status
}
class com.welab.moon.model.dto.TbLoanDTO {
- {static} long serialVersionUID
- String partner
- String orderNo
- Long amount
- Long userId
- String detail
}
class com.welab.moon.app.command.credit.FreezeOrBlackCreditAccountCmdExe {
- BaseTbCreditUserAccountService baseTbCreditUserAccountService
- LoanOverdueInfoServiceFacade loanOverdueInfoServiceFacade
- BaseTbCreditUserAccountLogService baseTbCreditUserAccountLogService
- CreditConfiguration creditConfiguration
+ void execute()
- void batchFreezeOrBlack(ExecutorService,PartnerEnum,FreezeBlackConfig)
- void doFreezeOrBlack(PartnerEnum,List<Long>,FreezeBlackConfig)
}
class com.welab.moon.app.model.traveloka.Dues {
- long principal
- int interest
}
class com.welab.moon.model.bo.AgreementStatusNotifyBO {
- String partner
- String loanNumber
- String orderNo
- String signingStatus
}
class com.welab.moon.model.vo.ExcelGadaUserLimitVO {
- String merchantCode
- String merchantName
- String name
- String mobile
- String email
- String totalLimit
- String remainingLimit
- String remainingLimitPercentage
- String ownSystemUse
- String ownSystemUsePercentage
+ {static} LinkedHashMap<String,String> excelHead()
}
class com.welab.moon.model.vo.user.UserLevel1InfoVO {
- Long userId
- String name
- String mobile
- String email
- String code
- String partner
- Byte state
}
class com.welab.moon.app.command.tbreg.PersonalRegCmdExe {
- MongoManager mongoManager
- ValidatorServiceFacade validatorServiceFacade
- JedisCluster jedisCluster
- TbPersonalRegMailCmdExe tbPersonalRegMailCmdExe
+ void execute(PersonalRegDoc)
- PersonalRegBO buildPersonalRegBO(PersonalRegDoc)
}
class com.welab.moon.app.service.credit.smp.SmpUserImportService {
- CommonHelper<SmpUserImportBO> commonHelper
- BaseTbUserService baseTbUserService
- UserServiceFacade userServiceFacade
+ String[] field()
+ List<ImportTbUserBO<SmpUserImportBO>> parseAndCheckData(MultipartFile)
+ SmpUserDoc buildTbUserDoc(SmpUserImportBO)
+ String getKey()
+ List<ImportTbUserBO<SmpUserImportBO>> checkDataAndRegister(List<SmpUserImportBO>)
- Response<TbUser> getTbUser(List<ImportTbUserBO<SmpUserImportBO>>,int,SmpUserImportBO,ImportTbUserBO<SmpUserImportBO>)
- boolean checkData(List<ImportTbUserBO<SmpUserImportBO>>,int,SmpUserImportBO,ImportTbUserBO<SmpUserImportBO>)
}
interface com.welab.moon.common.Urls {
~ String ROOT
~ String ROOT_DESC
~ String V3
~ String V3_NO_AUTH
~ String V3_AUTH
}
interface com.welab.moon.common.Urls$Home {
~ String MODULE
~ String HOME_PAGE_LIST_DESC
~ String HOME_PAGE_LIST
~ String HOME_PAGE_SELECTED_SAVE_DESC
~ String HOME_PAGE_SELECTED_SAVE
~ String HOME_PAGE_NEW_NOTIFICATION_LIST_DESC
~ String HOME_PAGE_NEW_NOTIFICATION_LIST
}
interface com.welab.moon.common.Urls$User {
~ String MODULE
~ String IMPORT_USER_PARTNER_DESC
~ String IMPORT_USER_PARTNER
~ String CHECK_USER_PARTNER_DESC
~ String CHECK_USER_PARTNER
~ String UPLOAD_USER_FILE_DESC
~ String UPLOAD_USER_FILE
~ String V3_USER_LIST
~ String V3_USER_LIST_DESC
~ String V3_USER_CM_CODE_LIST
~ String V3_USER_CM_CODE_LIST_DESC
~ String V3_USER_INFO_LIST
~ String V3_USER_INFO_LIST_DESC
~ String V3_UPDATE_USER_INFO_LIST
~ String V3_UPDATE_USER_INFO_LIST_DESC
~ String IMPORT_LEVEL_1_USER_DESC
~ String IMPORT_LEVEL_1_USER
~ String PAGE_LEVEL_1_USER_DESC
~ String PAGE_LEVEL_1_USER
~ String UPDATE_LEVEL_1_USER_DESC
~ String UPDATE_LEVEL_1_USER
}
interface com.welab.moon.common.Urls$Loan {
~ String MODULE
~ String POST_LOAN_LIST_PARTNER_DESC
~ String POST_LOAN_LIST_PARTNER
~ String GET_LOAN_EXPORT_PARTNER_DESC
~ String GET_LOAN_EXPORT_PARTNER
~ String POST_LOAN_IMPORT_PARTNER_DESC
~ String POST_LOAN_IMPORT_PARTNER
~ String V3_LOAN_CONFIG
~ String V3_LOAN_CONFIG_DESC
~ String REPAYMENT_TRACK_LIST
~ String REPAYMENT_TRACK_LIST_DESC
~ String PENDING_REPAYMENT_LIST
~ String PENDING_REPAYMENT_LIST_DESC
}
interface com.welab.moon.common.Urls$Agreement {
~ String MODULE
~ String LOAN_AGREEMENT_SINGING_DESC
~ String LOAN_AGREEMENT_SINGING
~ String VERIFY_SIGN_UP_DESC
~ String VERIFY_SIGN_UP
~ String VERIFY_SIGN_UP_NEW_DESC
~ String VERIFY_SIGN_NEW_UP
~ String AGREEMENT_VIEW_DESC
~ String AGREEMENT_VIEW
~ String V3_AGREEMENT_DOWNLOAD
~ String V3_AGREEMENT_DOWNLOAD_DESC
~ String V3_AGREEMENT_LOAN_LIST
~ String V3_AGREEMENT_LOAN_LIST_DESC
~ String V3_AGREEMENT_LOAN_DOWNLOAD_URL
~ String V3_AGREEMENT_LOAN_DOWNLOAD_URL_DESC
~ String V3_AGREEMENT_VIEW_STATISTICS
~ String V3_AGREEMENT_VIEW_STATISTICS_DESC
~ String V3_AGREEMENT_FILE_LIST
~ String V3_AGREEMENT_FILE_LIST_DESC
~ String V3_AGREEMENT_FILE_LIST_GROUP
~ String V3_AGREEMENT_FILE_LIST_GROUP_DESC
~ String V3_AGREEMENT_FILE_UPLOAD
~ String V3_AGREEMENT_FILE_UPLOAD_DESC
~ String V3_AGREEMENT_FILE_DELETE
~ String V3_AGREEMENT_FILE_DELETE_DESC
~ String V3_AGREEMENT_RETRY_SEND
~ String V3_AGREEMENT_RETRY_SEND_DESC
}
interface com.welab.moon.common.Urls$Credit {
~ String MODULE
~ String V3_AHASS_LIMIT_LIST
~ String V3_AHASS_LIMIT_LIST_DESC
~ String V3_AHASS_LIMIT_EXPORT
~ String V3_AHASS_LIMIT_EXPORT_DESC
+ {static} String V3_TB_CREDIT_USER_ACCOUNT_URL
+ {static} String V3_TB_CREDIT_USER_ACCOUNT_URL_DESC
}
interface com.welab.moon.common.Urls$Config {
~ String MODULE
~ String V3_LOAN_STATE_CONFIG
~ String V3_LOAN_STATE_CONFIG_DESC
~ String V3_STORE_NAME_CONFIG
~ String V3_STORE_NAME_CONFIG_DESC
~ String V3_TNC_CONFIG
~ String V3_TNC_CONFIG_DESC
~ String V3_TB_CONFIG
~ String V3_TB_CONFIG_DESC
~ String V3_TB_ADDRESS_CONFIG
~ String V3_TB_ADDRESS_CONFIG_DESC
}
interface com.welab.moon.common.Urls$VaLoanInfo {
~ String V3_AUTH_MODULE
~ String V3_AUTH_POST_MODULE_DESC
~ String V3_AUTH_MODULE_VA_NUMBER
~ String V3_AUTH_MODULE_VA_NUMBER_DESC
~ String V3_AUTH_MODULE_PAGE
~ String V3_AUTH_MODULE_PAGE_DESC
~ String V3_AUTH_MODULE_FUND
~ String V3_AUTH_MODULE_FUND_DESC
}
interface com.welab.moon.common.Urls$SmsMessage {
~ String V3_SMS_SEND_VCODE
~ String V3_SMS_SEND_VCODE_DESC
~ String V3_SMS_SEND_TB_REGISTER_VCODE
~ String V3_SMS_SEND_TB_REGISTER_VCODE_DESC
~ String V3_SMS_CHECK_VCODE
~ String V3_SMS_CHECK_VCODE_DESC
}
interface com.welab.moon.common.Urls$TbCancelLoan {
~ String MODULE
~ String V3_IMPORT_CANCEL_LOAN
~ String V3_IMPORT_CANCEL_LOAN_DESC
~ String V3_CANCEL_LOAN_QUERY
~ String V3_CANCEL_LOAN_QUERY_DESC
}
interface com.welab.moon.common.Urls$TbReg {
~ String MODULE
~ String V3_BANK_LIST
~ String V3_BANK_LIST_DESC
~ String V3_BANK_VALIDATOR
~ String V3_BANK_VALIDATOR_DESC
~ String V3_SEND_CHECK_EMAIL
~ String V3_SEND_CHECK_EMAIL_DESC
~ String V3_EMAIL_VERIFICATION
~ String V3_EMAIL_VERIFICATION_DESC
~ String V3_PERSONAL_REG
~ String V3_PERSONAL_REG_DESC
~ String V3_BUSINESS_REG
~ String V3_BUSINESS_REG_DESC
}
interface com.welab.moon.common.Urls$TbCreditApply {
~ String MODULE
~ String APPLY_IMPORT
~ String APPLY_IMPORT_DESC
~ String APPLY_LIST
~ String APPLY_LIST_DESC
~ String APPLY_EXPORT
~ String APPLY_EXPORT_DESC
}
class com.welab.moon.model.bo.ConfirmLoanTriggerBO {
- String triggerTime
}
class com.welab.moon.model.vo.CreateTravelokaVO {
- String orderNo
- String loanNumber
- Long userId
}
class com.welab.moon.facade.document.DocumentServiceFacade {
- OssDocumentHandlerUtil ossDocumentHandlerUtil
- DocumentService documentService
+ Long upload(InputStream,SeaDocInsertDto)
+ Map<Long,DocumentDto> getDocMap(List<Long>)
}
class com.welab.moon.model.vo.TravelokaBaseUserInfoVO {
- String nik
- String email
}
class com.welab.moon.facade.application.IndoRegionsServiceFacade {
- IndoRegionsService indoRegionsService
+ List<IndoRegionsVO> getProvince()
+ List<IndoRegionsVO> getCity(Integer)
+ List<IndoRegionsVO> getArea(Integer,Integer)
+ List<IndoRegionsVO> getVillage(Integer,Integer,Integer)
+ IndoRegionsVO findRegion(RegionQueryDTO)
}
class com.welab.moon.model.bo.TbUserDetailBO {
- T detail
}
class com.welab.moon.app.manage.TbLoanImportServiceFactory {
- List<TbLoanImportService> tbLoanImportServices
- {static} Map<String,TbLoanImportService> TB_LOAN_IMPORT_SERVICE_MAP
- <<Create>> TbLoanImportServiceFactory()
+ {static} TbLoanImportService getTbLoanImportService(String)
+ void init()
}
interface com.welab.moon.mapper.ext.TbAgreementDocExtMapper {
~ String findOneLoanNumber(Long,Byte,Date)
}
class com.welab.moon.app.command.TbRepaymentNotifyCmdExe {
- MessageAppFacade messageAppFacade
- MessageEmailFacade messageEmailFacade
- BaseTbLoanService baseTbLoanService
- BaseTbUserService baseTbUserService
- CreditBusiService creditBusiService
+ void handle(RepNotifyDTO)
- void restoreAmount(RepNotifyDTO,TbLoan)
- void updateState(RepNotifyDTO,TbLoan)
- void sendEmail(RepNotifyDTO,TbLoan,TbUser,String,PartnerEnum,TbReMsgTmplEnum,String)
- void sendInnerMsg(RepNotifyDTO,TbLoan,TbUser,PartnerEnum,TbReMsgTmplEnum,String)
}
class com.welab.moon.app.command.agreement.ProductConfigCmdExe {
- ProductRateConfigFacade productRateConfigFacade
- BackstageConfigServiceFacade backstageConfigServiceFacade
- BaseTbCreditUserAccountService baseTbCreditUserAccountService
- MongoManager mongoManager
- TbProductConfigServiceFacade tbProductConfigServiceFacade
- WhiteListServiceFacade whiteListServiceFacade
- TbServiceFacade tbServiceFacade
+ BigDecimal getRate(String,Long,Long)
+ BigDecimal getLateFeeRate(String,Long,Long)
+ TbProductConfigVO getGadaRate(Long,TbUser)
+ BigDecimal getGadaRateForDoc(Long,TbUser,String)
}
class com.welab.moon.app.model.traveloka.ContactList {
- String mobile
- String name
- String relationship
}
interface com.welab.moon.mapper.ext.TbCreditUserAccountExtMapper {
~ TbCreditUserAccount selectForLock(Long)
~ List<TbCreditUserAccount> selectByPartnerAndAccountStatus(String,List<Byte>)
}
class com.welab.moon.utils.StringUtils {
- {static} ReentrantLock _lock
- {static} AtomicInteger _id
- {static} String _NUMSTR
- {static} String increasedId()
+ {static} String getUniqueId(int,FlowTypeEnum)
- {static} String getDateStr()
+ {static} String getTransId(FlowTypeEnum)
+ {static} String formatRpAmount(Long)
}
class com.welab.moon.model.dto.traveloka.TravelokaRepaymentDTO {
- String orderNo
- String loanNumber
- String serialNo
- Long principal
- Long interest
- Long lateFee
- Integer dueIndex
- Date repaymentAt
- String repaymentTag
- String partialRepayment
- Long discountPrincipal
- Long discountInterest
- Long discountLateFee
- Long userId
}
class com.welab.moon.test.app.service.hso.HsoImportLoanTest {
- ImportTbLoanManage importTbLoanManage
+ String getCmCode()
+ LinkedHashMap<String,String> head()
+ void hsoImportLoan()
+ void hsoImportLoanInvoiceDuplicate()
+ void hsoImportLoanCreditNotEnough()
+ MultipartFile createMfileByPath(File)
- void createInvoiceTxt(String)
}
class com.welab.moon.model.bo.SmpImportInvoiceBO {
- String buyerCode
- String sellerCode
- String invoiceNo
- String invoiceCcy
- String invoiceAmt
- String invoiceDate
- String poNo
}
class com.welab.moon.model.mongo.tbuser.HsoUserDoc {
- String regionCode
- String cmCode
- String agentId
- String agentName
- String mobile2
- String agentType
- String startSince
- String duration
- String invoiceFin
- String branchNumber
- String branchName
- String empNo
- String pitNo
- List<SalesInfo> salesInfoList
- String colabDuration
- String currentLimit
- Integer overdueInsight
- Boolean isAhass
- String contactNumber
- String bankName
- String bankCode
- Boolean isHso
- Map<Long,String> agreementUploadUser
}
class com.welab.moon.model.mongo.tbuser.HsoUserDoc$SalesInfo {
- String years
- String sparepartVol
- String oilVol
- String unit
}
class com.welab.moon.app.service.credit.hso.HsoUserImportService {
- BaseTbUserService baseTbUserService
- UserServiceFacade userServiceFacade
- CommonHelper<HsoUserImportBO> commonHelper
+ String[] field()
+ List<ImportTbUserBO<HsoUserImportBO>> parseAndCheckData(MultipartFile)
+ List<ImportTbUserBO<HsoUserImportBO>> checkData(List<HsoUserImportBO>,String)
+ HsoUserDoc buildTbUserDoc(HsoUserImportBO)
+ String getKey()
}
class com.welab.moon.app.command.AgreementCmdExe {
- BaseToBLoanAgreementService baseToBLoanAgreementService
- DocumentService documentService
- BaseTbUserDocService baseTbUserDocService
- CreditConfiguration creditConfiguration
- BaseTbLendBatchService baseTbLendBatchService
- ProductConfigCmdExe productConfigCmdExe
- DueServiceFacade dueServiceFacade
- FundAccountInfoServiceFacade fundAccountInfoServiceFacade
- TbBankInfoCmdExe tbBankInfoCmdExe
- BaseTbUserService baseTbUserService
- Long defaultFundId
+ {static} BigDecimal fee
+ BaseTbUserDocService.TbUserDetail<BaseUserDoc> generateContract(TbLoan,Long,PartnerEnum,String,Date)
+ String downloadAgreement(String,Date)
+ String downloadAgreement(Long,Date)
- String convertWeekday(LocalDateTime)
- int getTenor(String)
}
class com.welab.moon.model.dto.DeductionTbUserAccountDTO {
- Long userId
- String transId
- String remark
- Long useMoney
- Boolean isFreeze
- Byte status
}
class com.welab.moon.model.dto.TbConfigDTO {
- String type
- String key
- String value
- String description
}
class com.welab.moon.test.app.service.hso.TbDisbursementJobTest {
- HsoModeDisbursementJob hsoModeDisbursementJob
- TrioModeDisbursementJob trioModeDisbursementJob
- DayaModeDisbursementJob dayaModeDisbursementJob
- D1FixedAccountDisbursementJob d1FixedAccountDisbursementJob
- BaseTbLoanService baseTbLoanService
+ void hsoDisbursement()
+ void gadaDisbursement()
+ void dayaDisbursement()
+ void trioDisbursement()
}
class com.welab.moon.app.command.DayaCancelMessageCmdExe {
- BaseTbLoanService baseTbLoanService
- BaseTbUserService baseTbUserService
- MessageEmailFacade messageEmailFacade
- MongoManager mongoManager
- MessageAppFacade messageAppFacade
# String appId
- TbConfigsManager tbConfigsManager
+ void doHandel(String)
- String buildessageContent(String,String)
}
class com.welab.moon.app.manage.CreateTbLoanFactory {
- List<CreateTbLoanByApiService> createTbLoanByApiServiceList
- {static} Map<String,CreateTbLoanByApiService> TB_LEAN_INFORM_SERVICE_MAP
- <<Create>> CreateTbLoanFactory()
+ {static} CreateTbLoanByApiService getCreateTbLoanByApiService(String)
+ void init()
}
class com.welab.moon.app.service.disbursement.job.TrioModeDisbursementJob {
+ String strategy()
# BatchLendQryParam buildBatchLendQryParam(DisbursementContext)
+ Date localDateTimeToDate(java.time.LocalDateTime)
}
interface com.welab.moon.service.ITbCreditUserAccountService {
~ TbCreditUserAccountInfoDTO query(Long)
~ void deduction(DeductionTbUserAccountDTO)
}
class com.welab.moon.app.command.DisbursementCmdExe {
- TbServiceFacade tbServiceFacade
- PartnerBankInfoManage partnerBankInfoManage
- BaseTbLendBatchService baseTbLendBatchService
- BaseTbLoanService baseTbLoanService
- BaseTbUserService baseTbUserService
+ void lendSingleByLoanNumber(String)
+ void lendByParentUser(PartnerEnum,Long,String)
+ void lend(PartnerEnum,BatchDisbursementInfo)
- boolean isAllowDisbursed(PartnerEnum,Byte)
}
enum com.welab.moon.enums.credit.TbUserAccountTransTypeEnum {
+  FREEZE
+  DEDUCTION
+  RESTORE
+  UN_FREEEZE
- byte val
- String desc
}
class com.welab.moon.app.manage.TbCreditApplyManage {
- CommonHelper<GadaCreditApplyDoc> commonHelper
+ void apply(Long,String,MultipartFile)
}
class com.welab.moon.model.vo.TbUserDocVO {
- String id
- Date createdAt
- String partner
- String mobile
- String name
- String email
- String nik
- Long userId
}
class com.welab.moon.test.app.service.mq.TbDisbursementNotifyTest {
- BaseTbLoanService baseTbLoanService
- BaseTbLendBatchService baseTbLendBatchService
- TbLoanMapper tbLoanMapper
- TbLendBatchMapper tbLendBatchMapper
- TbDisbursementListener tbDisbursementListener
- BaseTbCreditUserAccountService baseTbCreditUserAccountService
- TbCreditUserAccountMapper tbCreditUserAccountMapper
+ void initData(PartnerEnum)
+ void initCreditUserAccount()
+ void hso()
+ void trio()
+ void gada()
+ void daya()
}
class com.welab.moon.model.vo.TbUserVO {
- String partner
- Long userId
- String name
- String mobile
- String nik
- String email
- String docId
- Long parentUserId
- String partnerUserNo
- Byte userType
- Boolean deleted
- Date createdAt
- Date updatedAt
}
enum com.welab.moon.enums.agreement.TbAgreementDocSigningStatusEnum {
+  NOT_SIGNED
+  SIGNED
+  CANCEL
- byte status
- String desc
- String showName
+ {static} TbAgreementDocSigningStatusEnum getTbAgreementDocSigningStatus(byte)
}
class com.welab.moon.test.job.GadaStatisticsReportJobTest {
- GadaStatisticsReportJob gadaStatisticsReportJob
+ void execute()
}
abstract class com.welab.moon.app.service.agreement.AbstractTbAgreementDocExpiredService {
# BaseToBLoanAgreementService baseToBLoanAgreementService
# MqProduceService mqProduceService
+ {abstract}String strategy()
+ {abstract}void execute(List<TbAgreementDoc>)
}
class com.welab.moon.app.model.traveloka.bo.disbursement.DisbursementContext {
- PartnerEnum partner
- Date triggerTime
- Map<String,PartnerBankInfo> bankInfoMap
- List<Byte> allowLoanStates
- Boolean skipWeekend
- Boolean skipHoliday
}
class com.welab.moon.model.bo.credit.DeductionTbUserAccountBO {
- Long useMoney
- Boolean isFreeze
- Byte status
}
class com.welab.moon.app.command.credit.FreezeTbUserAccountBalanceCmdExe {
- BaseTbCreditUserAccountService baseTbCreditUserAccountService
- BaseTbCreditUserAccountLogService baseTbCreditUserAccountLogService
- BaseTbUserService baseTbUserService
+ void execute(FreezeTbUserAccountBalanceBO)
}
interface com.welab.moon.service.TbUserAccountInfoService {
~ List<TbBankAccountInfoVO> queryBankAccountInfo(List<Long>)
}
class com.welab.moon.utils.FundIdHolder {
- {static} ThreadLocal<Long> fundIdLocal
- <<Create>> FundIdHolder()
+ {static} void setFundId(Long)
+ {static} Long getFundId()
+ {static} void removeFundId()
}
class com.welab.moon.test.app.service.MongodbTest {
+ {static} void main(String[])
}
enum com.welab.moon.enums.GadaFileUploadEnum {
+  KTP_PICTURE
+  SELFIE_WITH_KTP
+  SELFIE_WITH_STORE
+  LEGALITY_TYPE
+  TRANSACTION_6_MONTH_SERIES
+  SALES_6_MONTH_SERIES
- Integer number
- String filedName
- String fileType
+ {static} String findFileTypeByFiledName(String)
+ {static} GadaFileUploadEnum findFileTypeByNumber(Integer)
}
class com.welab.moon.model.mongo.SmpTbLoanDoc {
- String buyerCode
- String sellerCode
- String invoiceCcy
- String invoiceAmt
- String invoiceDate
- String poNo
}
class com.welab.moon.model.vo.HsoLoansVO {
- String creditControlArea
- String customerAddress
- String spareparts
- String billingNo
- String ahassName
- String userDocId
- String storeName
}
class com.welab.moon.app.service.disbursement.email.SmpDisbursementEmailReportTemplateService {
- BaseTbUserService baseTbUserService
- MongoManager mongoManager
# boolean isSendNoDataEmail()
+ String templateName()
# LinkedHashMap<String,String> getExcelHeadMap(TbDisbursementReportQryBO)
# List<TbDisbursementReportLoan> getDataList(TbDisbursementReportQryBO)
}
class com.welab.moon.app.service.disbursement.email.SmpDisbursementEmailReportTemplateService$SmpDisbursementLoan {
- String buyerCode
- String sellerCode
- String invoiceNo
- String invoiceCcy
- String invoiceAmt
- String invoiceDate
- String poNo
}
class com.welab.moon.model.dto.ImportLoanDTO {
- MultipartFile[] files
- String partner
- Long adminId
}
class com.welab.moon.test.app.service.daya.DayaMongodbTest {
+ {static} void main(String[])
}
enum com.welab.moon.enums.PartnerEnum {
+  RESTOCK
+  HSO
+  TRIO
+  GADA
+  TRAVELOKA_PAYLATE
+  DAYA
+  TB_REGISTER
+  SMP
- String partner
- Byte type
- boolean isCredit
- String productCode
- String secondProdCode
- Long orgId
+ {static} List<PartnerEnum> FIXED_ACCOUNT_DISBURSEMENT_PARTNER_LIST
+ {static} PartnerEnum findByProductCode(String)
+ {static} PartnerEnum findByPartner(String)
+ {static} Boolean hasSuperior(String)
+ {static} String orgIdToPartner(Long)
}
class com.welab.moon.model.vo.credit.apply.ApplyQryVO {
- Date applyBeginTime
- Date applyEndTime
- String applyStatus
- String applyCode
- String customerCode
- Long adminUserId
}
class com.welab.moon.model.bo.PageQryBO {
- boolean queryCount
- int pageSize
- int pageNum
}
enum com.welab.moon.enums.ConfirmStatusEnum {
+  CONFIRM
+  CANCEL
- String val
- String desc
}
class com.welab.moon.model.dto.gada.apply.GadaApplyCreditUserInfoDTO {
- String userType
- String mobile
- String email
- String selfieUrl
- String uid
- String storeAddress
- String storeWard
- String storeSubDistrict
- String storeDistrict
- String storeCity
- String storeProvince
- String storeZipCode
- String frontSideOfTheBuildingSelfieUrl
- String businessProductSelfieUrl
- String emergencyContact1
- String emergencyContact1Name
- String emergencyContact2
- String emergencyContact2Name
- PersonProfileDTO personProfile
- BusinessProfileDTO businessProfile
}
class com.welab.moon.model.bo.credit.BaseTbUserAccountTransBO {
- Long userId
- String transId
- String remark
}
class com.welab.moon.app.service.credit.gada.GadaTbLoanService {
# void buildSingleLoan(TbLoansVO,BuildLoanBO<GadaTbLoanDoc,GadaUserDoc>)
+ String getKey()
+ LinkedHashMap<String,String> getExportTitle()
}
class com.welab.moon.app.service.disbursement.email.DayaDisbursementEmailReportTemplateService {
- TbConfigsManager tbConfigsManager
# boolean isSendNoDataEmail()
+ String templateName()
# LinkedHashMap<String,String> getExcelHeadMap(TbDisbursementReportQryBO)
# MailDTO buildMail(MailDTO,TbDisbursementReportQryBO)
# List<TbDisbursementReportLoan> getDataList(TbDisbursementReportQryBO)
}
class com.welab.moon.app.service.disbursement.email.DayaDisbursementEmailReportTemplateService$DayaDisbursementLoan {
- Date expiryDate
}
class com.welab.moon.app.command.credit.CreditLoanDpdNoticeCmdExe {
- CreditConfiguration creditConfiguration
- BaseTbLoanService baseTbLoanService
- BaseTbUserService baseTbUserService
- MessageAppFacade messageAppFacade
+ void execute(JSONObject)
- void handData(int,List<Long>)
- int getTenor(String)
}
class com.welab.moon.model.vo.VaLoanInfoEssentialVO {
- String loanNo
- Long fundId
- Date disbursementDate
- Long amountFunded
- Integer maxTenor
- BigDecimal adminFeeRate
- BigDecimal provisionFeeRate
- BigDecimal interestFunderRate
- BigDecimal platformFeeRate
- BigDecimal lateFeeRate
- String accountNumber
- String bankCode
}
class com.welab.moon.model.dto.HsoLimitDTO {
- Long userId
- String customerId
- Integer sort
- Long orgId
}
class com.welab.moon.utils.TT {
+ {static} void main(String[])
}
class com.welab.moon.model.vo.TbImportVO {
- List<String> errorMsgList
- List<String> specialMsgList
- Integer successCount
}
class com.welab.moon.app.service.credit.hso.HsoLoanImportService {
- UserService userService
- TbCreditUserAccountManager tbCreditUserAccountManager
- BaseTbUserDocService baseTbUserDocService
- LoanOverdueInfoServiceFacade loanOverdueInfoServiceFacade
- BackstageConfigService backstageConfigService
- JedisCluster jedisCluster
- ProductRateConfigFacade productRateConfigFacade
- MongoManager mongoManager
- BaseTbLoanService baseTbLoanService
- {static} String MMDDYYYY
- {static} Integer NO_OVERDUE
- {static} Integer OVERDUE_VERIFICATION_FAILED
- {static} String OPT_CONFIG
- {static} String OPT_CONFIG_KEY
+ List<InvoiceImportBO> doHandelImportData(ImportLoanDTO)
+ TbImportVO checkImportData(List<InvoiceImportBO>,Long)
+ String getKey()
- List<InvoiceImportBO> handelData(MultipartFile[])
- HsoImportLoanBO doHandelFiles(MultipartFile[])
# void vailBillingData(List<ExcelHsoVO>)
- Boolean hasDataCount(ExcelHsoVO)
- Boolean hasEmpty(ExcelHsoVO)
- Boolean hasSpecialFormat(ExcelHsoVO)
- void buildInvoiceImportBO(InvoiceImportBO,String,Map<String,String>,Map<String,List<BillingAndNettVatVO>>)
- boolean validateFields(String)
- TbImportVO validateBiz(List<InvoiceImportBO>,Long)
- HsoTbLoanDoc insertTbLoanDoc(InvoiceImportBO)
}
class com.welab.moon.app.service.credit.hso.HsoLoanImportService$HsoImportLoanBO {
- List<String> list
- Map<String,String> map
- Map<String,List<BillingAndNettVatVO>> nettVatData
}
class com.welab.moon.test.app.service.DiffTest {
+ {static} void main(String[])
+ void diff(Object,Object,Map<String,Object>,Map<String,Object>)
}
interface com.welab.moon.mapper.TbConfirmLoanTriggerMapper {
~ long countByExample(TbConfirmLoanTriggerExample)
~ int deleteByExample(TbConfirmLoanTriggerExample)
~ int deleteByPrimaryKey(Long)
~ int insert(TbConfirmLoanTrigger)
~ int insertSelective(TbConfirmLoanTrigger)
~ List<TbConfirmLoanTrigger> selectByExample(TbConfirmLoanTriggerExample)
~ TbConfirmLoanTrigger selectByPrimaryKey(Long)
~ int updateByExampleSelective(TbConfirmLoanTrigger,TbConfirmLoanTriggerExample)
~ int updateByExample(TbConfirmLoanTrigger,TbConfirmLoanTriggerExample)
~ int updateByPrimaryKeySelective(TbConfirmLoanTrigger)
~ int updateByPrimaryKey(TbConfirmLoanTrigger)
}
class com.welab.moon.config.credit.NoticeDpdConfig {
- Integer dpd
}
class com.welab.moon.config.BaseConfig {
- Boolean enable
}
class com.welab.moon.app.service.disbursement.email.TravelokaDisbursementEmailReportTemplate {
- BaseTbLendBatchService baseTbLendBatchService
- {static} ThreadLocal<Long> TRAVELOKA_AMOUNT_DATA_THREADLOCAL
- {static} ThreadLocal<List<String>> TRAVELOKA_ORDER_NO_DATA_THREADLOCAL
- {static} ThreadLocal<List<String>> TRAVELOKA_LEND_AT_DATA_THREADLOCAL
- {static} ThreadLocal<List<TbLoan>> TRAVELOKA_LEND_LOAN
+ String templateName()
# String attachmentName(TbDisbursementReportQryBO)
# Long getTotalCount(TbDisbursementReportQryBO)
# LinkedHashMap<String,String> getExcelHeadMap(TbDisbursementReportQryBO)
# MailDTO buildMail(MailDTO,TbDisbursementReportQryBO)
# List<TbDisbursementReportLoan> getDataList(TbDisbursementReportQryBO)
}
class com.welab.moon.app.service.disbursement.email.TravelokaDisbursementEmailReportTemplate$TravelokaDisbursementLoan {
- String amountStr
}
class com.welab.moon.service.impl.TbCreditUserAccountServiceImpl {
- TbCreditUserAccountManager tbCreditUserAccountManager
- DeductionTbUserAccountCmdExe deductionTbUserAccountCmdExe
+ TbCreditUserAccountInfoDTO query(Long)
+ void deduction(DeductionTbUserAccountDTO)
}
class com.welab.moon.app.manage.TbSignUpKeyManager {
- JedisCluster jedisCluster
- AgreementCmdExe agreementCmdExe
- BaseTbUserService baseTbUserService
- {static} String PREFIX
- {static} Integer SECONDS
- String url
- String appId
- MessageSmsFacade messageSmsFacade
- TbConfigsManager tbConfigsManager
- MessageEmailFacade messageEmailFacade
+ String getSignUpKey(TbSignUpKeyBO,int)
+ TbSignUpKeyBO getValue(String)
+ Boolean delSignUpKey(String)
+ void putAgreementUrl(String,String,int)
+ String getAgreementUrl(String)
+ String getSignUpWebUrl(TbSignUpKeyBO,Date)
+ Response<Long> sendTbSignCode(TbSignCodeBO)
- void saveSignCode(String,String)
+ String getSignCode(String)
+ Long delSignCode(String)
- Long signCodeTtl(String)
}
class com.welab.moon.model.TbCreditUserAccountExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> TbCreditUserAccountExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.moon.model.TbCreditUserAccountExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andSumMoneyIsNull()
+ Criteria andSumMoneyIsNotNull()
+ Criteria andSumMoneyEqualTo(Long)
+ Criteria andSumMoneyNotEqualTo(Long)
+ Criteria andSumMoneyGreaterThan(Long)
+ Criteria andSumMoneyGreaterThanOrEqualTo(Long)
+ Criteria andSumMoneyLessThan(Long)
+ Criteria andSumMoneyLessThanOrEqualTo(Long)
+ Criteria andSumMoneyIn(List<Long>)
+ Criteria andSumMoneyNotIn(List<Long>)
+ Criteria andSumMoneyBetween(Long,Long)
+ Criteria andSumMoneyNotBetween(Long,Long)
+ Criteria andUseMoneyIsNull()
+ Criteria andUseMoneyIsNotNull()
+ Criteria andUseMoneyEqualTo(Long)
+ Criteria andUseMoneyNotEqualTo(Long)
+ Criteria andUseMoneyGreaterThan(Long)
+ Criteria andUseMoneyGreaterThanOrEqualTo(Long)
+ Criteria andUseMoneyLessThan(Long)
+ Criteria andUseMoneyLessThanOrEqualTo(Long)
+ Criteria andUseMoneyIn(List<Long>)
+ Criteria andUseMoneyNotIn(List<Long>)
+ Criteria andUseMoneyBetween(Long,Long)
+ Criteria andUseMoneyNotBetween(Long,Long)
+ Criteria andFreezeMoneyIsNull()
+ Criteria andFreezeMoneyIsNotNull()
+ Criteria andFreezeMoneyEqualTo(Long)
+ Criteria andFreezeMoneyNotEqualTo(Long)
+ Criteria andFreezeMoneyGreaterThan(Long)
+ Criteria andFreezeMoneyGreaterThanOrEqualTo(Long)
+ Criteria andFreezeMoneyLessThan(Long)
+ Criteria andFreezeMoneyLessThanOrEqualTo(Long)
+ Criteria andFreezeMoneyIn(List<Long>)
+ Criteria andFreezeMoneyNotIn(List<Long>)
+ Criteria andFreezeMoneyBetween(Long,Long)
+ Criteria andFreezeMoneyNotBetween(Long,Long)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.moon.model.TbCreditUserAccountExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.moon.model.TbCreditUserAccountExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.moon.model.dto.GadaFileUploadDTO {
- String uniqueCode
- MultipartFile[] fileList
- Long userId
}
interface com.welab.moon.mapper.ext.TbLoanExtMapper {
~ List<TbLoansVO> loanList(QueryLoansDTO)
~ List<TbNoticeVO> getLendSuccessUserIdList(String,List<Byte>,Long,Integer)
~ int unConfirmTbLoanCancel(String,byte,byte,byte,Date)
~ List<TbLoansVO> findPendRepayList(PendRepayQueryDTO)
~ List<TbLoansVO> findRepaymentList(RepaymentQryDTO)
~ List<TbDisbursementReportLoan> getTbDisbursementReportLoan(TbDisbursementReportQryBO)
}
class com.welab.moon.model.TbConfigs {
- Long id
- String type
- String key
- String value
- String description
- Integer sort
- Date createdAt
- Date updatedAt
- Long orgId
+ Long getId()
+ void setId(Long)
+ String getType()
+ void setType(String)
+ String getKey()
+ void setKey(String)
+ String getValue()
+ void setValue(String)
+ String getDescription()
+ void setDescription(String)
+ Integer getSort()
+ void setSort(Integer)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Long getOrgId()
+ void setOrgId(Long)
}
class com.welab.moon.job.TbDisbursementReportJob {
- CreditBusiService creditBusiService
+ void execute(ShardingContext)
}
class com.welab.moon.app.manage.TbCreditUserAccountManager {
- BaseTbUserService baseTbUserService
- BaseTbCreditUserAccountService baseTbCreditUserAccountService
+ TbCreditUserAccountVO getTbCreditUserAccount(String,String)
+ TbCreditUserAccountVO getTbCreditUserAccount(Long)
+ TbCreditUserAccountVO getTbCreditUserAccountForLock(Long)
+ int updateTbCreditUserAccount(TbCreditUserAccount)
- TbCreditUserAccountVO tbCreditUserAccount2TbCreditUserAccountDTO(TbCreditUserAccount)
- void setAvailableMoney(TbCreditUserAccountVO)
}
class com.welab.moon.app.service.disbursement.email.TrioDisbursementEmailReportTemplateService {
- TbUserDocManager tbUserDocManager
+ String templateName()
# LinkedHashMap<String,String> getExcelHeadMap(TbDisbursementReportQryBO)
# List<TbDisbursementReportLoan> getDataList(TbDisbursementReportQryBO)
}
class com.welab.moon.app.service.disbursement.email.TrioDisbursementEmailReportTemplateService$TrioDisbursementLoan {
- String storeName
}
class com.welab.moon.facade.gateway.ValidatorServiceFacade {
- ValidatorService validatorService
+ Response<BankAccountVO> validatorBankAccount(BankAccountDto)
+ boolean validatorBankAccount(String,String)
}
class com.welab.moon.helper.PageListHelper {
+ PageInfo<T> pageForList(List<T>,Integer,Integer)
}
interface com.welab.moon.mapper.TbCreditUserAccountMapper {
~ long countByExample(TbCreditUserAccountExample)
~ int deleteByExample(TbCreditUserAccountExample)
~ int deleteByPrimaryKey(Long)
~ int insert(TbCreditUserAccount)
~ int insertSelective(TbCreditUserAccount)
~ List<TbCreditUserAccount> selectByExample(TbCreditUserAccountExample)
~ TbCreditUserAccount selectByPrimaryKey(Long)
~ int updateByExampleSelective(TbCreditUserAccount,TbCreditUserAccountExample)
~ int updateByExample(TbCreditUserAccount,TbCreditUserAccountExample)
~ int updateByPrimaryKeySelective(TbCreditUserAccount)
~ int updateByPrimaryKey(TbCreditUserAccount)
}
class com.welab.moon.facade.fund.FundAccountInfoServiceFacade {
- FundAccountInfoService fundAccountInfoService
+ String getFundNameById(Long)
+ FundAccountDTO getFundAvailableAmount(String)
+ Map<String,Long> getFundInfo()
}
class com.welab.moon.test.app.service.mongo.MongodbTest {
- {static} MongoTemplate mongoTemplate
+ {static} String buildUpdateName()
+ {static} void main(String[])
}
class com.welab.moon.job.TbConfirmLoanTriggerJob {
- CreditBusiService creditBusiService
+ void execute(ShardingContext)
}
class com.welab.moon.model.bo.OtpEmailBO {
- String makerEmail
- String checkerEmail
+ String[] getAllEmail()
}
class com.welab.moon.controller.MessageController {
- String appId
- MessageSmsFacade messageSmsFacade
- JedisCluster jedisCluster
- TbSignUpKeyManager tbSignUpKeyManager
- MessageFacadeService messageFacadeService
+ Response<Long> sendTbSignCode(TbSignCodeBO)
+ Response sendTbRegisterVCode(String)
+ Response checkHsoVCode(SmsCodeDTO,String)
}
class com.welab.moon.config.AgreementDocExpiredConfig {
- String strategy
}
class com.welab.moon.app.manage.TbUserDocManager {
- BaseTbUserService baseTbUserService
- MongoTemplateExt mongoTemplate
+ Map<Long,TbUserDetailBO<T>> getUserDetailsMap(List<Long>,Class<T>)
}
interface com.welab.moon.service.ITbLoanDubboService {
~ Response<String> createTbLoan(TbLoanDTO)
~ Response confirmTbLoan(ConfirmLoanDTO)
~ Response<List<TbLoansInfoVO>> findByLoanNumberList(List<String>)
~ Response<TbLoanDocVO> findByLoanNumber(String)
~ Response<List<TbLoanVO>> findByLoanList(List<String>)
~ Response<TbUserVO> findTbUserByUserId(Long)
~ Response<Map<String,String>> getLoanStateDisplayNameMap()
~ Response backLoanState(List<String>)
}
class com.welab.moon.test.app.service.TbUserManageTest {
- TbUserManage tbUserManage
+ void testA()
}
class com.welab.moon.test.app.service.CreditLoanDpdNoticeTest {
- CreditLoanDpdNoticeCmdExe creditLoanDpdNoticeCmdExe
+ void testDpdNotice()
}
class com.welab.moon.app.service.credit.gada.GadaUserServiceImportTbUser {
- CommonHelper<GadaUserImportBO> commonHelper
- UserServiceFacade userServiceFacade
- BaseTbUserService baseTbUserService
- JedisCluster jedisCluster
- IndoRegionsServiceFacade indoRegionsServiceFacade
+ {static} Long MAX_LIMIT
+ String[] field()
+ String getKey()
+ List<ImportTbUserBO<GadaUserImportBO>> parseAndCheckData(MultipartFile)
+ GadaUserDoc buildTbUserDoc(GadaUserImportBO)
+ List<ImportTbUserBO<GadaUserImportBO>> checkData(List<GadaUserImportBO>,String)
+ RegUserDTO buildRegUserDTO(GadaUserImportBO)
+ GadaUserCheckVO parseAndCheckUserData(MultipartFile)
+ GadaUserCheckVO checkGadaUser(List<GadaUserImportBO>,String)
}
class com.welab.moon.test.app.service.gada.GadaApiServiceTest {
- ITbLoanDubboService tbLoanDubboService
- BaseTbLoanService baseTbLoanService
- TbLoanMapper tbLoanMapper
- BaseTbUserService baseTbUserService
- TbUserMapper tbUserMapper
- BaseTbCreditUserAccountService baseTbCreditUserAccountService
- TbCreditUserAccountMapper tbCreditUserAccountMapper
- BaseToBLoanAgreementService baseToBLoanAgreementService
- String loanNumber
+ void initTbUSer()
+ void apiCreateTbLoan()
+ void confirm()
+ void destroy()
}
class com.welab.moon.model.dto.PendRepayQueryDTO {
- String partner
- String invoiceNo
- Long userId
- String sort
- String loanNumberList
- List<String> list
- List<Byte> loanStateList
}
interface com.welab.moon.mapper.TbLendBatchMapper {
~ int countByExample(TbLendBatchExample)
~ int deleteByExample(TbLendBatchExample)
~ int deleteByPrimaryKey(Long)
~ int insert(TbLendBatch)
~ int insertSelective(TbLendBatch)
~ List<TbLendBatch> selectByExample(TbLendBatchExample)
~ TbLendBatch selectByPrimaryKey(Long)
~ int updateByExampleSelective(TbLendBatch,TbLendBatchExample)
~ int updateByExample(TbLendBatch,TbLendBatchExample)
~ int updateByPrimaryKeySelective(TbLendBatch)
~ int updateByPrimaryKey(TbLendBatch)
}
class com.welab.moon.utils.ZIPUtil {
- {static} int BUFFERSIZE
- <<Create>> ZIPUtil()
+ {static} void zip(String[],String)
- {static} void zipFile(File,String,ZipOutputStream)
+ {static} void unzip(String,String)
+ {static} boolean zip(InputStream[],String[],String)
+ {static} void main(String[])
}
class com.welab.moon.service.impl.TbUserInfoServiceImpl {
- BaseTbUserService baseTbUserService
- MongoManager mongoManager
- TbQueryService tbQueryService
+ UserPartnerInfoVO findUserLevelByUserId(Long)
+ TravelokaUserInfoVO findByUserId(Long)
+ PageInfo<TbUserDocVO> tbUserPageList(TbUserQryDTO)
+ PageInfo<TbUserDocVO> tbUserVOPageList(TbUserQryDTO)
+ Long tbUserPageCount(TbUserQryDTO)
+ List<TbUserVO> getTbUsers(String,List<String>)
- List<TbUserDocVO> buildData(List<TbUserDoc>)
}
class com.welab.moon.model.mongo.tbuser.gada.apiuser.GadaPersonDoc {
- String identityType
- Long idCardPhotoImageId
- String identityNumber
- String idCardName
- String fullName
- String education
- String gender
- String birthPlace
- String birthDay
- String idCardAddress
- String idCardRt
- String idCardRw
- String idCardWard
- String idCardSubDistrict
- String idCardRegencyOrCity
- String idCardProvince
- String ktpZipCode
- String maritalStatus
- Integer theNumberOfDependents
- String spouseIdNumber
- String couplesName
- String couplesBirthDate
- String nameOfBirthMom
}
enum com.welab.moon.enums.TbCreditApplyStatusEnum {
+  PRE_APPROVED
+  PRE_REJECTED
+  PROCESSING
+  SEND_BACK
+  APPROVED
+  REJECTED
+  EXPIRED
+  SIGN_SUCCESS
+  CANCEL
- Byte status
- String desc
- String displayName
+ {static} List<Byte> PRE_APPROVE_NOT_ALLOWED_UPLOAD_STATUS_LIST
+ {static} TbCreditApplyStatusEnum getByStatus(Byte)
}
class com.welab.moon.app.service.disbursement.job.D1FixedAccountDisbursementJob {
+ String strategy()
# BatchLendQryParam buildBatchLendQryParam(DisbursementContext)
# List<BatchDisbursementInfo> buildBatchDisbursementData(List<TbLendBatch>,DisbursementContext)
}
class com.welab.moon.model.vo.GadaUserCheckVO {
- Integer total
- List<String> errorMsgList
- List<UserVO> list
}
class com.welab.moon.model.vo.GadaUserCheckVO$UserVO {
- String uniqueCode
- String agentId
}
class com.welab.moon.model.mongo.AopTbLoanDoc {
- String partner
- String merchantCode
- String customerCode
- String orderNo
- String invoiceAmount
- String invoiceDate
- String loanNumber
}
class com.welab.moon.utils.TemplateUtils {
- {static} String TMP_PATH
- {static} String PREFIX
- {static} String PATH
- <<Create>> TemplateUtils()
+ {static} String getPlanTemplateName(PlansTypeEnum)
+ {static} String getPlanTemplateName(PlansTypeEnum,Boolean)
+ {static} File htmlFile(String,Map<String,Object>)
+ {static} String getUuidFilePath(String)
+ {static} String htmlStr(String,Map<String,Object>)
}
class com.welab.moon.app.command.credit.DeductionTbUserAccountCmdExe {
- TbCreditUserAccountManager tbCreditUserAccountManager
- BaseTbCreditUserAccountLogService baseTbCreditUserAccountLogService
+ void execute(DeductionTbUserAccountBO)
}
class com.welab.moon.app.command.credit.daya.DayaCancelLoanCmdExe {
- BaseTbConfirmLoanTriggerService baseTbConfirmLoanTriggerService
- BaseTbLoanService baseTbLoanService
- BaseTbUserService baseTbUserService
- DayaConfirmOrCancelMessageCmdExe dayaConfirmOrCancelMessageCmdExe
- MongoManager mongoManager
- RestoreTbUserAccountCmdExe restoreTbUserAccountCmdExe
- DayaCancelMessageCmdExe dayaCancelMessageCmdExe
- TbServiceFacade tbServiceFacade
- {static} String CANCEL_STATE_ERROR_MSG
- {static} String LOAN_STATE_ERROR_MSG
- {static} String CANCEL_TIME_ERROR_MSG
- {static} String LOAN_ERROR_MSG
- {static} String ORDER_NO_NULL_MSG
- {static} String ORDER_NO_REPEAT_MSG
+ CancelLoanResultVO execute(Long,MultipartFile)
+ void confirmCancel(String)
+ CancelLoanResultVO doCancel(Long,List<DayaCancelLoanImportVO>)
}
class com.welab.moon.model.bo.credit.FreezeTbUserAccountBalanceBO {
- String partner
- String partnerUserNo
- Long freezeMoney
}
class com.welab.moon.app.command.GadaLimitReportCmdExe {
- BaseTbUserService baseTbUserService
- BaseTbCreditUserAccountService baseTbCreditUserAccountService
- MongoManager mongoManager
- MessageEmailFacade messageEmailFacade
# String appId
+ void execute()
- String calRemaining(TbCreditUserAccount)
- String calRemainingPercentage(TbCreditUserAccount)
- String calOwnSystemUsePercentage(TbCreditUserAccount)
- void sendReport(List<ExcelGadaUserLimitVO>)
- Map<String,String> createAttachment(List<ExcelGadaUserLimitVO>)
- String getFileString(String,List,LinkedHashMap<String,String>)
}
abstract class com.welab.moon.app.service.AbstractCreateTbLoanByApi {
+ String createTbLoan(TbLoanDTO)
+ {abstract}String doHandel(TbLoanDTO)
}
class com.welab.moon.model.mongo.tbreg.BaseRegDoc {
- String serialNumber
- String loanProduct
- String loanType
- String mobile
}
class com.welab.moon.model.dto.traveloka.UserProfile {
- String name
- String nik
- String mobile
- String maritalStatus
- String educationLevel
- String religion
- String gender
- String email
- String birthday
- String birthplace
- String residence
- String rt
- String rw
- KtpAddress ktpAddress
- String ktpPhoto
- KtpAddress homeAddress
}
class com.welab.moon.app.command.credit.gada.GadaApplyCreditUserInfoQryExe {
- BaseTbUserService baseTbUserService
- MongoManager mongoManager
+ GadaUserInfoDTO execute(Long)
}
abstract class com.welab.moon.app.service.AbstractTbLoans {
# BaseTbLoanService baseTbLoanService
# MongoManager mongoManager
# DuesQueryService duesQueryService
# BaseToBLoanAgreementService baseToBLoanAgreementService
+ PageInfo<TbLoansVO> queryLoans(QueryLoansDTO)
# void buildQuerParam(QueryLoansDTO)
# List<TbLoansVO> handTbLoans(List<TbLoansVO>)
# void buildLoanBO(BuildLoanBO<LoanDoc,UserDoc>,List<String>)
# void buildSingleLoan(TbLoansVO,BuildLoanBO<LoanDoc,UserDoc>)
+ List<TbLoansVO> exportLoans(QueryLoansDTO)
# Map<String,LoanDoc> getMongoLoan(List<String>,Class<LoanDoc>)
# Map<String,UserDoc> getMongoUser(List<String>,Class<UserDoc>)
# Map<String,LoanDuesDTO> getLoanDues(List<String>)
# Map<String,TbAgreementDoc> getTbAgreementDocMap(List<String>)
+ Map<String,List<Map<String,Object>>> queryConfig()
- List<Map<String,Object>> repayStatus()
- List<Map<String,Object>> lendStatus()
- List<Byte> converLoanState(List<Byte>,boolean)
}
class com.welab.moon.test.job.UnConfirmTbLoanCancelJobTest {
- TbConfirmLoanTriggerJob tbConfirmLoanTriggerJob
+ void execute()
}
class com.welab.moon.config.auto.DisbursementJobAutoRegister {
- ApplicationContext applicationContext
- CreditConfiguration creditConfiguration
- ZookeeperRegistryCenter zkRegistryCenter
+ void register()
}
class com.welab.moon.test.app.service.hso.HsoQueryTest {
- TbLoanManage tbLoanManage
+ void listTest()
+ void exportTest()
}
class com.welab.moon.app.command.DayaDisbursementMessageCmdExe {
- BaseTbLoanService baseTbLoanService
- BaseTbUserService baseTbUserService
- MessageEmailFacade messageEmailFacade
- MongoManager mongoManager
- MessageAppFacade messageAppFacade
# String appId
- TbConfigsManager tbConfigsManager
+ void doHandel(String)
- String buildessageContent(String,String)
- String buildAhassMessageContent(String)
}
class com.welab.moon.app.service.disbursement.email.DefaultDisbursementEmailReportTemplateService {
+ String templateName()
}
class com.welab.moon.model.dto.traveloka.TravelokaDTO {
- UserProfile userProfile
- WorkProfile workProfile
- List<ContactList> contactList
- List<Loans> loans
}
class com.welab.moon.model.dto.gada.query.GadaPersonDTO {
- String identityType
- Long idCardPhotoImageId
- String identityNumber
- String idCardName
- String fullName
- String education
- String gender
- String birthPlace
- String birthDay
- String idCardAddress
- String idCardRt
- String idCardRw
- String idCardWard
- String idCardSubDistrict
- String idCardRegencyOrCity
- String idCardProvince
- String ktpZipCode
- String maritalStatus
- Integer theNumberOfDependents
- String spouseIdNumber
- String couplesName
- String couplesBirthDate
- String nameOfBirthMom
}
class com.welab.moon.app.service.TbAddressConfigService {
- IndoRegionsServiceFacade indoRegionsServiceFacade
+ List<IndoRegionsVO> addressConfig(TbAddressConfigDTO)
+ List<IndoRegionsVO> getProvince()
+ List<IndoRegionsVO> getCity(Integer)
+ List<IndoRegionsVO> getArea(Integer,Integer)
+ List<IndoRegionsVO> getVillage(Integer,Integer,Integer)
}
class com.welab.moon.model.vo.TbLoanDocVO {
- String partner
- String orderNo
- String loanNumber
- String mobile
- Long principal
- Long upfrontAD
- Long upfrontPV
- Long upfrontIF
- Long upfrontPF
- Long repayAD
- Long repayPV
- Long repayIF
- Long repayPF
- Double lfDayPercent
- Long amountDisbursed
- String tenor
- Long commercialFee
- String accountNo
- String bankName
- String to
- String disbursementTime
- String by
- String productCode
- String funder
- String disbursementCommand
- Long dpd
- Date actualDisbursementTime
- Date uploadDate
- Long outstandingAmount
}
class com.welab.moon.app.model.traveloka.HomeAddress {
- String province
- String city
- String area
- String village
- Date streetLine
- String postCode
}
enum com.welab.moon.enums.DisbursementStrategyEnum {
+  D1_FIXED_ACCOUNT
+  D0_FIXED_ACCOUNT
+  HSO_MODE
+  DAYA_MODE
+  TRIO_MODE
- String desc
- String triggerTimeDesc
}
class com.welab.moon.app.service.agreement.expiredstrategy.AutoSigningOrCancelAgreementService {
- BaseToBLoanAgreementService baseToBLoanAgreementService
- JedisCluster jedisCluster
- {static} String OPT_CONFIG_KEY
+ String strategy()
+ void execute(List<TbAgreementDoc>)
- void autoSigned(List<Long>)
- void cancel(List<TbAgreementDoc>)
}
class com.welab.moon.facade.application.ProductRateConfigFacade {
- ProductConfigService productConfigService
+ List<ProductRateConfigVO> getProductConfig(ProductRateConfigDto)
+ ProductRateConfigVO getProductConfigBySecondCode(String)
+ void checkAmountAndTenor(String,Long,String)
+ void checkAmountAndTenor(ProductRateConfigVO,Long,String)
+ boolean checkApplyTenor(ProductRateConfigVO,String)
}
class com.welab.moon.app.manage.TbConfigsManager {
- BaseTbConfigsService baseTbConfigsService
+ OtpEmailBO getOtpEmail(PartnerEnum)
}
class com.welab.moon.model.vo.ExcelHsoVO {
- String soff
- String invoiceNo
- String item
- String billingNo
- String netValue
- String curr1
- String customer
- String billingDate
- String CGrp
- String taxAmount
- String curr2
- String nettVat
- String curr3
}
class com.welab.moon.config.auto.CreditConfiguration {
- Map<String,PartnerConfig> cfg
+ PartnerConfig getPartnerConfig(PartnerEnum)
}
class com.welab.moon.config.auto.CreditConfiguration$PartnerConfig {
- ProductConfig productConfig
- FreezeBlackConfig freezeBlackConfig
- NoticeDpdConfig noticeDpdConfig
- AgreementDocExpiredConfig agreementDocExpiredConfig
- TbDisbursementReportConfig tbDisbursementReportConfig
- DisbursementJobConfig disbursementJobConfig
}
class com.welab.moon.app.service.credit.daya.DayaTbLoanService {
- BaseTbUserAgentRelService baseTbUserAgentRelService
# void buildQuerParam(QueryLoansDTO)
# void buildSingleLoan(TbLoansVO,BuildLoanBO<DayaTbLoanDoc,DayaUserDoc>)
- int getTenor(String)
+ String getKey()
+ LinkedHashMap<String,String> getExportTitle()
}
class com.welab.moon.model.vo.HomePageListVO {
- String ahassUserId
- String ahassName
- Boolean selected
}
class com.welab.moon.model.bo.doc.Document2FileBO {
- Long docId
- String docName
}
class com.welab.moon.model.bo.SmpUserImportBO {
- String partnerUserNo
- String agentName
- String agentPic
- String mobile2
- String storeName
- String address
- String overdueInsight
- String agreementNo
- String agreementDate
}
class com.welab.moon.facade.message.MessageFacadeService {
- MessageSmsService messageSmsService
+ Response checkVCode(SmsCodeDTO)
}
class com.welab.moon.facade.marketing.MarketingServiceFacade {
- MarketingService marketingService
+ Boolean isHolidays(Date)
}
class com.welab.moon.model.vo.UpdateUserInfoDTO {
- String partner
- String mobile
- String merchantCode
- Byte userLevel
}
class com.welab.moon.app.base.credit.BaseTbCreditUserAccountService {
- TbCreditUserAccountMapper tbCreditUserAccountMapper
- TbCreditUserAccountExtMapper tbCreditUserAccountExtMapper
+ void save(TbCreditUserAccount)
+ int updateAccount(TbCreditUserAccount)
+ TbCreditUserAccount selectForLock(Long)
+ TbCreditUserAccount selectOne(Long)
+ List<TbCreditUserAccount> selectByUserIds(List<Long>)
+ int saveAccount(TbCreditUserAccount)
+ int updateAccountStatus(TbCreditUserAccount)
+ List<TbCreditUserAccount> selectByPartnerAndAccountStatus(String,List<Byte>)
+ int batchUpdateAccount(List<Long>,Byte,TbCreditUserAccount)
}
class com.welab.moon.model.vo.SignUpVO {
- Integer status
- Long orgId
- Byte type
}
class com.welab.moon.model.TbDisbursementReportTriggerBO {
- String triggerTime
- String triggerPartners
+ boolean containsPartner(String)
}
class com.welab.moon.model.vo.CancelLoanResultVO {
- List<String> errorMsgList
- int successCount
}
class com.welab.moon.model.bo.sign.TbSignUpKeyBO {
- String mobile
- String tbLoanNumber
- Integer otpType
- boolean cancelFalg
- String emailAccount
}
class com.welab.moon.job.GadaUserLimitReportJob {
- GadaLimitReportCmdExe gadaLimitReportCmdExe
+ void execute(ShardingContext)
}
class com.welab.moon.app.service.credit.CreditBusiService {
- FreezeOrBlackCreditAccountCmdExe freezeOrBlackCreditAccountCmdExe
- RestoreTbUserAccountCmdExe restoreTbUserAccountCmdExe
- CreditLoanDpdNoticeCmdExe creditLoanDpdNoticeCmdExe
- TbAgreementDocExpiredCmdExe agreementDocExpiredCmdExe
- TbDisbursementReportCmdExe tbDisbursementReportCmdExe
- ConfirmTbLoanCancelCmdExe confirmTbLoanCancelCmdExe
+ void freezeOrBlackCreditAccount()
+ void restoreAmount(RestoreTbUserAccountBO)
+ void dpdNotice(JSONObject)
+ void agreementDocExpired(JSONObject)
+ void tbDisbursementReport(TbDisbursementReportTriggerBO)
+ void confirmLoanTrigger(ConfirmLoanTriggerBO)
}
class com.welab.moon.model.mongo.tbuser.TrioUserDoc {
- String cmCode
- String agentName
- String mobile2
- String agentType
- String startSince
- String duration
- String invoiceFin
- String branchNumber
- String branchName
- String empNo
- String pitNo
- String sparepartVolLastyear
- String oilVolLastYear
- String colabDuration
- Integer overdueInsight
- Boolean isTrio
- Boolean isAhass
}
interface com.welab.moon.mapper.TbLoanMapper {
~ long countByExample(TbLoanExample)
~ int deleteByExample(TbLoanExample)
~ int deleteByPrimaryKey(Long)
~ int insert(TbLoan)
~ int insertSelective(TbLoan)
~ List<TbLoan> selectByExample(TbLoanExample)
~ TbLoan selectByPrimaryKey(Long)
~ int updateByExampleSelective(TbLoan,TbLoanExample)
~ int updateByExample(TbLoan,TbLoanExample)
~ int updateByPrimaryKeySelective(TbLoan)
~ int updateByPrimaryKey(TbLoan)
}
class com.welab.moon.app.command.credit.gada.GadaUpdateApplyCreditUserInfoCmdExe {
- BaseTbUserService baseTbUserService
- MongoManager mongoManager
- MqProduceService mqProduceService
+ void execute(GadaUserInfoDTO)
}
class com.welab.moon.app.command.credit.gada.GadaApplyCreditUserAccountInitCmdExe {
- BaseTbCreditUserAccountService baseTbCreditUserAccountService
- BaseTbCreditApplyService baseTbCreditApplyService
- BaseTbUserService baseTbUserService
- MongoManager mongoManager
- MqProduceService mqProduceService
- GadaCreditApplyCmdExe gadaCreditApplyCmdExe
+ void execute(GadaNofityThirdDTO)
}
class com.welab.moon.model.TbCreditUserAccountLog {
- Long id
- Long accountId
- Long sumMoney
- Long useMoney
- Long freezeMoney
- Long operateSumMoney
- Long operateUseMoney
- Long operateFreezeMoney
- Byte transType
- String transId
- String remark
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getAccountId()
+ void setAccountId(Long)
+ Long getSumMoney()
+ void setSumMoney(Long)
+ Long getUseMoney()
+ void setUseMoney(Long)
+ Long getFreezeMoney()
+ void setFreezeMoney(Long)
+ Long getOperateSumMoney()
+ void setOperateSumMoney(Long)
+ Long getOperateUseMoney()
+ void setOperateUseMoney(Long)
+ Long getOperateFreezeMoney()
+ void setOperateFreezeMoney(Long)
+ Byte getTransType()
+ void setTransType(Byte)
+ String getTransId()
+ void setTransId(String)
+ String getRemark()
+ void setRemark(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.moon.model.bo.ImportTbLeve1UserBO {
- String name
- String mobile
- String email
- String region
- String bankName
- String bankCode
- String bankAccount
}
class com.welab.moon.app.base.BaseTbLoanService {
- TbLoanExtMapper tbLoanExtMapper
- TbLoanMapper tbLoanMapper
+ List<TbLoansVO> queryTbLoanList(QueryLoansDTO)
+ long countByOrderNo(String,String)
+ int save(TbLoan)
+ TbLoan findOne(String)
+ List<TbLoan> findByLoanNumberList(List<String>)
+ List<TbLoan> findByPartnerAndOrderNoList(String,List<String>)
+ List<TbLoan> findByLendBatchNo(String)
+ List<TbLoan> findCanDisbursementByLendBatchNo(List<String>,List<Byte>)
+ List<TbLoan> findByLendBatchNoList(List<String>)
+ Long findCountByLendBatchNo(List<String>)
+ List<TbLoan> list(TbLoanExample)
+ TbLoan findById(Long)
+ void update(TbLoan)
+ int batchUpdateByPrimaryKey(List<Long>,TbLoan)
+ int batchUpdateLendBatchNoByLoanNumber(List<String>,String)
+ int batchUpdateStateByLoanNumberListAndState(List<String>,Byte,Byte)
+ int batchUpdateInDisbursedByLendBatchNo(String)
+ List<TbNoticeVO> getLendSuccessUserIdList(String,List<Byte>,Long,Integer)
+ PageInfo<TbDisbursementReportLoan> getTbDisbursementReportLoan(TbDisbursementReportQryBO)
+ int unConfirmTbLoanCancel(String,Date)
+ List<TbLoansVO> findPendRepayList(PendRepayQueryDTO)
+ List<TbLoansVO> findRepaymentList(RepaymentQryDTO)
+ TbLoan lastDayUnSign(String,Date,Date)
}
class com.welab.moon.app.command.credit.gada.GadaSubmitApplyCreditUserInfoCmdExe {
- BaseTbUserService baseTbUserService
- BaseTbCreditApplyService baseTbCreditApplyService
- UserServiceFacade userServiceFacade
- GadaUserServiceImportTbUser gadaUserServiceImportTbUser
- MongoManager mongoManager
- GadaLoansServiceFacade gadaLoansServiceFacade
- DocumentServiceFacade documentServiceFacade
- MqProduceService mqProduceService
- IndoRegionsServiceFacade indoRegionsServiceFacade
+ void execute(GadaApplyCreditUserInfoDTO)
- void saveTbUserInfo(Long,Long,String,String,String,TbCreditApply,GadaApplyCreditUserInfoDTO)
- GadaApprovalLoansDTO saveUserDoc(Long,GadaApplyCreditUserInfoDTO,TbCreditApply,String)
- Long saveUserInfo(GadaApplyCreditUserInfoDTO)
- Long imageUrl2ImageId(String,Long,String,DocsTypeEnum)
}
class com.welab.moon.model.bo.TbDisbursementReportQryBO {
- PartnerEnum partner
- Date lendAtStart
- Date lendAtEnd
- Long parentUserId
}
enum com.welab.moon.enums.RedisKeyEnum {
+  DAYA_OTP
+  TB_SMS
+  HSO_OTP_CONFIG
+  TB_SIGN_CODE_SEND_COUNT
+  TB_SIGN_CODE
+  CREATE_LEND_BATCH_NO_LOCK
+  AGREEMENT_FILE_COUNT
+  AGREEMENT_VIEW
+  EMAIL_VERIFICATION
+  EMAIL_VERIFICATION_LIMIT
+  PHONE_VERIFICATION
- String key
- String desc
- Integer failureTime
+ String getCacheKey(String)
+ {static} int getRemainingSeconds()
}
class com.welab.moon.model.bo.OverdueNotifyBO {
- {static} long serialVersionUID
- String loanNumber
- Date overdueTime
- Boolean isOverDue
}
class com.welab.moon.exception.MoonException {
- {static} long serialVersionUID
- <<Create>> MoonException()
+ <<Create>> MoonException(String)
+ <<Create>> MoonException(Integer)
+ <<Create>> MoonException(Integer,String)
+ <<Create>> MoonException(ResponsCodeType.ExternalResponsCodeTypeEnum)
}
class com.welab.moon.model.vo.TbLoanVO {
- Date createdAt
- Date updatedAt
- Boolean deleted
- String partner
- String orderNo
- String loanNumber
- String batchNo
- String lendBatchNo
- Long userId
- String secondProdCode
- String contractNo
- Long amount
- String term
- String billingNo
- Date businessTime
- String docId
- String resId
- Byte loanState
- Date lendAt
}
class com.welab.moon.app.service.HomePageService {
- BaseTbUserService baseTbUserService
- JedisCluster jedisCluster
- {static} String PARTNER_SELECTED_KEY
- BaseTbUserAgentRelService baseTbUserAgentRelService
+ List<HomePageListVO> homePageList(Long,String)
- List<HomePageListVO> buildHomePageListVo(List<TbUser>,String)
+ Response saveSelectedStatus(Long,List<String>,String)
}
class com.welab.moon.model.TbCreditUserAccount {
- Long id
- Long userId
- Long sumMoney
- Long useMoney
- Long freezeMoney
- Byte status
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ Long getSumMoney()
+ void setSumMoney(Long)
+ Long getUseMoney()
+ void setUseMoney(Long)
+ Long getFreezeMoney()
+ void setFreezeMoney(Long)
+ Byte getStatus()
+ void setStatus(Byte)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.moon.app.service.confirmloan.strategy.PendingCancelToSigndeStrategyService {
- BaseTbLoanService baseTbLoanService
+ String strategy()
+ void execute(List<TbConfirmLoanTrigger>)
}
interface com.welab.moon.mapper.TbUserAgentRelMapper {
~ long countByExample(TbUserAgentRelExample)
~ int deleteByExample(TbUserAgentRelExample)
~ int deleteByPrimaryKey(Long)
~ int insert(TbUserAgentRel)
~ int insertSelective(TbUserAgentRel)
~ List<TbUserAgentRel> selectByExample(TbUserAgentRelExample)
~ TbUserAgentRel selectByPrimaryKey(Long)
~ int updateByExampleSelective(TbUserAgentRel,TbUserAgentRelExample)
~ int updateByExample(TbUserAgentRel,TbUserAgentRelExample)
~ int updateByPrimaryKeySelective(TbUserAgentRel)
~ int updateByPrimaryKey(TbUserAgentRel)
}
class com.welab.moon.mq.listener.GadaCreditUserAccountInitListener {
- GadaApplyCreditUserAccountInitCmdExe gadaApplyCreditUserAccountInitCmdExe
+ void hand(Message)
}
class com.welab.moon.model.bo.GadaUserImportBO {
- String regionCode
- String cmCode
- String agentId
- String retailerName
- String storeLocationCoordinate
- Long provinceId
- Long cityId
- String district
- String zipCode
- String posisiToko
- String businessType
- String ktpPict
- String selfieKtp
- String selfieStore
- String legalityType
- String startSince
- String duration
- String branchNumber
- String branchName
- String rp
- String unit
- String paymentMethod
- String newPlafondLimit
- String overdueInsight
- String address
- String agentName
- String agentPic
- String mobile2
- String storeName
- String agentType
- String agreementNo
- String agreementDate
}
class com.welab.moon.model.dto.traveloka.WorkProfile {
- String occupation
- String employmentStatus
- String companyName
- Long monthlySalary
- String industry
- String workPhone
- Integer yearOfService
- KtpAddress workAddress
}
class com.welab.moon.app.base.BaseTbUserAgentRelService {
- TbUserAgentRelMapper tbUserAgentRelMapper
+ List<Long> getAgentUserIds(Long)
}
interface com.welab.moon.mapper.TbConfigsMapper {
~ long countByExample(TbConfigsExample)
~ int deleteByExample(TbConfigsExample)
~ int deleteByPrimaryKey(Long)
~ int insert(TbConfigs)
~ int insertSelective(TbConfigs)
~ List<TbConfigs> selectByExample(TbConfigsExample)
~ TbConfigs selectByPrimaryKey(Long)
~ int updateByExampleSelective(TbConfigs,TbConfigsExample)
~ int updateByExample(TbConfigs,TbConfigsExample)
~ int updateByPrimaryKeySelective(TbConfigs)
~ int updateByPrimaryKey(TbConfigs)
}
enum com.welab.moon.enums.agreement.TbAgreementDocSigningMethodEnum {
+  MANUAL
+  AUTO
- byte status
- String desc
}
class com.welab.moon.test.job.CreditLoanDpdNoticeJobTest {
- CreditLoanDpdNoticeJob creditLoanDpdNoticeJob
+ void execute()
}
class com.welab.moon.test.app.service.gada.GadaLimitReportTest {
- GadaLimitReportCmdExe gadaLimitReportCmdExe
+ void gadaLimitReportTest()
}
class com.welab.moon.app.service.agreement.expiredstrategy.CancelSigningAgreementService {
- BaseToBLoanAgreementService baseToBLoanAgreementService
- BaseTbLoanService baseTbLoanService
- RestoreTbUserAccountCmdExe restoreTbUserAccountCmdExe
- TbService tbService
+ String strategy()
+ void execute(List<TbAgreementDoc>)
}
class com.welab.moon.facade.gateway.PayServiceFacade {
- PayService payService
+ Response<List<BankVO>> getAvailableBanks()
}
class com.welab.moon.app.manage.TbLoanServiceFactory {
- List<TbLoanService> loanServices
- {static} Map<String,TbLoanService> TB_LOAN_SERVICE_MAP
- <<Create>> TbLoanServiceFactory()
+ {static} TbLoanService getTbLoanService(String)
+ void init()
}
class com.welab.moon.model.TbAgreementDocExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> TbAgreementDocExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.moon.model.TbAgreementDocExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andPartnerIsNull()
+ Criteria andPartnerIsNotNull()
+ Criteria andPartnerEqualTo(String)
+ Criteria andPartnerNotEqualTo(String)
+ Criteria andPartnerGreaterThan(String)
+ Criteria andPartnerGreaterThanOrEqualTo(String)
+ Criteria andPartnerLessThan(String)
+ Criteria andPartnerLessThanOrEqualTo(String)
+ Criteria andPartnerLike(String)
+ Criteria andPartnerNotLike(String)
+ Criteria andPartnerIn(List<String>)
+ Criteria andPartnerNotIn(List<String>)
+ Criteria andPartnerBetween(String,String)
+ Criteria andPartnerNotBetween(String,String)
+ Criteria andTbLoanNumberIsNull()
+ Criteria andTbLoanNumberIsNotNull()
+ Criteria andTbLoanNumberEqualTo(String)
+ Criteria andTbLoanNumberNotEqualTo(String)
+ Criteria andTbLoanNumberGreaterThan(String)
+ Criteria andTbLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andTbLoanNumberLessThan(String)
+ Criteria andTbLoanNumberLessThanOrEqualTo(String)
+ Criteria andTbLoanNumberLike(String)
+ Criteria andTbLoanNumberNotLike(String)
+ Criteria andTbLoanNumberIn(List<String>)
+ Criteria andTbLoanNumberNotIn(List<String>)
+ Criteria andTbLoanNumberBetween(String,String)
+ Criteria andTbLoanNumberNotBetween(String,String)
+ Criteria andMobileIsNull()
+ Criteria andMobileIsNotNull()
+ Criteria andMobileEqualTo(String)
+ Criteria andMobileNotEqualTo(String)
+ Criteria andMobileGreaterThan(String)
+ Criteria andMobileGreaterThanOrEqualTo(String)
+ Criteria andMobileLessThan(String)
+ Criteria andMobileLessThanOrEqualTo(String)
+ Criteria andMobileLike(String)
+ Criteria andMobileNotLike(String)
+ Criteria andMobileIn(List<String>)
+ Criteria andMobileNotIn(List<String>)
+ Criteria andMobileBetween(String,String)
+ Criteria andMobileNotBetween(String,String)
+ Criteria andEnabledIsNull()
+ Criteria andEnabledIsNotNull()
+ Criteria andEnabledEqualTo(Boolean)
+ Criteria andEnabledNotEqualTo(Boolean)
+ Criteria andEnabledGreaterThan(Boolean)
+ Criteria andEnabledGreaterThanOrEqualTo(Boolean)
+ Criteria andEnabledLessThan(Boolean)
+ Criteria andEnabledLessThanOrEqualTo(Boolean)
+ Criteria andEnabledIn(List<Boolean>)
+ Criteria andEnabledNotIn(List<Boolean>)
+ Criteria andEnabledBetween(Boolean,Boolean)
+ Criteria andEnabledNotBetween(Boolean,Boolean)
+ Criteria andAdminIdIsNull()
+ Criteria andAdminIdIsNotNull()
+ Criteria andAdminIdEqualTo(Long)
+ Criteria andAdminIdNotEqualTo(Long)
+ Criteria andAdminIdGreaterThan(Long)
+ Criteria andAdminIdGreaterThanOrEqualTo(Long)
+ Criteria andAdminIdLessThan(Long)
+ Criteria andAdminIdLessThanOrEqualTo(Long)
+ Criteria andAdminIdIn(List<Long>)
+ Criteria andAdminIdNotIn(List<Long>)
+ Criteria andAdminIdBetween(Long,Long)
+ Criteria andAdminIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andSigningStatusIsNull()
+ Criteria andSigningStatusIsNotNull()
+ Criteria andSigningStatusEqualTo(Byte)
+ Criteria andSigningStatusNotEqualTo(Byte)
+ Criteria andSigningStatusGreaterThan(Byte)
+ Criteria andSigningStatusGreaterThanOrEqualTo(Byte)
+ Criteria andSigningStatusLessThan(Byte)
+ Criteria andSigningStatusLessThanOrEqualTo(Byte)
+ Criteria andSigningStatusIn(List<Byte>)
+ Criteria andSigningStatusNotIn(List<Byte>)
+ Criteria andSigningStatusBetween(Byte,Byte)
+ Criteria andSigningStatusNotBetween(Byte,Byte)
+ Criteria andSigningMethodIsNull()
+ Criteria andSigningMethodIsNotNull()
+ Criteria andSigningMethodEqualTo(Byte)
+ Criteria andSigningMethodNotEqualTo(Byte)
+ Criteria andSigningMethodGreaterThan(Byte)
+ Criteria andSigningMethodGreaterThanOrEqualTo(Byte)
+ Criteria andSigningMethodLessThan(Byte)
+ Criteria andSigningMethodLessThanOrEqualTo(Byte)
+ Criteria andSigningMethodIn(List<Byte>)
+ Criteria andSigningMethodNotIn(List<Byte>)
+ Criteria andSigningMethodBetween(Byte,Byte)
+ Criteria andSigningMethodNotBetween(Byte,Byte)
+ Criteria andExpiredAtIsNull()
+ Criteria andExpiredAtIsNotNull()
+ Criteria andExpiredAtEqualTo(Date)
+ Criteria andExpiredAtNotEqualTo(Date)
+ Criteria andExpiredAtGreaterThan(Date)
+ Criteria andExpiredAtGreaterThanOrEqualTo(Date)
+ Criteria andExpiredAtLessThan(Date)
+ Criteria andExpiredAtLessThanOrEqualTo(Date)
+ Criteria andExpiredAtIn(List<Date>)
+ Criteria andExpiredAtNotIn(List<Date>)
+ Criteria andExpiredAtBetween(Date,Date)
+ Criteria andExpiredAtNotBetween(Date,Date)
+ Criteria andSigningAtIsNull()
+ Criteria andSigningAtIsNotNull()
+ Criteria andSigningAtEqualTo(Date)
+ Criteria andSigningAtNotEqualTo(Date)
+ Criteria andSigningAtGreaterThan(Date)
+ Criteria andSigningAtGreaterThanOrEqualTo(Date)
+ Criteria andSigningAtLessThan(Date)
+ Criteria andSigningAtLessThanOrEqualTo(Date)
+ Criteria andSigningAtIn(List<Date>)
+ Criteria andSigningAtNotIn(List<Date>)
+ Criteria andSigningAtBetween(Date,Date)
+ Criteria andSigningAtNotBetween(Date,Date)
}
class com.welab.moon.model.TbAgreementDocExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.moon.model.TbAgreementDocExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.moon.model.mongo.GadaTbLoanDoc {
- Long fundId
}
class com.welab.moon.app.manage.TbUserServiceFactory {
- List<TbUserService> tbUserServiceList
- {static} Map<String,TbUserService> TB_USER_SERVICE_MAP
- <<Create>> TbUserServiceFactory()
+ {static} TbUserService getTbUserService(String)
+ void init()
}
class com.welab.moon.app.command.TbAgreementDocExpiredCmdExe {
- CreditConfiguration creditConfiguration
- BaseToBLoanAgreementService baseToBLoanAgreementService
+ void execute(JSONObject)
- void handExpired(Map<String,AbstractTbAgreementDocExpiredService>,AgreementDocExpiredConfig,List<TbAgreementDoc>)
}
abstract class com.welab.moon.model.dto.PageQueryDTO {
- {static} long serialVersionUID
- int pageSize
- int pageNum
}
class com.welab.moon.app.command.credit.RestoreTbUserAccountCmdExe {
- TbCreditUserAccountManager tbCreditUserAccountManager
- BaseTbCreditUserAccountLogService baseTbCreditUserAccountLogService
- LoanOverdueInfoServiceFacade loanOverdueInfoServiceFacade
+ void execute(RestoreTbUserAccountBO)
}
class com.welab.moon.model.bo.sign.TbSignCodeBO {
- Long orgId
- String sourceId
- String signUpkey
- String appTags
- Byte channelType
}
class com.welab.moon.facade.fund.FundLoansServiceFacade {
- FundLoansService fundLoansService
+ Long matchFund(FundLoansDTO)
}
interface com.welab.moon.mapper.ext.TbCreditUserAccountLogExtMapper {
~ int batchSaveFreezeOrBlackLog(BacthTbCreditUserAccountLogParamBO)
}
class com.welab.moon.model.TbLendBatchExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> TbLendBatchExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.moon.model.TbLendBatchExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andPartnerIsNull()
+ Criteria andPartnerIsNotNull()
+ Criteria andPartnerEqualTo(String)
+ Criteria andPartnerNotEqualTo(String)
+ Criteria andPartnerGreaterThan(String)
+ Criteria andPartnerGreaterThanOrEqualTo(String)
+ Criteria andPartnerLessThan(String)
+ Criteria andPartnerLessThanOrEqualTo(String)
+ Criteria andPartnerLike(String)
+ Criteria andPartnerNotLike(String)
+ Criteria andPartnerIn(List<String>)
+ Criteria andPartnerNotIn(List<String>)
+ Criteria andPartnerBetween(String,String)
+ Criteria andPartnerNotBetween(String,String)
+ Criteria andBatchNoIsNull()
+ Criteria andBatchNoIsNotNull()
+ Criteria andBatchNoEqualTo(String)
+ Criteria andBatchNoNotEqualTo(String)
+ Criteria andBatchNoGreaterThan(String)
+ Criteria andBatchNoGreaterThanOrEqualTo(String)
+ Criteria andBatchNoLessThan(String)
+ Criteria andBatchNoLessThanOrEqualTo(String)
+ Criteria andBatchNoLike(String)
+ Criteria andBatchNoNotLike(String)
+ Criteria andBatchNoIn(List<String>)
+ Criteria andBatchNoNotIn(List<String>)
+ Criteria andBatchNoBetween(String,String)
+ Criteria andBatchNoNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Integer)
+ Criteria andStatusNotEqualTo(Integer)
+ Criteria andStatusGreaterThan(Integer)
+ Criteria andStatusGreaterThanOrEqualTo(Integer)
+ Criteria andStatusLessThan(Integer)
+ Criteria andStatusLessThanOrEqualTo(Integer)
+ Criteria andStatusIn(List<Integer>)
+ Criteria andStatusNotIn(List<Integer>)
+ Criteria andStatusBetween(Integer,Integer)
+ Criteria andStatusNotBetween(Integer,Integer)
+ Criteria andExpectLendAtIsNull()
+ Criteria andExpectLendAtIsNotNull()
+ Criteria andExpectLendAtEqualTo(Date)
+ Criteria andExpectLendAtNotEqualTo(Date)
+ Criteria andExpectLendAtGreaterThan(Date)
+ Criteria andExpectLendAtGreaterThanOrEqualTo(Date)
+ Criteria andExpectLendAtLessThan(Date)
+ Criteria andExpectLendAtLessThanOrEqualTo(Date)
+ Criteria andExpectLendAtIn(List<Date>)
+ Criteria andExpectLendAtNotIn(List<Date>)
+ Criteria andExpectLendAtBetween(Date,Date)
+ Criteria andExpectLendAtNotBetween(Date,Date)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Long)
+ Criteria andFundIdNotEqualTo(Long)
+ Criteria andFundIdGreaterThan(Long)
+ Criteria andFundIdGreaterThanOrEqualTo(Long)
+ Criteria andFundIdLessThan(Long)
+ Criteria andFundIdLessThanOrEqualTo(Long)
+ Criteria andFundIdIn(List<Long>)
+ Criteria andFundIdNotIn(List<Long>)
+ Criteria andFundIdBetween(Long,Long)
+ Criteria andFundIdNotBetween(Long,Long)
}
class com.welab.moon.model.TbLendBatchExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.moon.model.TbLendBatchExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.moon.model.dto.RepaymentQryDTO {
- Date repaymentStartTime
- Date repaymentEndTime
- String partner
- Long userId
- String invoiceNo
- String loanNumberList
}
class com.welab.moon.app.command.ImportTbLeve1UserCmdExe {
- {static} Map<String,String[]> IMPORT_FIELDS_MAP
- {static} Map<String,String> USER_PRODUCT_CODE_MAP
- CommonHelper<ImportTbLeve1UserBO> commonHelper
- BaseTbUserService baseTbUserService
- PayServiceFacade payServiceFacade
- UserServiceFacade userServiceFacade
- MongoManager mongoManager
- BaseTbConfigsService baseTbConfigsService
- ValidatorServiceFacade validatorServiceFacade
+ TbImportVO execute(ImportTbUserDTO)
- Long saveUserInfo(String,ImportTbLeve1UserBO)
- String saveDayaUserDoc(String,Long,ImportTbLeve1UserBO)
- void saveTbUser(String,String,Long,ImportTbLeve1UserBO)
- void saveBankCardInfo(String,ImportTbLeve1UserBO)
- void queryUserInfo(ImportTbUserDTO,List<ImportTbLeve1UserBO>,Set<String>,Set<String>)
- void checkData(ImportTbUserDTO,List<ImportTbLeve1UserBO>,List<String>)
}
class com.welab.moon.facade.message.MessageSmsFacade {
- MessageSmsService messageSmsService
# String appId
+ void sendLoanSuccessSmsToTb(TbUser,TbLoan,String,String,PartnerEnum)
+ Response<Long> sendVCode(SendSmsRequestVCode)
}
class com.welab.moon.controller.VaLoanInfoController {
- VaLoanInfoService vaLoanInfoService
- VirtualAccountServiceFacade virtualAccountServiceFacade
+ Response<PageInfo<VaLoanInfoRspVO>> getPageVaLoanInfo(VaLoanInfoQueryDTO)
+ Response<VaLoanInfoRspVO> createVaLoan(VaLoanInfoEssentialVO)
+ Response<String> getVANumber(String)
+ Response<Map<String,Long>> getFundInfo()
}
class com.welab.moon.test.base.SimpleTest {
# Logger logger
+ <<Create>> SimpleTest()
}
class com.welab.moon.app.command.tbreg.BusinessRegCmdExe {
- MongoManager mongoManager
- ValidatorServiceFacade validatorServiceFacade
- JedisCluster jedisCluster
- TbRegisterMailCmdExe tbRegisterMailCmdExe
- RegionServiceFacade regionServiceFacade
- BaseTbConfigsService baseTbConfigsService
+ void execute(BusinessRegDoc)
- BusinessRegBO buildBusinessRegDoc(BusinessRegDoc)
- TbConfigs getConfig(Map<String,Map<String,TbConfigs>>,TbConfigsEnum,String)
}
class com.welab.moon.test.app.service.gada.GadaImportUserTest {
- ImportTbUserManage importTbUserManage
- AgreementCmdExe agreementCmdExe
- BaseTbLoanService baseTbLoanService
+ void testDoc()
+ String getCmCode()
+ LinkedHashMap<String,String> head()
+ void importTest()
+ void importTestFiledIsNull()
- List<GadaUserImportBO> buildGadaUserImportBO()
+ MultipartFile createMfileByPath(File)
}
class com.welab.moon.test.app.service.daya.DayaImportLoanTest {
- ImportTbLoanManage importTbLoanManage
+ String getCmCode()
+ LinkedHashMap<String,String> head()
+ void dayaImportLoan()
+ MultipartFile createMfileByPath(File)
}
abstract class com.welab.moon.app.service.disbursement.email.AbstractTbDisbursementEmailReportTemplateService {
# BaseTbLoanService baseTbLoanService
# CreditConfiguration creditConfiguration
# BaseTbUserService baseTbUserService
# MongoManager mongoManager
- {static} ThreadLocal<CreditConfiguration.PartnerConfig> PARTNER_CONFIG_THREADLOCAL
# {static} ThreadLocal<TbUser> TB_USER_THREADLOCAL
+ {abstract}String templateName()
# String attachmentName(TbDisbursementReportQryBO)
# LinkedHashMap<String,String> getExcelHeadMap(TbDisbursementReportQryBO)
# Long getTotalCount(TbDisbursementReportQryBO)
# List<TbDisbursementReportLoan> getDataList(TbDisbursementReportQryBO)
# MailDTO buildMail(MailDTO,TbDisbursementReportQryBO)
- String replaceParameter(TbDisbursementReportQryBO,String,boolean)
+ void execute(TbDisbursementReportQryBO)
# void doExecute(TbDisbursementReportQryBO)
- CreditConfiguration.PartnerConfig getPartnerConfig(PartnerEnum)
}
class com.welab.moon.app.command.TbDisbursementNotifyCmdExe {
- MessageEmailFacade messageEmailFacade
- BaseTbLoanService baseTbLoanService
- MessagePushCmdExe messagePushCmdExe
- BaseTbUserDocService baseTbUserDocService
- DeductionTbUserAccountCmdExe deductionTbUserAccountCmdExe
- DayaDisbursementMessageCmdExe dayaDisbursementMessageCmdExe
+ void handle(String,Date)
}
interface com.welab.moon.app.service.TbLoanService {
~ PageInfo<TbLoansVO> queryLoans(QueryLoansDTO)
~ List<TbLoansVO> exportLoans(QueryLoansDTO)
~ String getKey()
~ LinkedHashMap<String,String> getExportTitle()
}
class com.welab.moon.app.base.BaseTbConfirmLoanTriggerService {
- TbConfirmLoanTriggerExtMapper tbConfirmLoanTriggerExtMapper
+ int inserts(List<TbConfirmLoanTrigger>)
+ int insert(TbConfirmLoanTrigger)
+ List<TbConfirmLoanTrigger> findByLoanNumberListAndStatusList(List<String>,List<Byte>)
+ TbConfirmLoanTrigger findByLoanNumberAndStatus(String,Byte)
+ PageInfo<CancelLoanInfoVO> selectPageInfo(CancelLoanInfoQryVO)
+ int updateConfirmSuccess(String)
+ int batchUpdateStateByIdList(List<Long>,Byte)
+ List<TbConfirmLoanTrigger> selectPendingByTime(Date,Date)
}
class com.welab.moon.facade.finance.DueServiceFacade {
- DuesService duesService
+ Long getRepaymentAmount(String)
+ Date findDueDate(String)
}
class com.welab.moon.job.TbAgreementDocExpiredJob {
- CreditBusiService creditBusiService
+ void execute(ShardingContext)
}
enum com.welab.moon.enums.TbReMsgTmplEnum {
+  AOP
+  HSO
+  TRIO
+  GADA
+  DAYA
+  SMP
- String partner
- String userEmailTmplName
- String tbEmailTmplName
- String userAppTmplName
- String tbAppTmplName
+ {static} TbReMsgTmplEnum findByPartner(String)
}
interface com.welab.moon.service.TbUserInfoService {
~ UserPartnerInfoVO findUserLevelByUserId(Long)
~ TravelokaUserInfoVO findByUserId(Long)
~ PageInfo<TbUserDocVO> tbUserPageList(TbUserQryDTO)
~ PageInfo<TbUserDocVO> tbUserVOPageList(TbUserQryDTO)
~ Long tbUserPageCount(TbUserQryDTO)
~ List<TbUserVO> getTbUsers(String,List<String>)
}
class com.welab.moon.model.bo.InvoiceImportBO {
- String customerCode
- String orderNo
- Long invoiceAmount
- Date invoiceDate
- String top
- String qty
- String netPrice
- String customerName
- String product
- Long userId
- String partner
- String docId
- String loanNumber
- String productCode
- String mobile
- Long fundId
- String batchNo
- String lendBatchNo
- String term
- String billingNo
- String loanExtend
- Date businessTime
- String creditControlArea
- String customerAddress
- String defaultValue2
~ List<BillingAndNettVatVO> nettVatData
}
class com.welab.moon.app.command.GadaFileUploadCmdExe {
- DocumentService documentService
- JedisCluster jedisCluster
- OssDocumentHandlerUtil ossDocumentHandlerUtil
+ void execute(GadaFileUploadDTO)
}
class com.welab.moon.model.mongo.DayaTbLoanDoc {
- String cmCode
- Long invoiceDate
- Long expDate
- String goods
+ Date parseInvoiceDate()
+ Date parseExpDate()
}
class com.welab.moon.model.mongo.HsoTbLoanDoc {
- String defaultValue1
- String emptySpace1
- String emptySpace2
- String invoiceDate
- String emptySpace3
- String invoiceDateTOP
- String invoiceDate2
- String customerNumber
- String creditControlArea
- String customerAddress
- String defaultValue2
- String emptySpace4
- String currency
- String invoiceAmount
- List<BillingAndNettVatVO> billingAndNettVatVOList
}
interface com.welab.moon.service.IGadaService {
~ void submitApplyCreditUserInfo(GadaApplyCreditUserInfoDTO)
~ Response<GadaUserInfoDTO> getApplyCreditUserInfo(Long)
~ void updateApplyCreditUserInfo(GadaUserInfoDTO)
~ Response<PreApprovalInfoDTO> queryPreApprovalInfo(String)
~ Response<List<TbConfigDTO>> queryDicConfigs(List<String>)
~ void updateApplyInfoByApplyCode(UpdateTbCreditApplyDTO)
~ List<TbUserVO> getListUserGadaByEmail(String)
}
class com.welab.moon.model.TbConfirmLoanTrigger {
- Long id
- String partner
- String loanNumber
- Byte triggerType
- String description
- Byte status
- Long operatorUserId
- Date expiredAt
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getPartner()
+ void setPartner(String)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ Byte getTriggerType()
+ void setTriggerType(Byte)
+ String getDescription()
+ void setDescription(String)
+ Byte getStatus()
+ void setStatus(Byte)
+ Long getOperatorUserId()
+ void setOperatorUserId(Long)
+ Date getExpiredAt()
+ void setExpiredAt(Date)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.moon.test.app.service.TbRegisterTest {
- TbRegisterMailCmdExe tbRegisterMailCmdExe
- TbPersonalRegMailCmdExe tbPersonalRegMailCmdExe
- PersonalRegCmdExe personalRegCmdExe
- BusinessRegCmdExe businessRegCmdExe
- JedisCluster jedisCluster
+ void send()
+ void sendPersonal()
}
class com.welab.moon.app.service.credit.smp.SmpTbLoanService {
+ String getKey()
+ LinkedHashMap<String,String> getExportTitle()
}
class com.welab.moon.model.dto.RepaymentQueryDTO {
}
class com.welab.moon.app.command.agreement.GadaAgreementReportCmdExe {
- MessageEmailFacade messageEmailFacade
# String appId
+ void sendReport(Long,Integer,String,String)
- Map<String,String> createAttachment(List<GadaAgreementReportBO>,String)
- String getFileString(String,List,LinkedHashMap<String,String>)
}
class com.welab.moon.app.command.agreement.GadaAgreementReportCmdExe$GadaAgreementReportBO {
- String no
- String page
- String description
- String total
+ {static} LinkedHashMap<String,String> getExcelHead()
}
class com.welab.moon.facade.user.UserServiceFacade {
- UserService userService
- IUserPinService userPinService
+ Response<Long> tbUserReg(RegUserDTO)
+ Response<UserInfoDTO> getUserInfoByMobile(String,Long)
+ Response<UserInfoDTO> getUserInfoById(Long)
+ void userDelete(Long,Long)
+ void updateState(Long,Byte)
+ void updateMobile(Long,String)
+ void updatePassword(Long,String)
+ Map<Long,UserInfoDTO> getUserInfoByUserIds(List<Long>)
}
interface com.welab.moon.mapper.TbAgreementDocMapper {
~ long countByExample(TbAgreementDocExample)
~ int deleteByExample(TbAgreementDocExample)
~ int deleteByPrimaryKey(Long)
~ int insert(TbAgreementDoc)
~ int insertSelective(TbAgreementDoc)
~ List<TbAgreementDoc> selectByExample(TbAgreementDocExample)
~ TbAgreementDoc selectByPrimaryKey(Long)
~ int updateByExampleSelective(TbAgreementDoc,TbAgreementDocExample)
~ int updateByExample(TbAgreementDoc,TbAgreementDocExample)
~ int updateByPrimaryKeySelective(TbAgreementDoc)
~ int updateByPrimaryKey(TbAgreementDoc)
}
class com.welab.moon.model.bo.DayaImportTbUserBO {
- String merchantCode
- String customerCode
- String agreementNo
- String agreementDate
- String currentLimit
- String address
- String agentName
- String agentPic
- String mobile2
- String storeName
- String agentType
- String startSince
- String duration
- String invoiceFin
- String branchNumber
- String branchName
- String empNo
- String pitNo
- String sparepartVolLastYear
- String oilVolLastYear
- String sparepartVolThisYear
- String oilVolThisYear
- String unitLastYear
- String unitThisYear
- String colabDuration
- String overdueInsight
}
enum com.welab.moon.enums.TbConfirmLoanTriggerTypeEnum {
+  PENDING_CANCEL_TO_SIGNDE
+  SIGNDE_TO_TIMEOUT
- Byte triggerType
- String desc
+ {static} Map<Byte,TbConfirmLoanTriggerTypeEnum> getStatusMap()
}
interface com.welab.moon.app.service.TbLoanImportService {
~ T doHandel(ImportLoanDTO)
~ String getKey()
}
abstract class com.welab.moon.app.service.disbursement.job.AbstractDisbursementJob {
- MarketingServiceFacade marketingServiceFacade
# BaseTbLendBatchService baseTbLendBatchService
# BaseTbLoanService baseTbLoanService
# PartnerBankInfoManage partnerBankInfoManage
# DisbursementCmdExe disbursementCmdExe
+ {abstract}String strategy()
# {abstract}BatchLendQryParam buildBatchLendQryParam(DisbursementContext)
# {abstract}List<BatchDisbursementInfo> buildBatchDisbursementData(List<TbLendBatch>,DisbursementContext)
# List<TbLoan> findCanDisbursementByLendBatchNo(List<String>,DisbursementContext)
# void batchDisbursementCallBack(BatchDisbursementInfo)
+ void execute(ShardingContext)
- DisbursementContext buildDisbursementContext(ShardingContext)
# PartnerBankInfo getFixPartnerBankInfo(Map<String,PartnerBankInfo>)
# TbLendBatch buildTbLendBatch(DisbursementContext,Long)
}
class com.welab.moon.app.service.agreement.expiredstrategy.CancelAgreementDocService {
+ String strategy()
+ void execute(List<TbAgreementDoc>)
}
enum com.welab.moon.enums.TravelokaModifyEnum {
+  USER
+  WORK
+  CONTACT
- String name
}
class com.welab.moon.model.vo.TncConfigVO {
- String content
- Boolean isDisplay
}
class com.welab.moon.model.mongo.TbRepaymentTrackDoc {
- String partner
- String orderNo
- String loanNumber
- String serialNo
- Long principal
- Long interest
- Long lateFee
- Integer dueIndex
- Date repaymentAt
- String repaymentTag
- String partialRepayment
- Long discountPrincipal
- Long discountInterest
- Long discountLateFee
- Long userId
}
class com.welab.moon.app.service.credit.daya.DayaLoanImportService {
- MongoManager mongoManager
- BaseTbLoanService baseTbLoanService
- TbCreditUserAccountManager tbCreditUserAccountManager
- BaseTbUserDocService baseTbUserDocService
- ProductRateConfigFacade productRateConfigFacade
- DayaConfirmOrCancelMessageCmdExe dayaConfirmOrCancelMessageCmdExe
- BaseTbLendBatchService baseTbLendBatchService
- {static} int UPLOAD_TIME
+ List<InvoiceImportBO> doHandelImportData(ImportLoanDTO)
- List<InvoiceImportBO> handelData(List<DayaExcelVO>)
- String insertDamTbLoanDoc(DayaExcelVO)
+ TbImportVO checkImportData(List<InvoiceImportBO>,Long)
- boolean validateFields(InvoiceImportBO,List<String>,int,int)
- boolean validateBiz(InvoiceImportBO,Map<String,TbUser>,List<String>,List<String>,int,int,Long,ProductRateConfigVO,List<String>)
+ String getKey()
}
enum com.welab.moon.enums.TbOptTmplEnum {
+  CONFIRM
+  CANCEL
- byte state
- String tmplName1
- String tmplName2
+ {static} TbOptTmplEnum findByState(Byte)
}
class com.welab.moon.model.TbLoan {
- Long id
- Date createdAt
- Date updatedAt
- Boolean deleted
- String partner
- String orderNo
- String loanNumber
- String batchNo
- String lendBatchNo
- Long userId
- String secondProdCode
- String contractNo
- Long amount
- String term
- String billingNo
- Date businessTime
- String docId
- String resId
- Byte loanState
- Date lendAt
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ String getPartner()
+ void setPartner(String)
+ String getOrderNo()
+ void setOrderNo(String)
+ String getLoanNumber()
+ void setLoanNumber(String)
+ String getBatchNo()
+ void setBatchNo(String)
+ String getLendBatchNo()
+ void setLendBatchNo(String)
+ Long getUserId()
+ void setUserId(Long)
+ String getSecondProdCode()
+ void setSecondProdCode(String)
+ String getContractNo()
+ void setContractNo(String)
+ Long getAmount()
+ void setAmount(Long)
+ String getTerm()
+ void setTerm(String)
+ String getBillingNo()
+ void setBillingNo(String)
+ Date getBusinessTime()
+ void setBusinessTime(Date)
+ String getDocId()
+ void setDocId(String)
+ String getResId()
+ void setResId(String)
+ Byte getLoanState()
+ void setLoanState(Byte)
+ Date getLendAt()
+ void setLendAt(Date)
}
class com.welab.moon.model.vo.TravelokaUserInfoVO {
- UserProfile userProfile
- WorkProfile workProfile
- List<ContactList> contactList
}
class com.welab.moon.model.TbUserExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> TbUserExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.moon.model.TbUserExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andPartnerIsNull()
+ Criteria andPartnerIsNotNull()
+ Criteria andPartnerEqualTo(String)
+ Criteria andPartnerNotEqualTo(String)
+ Criteria andPartnerGreaterThan(String)
+ Criteria andPartnerGreaterThanOrEqualTo(String)
+ Criteria andPartnerLessThan(String)
+ Criteria andPartnerLessThanOrEqualTo(String)
+ Criteria andPartnerLike(String)
+ Criteria andPartnerNotLike(String)
+ Criteria andPartnerIn(List<String>)
+ Criteria andPartnerNotIn(List<String>)
+ Criteria andPartnerBetween(String,String)
+ Criteria andPartnerNotBetween(String,String)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andNameIsNull()
+ Criteria andNameIsNotNull()
+ Criteria andNameEqualTo(String)
+ Criteria andNameNotEqualTo(String)
+ Criteria andNameGreaterThan(String)
+ Criteria andNameGreaterThanOrEqualTo(String)
+ Criteria andNameLessThan(String)
+ Criteria andNameLessThanOrEqualTo(String)
+ Criteria andNameLike(String)
+ Criteria andNameNotLike(String)
+ Criteria andNameIn(List<String>)
+ Criteria andNameNotIn(List<String>)
+ Criteria andNameBetween(String,String)
+ Criteria andNameNotBetween(String,String)
+ Criteria andPicNameIsNull()
+ Criteria andPicNameIsNotNull()
+ Criteria andPicNameEqualTo(String)
+ Criteria andPicNameNotEqualTo(String)
+ Criteria andPicNameGreaterThan(String)
+ Criteria andPicNameGreaterThanOrEqualTo(String)
+ Criteria andPicNameLessThan(String)
+ Criteria andPicNameLessThanOrEqualTo(String)
+ Criteria andPicNameLike(String)
+ Criteria andPicNameNotLike(String)
+ Criteria andPicNameIn(List<String>)
+ Criteria andPicNameNotIn(List<String>)
+ Criteria andPicNameBetween(String,String)
+ Criteria andPicNameNotBetween(String,String)
+ Criteria andMobileIsNull()
+ Criteria andMobileIsNotNull()
+ Criteria andMobileEqualTo(String)
+ Criteria andMobileNotEqualTo(String)
+ Criteria andMobileGreaterThan(String)
+ Criteria andMobileGreaterThanOrEqualTo(String)
+ Criteria andMobileLessThan(String)
+ Criteria andMobileLessThanOrEqualTo(String)
+ Criteria andMobileLike(String)
+ Criteria andMobileNotLike(String)
+ Criteria andMobileIn(List<String>)
+ Criteria andMobileNotIn(List<String>)
+ Criteria andMobileBetween(String,String)
+ Criteria andMobileNotBetween(String,String)
+ Criteria andNikIsNull()
+ Criteria andNikIsNotNull()
+ Criteria andNikEqualTo(String)
+ Criteria andNikNotEqualTo(String)
+ Criteria andNikGreaterThan(String)
+ Criteria andNikGreaterThanOrEqualTo(String)
+ Criteria andNikLessThan(String)
+ Criteria andNikLessThanOrEqualTo(String)
+ Criteria andNikLike(String)
+ Criteria andNikNotLike(String)
+ Criteria andNikIn(List<String>)
+ Criteria andNikNotIn(List<String>)
+ Criteria andNikBetween(String,String)
+ Criteria andNikNotBetween(String,String)
+ Criteria andEmailIsNull()
+ Criteria andEmailIsNotNull()
+ Criteria andEmailEqualTo(String)
+ Criteria andEmailNotEqualTo(String)
+ Criteria andEmailGreaterThan(String)
+ Criteria andEmailGreaterThanOrEqualTo(String)
+ Criteria andEmailLessThan(String)
+ Criteria andEmailLessThanOrEqualTo(String)
+ Criteria andEmailLike(String)
+ Criteria andEmailNotLike(String)
+ Criteria andEmailIn(List<String>)
+ Criteria andEmailNotIn(List<String>)
+ Criteria andEmailBetween(String,String)
+ Criteria andEmailNotBetween(String,String)
+ Criteria andDocIdIsNull()
+ Criteria andDocIdIsNotNull()
+ Criteria andDocIdEqualTo(String)
+ Criteria andDocIdNotEqualTo(String)
+ Criteria andDocIdGreaterThan(String)
+ Criteria andDocIdGreaterThanOrEqualTo(String)
+ Criteria andDocIdLessThan(String)
+ Criteria andDocIdLessThanOrEqualTo(String)
+ Criteria andDocIdLike(String)
+ Criteria andDocIdNotLike(String)
+ Criteria andDocIdIn(List<String>)
+ Criteria andDocIdNotIn(List<String>)
+ Criteria andDocIdBetween(String,String)
+ Criteria andDocIdNotBetween(String,String)
+ Criteria andParentUserIdIsNull()
+ Criteria andParentUserIdIsNotNull()
+ Criteria andParentUserIdEqualTo(Long)
+ Criteria andParentUserIdNotEqualTo(Long)
+ Criteria andParentUserIdGreaterThan(Long)
+ Criteria andParentUserIdGreaterThanOrEqualTo(Long)
+ Criteria andParentUserIdLessThan(Long)
+ Criteria andParentUserIdLessThanOrEqualTo(Long)
+ Criteria andParentUserIdIn(List<Long>)
+ Criteria andParentUserIdNotIn(List<Long>)
+ Criteria andParentUserIdBetween(Long,Long)
+ Criteria andParentUserIdNotBetween(Long,Long)
+ Criteria andPartnerUserNoIsNull()
+ Criteria andPartnerUserNoIsNotNull()
+ Criteria andPartnerUserNoEqualTo(String)
+ Criteria andPartnerUserNoNotEqualTo(String)
+ Criteria andPartnerUserNoGreaterThan(String)
+ Criteria andPartnerUserNoGreaterThanOrEqualTo(String)
+ Criteria andPartnerUserNoLessThan(String)
+ Criteria andPartnerUserNoLessThanOrEqualTo(String)
+ Criteria andPartnerUserNoLike(String)
+ Criteria andPartnerUserNoNotLike(String)
+ Criteria andPartnerUserNoIn(List<String>)
+ Criteria andPartnerUserNoNotIn(List<String>)
+ Criteria andPartnerUserNoBetween(String,String)
+ Criteria andPartnerUserNoNotBetween(String,String)
+ Criteria andUserTypeIsNull()
+ Criteria andUserTypeIsNotNull()
+ Criteria andUserTypeEqualTo(Byte)
+ Criteria andUserTypeNotEqualTo(Byte)
+ Criteria andUserTypeGreaterThan(Byte)
+ Criteria andUserTypeGreaterThanOrEqualTo(Byte)
+ Criteria andUserTypeLessThan(Byte)
+ Criteria andUserTypeLessThanOrEqualTo(Byte)
+ Criteria andUserTypeIn(List<Byte>)
+ Criteria andUserTypeNotIn(List<Byte>)
+ Criteria andUserTypeBetween(Byte,Byte)
+ Criteria andUserTypeNotBetween(Byte,Byte)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.moon.model.TbUserExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.moon.model.TbUserExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.moon.model.vo.VaLoanInfoRspVO {
- Integer dpd
- Integer currentTenor
+ <<Create>> VaLoanInfoRspVO()
+ <<Create>> VaLoanInfoRspVO(VaLoanInfo)
+ Integer getDpd()
+ void setDpd(Integer)
+ void setDpdByDueDate()
+ Integer getCurrentTenor()
+ void setCurrentTenor(Integer)
+ void setCurrentTenorByDisbursementDate()
}
class com.welab.moon.model.mongo.credit.gada.GadaCreditApplyDoc {
- String partner
- String no
- String uniqueCodeBuyer
- String storeAddress
- String merchantType
- String storeCode
- String storeName
- String businessCategory
- String dateJoined
- Long provinceId
- Long cityId
- String district
- String zipCode
- Long lastYearTotalTransactionUnit01
- Long lastYearTotalTransactionUnit02
- Long lastYearTotalTransactionUnit03
- Long lastYearTotalTransactionUnit04
- Long lastYearTotalTransactionUnit05
- Long lastYearTotalTransactionUnit06
- Long lastYearTotalTransactionUnit07
- Long lastYearTotalTransactionUnit08
- Long lastYearTotalTransactionUnit09
- Long lastYearTotalTransactionUnit10
- Long lastYearTotalTransactionUnit11
- Long lastYearTotalTransactionUnit12
- Long thisYearTotalTransactionUnit01
- Long thisYearTotalTransactionUnit02
- Long thisYearTotalTransactionUnit03
- Long thisYearTotalTransactionUnit04
- Long thisYearTotalTransactionUnit05
- Long thisYearTotalTransactionUnit06
- Long thisYearTotalTransactionUnit07
- Long thisYearTotalTransactionUnit08
- Long thisYearTotalTransactionUnit09
- Long thisYearTotalTransactionUnit10
- Long thisYearTotalTransactionUnit11
- Long thisYearTotalTransactionUnit12
- Long lastYearTotalTransactionRp01
- Long lastYearTotalTransactionRp02
- Long lastYearTotalTransactionRp03
- Long lastYearTotalTransactionRp04
- Long lastYearTotalTransactionRp05
- Long lastYearTotalTransactionRp06
- Long lastYearTotalTransactionRp07
- Long lastYearTotalTransactionRp08
- Long lastYearTotalTransactionRp09
- Long lastYearTotalTransactionRp10
- Long lastYearTotalTransactionRp11
- Long lastYearTotalTransactionRp12
- Long thisYearTotalTransactionRp01
- Long thisYearTotalTransactionRp02
- Long thisYearTotalTransactionRp03
- Long thisYearTotalTransactionRp04
- Long thisYearTotalTransactionRp05
- Long thisYearTotalTransactionRp06
- Long thisYearTotalTransactionRp07
- Long thisYearTotalTransactionRp08
- Long thisYearTotalTransactionRp09
- Long thisYearTotalTransactionRp10
- Long thisYearTotalTransactionRp11
- Long thisYearTotalTransactionRp12
- String cashPayment
- String otherPayment
- int last3MonthTrxCount
- int last6MonthTrxCount
- String last3And6PassFalg
- BigDecimal lastYearAndThisYearTrxAvg
- BigDecimal last6MonthTrxAvg
- BigDecimal purchaseTrendRate
- String purchaseTrend
- BigDecimal revenue
- BigDecimal dbrCalculation
- String acceptFalg
- Long plafondLimit
- String approvalStatus
+ {static} void main(String[])
}
class com.welab.moon.model.VaLoanInfo {
- Long id
- String loanNo
- Long fundId
- Date disbursementDate
- Long amountFunded
- Integer maxTenor
- BigDecimal adminFeeRate
- Long adminFeeAmount
- Long vatAdminFeeAmount
- BigDecimal provisionFeeRate
- Long provisionFeeAmount
- BigDecimal interestFunderRate
- Long interestFunderAmount
- Long whtInterestFunderAmount
- Long excludeWhtInterestFunderAmount
- BigDecimal platformFeeRate
- Long platformFeeAmount
- Long vatPlatformFeeAmount
- BigDecimal lateFeeRate
- Long lateFeeAmount
- Long vatLateFeeAmount
- Date dueDate
- Long outstandingAmountExcludeTax
- Long vaAmount
- Long settledAmount
- String loanState
- String accountNumber
- String bankCode
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getLoanNo()
+ void setLoanNo(String)
+ Long getFundId()
+ void setFundId(Long)
+ Date getDisbursementDate()
+ void setDisbursementDate(Date)
+ Long getAmountFunded()
+ void setAmountFunded(Long)
+ Integer getMaxTenor()
+ void setMaxTenor(Integer)
+ BigDecimal getAdminFeeRate()
+ void setAdminFeeRate(BigDecimal)
+ Long getAdminFeeAmount()
+ void setAdminFeeAmount(Long)
+ Long getVatAdminFeeAmount()
+ void setVatAdminFeeAmount(Long)
+ BigDecimal getProvisionFeeRate()
+ void setProvisionFeeRate(BigDecimal)
+ Long getProvisionFeeAmount()
+ void setProvisionFeeAmount(Long)
+ BigDecimal getInterestFunderRate()
+ void setInterestFunderRate(BigDecimal)
+ Long getInterestFunderAmount()
+ void setInterestFunderAmount(Long)
+ Long getWhtInterestFunderAmount()
+ void setWhtInterestFunderAmount(Long)
+ Long getExcludeWhtInterestFunderAmount()
+ void setExcludeWhtInterestFunderAmount(Long)
+ BigDecimal getPlatformFeeRate()
+ void setPlatformFeeRate(BigDecimal)
+ Long getPlatformFeeAmount()
+ void setPlatformFeeAmount(Long)
+ Long getVatPlatformFeeAmount()
+ void setVatPlatformFeeAmount(Long)
+ BigDecimal getLateFeeRate()
+ void setLateFeeRate(BigDecimal)
+ Long getLateFeeAmount()
+ void setLateFeeAmount(Long)
+ Long getVatLateFeeAmount()
+ void setVatLateFeeAmount(Long)
+ Date getDueDate()
+ void setDueDate(Date)
+ Long getOutstandingAmountExcludeTax()
+ void setOutstandingAmountExcludeTax(Long)
+ Long getVaAmount()
+ void setVaAmount(Long)
+ Long getSettledAmount()
+ void setSettledAmount(Long)
+ String getLoanState()
+ void setLoanState(String)
+ String getAccountNumber()
+ void setAccountNumber(String)
+ String getBankCode()
+ void setBankCode(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.moon.model.dto.SigningUrlDTO {
- Long userId
- String loanNumber
}
class com.welab.moon.model.TbLendBatch {
- Long id
- Date createdAt
- Date updatedAt
- Boolean deleted
- String partner
- String batchNo
- Integer status
- Date expectLendAt
- Long fundId
+ Long getId()
+ void setId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ String getPartner()
+ void setPartner(String)
+ String getBatchNo()
+ void setBatchNo(String)
+ Integer getStatus()
+ void setStatus(Integer)
+ Date getExpectLendAt()
+ void setExpectLendAt(Date)
+ Long getFundId()
+ void setFundId(Long)
}
class com.welab.moon.helper.CommonHelper {
+ List<K> parseData(MultipartFile,Class,String[])
+ List<K> parseData(MultipartFile,Class,String[],int,int,int)
}
class com.welab.moon.model.mongo.tbuser.DayaUserDoc {
- String cmCode
- String agentName
- String mobile2
- String agentType
- String startSince
- String duration
- String invoiceFin
- String branchNumber
- String branchName
- String empNo
- String pitNo
- String sparepartVolLastyear
- String oilVolLastYear
- String colabDuration
- String overdueInsight
- Boolean isDaya
- Boolean isAhass
- List<String> contactEmails
}
class com.welab.moon.test.app.service.daya.DayaCancelLoanTest {
- DayaCancelLoanCmdExe dayaCancelLoanCmdExe
+ void testCancelLoan()
+ void testConfirmCancel()
+ void ss()
}
interface com.welab.moon.service.TbAgreementDocService {
~ Response<String> getSigningUrl(SigningUrlDTO)
~ Response<TbAgreementDocDTO> getOne(String)
}
class com.welab.moon.model.vo.DayaCancelLoanImportVO {
- String cmCode
- String customerName
- String orderNo
- String invoiceDate
- String date
- String amount
- String goods
- String description
}
class com.welab.moon.model.bo.HsoUserImportBO {
- String regionCode
- String agreementNo
- String agreementDate
- String currentLimit
- String address
- String agentId
- String agentName
- String agentPic
- String mobile2
- String storeName
- String agentType
- String startSince
- String duration
- String invoiceFin
- String branchNumber
- String branchName
- String empNo
- String pitNo
- String sparepartVolLastYear
- String oilVolLastYear
- String sparepartVolThisYear
- String oilVolThisYear
- String unitLastYear
- String unitThisYear
- String colabDuration
- Integer overdueInsight
- String ahassName
- String newPlafondLimit
}
class com.welab.moon.test.app.service.TbQueryTest {
- ITbLoanDubboService tbLoanDubboService
- ITbTravelokaService tbTravelokaService
- TbQueryService tbQueryService
- TbUserAccountInfoService tbUserAccountInfoService
- TbUserInfoService tbUserInfoService
- ITbCreditUserAccountService tbCreditUserAccountService
- RestoreTbUserService restoreTbUserService
+ void queryTbLoanPendRepayTest()
+ void queryTbLoanRepaymentListTest()
+ void queryTbLoanListByLoanNumberList()
+ void queryTbLoanVOListByLoanNumberList()
+ void queryTbLoanVOListByLoanNumber()
+ void findTbUserByUserId()
+ void findByUserId()
+ void findByUserIds()
+ void findDuesByLoanNumber()
+ void queryRepaymentTrack()
+ void queryBankInfoByUserId()
+ void queryTBUser()
+ void TbUserInfoService()
+ void TbUserInfoCountService()
+ void findUserLevelByUserId()
+ void findUserByUserId()
+ void queryTbCreditUserAccount()
+ void restoreTbUserAccount()
}
class com.welab.moon.app.service.ConfigService {
- BaseTbUserService baseTbUserService
+ Set<String> getStoreNameList(Long)
}
class com.welab.moon.model.dto.traveloka.KtpAddress {
- String province
- String city
- String area
- String village
- String streetLine
- String postCode
}
class com.welab.moon.controller.LoansController {
- TbLoanManage tbLoanManage
- TbQueryService tbQueryService
- ImportTbLoanManage importTbLoanManage
+ Response<PageInfo<TbLoansVO>> queryLoanList(Long,QueryLoansDTO,String)
+ void loansDownload(Long,QueryLoansDTO,HttpServletResponse,String)
+ Response<Map<String,List<Map<String,Object>>>> config()
+ Response<PageInfo<TbRepaymentVO>> partnerListRepayment(String,Long,Long,RepaymentQryDTO)
+ Response<PageInfo<TbPendRepayVO>> partnerPendingListRepayment(String,Long,Long,PendRepayQueryDTO)
+ Response invoiceImport(Long,MultipartFile[],String)
}
class com.welab.moon.model.vo.TbLoanRepayVO {
- String transId
- String orderNo
- Long userId
- String loanNumber
- Long fundId
- String fundName
- String origin
- String transactionType
- String secondProdCode
- Integer dueIndex
- String repaymentChannel
- Long fastPayFee
- Long lateFee
- String productType
- Long amountApproved
- Long adminFee
- Long provisionFee
- Long fundInterestFee
- Long serviceFee
- Long channelFee
- Date repaymentTime
- Long repaymentAmount
- Date actualRepaymentAt
- String receiptAccount
- String bankCode
- Long overAmount
- Boolean isOverdue
- Byte planType
- Byte torigin
- Long principalFee
- String backTransId
- String invoiceNo
- String billingNo
}
class com.welab.moon.test.app.service.trio.TrioImportLoanTest {
- ImportTbLoanManage importTbLoanManage
+ String getCmCode()
+ void trioImportLoan()
+ MultipartFile createMfileByPath(File)
- void createInvoiceTxt(String)
}
class com.welab.moon.service.impl.TbLoanDubboServiceImpl {
- TbServiceFacade tbServiceFacade
- BaseTbLoanService baseTbLoanService
- FreezeTbUserAccountBalanceCmdExe freezeTbUserAccountBalanceCmdExe
- UnFreezeTbUserAccountBalanceCmdExe unFreezeTbUserAccountBalanceCmdExe
- BaseTbUserService baseTbUserService
- BaseToBLoanAgreementService baseToBLoanAgreementService
- TbLendBatchManage tbLendBatchManage
- MongoManager mongoManager
- ProductRateConfigFacade productRateConfigFacade
- JedisCluster jedisCluster
- BaseTbConfirmLoanTriggerService baseTbConfirmLoanTriggerService
- FundLoansServiceFacade fundLoansServiceFacade
- BaseTbCreditUserAccountLogService baseTbCreditUserAccountLogService
- BaseTbCreditUserAccountService baseTbCreditUserAccountService
+ Response<String> createTbLoan(TbLoanDTO)
+ Response confirmTbLoan(ConfirmLoanDTO)
+ Response<List<TbLoansInfoVO>> findByLoanNumberList(List<String>)
+ Response<TbLoanDocVO> findByLoanNumber(String)
+ Response<List<TbLoanVO>> findByLoanList(List<String>)
+ Response<TbUserVO> findTbUserByUserId(Long)
+ Response<Map<String,String>> getLoanStateDisplayNameMap()
+ void createLoanDetail(TbLoan,TbUser,Long)
- List<TbLoanVO> buildTbLoanVO(List<TbLoan>)
+ void freezeAccountMoney(TbLoan)
+ Long matchFund(String,Long)
- String saveGadaTbLoanDoc(Long,TbLoan)
+ Response backLoanState(List<String>)
}
interface com.welab.moon.mapper.VaLoanInfoMapper {
~ long countByExample(VaLoanInfoExample)
~ int deleteByExample(VaLoanInfoExample)
~ int deleteByPrimaryKey(Long)
~ int insert(VaLoanInfo)
~ int insertSelective(VaLoanInfo)
~ List<VaLoanInfo> selectByExample(VaLoanInfoExample)
~ VaLoanInfo selectByPrimaryKey(Long)
~ int updateByExampleSelective(VaLoanInfo,VaLoanInfoExample)
~ int updateByExample(VaLoanInfo,VaLoanInfoExample)
~ int updateByPrimaryKeySelective(VaLoanInfo)
~ int updateByPrimaryKey(VaLoanInfo)
~ List<VaLoanInfoRspVO> selectByVaLoanInfoQueryDTO(VaLoanInfoQueryDTO)
}
class com.welab.moon.app.command.DayaConfirmOrCancelMessageCmdExe {
- MessageAppFacade messageAppFacade
- MessageEmailFacade messageEmailFacade
- AgreementCmdExe agreementCmdExe
- TbSignUpKeyManager tbSignUpKeyManager
- BaseTbUserService baseTbUserService
- BaseTbLoanService baseTbLoanService
- MongoManager mongoManager
- TbConfigsManager tbConfigsManager
+ void handle(ConfirmOrCancelMessageBO)
- void doHandle(TbLoan,ConfirmOrCancelMessageBO)
- void sendTemplateAppMsg(TbLoan,String,String,String,Long,String)
}
class com.welab.moon.app.command.TbDisbursementReportCmdExe {
- CreditConfiguration creditConfiguration
+ void execute(TbDisbursementReportTriggerBO)
- AbstractTbDisbursementEmailReportTemplateService getService(String)
}
class com.welab.moon.mq.listener.TbCreditUserAccountFreezeBlackListener {
- CreditBusiService creditBusiService
+ void hand(Message)
}
class com.welab.moon.model.dto.QueryLoansDTO {
- {static} long serialVersionUID
- String partner
- Long adminId
- boolean ignoreParentUserId
- List<Byte> repayStatusList
- List<String> customerNumberList
- List<String> mobileList
- List<String> loanNumberList
- List<String> invoiceNoList
- Date invoiceDateStart
- Date invoiceDateEnd
- String storeName
- List<Byte> loanStateList
- String invoiceNo
- String billingNo
- List<Byte> lendStatusList
- List<Long> parentUserIdList
- Date createdAtBegin
- Date createdAtEnd
- String signingStatusStr
- boolean relTbAgreementDoc
- Date tbAgreementDocExpiredAtBegin
- Date tbAgreementDocExpiredAtEnd
- List<Byte> tbAgreementDocStatusList
}
enum com.welab.moon.enums.agreement.TbAgreementDocExpiredStrategyEnum {
+  AUTO_SIGNING
+  CANCEL
+  CANCEL_AND_NOTIFY_PARTNER
+  AUTO_SIGNING_OR_CANCEL
+  CANCEL_AGREEMENT_DOC
- String desc
}
class com.welab.moon.app.service.credit.TbCreditLimitService {
- BaseTbUserService baseTbUserService
- MongoManager mongoManager
- BaseTbUserAgentRelService baseTbUserAgentRelService
+ PageInfo<AhassLimitVO> ahassLimitPage(HsoLimitDTO)
+ HttpServletResponse ahassLimitExport(HsoLimitDTO,HttpServletResponse)
- List<AhassLimitVO> buildAhassLimitVO(List<TbUserCreditAmountDTO>)
+ List<AhassLimitVO> ahassLimit(HsoLimitDTO)
- String ahassLimitVOSort(Integer)
- LinkedHashMap<String,String> excelHead()
}
class com.welab.moon.model.dto.gada.query.GadaBusinessDTO {
- String nameOfbusinessEntity
- String formOfBusinessEntity
- String placeOfEstablishmentOfBusinessEntities
- String deedOfEstablishmentNumber
- String deedOfEstablishmentDate
- String haveaDeedOfChange
- String lastAmendmentDeedNumber
- String lastAmendmentDeedDate
- String npwp
- Long npwpImageId
- String legalityOfBusinessEntities
- String nib
- Long nibImageId
- String storeWareHouseAddress
- String businessEntityWard
- String businessEntitySubDistrict
- String regencyOrCityBusinessEntity
- String businessEntityZipCode
- String goPublic
- Long photoOfPowerOfAttorneyInChargeImageId
- String personInChargeIdentityNumber
- Long photoIdOfThePersonInChargeImageId
- String nameOfPersonInChargeAccordingToIdentity
- String birthplaceOfPersonInCharge
- String genderOfPersonInCharge
- String addressOfPersonInCharge
- String rtOfPersonInCharge
- String rwOfPersonInCharge
- String subDistrictOfPersonInCharge
- String cityOfPersonInCharge
- String provinceOfPersonInCharge
- String wardOfPersonInCharge
- String zipCodeOfPersonInCharge
- String picPosition
}
class com.welab.moon.app.service.TbAgreementService {
- BaseToBLoanAgreementService baseToBLoanAgreementService
- MessageFacadeService messageFacadeService
- BaseTbLoanService baseTbLoanService
- TbSignUpKeyManager tbSignUpKeyManager
- AgreementCmdExe agreementCmdExe
- JedisCluster jedisCluster
- MqProduceService mqProduceService
- DayaCancelLoanCmdExe dayaCancelLoanCmdExe
- BaseTbConfirmLoanTriggerService baseTbConfirmLoanTriggerService
- AgreementViewStatisticsCmdExe agreementViewStatisticsCmdExe
- GadaAgreementReportCmdExe gadaAgreementReportCmdExe
- TbAgreementFileUpLoadCmdExe tbAgreementFileUpLoadCmdExe
- BaseTbUserService baseTbUserService
- AgreementFileListCmdExe agreementFileListCmdExe
- PageListHelper<AgreementFileVO> pageListHelper
- CheckPdfCmdExe checkPdfCmdExe
- DisbursementCmdExe disbursementCmdExe
+ Integer verifySignUp(String)
+ SignUpVO verifyTbSignUp(String)
+ Response tbSigning(TbAgreementSignReq)
+ Response dayaSigning(TbAgreementSignReq,TbSignUpKeyBO)
+ Response<String> ahassAgreementView(String)
+ Response downLoadByLoan(String)
+ Response downLoad(Long)
+ Response<PageInfo<ToBAgreementVO>> list(PageTbAgreementParamDTO)
+ void agreementStatistics(String)
+ void gadaDailyReport(Date)
+ void gadaMonthReport(Date)
+ PageInfo<AgreementFileVO> findAgreementFileList(AgreementFileListDTO)
+ Map<String,List<AgreementFileVO>> findAgreementFileListGroup(Long,int)
+ void agreementFileUpload(MultipartFile,String,Long)
- int getAgreementMonth(AgreementFileVO)
}
class com.welab.moon.app.service.TbRegService {
- MessageEmailFacade messageEmailFacade
- JedisCluster jedisCluster
- PersonalRegCmdExe personalRegCmdExe
- BusinessRegCmdExe businessRegCmdExe
+ void sendCheckEmail(String,String)
+ void checkEmail(String,String,String)
+ void personalReg(PersonalRegDoc)
+ void businessReg(BusinessRegDoc)
}
class com.welab.moon.model.dto.gada.apply.PersonProfileDTO {
- String identityType
- String idCardPhotoUrl
- String identityNumber
- String idCardName
- String fullName
- String education
- String gender
- String birthPlace
- String birthDay
- String idCardAddress
- String idCardRt
- String idCardRw
- String idCardWard
- String idCardSubDistrict
- String idCardRegencyOrCity
- String idCardProvince
- String ktpZipCode
- String maritalStatus
- Integer theNumberOfDependents
- String spouseIdNumber
- String couplesName
- String couplesBirthDate
- String nameOfBirthMom
}
class com.welab.moon.app.service.confirmloan.strategy.SigndeToTimeOutStrategyService {
- BaseTbLoanService baseTbLoanService
- UnFreezeTbUserAccountBalanceCmdExe unFreezeTbUserAccountBalanceCmdExe
+ String strategy()
+ void execute(List<TbConfirmLoanTrigger>)
}
class com.welab.moon.app.base.BaseToBLoanAgreementService {
- TbAgreementDocExtMapper tbAgreementDocMapper
+ String findCancelSignedLoanNumber(Long,Date)
+ Long save(TbAgreementDoc)
+ int updateByPrimaryKeySelective(TbAgreementDoc)
+ PageInfo<TbAgreementDoc> page(PageTbAgreementParamDTO)
+ boolean exist(String,String)
+ TbAgreementDoc findLoanNumber(String)
+ TbAgreementDoc getByTbLoanNumber(String)
+ void batchUpdateSignUp(String)
+ void updateSigning(String,TbAgreementDocSigningMethodEnum)
+ int batchUpdateByPrimaryKey(List<Long>,TbAgreementDoc)
+ int updateSigningStatus(Long,TbAgreementDocSigningStatusEnum,TbAgreementDocSigningStatusEnum)
+ List<TbAgreementDoc> selectExpiredAgreementDocs(String,Date,Date)
+ List<TbAgreementDoc> findByPartnerAndSign(String,Byte)
+ Long findSignedAgreementByTime(String,Date,Date)
+ Map<String,TbAgreementDoc> findTbAgreementDocMap(List<String>)
}
class com.welab.moon.test.app.service.gada.GadaDocTest {
- MongoManager mongoManager
- IGadaService gadaService
- GadaCreditApplyCmdExe gadaCreditApplyCmdExe
+ void testUpdateDoc()
+ void testAA()
+ void testA()
}
class com.welab.moon.model.bo.TravelokaExcelBO {
- String loanNumber
- Date disbursementDate
- String amount
- String tenor
+ {static} LinkedHashMap getExcelHead()
}
class com.welab.moon.app.service.disbursement.job.HsoModeDisbursementJob {
- BaseTbUserService baseTbUserService
- HsoOptConfigManage hsoOptConfigManage
# BaseTbLendBatchService baseTbLendBatchService
+ String strategy()
# BatchLendQryParam buildBatchLendQryParam(DisbursementContext)
# List<BatchDisbursementInfo> buildBatchDisbursementData(List<TbLendBatch>,DisbursementContext)
}
class com.welab.moon.model.mongo.tbuser.daya.DayaLeve1UserDoc {
}
class com.welab.moon.test.app.service.gada.GadaApplyUserTest {
- GadaApplyCreditUserInfoQryExe gadaApplyCreditUserInfoQryExe
+ void query()
}
class com.welab.moon.model.vo.TrioLoansVO {
- String address
- Date lendAt
}
class com.welab.moon.app.service.restock.RestockLoanImportService {
- MongoManager mongoManager
- BaseToBLoanAgreementService baseToBLoanAgreementService
- BaseTbLoanService baseTbLoanService
- BaseTbUserService baseTbUserService
- TbServiceFacade tbServiceFacade
- FundAccountInfoServiceFacade fundAccountInfoServiceFacade
- {static} String IMMEDIATELY
- {static} String DISBURSED_TIME_REGEX
- {static} String[] fields
+ List<InvoiceImportBO> doHandelImportData(ImportLoanDTO)
+ TbImportVO checkImportData(List<InvoiceImportBO>,Long)
- List<RestockLoanImportCmd> buildRestockLoanImportCmd(List<InvoiceImportBO>)
+ TbImportVO doHandle(List<RestockLoanImportCmd>)
- boolean checkBatchDisburseBankAccount(List<RestockLoanImportCmd>)
- TbInvoice buildTbInvoice(RestockLoanImportCmd,Map<String,Long>)
- boolean checkData(RestockLoanImportCmd,List<String>)
- boolean checkDisbTime(String)
+ List<RestockLoanImportCmd> loanImport(ImportLoanDTO)
- List<InvoiceImportBO> buildInvoiceImportBO(List<RestockLoanImportCmd>)
+ String getKey()
}
class com.welab.moon.model.dto.gada.GadaApprovalLoansDTO {
- GadaUserInfoDTO gadaUserInfo
- Long plafondLimit
- String userDocId
}
class com.welab.moon.model.vo.TravelokaDuesVO {
- String tenor
- String interestRate
~ List<Dues> duesList
- Date firstDueDate
}
class com.welab.moon.config.credit.FreezeBlackConfig {
- Integer minFreezeDpd
- Integer minBlackDpd
}
class com.welab.moon.Application {
- {static} Logger LOG
+ {static} void main(String[])
}
class com.welab.moon.app.service.credit.daya.DayaUserImportService {
- CommonHelper<DayaImportTbUserBO> commonHelper
- UserServiceFacade userServiceFacade
- BaseTbUserService baseTbUserService
+ String[] field()
+ List<ImportTbUserBO<DayaImportTbUserBO>> parseAndCheckData(MultipartFile)
+ DayaUserDoc buildTbUserDoc(DayaImportTbUserBO)
+ List<ImportTbUserBO<DayaImportTbUserBO>> checkData(List<DayaImportTbUserBO>,String)
+ String getKey()
}
class com.welab.moon.test.job.VaLoanInfoInitFeeJobTest {
- VaLoanInfoInitFeeJob vaLoanInfoInitFeeJob
+ void execute()
}
class com.welab.moon.utils.ReflectionUtil {
- <<Create>> ReflectionUtil()
+ {static} Field getField(Object,String)
- {static} Object[] getReflectionInfo(Object,String)
+ {static} Object getProperty(Object,String)
+ {static} void setProperty(Object,Object,String)
+ {static} Set<String> getAllFieldName(Object)
+ {static} Set<String> getAllFieldName(Class)
}
class com.welab.moon.app.manage.MongoManager {
- MongoTemplateExt mongoTemplate
+ String save(Doc)
+ void batchSave(List<T>,Class<T>)
+ String saveTbLoan(TbLoanDoc)
+ TbLoanDoc tbLoanDoc(String)
+ void remove(String,Class<T>)
+ void removes(List<String>,Class<T>)
+ T tbLoanDoc(String,Class<T>)
+ TbUserDoc tbUserDoc(String)
+ T tbUserDoc(String,Class<T>)
+ List<TbLoanDoc> listTbLoanDoc(List<String>)
+ List<? extends Doc> listDocs(List<String>,Class<? extends Doc>)
+ List<? extends Doc> listDocs(Query,Class<? extends Doc>)
+ Map<String,TbLoanDoc> mapTbLoanDoc(List<String>)
+ List<T> listTbUserDoc(List<String>,Class<T>)
+ PersonalRegDoc findPersonalRegDoc(String,String)
+ T findDocById(String,String,Class<T>)
+ UpdateResult updateFirstById(String,Update,Class<?>)
+ UpdateResult updateFirst(Query,Update,Class<?>)
}
class com.welab.moon.model.dto.FiledDTO {
- MultipartFile file
- String filedName
}
interface com.welab.moon.mapper.ext.TbConfirmLoanTriggerExtMapper {
~ int inserts(List<TbConfirmLoanTrigger>)
~ List<CancelLoanInfoVO> selectPageInfo(CancelLoanInfoQryVO)
}
class com.welab.moon.model.ext.TbDisbursementReportLoan {
- String name
- String partnerUserNo
}
class com.welab.moon.model.mongo.tbuser.TravelokaUserDoc {
- Date dob
- String pob
- String businessName
- Float yearOfWorkExperience
- String purposeOfFinancing
- String citizenship
- String ktpProvince
- String ktpCity
- String ktpArea
- String ktpVillage
- String ktpZipCode
- String ktpStreetName
- String ktpRt
- String ktpRw
- String domicileProvince
- String domicileCity
- String domicileArea
- String domicileVillage
- String domicileZipCode
- String domicileStreetName
- String domicileRt
- String domicileRw
- String officeProvince
- String officeCity
- String officeArea
- String officeVillage
- String officeZipCode
- String officeStreetName
- String officeRt
- String officeRw
- Long monthlySalary
- String officeName
- String officePhone
- String npwp
- String officeContactPerson
- String officeContactPersonPosition
- String officeEmail
- Integer companyAge
- String companyRegistrationNo
- String companyLocation
- Date companyRegistered
- String officeDisburseAccount
- String emergencyContactName
- String emergencyContactPhone
- String emergencyContactRelation
}
class com.welab.moon.job.credit.CreditLoanDpdNoticeJob {
- CreditBusiService creditBusiService
+ void execute(ShardingContext)
}
class com.welab.moon.app.service.TbQueryService {
- BaseTbLoanService baseTbLoanService
- FinanceServiceFacade financeServiceFacade
- BaseTbUserService baseTbUserService
- MongoManager mongoManager
- BaseTbCreditUserAccountService baseTbCreditUserAccountService
- UserServiceFacade userServiceFacade
- IndoRegionsServiceFacade indoRegionsServiceFacade
+ PageInfo<TbRepaymentVO> findTbRepaymentList(RepaymentQryDTO)
+ PageInfo<TbPendRepayVO> findTbPendRepayList(PendRepayQueryDTO)
+ PageInfo<TbUserDoc> query(TbUserQryDTO)
+ PageInfo<TbUserDocVO> queryVO(TbUserQryDTO)
+ List<String> getCmCode(String)
+ List<TbUserUpdateDTO> getUserInfo(UpdateUserInfoDTO)
+ void updateUserInfo(TbUserUpdateDTO)
}
class com.welab.moon.app.command.agreement.CheckPdfCmdExe {
+ boolean check(InputStream,String,String)
}
class com.welab.moon.model.TbUserAgentRel {
- Long id
- Long userId
- Long agentUserId
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ Long getAgentUserId()
+ void setAgentUserId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.moon.model.bo.TrioImportTbUserBO {
- String customerCode
- String agreementNo
- String agreementDate
- String currentLimit
- String address
- String agentName
- String agentPic
- String mobile2
- String storeName
- String agentType
- String startSince
- String duration
- String invoiceFin
- String branchNumber
- String branchName
- String empNo
- String pitNo
- String sparepartVolLastYear
- String oilVolLastYear
- String sparepartVolThisYear
- String oilVolThisYear
- String unitLastYear
- String unitThisYear
- String colabDuration
- Integer overdueInsight
}
class com.welab.moon.model.mongo.tbuser.TbUserDoc {
- String partner
- String mobile
- String name
- String email
- String agentPic
- String nik
}
class com.welab.moon.app.manage.HsoOptConfigManage {
- JedisCluster jedisCluster
- {static} String OPT_CONFIG_KEY
+ Boolean existByLoanNumber(String)
+ Boolean hasOpt()
}
class com.welab.moon.model.bo.PersonalRegBO {
+ {static} LinkedHashMap<String,String> head()
}
interface com.welab.moon.mapper.TbCreditApplyMapper {
~ long countByExample(TbCreditApplyExample)
~ int deleteByExample(TbCreditApplyExample)
~ int deleteByPrimaryKey(Long)
~ int insert(TbCreditApply)
~ int insertSelective(TbCreditApply)
~ List<TbCreditApply> selectByExample(TbCreditApplyExample)
~ TbCreditApply selectByPrimaryKey(Long)
~ int updateByExampleSelective(TbCreditApply,TbCreditApplyExample)
~ int updateByExample(TbCreditApply,TbCreditApplyExample)
~ int updateByPrimaryKeySelective(TbCreditApply)
~ int updateByPrimaryKey(TbCreditApply)
}
class com.welab.moon.app.service.credit.smp.SmpLoanImportService {
- MongoManager mongoManager
- BaseTbLoanService baseTbLoanService
- TbCreditUserAccountManager tbCreditUserAccountManager
- BaseTbUserDocService baseTbUserDocService
- ProductRateConfigFacade productRateConfigFacade
- DayaConfirmOrCancelMessageCmdExe dayaConfirmOrCancelMessageCmdExe
- BaseTbLendBatchService baseTbLendBatchService
- {static} String[] filed
+ List<InvoiceImportBO> doHandelImportData(ImportLoanDTO)
- List<InvoiceImportBO> handleData(List<SmpImportInvoiceBO>)
- String insertDamTbLoanDoc(SmpImportInvoiceBO)
+ TbImportVO checkImportData(List<InvoiceImportBO>,Long)
- boolean validateFields(InvoiceImportBO,List<String>,int,int)
- boolean validateBiz(InvoiceImportBO,Map<String,TbUser>,List<String>,List<String>,int,int,Long,ProductRateConfigVO,List<String>)
+ String getKey()
}
class com.welab.moon.model.vo.TbBankAccountInfoVO {
- Long userId
- String bankAccount
- String bankName
}
class com.welab.moon.model.VaLoanInfoExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> VaLoanInfoExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.moon.model.VaLoanInfoExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
# void addCriterionForJDBCDate(String,Date,String)
# void addCriterionForJDBCDate(String,List<Date>,String)
# void addCriterionForJDBCDate(String,Date,Date,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andLoanNoIsNull()
+ Criteria andLoanNoIsNotNull()
+ Criteria andLoanNoEqualTo(String)
+ Criteria andLoanNoNotEqualTo(String)
+ Criteria andLoanNoGreaterThan(String)
+ Criteria andLoanNoGreaterThanOrEqualTo(String)
+ Criteria andLoanNoLessThan(String)
+ Criteria andLoanNoLessThanOrEqualTo(String)
+ Criteria andLoanNoLike(String)
+ Criteria andLoanNoNotLike(String)
+ Criteria andLoanNoIn(List<String>)
+ Criteria andLoanNoNotIn(List<String>)
+ Criteria andLoanNoBetween(String,String)
+ Criteria andLoanNoNotBetween(String,String)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Long)
+ Criteria andFundIdNotEqualTo(Long)
+ Criteria andFundIdGreaterThan(Long)
+ Criteria andFundIdGreaterThanOrEqualTo(Long)
+ Criteria andFundIdLessThan(Long)
+ Criteria andFundIdLessThanOrEqualTo(Long)
+ Criteria andFundIdIn(List<Long>)
+ Criteria andFundIdNotIn(List<Long>)
+ Criteria andFundIdBetween(Long,Long)
+ Criteria andFundIdNotBetween(Long,Long)
+ Criteria andDisbursementDateIsNull()
+ Criteria andDisbursementDateIsNotNull()
+ Criteria andDisbursementDateEqualTo(Date)
+ Criteria andDisbursementDateNotEqualTo(Date)
+ Criteria andDisbursementDateGreaterThan(Date)
+ Criteria andDisbursementDateGreaterThanOrEqualTo(Date)
+ Criteria andDisbursementDateLessThan(Date)
+ Criteria andDisbursementDateLessThanOrEqualTo(Date)
+ Criteria andDisbursementDateIn(List<Date>)
+ Criteria andDisbursementDateNotIn(List<Date>)
+ Criteria andDisbursementDateBetween(Date,Date)
+ Criteria andDisbursementDateNotBetween(Date,Date)
+ Criteria andAmountFundedIsNull()
+ Criteria andAmountFundedIsNotNull()
+ Criteria andAmountFundedEqualTo(Long)
+ Criteria andAmountFundedNotEqualTo(Long)
+ Criteria andAmountFundedGreaterThan(Long)
+ Criteria andAmountFundedGreaterThanOrEqualTo(Long)
+ Criteria andAmountFundedLessThan(Long)
+ Criteria andAmountFundedLessThanOrEqualTo(Long)
+ Criteria andAmountFundedIn(List<Long>)
+ Criteria andAmountFundedNotIn(List<Long>)
+ Criteria andAmountFundedBetween(Long,Long)
+ Criteria andAmountFundedNotBetween(Long,Long)
+ Criteria andMaxTenorIsNull()
+ Criteria andMaxTenorIsNotNull()
+ Criteria andMaxTenorEqualTo(Integer)
+ Criteria andMaxTenorNotEqualTo(Integer)
+ Criteria andMaxTenorGreaterThan(Integer)
+ Criteria andMaxTenorGreaterThanOrEqualTo(Integer)
+ Criteria andMaxTenorLessThan(Integer)
+ Criteria andMaxTenorLessThanOrEqualTo(Integer)
+ Criteria andMaxTenorIn(List<Integer>)
+ Criteria andMaxTenorNotIn(List<Integer>)
+ Criteria andMaxTenorBetween(Integer,Integer)
+ Criteria andMaxTenorNotBetween(Integer,Integer)
+ Criteria andAdminFeeRateIsNull()
+ Criteria andAdminFeeRateIsNotNull()
+ Criteria andAdminFeeRateEqualTo(BigDecimal)
+ Criteria andAdminFeeRateNotEqualTo(BigDecimal)
+ Criteria andAdminFeeRateGreaterThan(BigDecimal)
+ Criteria andAdminFeeRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andAdminFeeRateLessThan(BigDecimal)
+ Criteria andAdminFeeRateLessThanOrEqualTo(BigDecimal)
+ Criteria andAdminFeeRateIn(List<BigDecimal>)
+ Criteria andAdminFeeRateNotIn(List<BigDecimal>)
+ Criteria andAdminFeeRateBetween(BigDecimal,BigDecimal)
+ Criteria andAdminFeeRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andAdminFeeAmountIsNull()
+ Criteria andAdminFeeAmountIsNotNull()
+ Criteria andAdminFeeAmountEqualTo(Long)
+ Criteria andAdminFeeAmountNotEqualTo(Long)
+ Criteria andAdminFeeAmountGreaterThan(Long)
+ Criteria andAdminFeeAmountGreaterThanOrEqualTo(Long)
+ Criteria andAdminFeeAmountLessThan(Long)
+ Criteria andAdminFeeAmountLessThanOrEqualTo(Long)
+ Criteria andAdminFeeAmountIn(List<Long>)
+ Criteria andAdminFeeAmountNotIn(List<Long>)
+ Criteria andAdminFeeAmountBetween(Long,Long)
+ Criteria andAdminFeeAmountNotBetween(Long,Long)
+ Criteria andVatAdminFeeAmountIsNull()
+ Criteria andVatAdminFeeAmountIsNotNull()
+ Criteria andVatAdminFeeAmountEqualTo(Long)
+ Criteria andVatAdminFeeAmountNotEqualTo(Long)
+ Criteria andVatAdminFeeAmountGreaterThan(Long)
+ Criteria andVatAdminFeeAmountGreaterThanOrEqualTo(Long)
+ Criteria andVatAdminFeeAmountLessThan(Long)
+ Criteria andVatAdminFeeAmountLessThanOrEqualTo(Long)
+ Criteria andVatAdminFeeAmountIn(List<Long>)
+ Criteria andVatAdminFeeAmountNotIn(List<Long>)
+ Criteria andVatAdminFeeAmountBetween(Long,Long)
+ Criteria andVatAdminFeeAmountNotBetween(Long,Long)
+ Criteria andProvisionFeeRateIsNull()
+ Criteria andProvisionFeeRateIsNotNull()
+ Criteria andProvisionFeeRateEqualTo(BigDecimal)
+ Criteria andProvisionFeeRateNotEqualTo(BigDecimal)
+ Criteria andProvisionFeeRateGreaterThan(BigDecimal)
+ Criteria andProvisionFeeRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andProvisionFeeRateLessThan(BigDecimal)
+ Criteria andProvisionFeeRateLessThanOrEqualTo(BigDecimal)
+ Criteria andProvisionFeeRateIn(List<BigDecimal>)
+ Criteria andProvisionFeeRateNotIn(List<BigDecimal>)
+ Criteria andProvisionFeeRateBetween(BigDecimal,BigDecimal)
+ Criteria andProvisionFeeRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andProvisionFeeAmountIsNull()
+ Criteria andProvisionFeeAmountIsNotNull()
+ Criteria andProvisionFeeAmountEqualTo(Long)
+ Criteria andProvisionFeeAmountNotEqualTo(Long)
+ Criteria andProvisionFeeAmountGreaterThan(Long)
+ Criteria andProvisionFeeAmountGreaterThanOrEqualTo(Long)
+ Criteria andProvisionFeeAmountLessThan(Long)
+ Criteria andProvisionFeeAmountLessThanOrEqualTo(Long)
+ Criteria andProvisionFeeAmountIn(List<Long>)
+ Criteria andProvisionFeeAmountNotIn(List<Long>)
+ Criteria andProvisionFeeAmountBetween(Long,Long)
+ Criteria andProvisionFeeAmountNotBetween(Long,Long)
+ Criteria andInterestFunderRateIsNull()
+ Criteria andInterestFunderRateIsNotNull()
+ Criteria andInterestFunderRateEqualTo(BigDecimal)
+ Criteria andInterestFunderRateNotEqualTo(BigDecimal)
+ Criteria andInterestFunderRateGreaterThan(BigDecimal)
+ Criteria andInterestFunderRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andInterestFunderRateLessThan(BigDecimal)
+ Criteria andInterestFunderRateLessThanOrEqualTo(BigDecimal)
+ Criteria andInterestFunderRateIn(List<BigDecimal>)
+ Criteria andInterestFunderRateNotIn(List<BigDecimal>)
+ Criteria andInterestFunderRateBetween(BigDecimal,BigDecimal)
+ Criteria andInterestFunderRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andInterestFunderAmountIsNull()
+ Criteria andInterestFunderAmountIsNotNull()
+ Criteria andInterestFunderAmountEqualTo(Long)
+ Criteria andInterestFunderAmountNotEqualTo(Long)
+ Criteria andInterestFunderAmountGreaterThan(Long)
+ Criteria andInterestFunderAmountGreaterThanOrEqualTo(Long)
+ Criteria andInterestFunderAmountLessThan(Long)
+ Criteria andInterestFunderAmountLessThanOrEqualTo(Long)
+ Criteria andInterestFunderAmountIn(List<Long>)
+ Criteria andInterestFunderAmountNotIn(List<Long>)
+ Criteria andInterestFunderAmountBetween(Long,Long)
+ Criteria andInterestFunderAmountNotBetween(Long,Long)
+ Criteria andWhtInterestFunderAmountIsNull()
+ Criteria andWhtInterestFunderAmountIsNotNull()
+ Criteria andWhtInterestFunderAmountEqualTo(Long)
+ Criteria andWhtInterestFunderAmountNotEqualTo(Long)
+ Criteria andWhtInterestFunderAmountGreaterThan(Long)
+ Criteria andWhtInterestFunderAmountGreaterThanOrEqualTo(Long)
+ Criteria andWhtInterestFunderAmountLessThan(Long)
+ Criteria andWhtInterestFunderAmountLessThanOrEqualTo(Long)
+ Criteria andWhtInterestFunderAmountIn(List<Long>)
+ Criteria andWhtInterestFunderAmountNotIn(List<Long>)
+ Criteria andWhtInterestFunderAmountBetween(Long,Long)
+ Criteria andWhtInterestFunderAmountNotBetween(Long,Long)
+ Criteria andExcludeWhtInterestFunderAmountIsNull()
+ Criteria andExcludeWhtInterestFunderAmountIsNotNull()
+ Criteria andExcludeWhtInterestFunderAmountEqualTo(Long)
+ Criteria andExcludeWhtInterestFunderAmountNotEqualTo(Long)
+ Criteria andExcludeWhtInterestFunderAmountGreaterThan(Long)
+ Criteria andExcludeWhtInterestFunderAmountGreaterThanOrEqualTo(Long)
+ Criteria andExcludeWhtInterestFunderAmountLessThan(Long)
+ Criteria andExcludeWhtInterestFunderAmountLessThanOrEqualTo(Long)
+ Criteria andExcludeWhtInterestFunderAmountIn(List<Long>)
+ Criteria andExcludeWhtInterestFunderAmountNotIn(List<Long>)
+ Criteria andExcludeWhtInterestFunderAmountBetween(Long,Long)
+ Criteria andExcludeWhtInterestFunderAmountNotBetween(Long,Long)
+ Criteria andPlatformFeeRateIsNull()
+ Criteria andPlatformFeeRateIsNotNull()
+ Criteria andPlatformFeeRateEqualTo(BigDecimal)
+ Criteria andPlatformFeeRateNotEqualTo(BigDecimal)
+ Criteria andPlatformFeeRateGreaterThan(BigDecimal)
+ Criteria andPlatformFeeRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andPlatformFeeRateLessThan(BigDecimal)
+ Criteria andPlatformFeeRateLessThanOrEqualTo(BigDecimal)
+ Criteria andPlatformFeeRateIn(List<BigDecimal>)
+ Criteria andPlatformFeeRateNotIn(List<BigDecimal>)
+ Criteria andPlatformFeeRateBetween(BigDecimal,BigDecimal)
+ Criteria andPlatformFeeRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andPlatformFeeAmountIsNull()
+ Criteria andPlatformFeeAmountIsNotNull()
+ Criteria andPlatformFeeAmountEqualTo(Long)
+ Criteria andPlatformFeeAmountNotEqualTo(Long)
+ Criteria andPlatformFeeAmountGreaterThan(Long)
+ Criteria andPlatformFeeAmountGreaterThanOrEqualTo(Long)
+ Criteria andPlatformFeeAmountLessThan(Long)
+ Criteria andPlatformFeeAmountLessThanOrEqualTo(Long)
+ Criteria andPlatformFeeAmountIn(List<Long>)
+ Criteria andPlatformFeeAmountNotIn(List<Long>)
+ Criteria andPlatformFeeAmountBetween(Long,Long)
+ Criteria andPlatformFeeAmountNotBetween(Long,Long)
+ Criteria andVatPlatformFeeAmountIsNull()
+ Criteria andVatPlatformFeeAmountIsNotNull()
+ Criteria andVatPlatformFeeAmountEqualTo(Long)
+ Criteria andVatPlatformFeeAmountNotEqualTo(Long)
+ Criteria andVatPlatformFeeAmountGreaterThan(Long)
+ Criteria andVatPlatformFeeAmountGreaterThanOrEqualTo(Long)
+ Criteria andVatPlatformFeeAmountLessThan(Long)
+ Criteria andVatPlatformFeeAmountLessThanOrEqualTo(Long)
+ Criteria andVatPlatformFeeAmountIn(List<Long>)
+ Criteria andVatPlatformFeeAmountNotIn(List<Long>)
+ Criteria andVatPlatformFeeAmountBetween(Long,Long)
+ Criteria andVatPlatformFeeAmountNotBetween(Long,Long)
+ Criteria andLateFeeRateIsNull()
+ Criteria andLateFeeRateIsNotNull()
+ Criteria andLateFeeRateEqualTo(BigDecimal)
+ Criteria andLateFeeRateNotEqualTo(BigDecimal)
+ Criteria andLateFeeRateGreaterThan(BigDecimal)
+ Criteria andLateFeeRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andLateFeeRateLessThan(BigDecimal)
+ Criteria andLateFeeRateLessThanOrEqualTo(BigDecimal)
+ Criteria andLateFeeRateIn(List<BigDecimal>)
+ Criteria andLateFeeRateNotIn(List<BigDecimal>)
+ Criteria andLateFeeRateBetween(BigDecimal,BigDecimal)
+ Criteria andLateFeeRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andLateFeeAmountIsNull()
+ Criteria andLateFeeAmountIsNotNull()
+ Criteria andLateFeeAmountEqualTo(Long)
+ Criteria andLateFeeAmountNotEqualTo(Long)
+ Criteria andLateFeeAmountGreaterThan(Long)
+ Criteria andLateFeeAmountGreaterThanOrEqualTo(Long)
+ Criteria andLateFeeAmountLessThan(Long)
+ Criteria andLateFeeAmountLessThanOrEqualTo(Long)
+ Criteria andLateFeeAmountIn(List<Long>)
+ Criteria andLateFeeAmountNotIn(List<Long>)
+ Criteria andLateFeeAmountBetween(Long,Long)
+ Criteria andLateFeeAmountNotBetween(Long,Long)
+ Criteria andVatLateFeeAmountIsNull()
+ Criteria andVatLateFeeAmountIsNotNull()
+ Criteria andVatLateFeeAmountEqualTo(Long)
+ Criteria andVatLateFeeAmountNotEqualTo(Long)
+ Criteria andVatLateFeeAmountGreaterThan(Long)
+ Criteria andVatLateFeeAmountGreaterThanOrEqualTo(Long)
+ Criteria andVatLateFeeAmountLessThan(Long)
+ Criteria andVatLateFeeAmountLessThanOrEqualTo(Long)
+ Criteria andVatLateFeeAmountIn(List<Long>)
+ Criteria andVatLateFeeAmountNotIn(List<Long>)
+ Criteria andVatLateFeeAmountBetween(Long,Long)
+ Criteria andVatLateFeeAmountNotBetween(Long,Long)
+ Criteria andDueDateIsNull()
+ Criteria andDueDateIsNotNull()
+ Criteria andDueDateEqualTo(Date)
+ Criteria andDueDateNotEqualTo(Date)
+ Criteria andDueDateGreaterThan(Date)
+ Criteria andDueDateGreaterThanOrEqualTo(Date)
+ Criteria andDueDateLessThan(Date)
+ Criteria andDueDateLessThanOrEqualTo(Date)
+ Criteria andDueDateIn(List<Date>)
+ Criteria andDueDateNotIn(List<Date>)
+ Criteria andDueDateBetween(Date,Date)
+ Criteria andDueDateNotBetween(Date,Date)
+ Criteria andOutstandingAmountExcludeTaxIsNull()
+ Criteria andOutstandingAmountExcludeTaxIsNotNull()
+ Criteria andOutstandingAmountExcludeTaxEqualTo(Long)
+ Criteria andOutstandingAmountExcludeTaxNotEqualTo(Long)
+ Criteria andOutstandingAmountExcludeTaxGreaterThan(Long)
+ Criteria andOutstandingAmountExcludeTaxGreaterThanOrEqualTo(Long)
+ Criteria andOutstandingAmountExcludeTaxLessThan(Long)
+ Criteria andOutstandingAmountExcludeTaxLessThanOrEqualTo(Long)
+ Criteria andOutstandingAmountExcludeTaxIn(List<Long>)
+ Criteria andOutstandingAmountExcludeTaxNotIn(List<Long>)
+ Criteria andOutstandingAmountExcludeTaxBetween(Long,Long)
+ Criteria andOutstandingAmountExcludeTaxNotBetween(Long,Long)
+ Criteria andVaAmountIsNull()
+ Criteria andVaAmountIsNotNull()
+ Criteria andVaAmountEqualTo(Long)
+ Criteria andVaAmountNotEqualTo(Long)
+ Criteria andVaAmountGreaterThan(Long)
+ Criteria andVaAmountGreaterThanOrEqualTo(Long)
+ Criteria andVaAmountLessThan(Long)
+ Criteria andVaAmountLessThanOrEqualTo(Long)
+ Criteria andVaAmountIn(List<Long>)
+ Criteria andVaAmountNotIn(List<Long>)
+ Criteria andVaAmountBetween(Long,Long)
+ Criteria andVaAmountNotBetween(Long,Long)
+ Criteria andSettledAmountIsNull()
+ Criteria andSettledAmountIsNotNull()
+ Criteria andSettledAmountEqualTo(Long)
+ Criteria andSettledAmountNotEqualTo(Long)
+ Criteria andSettledAmountGreaterThan(Long)
+ Criteria andSettledAmountGreaterThanOrEqualTo(Long)
+ Criteria andSettledAmountLessThan(Long)
+ Criteria andSettledAmountLessThanOrEqualTo(Long)
+ Criteria andSettledAmountIn(List<Long>)
+ Criteria andSettledAmountNotIn(List<Long>)
+ Criteria andSettledAmountBetween(Long,Long)
+ Criteria andSettledAmountNotBetween(Long,Long)
+ Criteria andLoanStateIsNull()
+ Criteria andLoanStateIsNotNull()
+ Criteria andLoanStateEqualTo(String)
+ Criteria andLoanStateNotEqualTo(String)
+ Criteria andLoanStateGreaterThan(String)
+ Criteria andLoanStateGreaterThanOrEqualTo(String)
+ Criteria andLoanStateLessThan(String)
+ Criteria andLoanStateLessThanOrEqualTo(String)
+ Criteria andLoanStateLike(String)
+ Criteria andLoanStateNotLike(String)
+ Criteria andLoanStateIn(List<String>)
+ Criteria andLoanStateNotIn(List<String>)
+ Criteria andLoanStateBetween(String,String)
+ Criteria andLoanStateNotBetween(String,String)
+ Criteria andAccountNumberIsNull()
+ Criteria andAccountNumberIsNotNull()
+ Criteria andAccountNumberEqualTo(String)
+ Criteria andAccountNumberNotEqualTo(String)
+ Criteria andAccountNumberGreaterThan(String)
+ Criteria andAccountNumberGreaterThanOrEqualTo(String)
+ Criteria andAccountNumberLessThan(String)
+ Criteria andAccountNumberLessThanOrEqualTo(String)
+ Criteria andAccountNumberLike(String)
+ Criteria andAccountNumberNotLike(String)
+ Criteria andAccountNumberIn(List<String>)
+ Criteria andAccountNumberNotIn(List<String>)
+ Criteria andAccountNumberBetween(String,String)
+ Criteria andAccountNumberNotBetween(String,String)
+ Criteria andBankCodeIsNull()
+ Criteria andBankCodeIsNotNull()
+ Criteria andBankCodeEqualTo(String)
+ Criteria andBankCodeNotEqualTo(String)
+ Criteria andBankCodeGreaterThan(String)
+ Criteria andBankCodeGreaterThanOrEqualTo(String)
+ Criteria andBankCodeLessThan(String)
+ Criteria andBankCodeLessThanOrEqualTo(String)
+ Criteria andBankCodeLike(String)
+ Criteria andBankCodeNotLike(String)
+ Criteria andBankCodeIn(List<String>)
+ Criteria andBankCodeNotIn(List<String>)
+ Criteria andBankCodeBetween(String,String)
+ Criteria andBankCodeNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.moon.model.VaLoanInfoExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.moon.model.VaLoanInfoExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
enum com.welab.moon.enums.LoanStateEnum {
+  INIT
+  SIGNDE
+  PENDING_CANCEL
+  PENDING_DISBURSED
+  IN_DISBURSED
+  DISBURSED
+  OVERDUE
+  CANCELED
+  TIMEOUT
+  CLOSED
- Byte state
- String desc
- String displayName
+ {static} Map<Byte,LoanStateDisplay> LEND_STATE_MAP
+ {static} Map<Byte,LoanStateDisplay> REPAY_STATE_MAP
+ {static} List<Byte> LEND_SUCCESS_BEFORE_LIST_STATE
+ {static} List<Byte> LEND_SUCCESS_LIST_STATE
+ {static} List<Byte> CANCELED_TIMEOUT_LIST_STATE
+ {static} List<Byte> PENDING_REPAYMENT_LIST_STATE
+ {static} List<Byte> FINISH_LIST_STATE
+ {static} List<Byte> CAN_CANCEL_LIST_STATE
}
class com.welab.moon.enums.LoanStateDisplay {
- String name
- List<Byte> stateList
}
class com.welab.moon.app.command.MessagePushCmdExe {
- MessageAppFacade messageAppFacade
- MessageSmsFacade messageSmsFacade
- AgreementCmdExe agreementCmdExe
- TbSignUpKeyManager tbSignUpKeyManager
- HsoOptConfigManage hsoOptConfigManage
- BaseTbLoanService baseTbLoanService
+ void pushMessage(String,boolean)
+ void handle(TbLoan,PartnerEnum,TbDisMsgTmplEnum)
+ void handle(TbLoan,PartnerEnum,TbDisMsgTmplEnum,boolean)
}
class com.welab.moon.controller.reg.TbRegController {
- PayServiceFacade payServiceFacade
- ValidatorServiceFacade validatorServiceFacade
- TbRegService tbRegService
+ Response<List<BankVO>> bankList()
+ Response<BankAccountVO> bankValidator(BankAccountDto)
+ Response sendCheckEmail(String,String)
+ Response emailVerification(String,String,String)
+ Response<BankAccountVO> personalReg(PersonalRegDoc)
+ Response<BankAccountVO> businessReg(BusinessRegDoc)
}
class com.welab.moon.test.app.service.hso.AgreementTest {
- TbAgreementService tbAgreementService
- TbAgreementFileUpLoadCmdExe tbAgreementFileUpLoadCmdExe
- DocumentService DocumentService
- OssDocumentHandlerUtil ossDocumentHandlerUtil
+ void upload()
}
class com.welab.moon.facade.message.MessageAppFacade {
- AppTemplateMessageService appTemplateMessageService
- MessageAppService messageAppService
+ Response<Long> sendAppMsg(AppMessageDTO)
+ Response<Long> sendTemplateAppMsg(AppMessageTemplateDTO)
}
class com.welab.moon.mq.listener.VaLoanRepaymentListener {
- VaLoanInfoService vaLoanInfoService
+ void hand(Message)
}
class com.welab.moon.model.vo.ToBAgreementVO {
- Long id
- String partner
- String tbLoanNumber
- String mobile
}
class com.welab.moon.test.app.service.CreditConfigurationTest {
- CreditConfiguration creditConfiguration
+ void testConfg()
}
class com.welab.moon.app.service.credit.TbCreditApplyService {
- GadaCreditApplyCmdExe gadaCreditApplyCmdExe
- BaseTbCreditApplyService baseTbCreditApplyService
- MongoManager mongoManager
- IndoRegionsServiceFacade indoRegionsServiceFacade
+ TbImportVO importApply(String,Long,MultipartFile)
+ PageInfo<GadaApplyInfoVO> applyList(String,Long,ApplyQryVO)
+ void applyExport(String,Long,ApplyQryVO,HttpServletResponse)
- PageInfo<GadaApplyInfoVO> buildRes(PageInfo<TbCreditApply>)
}
class com.welab.moon.app.service.disbursement.job.DayaModeDisbursementJob {
- BaseTbUserService baseTbUserService
+ String strategy()
# BatchLendQryParam buildBatchLendQryParam(DisbursementContext)
# List<BatchDisbursementInfo> buildBatchDisbursementData(List<TbLendBatch>,DisbursementContext)
}
class com.welab.moon.app.service.credit.trio.TrioUserImportService {
- CommonHelper<TrioImportTbUserBO> commonHelper
- UserServiceFacade userServiceFacade
- BaseTbUserService baseTbUserService
+ String[] field()
+ String getKey()
+ List<ImportTbUserBO<TrioImportTbUserBO>> parseAndCheckData(MultipartFile)
+ TrioUserDoc buildTbUserDoc(TrioImportTbUserBO)
+ List<ImportTbUserBO<TrioImportTbUserBO>> checkData(List<TrioImportTbUserBO>,String)
}
abstract class com.welab.moon.app.service.AbstractExcelEmailReport {
# String appId
# MessageEmailFacade emailService
# boolean isSendNoDataEmail()
# {abstract}String attachmentName(PARAM)
# {abstract}LinkedHashMap<String,String> getExcelHeadMap(PARAM)
# {abstract}Long getTotalCount(PARAM)
# {abstract}List<RES> getDataList(PARAM)
# {abstract}MailDTO buildMail(MailDTO,PARAM)
+ void execute(PARAM)
- Map<String,String> generateAttachmentMap(Long,PARAM)
- ExcelPagingExport<RES> initExport(Long,PARAM)
}
class com.welab.moon.model.dto.ImportTbUserDTO {
- String partner
- MultipartFile file
}
class com.welab.moon.facade.application.WhiteListServiceFacade {
- JawaBaliCityService jawaBaliCityService
+ Boolean isJawaBaliCity(String)
}
class com.welab.moon.app.service.credit.trio.TrioTbLoanService {
+ String getKey()
+ LinkedHashMap<String,String> getExportTitle()
# void buildQuerParam(QueryLoansDTO)
# void buildSingleLoan(TbLoansVO,BuildLoanBO<TrioTbLoanDoc,TrioUserDoc>)
}
class com.welab.moon.controller.TbUserController {
- ImportTbUserManage importTbUserManage
- TbQueryService tbQueryService
- TbUserManage tbUserManage
+ Response importTbUser(String,MultipartFile,Long)
+ Response<GadaUserCheckVO> checkTbUser(String,MultipartFile)
+ Response<Void> uploadFile(Long,String,MultipartFile[])
+ Response<PageInfo<TbUserDoc>> userQuery(String,TbUserQryDTO)
+ Response cmCodeList(String)
+ Response<List<TbUserUpdateDTO>> userInfoList(UpdateUserInfoDTO)
+ Response userInfoList(TbUserUpdateDTO)
+ Response<TbImportVO> importTbLeve1User(String,MultipartFile,Long)
+ Response<PageInfo<UserLevel1InfoVO>> level1UserPageList(String,TbUserQryVO)
+ Response<PageInfo<UserLevel1InfoVO>> updateLevl1(String,UpdateUserLevel1InfoVO)
}
class com.welab.moon.test.app.service.mq.TbRepaymentNotifyTest {
- BaseTbLoanService baseTbLoanService
- BaseTbLendBatchService baseTbLendBatchService
- TbLoanMapper tbLoanMapper
- TbLendBatchMapper tbLendBatchMapper
- TbRepaymentListener tbRepaymentListener
- BaseTbCreditUserAccountService baseTbCreditUserAccountService
- TbCreditUserAccountMapper tbCreditUserAccountMapper
- BaseTbUserService baseTbUserService
- TbUserMapper tbUserMapper
+ void initData(PartnerEnum)
+ void initCreditUserAccount()
+ void hso()
+ void trio()
+ void GAGA()
+ void traveloka()
+ void restock()
}
class com.welab.moon.model.mongo.TrioTbLoanDoc {
- String top
- String qty
- String netPrice
- String product
- String invoiceDate
}
class com.welab.moon.model.mongo.tbuser.BaseLeve1UserDoc {
- String partner
- Long userId
- String name
- String mobile
- String email
- String email2
}
interface com.welab.moon.mapper.ext.TbLendBatchExtMapper {
~ int deleteInvalidLendBatch(String,Date,Date)
}
class com.welab.moon.model.vo.credit.apply.GadaApplyInfoVO {
- Date createdAt
- Date updatedAt
- String status
- String merchantStatus
- Long limit
- Long approvedLimit
- String uniqueCodeBuyer
- String storeCode
- Long preProvinceId
- String preProvinceName
- Long preCityId
- String preCityName
- Long approvedProvinceId
- String approvedProvinceName
- Long approvedCityId
- String approvedCityName
}
class com.welab.moon.model.TbCreditApply {
- Long id
- String partner
- Long createUserId
- String applyCode
- String applyName
- String customerCode
- Long amount
- Long approvedAmount
- String docId
- Byte status
- Long provinceId
- Long cityId
- Long approvedProvinceId
- Long approvedCityId
- Boolean deleted
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getPartner()
+ void setPartner(String)
+ Long getCreateUserId()
+ void setCreateUserId(Long)
+ String getApplyCode()
+ void setApplyCode(String)
+ String getApplyName()
+ void setApplyName(String)
+ String getCustomerCode()
+ void setCustomerCode(String)
+ Long getAmount()
+ void setAmount(Long)
+ Long getApprovedAmount()
+ void setApprovedAmount(Long)
+ String getDocId()
+ void setDocId(String)
+ Byte getStatus()
+ void setStatus(Byte)
+ Long getProvinceId()
+ void setProvinceId(Long)
+ Long getCityId()
+ void setCityId(Long)
+ Long getApprovedProvinceId()
+ void setApprovedProvinceId(Long)
+ Long getApprovedCityId()
+ void setApprovedCityId(Long)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.moon.model.mongo.tbreg.BusinessRegDoc {
- String businessName
- String businessType
- String businessAddress
- String orgNo
- Long establishmentDate
- String changeContract
- String lastContractNo
- Long lastContractDate
- String tinNo
- String businessLegal
- Long tinFileDocId
- String businessNibNo
- Long nibFileDocId
- String address
- String village
- String area
- String city
- String province
- String postCode
- String businessEmail
- String workDomain
- String listed
- Long buildingFrontSelfieDocId
- Long buildingFrontRightDocId
- Long buildingFrontLeftDocId
- Long businessProductsSelfieDocId
- Long idCardDocId
- String nik
- String principalName
- String principalSex
- String principalKtpAddress
- String principalKtpProvince
- String principalKtpCity
- String principalKtpArea
- String principalKtpVillage
- String principalKtpPostCode
- String post
- String destinationBankAccount
- String account
- String ownAccountName
- Long invoiceDocId
- Long amount
- Long loanAmount
- String businessMobile
- String emergencyContact1
- String emergencyContact1Relationship
- String emergencyContact1Address
- String emergencyContact2
- String emergencyContact2Relationship
- String emergencyContact2Address
}
class com.welab.moon.model.TbCreditApplyExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> TbCreditApplyExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.moon.model.TbCreditApplyExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andPartnerIsNull()
+ Criteria andPartnerIsNotNull()
+ Criteria andPartnerEqualTo(String)
+ Criteria andPartnerNotEqualTo(String)
+ Criteria andPartnerGreaterThan(String)
+ Criteria andPartnerGreaterThanOrEqualTo(String)
+ Criteria andPartnerLessThan(String)
+ Criteria andPartnerLessThanOrEqualTo(String)
+ Criteria andPartnerLike(String)
+ Criteria andPartnerNotLike(String)
+ Criteria andPartnerIn(List<String>)
+ Criteria andPartnerNotIn(List<String>)
+ Criteria andPartnerBetween(String,String)
+ Criteria andPartnerNotBetween(String,String)
+ Criteria andCreateUserIdIsNull()
+ Criteria andCreateUserIdIsNotNull()
+ Criteria andCreateUserIdEqualTo(Long)
+ Criteria andCreateUserIdNotEqualTo(Long)
+ Criteria andCreateUserIdGreaterThan(Long)
+ Criteria andCreateUserIdGreaterThanOrEqualTo(Long)
+ Criteria andCreateUserIdLessThan(Long)
+ Criteria andCreateUserIdLessThanOrEqualTo(Long)
+ Criteria andCreateUserIdIn(List<Long>)
+ Criteria andCreateUserIdNotIn(List<Long>)
+ Criteria andCreateUserIdBetween(Long,Long)
+ Criteria andCreateUserIdNotBetween(Long,Long)
+ Criteria andApplyCodeIsNull()
+ Criteria andApplyCodeIsNotNull()
+ Criteria andApplyCodeEqualTo(String)
+ Criteria andApplyCodeNotEqualTo(String)
+ Criteria andApplyCodeGreaterThan(String)
+ Criteria andApplyCodeGreaterThanOrEqualTo(String)
+ Criteria andApplyCodeLessThan(String)
+ Criteria andApplyCodeLessThanOrEqualTo(String)
+ Criteria andApplyCodeLike(String)
+ Criteria andApplyCodeNotLike(String)
+ Criteria andApplyCodeIn(List<String>)
+ Criteria andApplyCodeNotIn(List<String>)
+ Criteria andApplyCodeBetween(String,String)
+ Criteria andApplyCodeNotBetween(String,String)
+ Criteria andApplyNameIsNull()
+ Criteria andApplyNameIsNotNull()
+ Criteria andApplyNameEqualTo(String)
+ Criteria andApplyNameNotEqualTo(String)
+ Criteria andApplyNameGreaterThan(String)
+ Criteria andApplyNameGreaterThanOrEqualTo(String)
+ Criteria andApplyNameLessThan(String)
+ Criteria andApplyNameLessThanOrEqualTo(String)
+ Criteria andApplyNameLike(String)
+ Criteria andApplyNameNotLike(String)
+ Criteria andApplyNameIn(List<String>)
+ Criteria andApplyNameNotIn(List<String>)
+ Criteria andApplyNameBetween(String,String)
+ Criteria andApplyNameNotBetween(String,String)
+ Criteria andCustomerCodeIsNull()
+ Criteria andCustomerCodeIsNotNull()
+ Criteria andCustomerCodeEqualTo(String)
+ Criteria andCustomerCodeNotEqualTo(String)
+ Criteria andCustomerCodeGreaterThan(String)
+ Criteria andCustomerCodeGreaterThanOrEqualTo(String)
+ Criteria andCustomerCodeLessThan(String)
+ Criteria andCustomerCodeLessThanOrEqualTo(String)
+ Criteria andCustomerCodeLike(String)
+ Criteria andCustomerCodeNotLike(String)
+ Criteria andCustomerCodeIn(List<String>)
+ Criteria andCustomerCodeNotIn(List<String>)
+ Criteria andCustomerCodeBetween(String,String)
+ Criteria andCustomerCodeNotBetween(String,String)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andApprovedAmountIsNull()
+ Criteria andApprovedAmountIsNotNull()
+ Criteria andApprovedAmountEqualTo(Long)
+ Criteria andApprovedAmountNotEqualTo(Long)
+ Criteria andApprovedAmountGreaterThan(Long)
+ Criteria andApprovedAmountGreaterThanOrEqualTo(Long)
+ Criteria andApprovedAmountLessThan(Long)
+ Criteria andApprovedAmountLessThanOrEqualTo(Long)
+ Criteria andApprovedAmountIn(List<Long>)
+ Criteria andApprovedAmountNotIn(List<Long>)
+ Criteria andApprovedAmountBetween(Long,Long)
+ Criteria andApprovedAmountNotBetween(Long,Long)
+ Criteria andDocIdIsNull()
+ Criteria andDocIdIsNotNull()
+ Criteria andDocIdEqualTo(String)
+ Criteria andDocIdNotEqualTo(String)
+ Criteria andDocIdGreaterThan(String)
+ Criteria andDocIdGreaterThanOrEqualTo(String)
+ Criteria andDocIdLessThan(String)
+ Criteria andDocIdLessThanOrEqualTo(String)
+ Criteria andDocIdLike(String)
+ Criteria andDocIdNotLike(String)
+ Criteria andDocIdIn(List<String>)
+ Criteria andDocIdNotIn(List<String>)
+ Criteria andDocIdBetween(String,String)
+ Criteria andDocIdNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andProvinceIdIsNull()
+ Criteria andProvinceIdIsNotNull()
+ Criteria andProvinceIdEqualTo(Long)
+ Criteria andProvinceIdNotEqualTo(Long)
+ Criteria andProvinceIdGreaterThan(Long)
+ Criteria andProvinceIdGreaterThanOrEqualTo(Long)
+ Criteria andProvinceIdLessThan(Long)
+ Criteria andProvinceIdLessThanOrEqualTo(Long)
+ Criteria andProvinceIdIn(List<Long>)
+ Criteria andProvinceIdNotIn(List<Long>)
+ Criteria andProvinceIdBetween(Long,Long)
+ Criteria andProvinceIdNotBetween(Long,Long)
+ Criteria andCityIdIsNull()
+ Criteria andCityIdIsNotNull()
+ Criteria andCityIdEqualTo(Long)
+ Criteria andCityIdNotEqualTo(Long)
+ Criteria andCityIdGreaterThan(Long)
+ Criteria andCityIdGreaterThanOrEqualTo(Long)
+ Criteria andCityIdLessThan(Long)
+ Criteria andCityIdLessThanOrEqualTo(Long)
+ Criteria andCityIdIn(List<Long>)
+ Criteria andCityIdNotIn(List<Long>)
+ Criteria andCityIdBetween(Long,Long)
+ Criteria andCityIdNotBetween(Long,Long)
+ Criteria andApprovedProvinceIdIsNull()
+ Criteria andApprovedProvinceIdIsNotNull()
+ Criteria andApprovedProvinceIdEqualTo(Long)
+ Criteria andApprovedProvinceIdNotEqualTo(Long)
+ Criteria andApprovedProvinceIdGreaterThan(Long)
+ Criteria andApprovedProvinceIdGreaterThanOrEqualTo(Long)
+ Criteria andApprovedProvinceIdLessThan(Long)
+ Criteria andApprovedProvinceIdLessThanOrEqualTo(Long)
+ Criteria andApprovedProvinceIdIn(List<Long>)
+ Criteria andApprovedProvinceIdNotIn(List<Long>)
+ Criteria andApprovedProvinceIdBetween(Long,Long)
+ Criteria andApprovedProvinceIdNotBetween(Long,Long)
+ Criteria andApprovedCityIdIsNull()
+ Criteria andApprovedCityIdIsNotNull()
+ Criteria andApprovedCityIdEqualTo(Long)
+ Criteria andApprovedCityIdNotEqualTo(Long)
+ Criteria andApprovedCityIdGreaterThan(Long)
+ Criteria andApprovedCityIdGreaterThanOrEqualTo(Long)
+ Criteria andApprovedCityIdLessThan(Long)
+ Criteria andApprovedCityIdLessThanOrEqualTo(Long)
+ Criteria andApprovedCityIdIn(List<Long>)
+ Criteria andApprovedCityIdNotIn(List<Long>)
+ Criteria andApprovedCityIdBetween(Long,Long)
+ Criteria andApprovedCityIdNotBetween(Long,Long)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.moon.model.TbCreditApplyExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.moon.model.TbCreditApplyExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.moon.model.dto.TbUserUpdateDTO {
- Long userId
- String partner
- String merchantCode
- String merchantName
- String picName
- String mobile
- String nik
- String email
- Long limit
- String password
- Byte state
- Long provinceId
- String provinceName
- Long cityId
- String cityName
}
class com.welab.moon.app.base.BaseTbTravelokaModifyLogService {
- TbTravelokaModifyLogMapper tbTravelokaModifyLogMapper
+ void save(TbTravelokaModifyLog)
}
class com.welab.moon.app.command.traveloka.CreateTravelokaTbLoanCmdExe {
- BaseTbUserService baseTbUserService
- BaseTbLoanService baseTbLoanService
- MongoManager mongoManager
- FundLoansServiceFacade fundLoansServiceFacade
- BaseTbLendBatchService baseTbLendBatchService
- UserServiceFacade userServiceFacade
- TbServiceFacade tbServiceFacade
- DocumentService documentService
- TravelokaUserInfoModifyCmdExe travelokaUserInfoModifyCmdExe
- FundAccountInfoServiceFacade fundAccountInfoServiceFacade
- BaseToBLoanAgreementService baseToBLoanAgreementService
- JedisCluster jedisCluster
- {static} String TB_LOAN_IMPORT_SWITCH_KEY
+ List<CreateTravelokaVO> doHandel(List<TravelokaDTO>)
- void checkFund(List<TravelokaDTO>)
- void updateTbUser(TbUser,TravelokaDTO,List<String>,List<String>)
- void saveTbLoan(List<Loans>,List<TbLoanBO>,List<CreateTravelokaVO>,Long,String)
~ BigDecimal getRate(String)
- TbUser saveTbUser(TravelokaDTO,Long)
- String saveTbDocUser(TravelokaDTO,Long)
- TravelokaTbLoanDoc buildTravelokaTbLoanDoc(Loans)
- void uploadContract(String,Long)
- void uploadKtpPhoto(String,Long)
- boolean initTbLendBatch(String,String,long,Date)
- Long getAmount(List<Dues>)
- List<TbInvoice> buildTbInvoice(List<TbLoanBO>,TbUser,Long)
- RegUserDTO buildRegUserDTO(UserProfile,String)
- Long matchFund(TbLoan,PartnerEnum)
- void checkData(TbUser,UserProfile)
- Long saveAgreement(TbLoan,String)
}
enum com.welab.moon.enums.VaLoanInfoLoanStateEnmu {
+  NORMAL
+  DPD
+  DPD_FULL
+  SETTLEMENT
- {static} List<String> dpdStateList
- String loanState
- <<Create>> VaLoanInfoLoanStateEnmu(String)
+ {static} List<String> getDpdStateList()
}
class com.welab.moon.model.bo.BaseImportTbUserBO {
- String partner
- String mobile
- String name
- String email
- String nik
- String customerCode
- String currentLimit
- Boolean isMobile
- String productCode
- String status
- String picName
}
class com.welab.moon.app.base.BaseVaLoanInfoService {
- VaLoanInfoMapper vaLoanInfoMapper
+ void addVaLoanInfo(VaLoanInfo)
+ List<VaLoanInfoRspVO> getVaLoanInfos(VaLoanInfoQueryDTO)
+ VaLoanInfo getVaLoanInfo(Long)
+ List<VaLoanInfo> getOpenAndNotFullLoans()
+ List<VaLoanInfo> getLoanInfo(String)
+ int updateStateAndFee(VaLoanInfo)
+ int loanRepayment(Long,Long)
}
class com.welab.moon.model.dto.DisNotifyDTO {
- String lendBatchNo
- Date lendTime
}
class com.welab.moon.model.mongo.tbuser.gada.apiuser.GadaBusinessDoc {
- String nameOfbusinessEntity
- String formOfBusinessEntity
- String placeOfEstablishmentOfBusinessEntities
- String deedOfEstablishmentNumber
- String deedOfEstablishmentDate
- String haveaDeedOfChange
- String lastAmendmentDeedNumber
- String lastAmendmentDeedDate
- String npwp
- Long npwpImageId
- String legalityOfBusinessEntities
- String nib
- Long nibImageId
- String storeWareHouseAddress
- String businessEntityWard
- String businessEntitySubDistrict
- String regencyOrCityBusinessEntity
- String businessEntityZipCode
- String goPublic
- Long photoOfPowerOfAttorneyInChargeImageId
- String personInChargeIdentityNumber
- Long photoIdOfThePersonInChargeImageId
- String nameOfPersonInChargeAccordingToIdentity
- String birthplaceOfPersonInCharge
- String genderOfPersonInCharge
- String addressOfPersonInCharge
- String rtOfPersonInCharge
- String rwOfPersonInCharge
- String subDistrictOfPersonInCharge
- String cityOfPersonInCharge
- String provinceOfPersonInCharge
- String wardOfPersonInCharge
- String zipCodeOfPersonInCharge
- String picPosition
}
class com.welab.moon.model.bo.credit.TbCreditUserAccountQueryBO {
- String partner
}
class com.welab.moon.app.command.ConfirmTbLoanCancelCmdExe {
- BaseTbConfirmLoanTriggerService baseTbConfirmLoanTriggerService
+ void execute(ConfirmLoanTriggerBO)
}
enum com.welab.moon.enums.DayaOptMessageTypeEnum {
+  EMAIL
+  APP_MSG
- Integer type
}
class com.welab.moon.model.bo.credit.RestoreTbUserAccountBO {
- Long restoreMoney
- boolean isRepaymentTrigger
- boolean isDisbursement
}
class com.welab.moon.model.dto.TbUserQryDTO {
- int pageSize
- int pageNum
- String partner
- String mobileLike
- List<String> mobileList
- String nikLike
- String nik
- String email
- String partnerUserNo
- Long parentUserId
- Long adminId
- String partnerUserNoList
- List<Long> parentUserIdList
}
enum com.welab.moon.enums.AgreementNotifyStatusEnum {
+  SUCCESS
+  EXPIRED
- String desc
}
class com.welab.moon.facade.application.TbProductConfigServiceFacade {
- TbProductConfigService tbProductConfigService
+ TbProductConfigVO matchConfig(TbMatchParamVO)
}
class com.welab.moon.test.job.TbDisbursementReportJobTest {
- TbDisbursementReportJob tbDisbursementReportJob
+ void execute()
}
class com.welab.moon.test.app.service.trio.TrioQueryTest {
- TbLoanManage tbLoanManage
+ void listTest()
+ void exportTest()
}
class com.welab.moon.app.model.traveloka.UserProfile {
- String name
- String nik
- String mobile
- String maritalStatus
- String educationLevel
- String religion
- String gender
- String email
- String birthday
- String birthplace
- String residence
- String rt
- String rw
- KtpAddress ktpAddress
- String ktpPhoto
- HomeAddress homeAddress
}
class com.welab.moon.model.mongo.tbuser.RestockUserDoc {
}
class com.welab.moon.facade.finance.FinanceServiceFacade {
- TbLoanQueryDubboService tbLoanQueryDubboService
+ PageInfo<TbRepaymentVO> queryRepaymentTrackByLoans(TbRepaymentQry)
+ List<TbPendRepayVO> queryPendRepaymentByLoans(List<String>)
}
class com.welab.moon.app.model.traveloka.bo.disbursement.BatchDisbursementInfo {
- String batchNo
- String transferAccount
- String bankCode
}
class com.welab.moon.service.impl.TbAgreementDocServiceImpl {
- BaseTbLoanService baseTbLoanService
- TbSignUpKeyManager tbSignUpKeyManager
- BaseTbUserService baseTbUserService
- BaseToBLoanAgreementService baseToBLoanAgreementService
+ Response<String> getSigningUrl(SigningUrlDTO)
+ Response<TbAgreementDocDTO> getOne(String)
}
class com.welab.moon.test.app.service.TbConfigTest {
- ConfigService configService
}
class com.welab.moon.facade.finance.TbServiceFacade {
- TbService tbService
+ void doImport(List<InvoiceImportBO>)
+ void doImportBatch(List<TbInvoice>)
+ void doImportByTbLoan(TbInvoice)
+ void doBatchLend(TbBatch)
+ void doRepayment(List<TbRepaymentDTO>)
+ TbLoanDetailRate getRate(String)
- List<TbInvoice> buildInvoiceList(List<InvoiceImportBO>)
+ TbInvoice buildInvoice(TbLoan,TbUser,Long)
+ Response cancelLoan(List<String>)
}
class com.welab.moon.app.command.agreement.TbAgreementFileUpLoadCmdExe {
- DocumentService documentService
- OssDocumentHandlerUtil ossDocumentHandlerUtil
- MongoManager mongoManager
- BaseTbUserService baseTbUserService
- UserServiceFacade userServiceFacade
- JedisCluster jedisCluster
+ void doHandel(MultipartFile,Long,Long)
}
class com.welab.moon.app.model.traveloka.bo.DisNotifyBO {
- String loanNumber
- TBEnum tbEnum
- String fileName
- String templateName
- String appTemplateName
- boolean isGenerateContract
}
class com.welab.moon.test.app.service.traveloka.TravelokaTest {
- TravelokaUserInfoModifyCmdExe travelokaUserInfoModifyCmdExe
- BaseTbUserService baseTbUserService
- CreateTravelokaTbLoanCmdExe createTravelokaTbLoanCmdExe
+ void modifyLogTest()
+ String getMobile()
+ void createTraveloka()
}
class com.welab.moon.app.model.traveloka.bo.PartnerBankInfo {
- String bankCode
- String bankAccount
}
class com.welab.moon.model.vo.TbLoansVO {
- Long id
- String customerName
- String customerNumber
- Long userId
- String partner
- String loanNumber
- String orderNo
- String docId
- Long invoiceAmount
- Date invoiceDate
- Byte lendStatus
- String lendStatusStr
- Byte repayStatus
- String repayStatusStr
- Long serviceFeeAmount
- Long lendAccount
- Date lendAt
- String billingNo
- String address
- String creditControlArea
- String customerAddress
- String spareparts
- String ahassName
- String userDocId
- String storeName
- Integer days
- String term
- Byte loanState
- String signingStatusStr
- Date expiredDate
- List<BillingAndNettVatVO> billingAndNettVatVOList
- Date createdAt
- String mobile
}
interface com.welab.moon.mapper.ext.TbCreditApplyExtMapper {
~ int batchInsert(List<TbCreditApply>)
}
class com.welab.moon.model.vo.AopLoansVO {
- String Address
}
class com.welab.moon.job.GadaStatisticsReportJob {
- TbAgreementService tbAgreementService
+ void execute(ShardingContext)
}
class com.welab.moon.model.TbLoanExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> TbLoanExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.moon.model.TbLoanExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andPartnerIsNull()
+ Criteria andPartnerIsNotNull()
+ Criteria andPartnerEqualTo(String)
+ Criteria andPartnerNotEqualTo(String)
+ Criteria andPartnerGreaterThan(String)
+ Criteria andPartnerGreaterThanOrEqualTo(String)
+ Criteria andPartnerLessThan(String)
+ Criteria andPartnerLessThanOrEqualTo(String)
+ Criteria andPartnerLike(String)
+ Criteria andPartnerNotLike(String)
+ Criteria andPartnerIn(List<String>)
+ Criteria andPartnerNotIn(List<String>)
+ Criteria andPartnerBetween(String,String)
+ Criteria andPartnerNotBetween(String,String)
+ Criteria andOrderNoIsNull()
+ Criteria andOrderNoIsNotNull()
+ Criteria andOrderNoEqualTo(String)
+ Criteria andOrderNoNotEqualTo(String)
+ Criteria andOrderNoGreaterThan(String)
+ Criteria andOrderNoGreaterThanOrEqualTo(String)
+ Criteria andOrderNoLessThan(String)
+ Criteria andOrderNoLessThanOrEqualTo(String)
+ Criteria andOrderNoLike(String)
+ Criteria andOrderNoNotLike(String)
+ Criteria andOrderNoIn(List<String>)
+ Criteria andOrderNoNotIn(List<String>)
+ Criteria andOrderNoBetween(String,String)
+ Criteria andOrderNoNotBetween(String,String)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andBatchNoIsNull()
+ Criteria andBatchNoIsNotNull()
+ Criteria andBatchNoEqualTo(String)
+ Criteria andBatchNoNotEqualTo(String)
+ Criteria andBatchNoGreaterThan(String)
+ Criteria andBatchNoGreaterThanOrEqualTo(String)
+ Criteria andBatchNoLessThan(String)
+ Criteria andBatchNoLessThanOrEqualTo(String)
+ Criteria andBatchNoLike(String)
+ Criteria andBatchNoNotLike(String)
+ Criteria andBatchNoIn(List<String>)
+ Criteria andBatchNoNotIn(List<String>)
+ Criteria andBatchNoBetween(String,String)
+ Criteria andBatchNoNotBetween(String,String)
+ Criteria andLendBatchNoIsNull()
+ Criteria andLendBatchNoIsNotNull()
+ Criteria andLendBatchNoEqualTo(String)
+ Criteria andLendBatchNoNotEqualTo(String)
+ Criteria andLendBatchNoGreaterThan(String)
+ Criteria andLendBatchNoGreaterThanOrEqualTo(String)
+ Criteria andLendBatchNoLessThan(String)
+ Criteria andLendBatchNoLessThanOrEqualTo(String)
+ Criteria andLendBatchNoLike(String)
+ Criteria andLendBatchNoNotLike(String)
+ Criteria andLendBatchNoIn(List<String>)
+ Criteria andLendBatchNoNotIn(List<String>)
+ Criteria andLendBatchNoBetween(String,String)
+ Criteria andLendBatchNoNotBetween(String,String)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andSecondProdCodeIsNull()
+ Criteria andSecondProdCodeIsNotNull()
+ Criteria andSecondProdCodeEqualTo(String)
+ Criteria andSecondProdCodeNotEqualTo(String)
+ Criteria andSecondProdCodeGreaterThan(String)
+ Criteria andSecondProdCodeGreaterThanOrEqualTo(String)
+ Criteria andSecondProdCodeLessThan(String)
+ Criteria andSecondProdCodeLessThanOrEqualTo(String)
+ Criteria andSecondProdCodeLike(String)
+ Criteria andSecondProdCodeNotLike(String)
+ Criteria andSecondProdCodeIn(List<String>)
+ Criteria andSecondProdCodeNotIn(List<String>)
+ Criteria andSecondProdCodeBetween(String,String)
+ Criteria andSecondProdCodeNotBetween(String,String)
+ Criteria andContractNoIsNull()
+ Criteria andContractNoIsNotNull()
+ Criteria andContractNoEqualTo(String)
+ Criteria andContractNoNotEqualTo(String)
+ Criteria andContractNoGreaterThan(String)
+ Criteria andContractNoGreaterThanOrEqualTo(String)
+ Criteria andContractNoLessThan(String)
+ Criteria andContractNoLessThanOrEqualTo(String)
+ Criteria andContractNoLike(String)
+ Criteria andContractNoNotLike(String)
+ Criteria andContractNoIn(List<String>)
+ Criteria andContractNoNotIn(List<String>)
+ Criteria andContractNoBetween(String,String)
+ Criteria andContractNoNotBetween(String,String)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andTermIsNull()
+ Criteria andTermIsNotNull()
+ Criteria andTermEqualTo(String)
+ Criteria andTermNotEqualTo(String)
+ Criteria andTermGreaterThan(String)
+ Criteria andTermGreaterThanOrEqualTo(String)
+ Criteria andTermLessThan(String)
+ Criteria andTermLessThanOrEqualTo(String)
+ Criteria andTermLike(String)
+ Criteria andTermNotLike(String)
+ Criteria andTermIn(List<String>)
+ Criteria andTermNotIn(List<String>)
+ Criteria andTermBetween(String,String)
+ Criteria andTermNotBetween(String,String)
+ Criteria andBillingNoIsNull()
+ Criteria andBillingNoIsNotNull()
+ Criteria andBillingNoEqualTo(String)
+ Criteria andBillingNoNotEqualTo(String)
+ Criteria andBillingNoGreaterThan(String)
+ Criteria andBillingNoGreaterThanOrEqualTo(String)
+ Criteria andBillingNoLessThan(String)
+ Criteria andBillingNoLessThanOrEqualTo(String)
+ Criteria andBillingNoLike(String)
+ Criteria andBillingNoNotLike(String)
+ Criteria andBillingNoIn(List<String>)
+ Criteria andBillingNoNotIn(List<String>)
+ Criteria andBillingNoBetween(String,String)
+ Criteria andBillingNoNotBetween(String,String)
+ Criteria andBusinessTimeIsNull()
+ Criteria andBusinessTimeIsNotNull()
+ Criteria andBusinessTimeEqualTo(Date)
+ Criteria andBusinessTimeNotEqualTo(Date)
+ Criteria andBusinessTimeGreaterThan(Date)
+ Criteria andBusinessTimeGreaterThanOrEqualTo(Date)
+ Criteria andBusinessTimeLessThan(Date)
+ Criteria andBusinessTimeLessThanOrEqualTo(Date)
+ Criteria andBusinessTimeIn(List<Date>)
+ Criteria andBusinessTimeNotIn(List<Date>)
+ Criteria andBusinessTimeBetween(Date,Date)
+ Criteria andBusinessTimeNotBetween(Date,Date)
+ Criteria andDocIdIsNull()
+ Criteria andDocIdIsNotNull()
+ Criteria andDocIdEqualTo(String)
+ Criteria andDocIdNotEqualTo(String)
+ Criteria andDocIdGreaterThan(String)
+ Criteria andDocIdGreaterThanOrEqualTo(String)
+ Criteria andDocIdLessThan(String)
+ Criteria andDocIdLessThanOrEqualTo(String)
+ Criteria andDocIdLike(String)
+ Criteria andDocIdNotLike(String)
+ Criteria andDocIdIn(List<String>)
+ Criteria andDocIdNotIn(List<String>)
+ Criteria andDocIdBetween(String,String)
+ Criteria andDocIdNotBetween(String,String)
+ Criteria andResIdIsNull()
+ Criteria andResIdIsNotNull()
+ Criteria andResIdEqualTo(String)
+ Criteria andResIdNotEqualTo(String)
+ Criteria andResIdGreaterThan(String)
+ Criteria andResIdGreaterThanOrEqualTo(String)
+ Criteria andResIdLessThan(String)
+ Criteria andResIdLessThanOrEqualTo(String)
+ Criteria andResIdLike(String)
+ Criteria andResIdNotLike(String)
+ Criteria andResIdIn(List<String>)
+ Criteria andResIdNotIn(List<String>)
+ Criteria andResIdBetween(String,String)
+ Criteria andResIdNotBetween(String,String)
+ Criteria andLoanStateIsNull()
+ Criteria andLoanStateIsNotNull()
+ Criteria andLoanStateEqualTo(Byte)
+ Criteria andLoanStateNotEqualTo(Byte)
+ Criteria andLoanStateGreaterThan(Byte)
+ Criteria andLoanStateGreaterThanOrEqualTo(Byte)
+ Criteria andLoanStateLessThan(Byte)
+ Criteria andLoanStateLessThanOrEqualTo(Byte)
+ Criteria andLoanStateIn(List<Byte>)
+ Criteria andLoanStateNotIn(List<Byte>)
+ Criteria andLoanStateBetween(Byte,Byte)
+ Criteria andLoanStateNotBetween(Byte,Byte)
+ Criteria andLendAtIsNull()
+ Criteria andLendAtIsNotNull()
+ Criteria andLendAtEqualTo(Date)
+ Criteria andLendAtNotEqualTo(Date)
+ Criteria andLendAtGreaterThan(Date)
+ Criteria andLendAtGreaterThanOrEqualTo(Date)
+ Criteria andLendAtLessThan(Date)
+ Criteria andLendAtLessThanOrEqualTo(Date)
+ Criteria andLendAtIn(List<Date>)
+ Criteria andLendAtNotIn(List<Date>)
+ Criteria andLendAtBetween(Date,Date)
+ Criteria andLendAtNotBetween(Date,Date)
}
class com.welab.moon.model.TbLoanExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.moon.model.TbLoanExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
enum com.welab.moon.enums.TbUserTypeEnum {
+  FIRST_LEVEL
+  SECOND_LEVEL
+  AGENT_USER
+  SECOND_LEVEL_2
+ {static} List<Byte> ALL_FIRST_LEVEL_USER
- byte type
- String desc
}
enum com.welab.moon.enums.credit.TbCreditStatusEnum {
+  ACTIVE
+  FREEZE
+  BLACK
- Byte status
- String enStatusName
- String statusName
+ {static} TbCreditStatusEnum getByStatus(Byte)
}
class com.welab.moon.model.mongo.Doc {
- String id
- Date createdAt
- Date updateAt
}
enum com.welab.moon.enums.TbLendBatchStatusEnum {
+  INIT
+  IN_DISBURSED
+  DISBURSED
+  FAILED
- Integer status
- String desc
}
interface com.welab.moon.mapper.ext.TbConfigExtMapper {
~ List<TbConfigs> findByTypeAndOrgId(String,Long)
~ TbConfigs findByTypeAndOrgIdAndKey(String,Long,String)
}
interface com.welab.moon.app.service.TbUserService {
~ String getKey()
~ TbImportVO doHandle(MultipartFile)
}
class com.welab.moon.test.app.service.hso.HsoImportUserTest {
- ImportTbUserManage importTbUserManage
+ String getCmCode()
+ LinkedHashMap<String,String> head()
+ void importTest()
+ void importTestFiledIsNull()
+ void importTestDuplicate()
+ MultipartFile createMfileByPath(File)
- List<HsoUserImportBO> buildHsoUserImportBO()
}
class com.welab.moon.app.model.traveloka.WorkProfile {
- String occupation
- String employmentStatus
- String companyName
- long monthlySalary
- String industry
- String workPhone
- int yearOfService
- WorkAddress workAddress
}
interface com.welab.moon.app.service.CreateTbLoanByApiService {
~ String getPartner()
~ String createTbLoan(TbLoanDTO)
}
class com.welab.moon.app.manage.ImportTbUserManage {
- GadaUserServiceImportTbUser gadaUserServiceImportTbUser
+ GadaFileUploadCmdExe gadaFileUploadCmdExe
- ImportTbLeve1UserCmdExe importTbLeve1UserCmdExe
+ TbImportVO importTbUser(ImportTbUserDTO)
+ GadaUserCheckVO checkGadauser(MultipartFile)
+ void uploadFile(GadaFileUploadDTO)
+ TbImportVO importTbLeve1User(ImportTbUserDTO)
}
class com.welab.moon.model.bo.ConfirmOrCancelMessageBO {
- List<String> loanNumberList
- Long userId
- Byte loanState
- Date expiredAt
}
class com.welab.moon.facade.gateway.VirtualAccountServiceFacade {
- VirtualAccountService virtualAccountService
- {static} Long VA_ADMIN_ID
+ Response<PageInfo<VirtualAccountDto>> list(VirtualAccountQry)
+ Response<String> createVANumber(CreateVANumberCmd)
+ Response<String> createVANumber(String)
- FundEnum getFundEnum(String)
+ Response<Boolean> virtualAccountUpdateByAccount(VirtualAccountUpdateByAccountCmd)
+ Response<Boolean> virtualAccountUpdateByAccount(VaLoanInfo)
+ Response<Boolean> virtualAccountAdd(VirtualAccountAddCmd)
+ Response<Boolean> vaLoanInfoVirtualAccountAdd(VaLoanInfo)
}
class com.welab.moon.test.app.service.CreditBusiServiceTest {
- CreditBusiService creditBusiService
+ void tbDisbursementReport()
+ void unConfirmTbLoanCancel()
}
interface com.welab.moon.mapper.TbUserMapper {
~ long countByExample(TbUserExample)
~ int deleteByExample(TbUserExample)
~ int deleteByPrimaryKey(Long)
~ int insert(TbUser)
~ int insertSelective(TbUser)
~ List<TbUser> selectByExample(TbUserExample)
~ TbUser selectByPrimaryKey(Long)
~ int updateByExampleSelective(TbUser,TbUserExample)
~ int updateByExample(TbUser,TbUserExample)
~ int updateByPrimaryKeySelective(TbUser)
~ int updateByPrimaryKey(TbUser)
}
class com.welab.moon.facade.marketing.NotificationServiceFacade {
- NotificationService notifationService
- BaseTbUserService baseTbUserService
+ List<NoteTipsBaseDTO> getNewNotification(String,Long,Byte)
- Boolean isPartner(TbUser)
}
abstract class com.welab.moon.app.service.AbstractImportTbUser {
- MongoManager mongoManager
- BaseTbUserService baseTbUserService
- BaseTbCreditUserAccountService baseTbCreditUserAccountService
- JedisCluster jedisCluster
- {static} String TB_LOAN_IMPORT_SWITCH_KEY
+ TbImportVO doHandle(MultipartFile)
+ {abstract}String[] field()
+ RegUserDTO buildRegUserDTO(K,String,Long)
+ void saveTbUserLimit(Long,String,Byte)
+ TbUser buildTbUser(K,String,Long,Long,String)
+ {abstract}List<ImportTbUserBO<K>> parseAndCheckData(MultipartFile)
+ {abstract}V buildTbUserDoc(K)
}
interface com.welab.moon.service.RestoreTbUserService {
~ Response<Void> restoreTbUserAccount(RestoreTbUserAccountDTO)
}
enum com.welab.moon.enums.TbConfigsEnum {
+  PARTNER_BANK_INFO
+  OTP_MAIL_CONFIG
+  BUSINESS_ENTITY
+  COMPANY_LEGALITY
+  EDUCATION
+  GENDER
+  OCCUPATION
+  POSITION
+  WORK_INDUSTRY
+  LOAN_TYPE
+  MARITAL
+  LOAN_PRODUCT
+  RESIDENCE
+  WORK_DOMAIN
- String typeName
- String desc
}
class com.welab.moon.app.base.BaseTbUserService {
- TbUserMapper tbUserMapper
- TbUserExtMapper tbUserExtMapper
+ List<TbUser> selectList(TbUserQryDTO)
+ Long count(TbUserQryDTO)
+ TbUser selectTbUserByPartnerUserNo(String,String)
+ List<TbUser> selectTbUserByPartnerUserNo(String,List<String>)
+ List<TbUser> selectTbUserByPartnerUserNo(String,List<String>,TbUserTypeEnum)
+ List<TbUser> selectTbUserByMobiles(String,List<String>)
+ TbUser selectTbUserByMobile(String,String)
+ TbUser selectTbUser(String,String)
+ TbUser selectTbUserByNik(String,String)
+ List<TbUser> selectTbUserByUserId(List<Long>)
+ void save(TbUser)
+ void update(TbUser)
+ TbUser findByUserId(Long)
+ TbUser findUserByNik(String)
+ List<TbUser> selectTbUserByPartnerUserNos(Long,List<String>)
+ List<TbUser> selectTbUser(List<Long>)
+ Map<Long,TbUser> selectTbUserMap(List<Long>)
+ List<TbUser> selectByPartnerAndParentUserId(String,Long)
+ List<TbUserCreditAmountDTO> queryTbUserCreditAmount(List<Long>,String,String)
+ List<TbUser> findByPartner(String)
+ List<TbUser> findByExample(UpdateUserInfoDTO)
+ PageInfo<TbUser> findByExample(TbUserQryVO)
+ List<String> selectTbUserNamesByParentUserId(Long)
+ List<TbUser> findByPartnerAndUserType(String,Byte)
}
class com.welab.moon.facade.marketing.BackstageConfigServiceFacade {
- BackstageConfigService backstageConfigService
- JedisCluster jedisCluster
- {static} String VAT_KEY
- Map<String,Object> getVatConfig()
+ Map<String,BigDecimal> getVatAndWht()
+ Map<String,Long> getWhtFundInfo()
+ BigDecimal getVatRate()
}
class com.welab.moon.app.service.agreement.expiredstrategy.CancelAndNotifyPartnerSigningAgreementService {
- BaseTbLoanService baseTbLoanService
- UnFreezeTbUserAccountBalanceCmdExe unFreezeTbUserAccountBalanceCmdExe
- TbService tbService
+ String strategy()
+ void execute(List<TbAgreementDoc>)
- Map<String,TbLoan> getTbLoanMap(List<TbAgreementDoc>)
}
class com.welab.moon.model.mongo.tbuser.gada.apiuser.BaseGadaApiUserDoc {
- Long userId
- String userType
- Long selfieImageId
- String storeCode
- String storeAddress
- String storeWard
- String storeSubDistrict
- String storeDistrict
- String storeProvince
- String storeCity
- String storeZipCode
- Long frontSideOfTheBuildingSelfieImageId
- Long businessProductSelfieImageId
- String emergencyContact1
- String emergencyContact1Name
- String emergencyContact2
- String emergencyContact2Name
}
class com.welab.moon.model.dto.RepaymentListQry {
- String LoanNumbers
- Long userId
}
class com.welab.moon.model.dto.TbLoanStateSyncDTO {
- String loanNumber
- Byte lendState
- Byte repaymentState
}
class com.welab.moon.service.impl.TbUserAccountInfoServiceImpl {
- BaseTbUserService baseTbUserService
- BaseTbConfigsService baseTbConfigsService
+ List<TbBankAccountInfoVO> queryBankAccountInfo(List<Long>)
}
class com.welab.moon.app.model.traveloka.Loans {
- String orderNo
- Date disbursedAt
- String tenor
- String customerSegment
- String partnerProductType
- Date interestRate
- Date dueDatePayment
- List<Dues> dues
- String contract
}
class com.welab.moon.app.manage.TbLendBatchManage {
- BaseTbLendBatchService baseTbLendBatchService
- JedisCluster jedisCluster
+ String createOrGetBatchNo(String,Date,Long)
- String getBatchNo(String,Date,Long)
}
class com.welab.moon.model.TbTravelokaModifyLogExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> TbTravelokaModifyLogExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.moon.model.TbTravelokaModifyLogExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andNameIsNull()
+ Criteria andNameIsNotNull()
+ Criteria andNameEqualTo(String)
+ Criteria andNameNotEqualTo(String)
+ Criteria andNameGreaterThan(String)
+ Criteria andNameGreaterThanOrEqualTo(String)
+ Criteria andNameLessThan(String)
+ Criteria andNameLessThanOrEqualTo(String)
+ Criteria andNameLike(String)
+ Criteria andNameNotLike(String)
+ Criteria andNameIn(List<String>)
+ Criteria andNameNotIn(List<String>)
+ Criteria andNameBetween(String,String)
+ Criteria andNameNotBetween(String,String)
+ Criteria andMobileIsNull()
+ Criteria andMobileIsNotNull()
+ Criteria andMobileEqualTo(String)
+ Criteria andMobileNotEqualTo(String)
+ Criteria andMobileGreaterThan(String)
+ Criteria andMobileGreaterThanOrEqualTo(String)
+ Criteria andMobileLessThan(String)
+ Criteria andMobileLessThanOrEqualTo(String)
+ Criteria andMobileLike(String)
+ Criteria andMobileNotLike(String)
+ Criteria andMobileIn(List<String>)
+ Criteria andMobileNotIn(List<String>)
+ Criteria andMobileBetween(String,String)
+ Criteria andMobileNotBetween(String,String)
+ Criteria andNikIsNull()
+ Criteria andNikIsNotNull()
+ Criteria andNikEqualTo(String)
+ Criteria andNikNotEqualTo(String)
+ Criteria andNikGreaterThan(String)
+ Criteria andNikGreaterThanOrEqualTo(String)
+ Criteria andNikLessThan(String)
+ Criteria andNikLessThanOrEqualTo(String)
+ Criteria andNikLike(String)
+ Criteria andNikNotLike(String)
+ Criteria andNikIn(List<String>)
+ Criteria andNikNotIn(List<String>)
+ Criteria andNikBetween(String,String)
+ Criteria andNikNotBetween(String,String)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(String)
+ Criteria andTypeNotEqualTo(String)
+ Criteria andTypeGreaterThan(String)
+ Criteria andTypeGreaterThanOrEqualTo(String)
+ Criteria andTypeLessThan(String)
+ Criteria andTypeLessThanOrEqualTo(String)
+ Criteria andTypeLike(String)
+ Criteria andTypeNotLike(String)
+ Criteria andTypeIn(List<String>)
+ Criteria andTypeNotIn(List<String>)
+ Criteria andTypeBetween(String,String)
+ Criteria andTypeNotBetween(String,String)
+ Criteria andBeforeDataIsNull()
+ Criteria andBeforeDataIsNotNull()
+ Criteria andBeforeDataEqualTo(String)
+ Criteria andBeforeDataNotEqualTo(String)
+ Criteria andBeforeDataGreaterThan(String)
+ Criteria andBeforeDataGreaterThanOrEqualTo(String)
+ Criteria andBeforeDataLessThan(String)
+ Criteria andBeforeDataLessThanOrEqualTo(String)
+ Criteria andBeforeDataLike(String)
+ Criteria andBeforeDataNotLike(String)
+ Criteria andBeforeDataIn(List<String>)
+ Criteria andBeforeDataNotIn(List<String>)
+ Criteria andBeforeDataBetween(String,String)
+ Criteria andBeforeDataNotBetween(String,String)
+ Criteria andAfterDataIsNull()
+ Criteria andAfterDataIsNotNull()
+ Criteria andAfterDataEqualTo(String)
+ Criteria andAfterDataNotEqualTo(String)
+ Criteria andAfterDataGreaterThan(String)
+ Criteria andAfterDataGreaterThanOrEqualTo(String)
+ Criteria andAfterDataLessThan(String)
+ Criteria andAfterDataLessThanOrEqualTo(String)
+ Criteria andAfterDataLike(String)
+ Criteria andAfterDataNotLike(String)
+ Criteria andAfterDataIn(List<String>)
+ Criteria andAfterDataNotIn(List<String>)
+ Criteria andAfterDataBetween(String,String)
+ Criteria andAfterDataNotBetween(String,String)
+ Criteria andModifyAtIsNull()
+ Criteria andModifyAtIsNotNull()
+ Criteria andModifyAtEqualTo(Date)
+ Criteria andModifyAtNotEqualTo(Date)
+ Criteria andModifyAtGreaterThan(Date)
+ Criteria andModifyAtGreaterThanOrEqualTo(Date)
+ Criteria andModifyAtLessThan(Date)
+ Criteria andModifyAtLessThanOrEqualTo(Date)
+ Criteria andModifyAtIn(List<Date>)
+ Criteria andModifyAtNotIn(List<Date>)
+ Criteria andModifyAtBetween(Date,Date)
+ Criteria andModifyAtNotBetween(Date,Date)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.moon.model.TbTravelokaModifyLogExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.moon.model.TbTravelokaModifyLogExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.moon.model.TbTravelokaModifyLog {
- Long id
- Long userId
- String name
- String mobile
- String nik
- String type
- String beforeData
- String afterData
- Date modifyAt
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ String getName()
+ void setName(String)
+ String getMobile()
+ void setMobile(String)
+ String getNik()
+ void setNik(String)
+ String getType()
+ void setType(String)
+ String getBeforeData()
+ void setBeforeData(String)
+ String getAfterData()
+ void setAfterData(String)
+ Date getModifyAt()
+ void setModifyAt(Date)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.moon.model.bo.BusinessRegBO {
- String establishment
- String lastContract
+ {static} LinkedHashMap<String,String> head()
}
interface com.welab.moon.mapper.ext.TbRepaymentMapper {
~ List<TbRepaymentVO> list(TbRepaymentQry)
~ List<TbRepaymentVO> findRepaymenytList(TbRepaymentQry)
~ List<TbPendRepayVO> findPendRepayList(TbLoanPendRepayQry)
}
class com.welab.moon.config.Swagger2Config {
+ Docket createRestApi()
- List<Parameter> buildHeader()
- ApiInfo apiInfo()
}
class com.welab.moon.service.impl.GadaServiceImpl {
- GadaSubmitApplyCreditUserInfoCmdExe gadaSubmitApplyCreditUserInfoCmdExe
- GadaUpdateApplyCreditUserInfoCmdExe gadaUpdateApplyCreditUserInfoCmdExe
- GadaApplyCreditUserInfoQryExe gadaApplyCreditUserInfoQryExe
- BaseTbCreditApplyService baseTbCreditApplyService
- BaseTbConfigsService baseTbConfigsService
- BaseTbUserService baseTbUserService
- MongoManager mongoManager
+ void submitApplyCreditUserInfo(GadaApplyCreditUserInfoDTO)
+ Response<GadaUserInfoDTO> getApplyCreditUserInfo(Long)
+ void updateApplyCreditUserInfo(GadaUserInfoDTO)
+ Response<PreApprovalInfoDTO> queryPreApprovalInfo(String)
+ Response<List<TbConfigDTO>> queryDicConfigs(List<String>)
+ void updateApplyInfoByApplyCode(UpdateTbCreditApplyDTO)
+ List<TbUserVO> getListUserGadaByEmail(String)
}
class com.welab.moon.job.VaLoanInfoInitFeeJob {
- VaLoanInfoService vaLoanInfoService
- BaseVaLoanInfoService baseVaLoanInfoService
- BackstageConfigServiceFacade backstageConfigServiceFacade
+ void execute(ShardingContext)
}
class com.welab.moon.model.TbConfirmLoanTriggerExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> TbConfirmLoanTriggerExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.moon.model.TbConfirmLoanTriggerExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andPartnerIsNull()
+ Criteria andPartnerIsNotNull()
+ Criteria andPartnerEqualTo(String)
+ Criteria andPartnerNotEqualTo(String)
+ Criteria andPartnerGreaterThan(String)
+ Criteria andPartnerGreaterThanOrEqualTo(String)
+ Criteria andPartnerLessThan(String)
+ Criteria andPartnerLessThanOrEqualTo(String)
+ Criteria andPartnerLike(String)
+ Criteria andPartnerNotLike(String)
+ Criteria andPartnerIn(List<String>)
+ Criteria andPartnerNotIn(List<String>)
+ Criteria andPartnerBetween(String,String)
+ Criteria andPartnerNotBetween(String,String)
+ Criteria andLoanNumberIsNull()
+ Criteria andLoanNumberIsNotNull()
+ Criteria andLoanNumberEqualTo(String)
+ Criteria andLoanNumberNotEqualTo(String)
+ Criteria andLoanNumberGreaterThan(String)
+ Criteria andLoanNumberGreaterThanOrEqualTo(String)
+ Criteria andLoanNumberLessThan(String)
+ Criteria andLoanNumberLessThanOrEqualTo(String)
+ Criteria andLoanNumberLike(String)
+ Criteria andLoanNumberNotLike(String)
+ Criteria andLoanNumberIn(List<String>)
+ Criteria andLoanNumberNotIn(List<String>)
+ Criteria andLoanNumberBetween(String,String)
+ Criteria andLoanNumberNotBetween(String,String)
+ Criteria andTriggerTypeIsNull()
+ Criteria andTriggerTypeIsNotNull()
+ Criteria andTriggerTypeEqualTo(Byte)
+ Criteria andTriggerTypeNotEqualTo(Byte)
+ Criteria andTriggerTypeGreaterThan(Byte)
+ Criteria andTriggerTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTriggerTypeLessThan(Byte)
+ Criteria andTriggerTypeLessThanOrEqualTo(Byte)
+ Criteria andTriggerTypeIn(List<Byte>)
+ Criteria andTriggerTypeNotIn(List<Byte>)
+ Criteria andTriggerTypeBetween(Byte,Byte)
+ Criteria andTriggerTypeNotBetween(Byte,Byte)
+ Criteria andDescriptionIsNull()
+ Criteria andDescriptionIsNotNull()
+ Criteria andDescriptionEqualTo(String)
+ Criteria andDescriptionNotEqualTo(String)
+ Criteria andDescriptionGreaterThan(String)
+ Criteria andDescriptionGreaterThanOrEqualTo(String)
+ Criteria andDescriptionLessThan(String)
+ Criteria andDescriptionLessThanOrEqualTo(String)
+ Criteria andDescriptionLike(String)
+ Criteria andDescriptionNotLike(String)
+ Criteria andDescriptionIn(List<String>)
+ Criteria andDescriptionNotIn(List<String>)
+ Criteria andDescriptionBetween(String,String)
+ Criteria andDescriptionNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andOperatorUserIdIsNull()
+ Criteria andOperatorUserIdIsNotNull()
+ Criteria andOperatorUserIdEqualTo(Long)
+ Criteria andOperatorUserIdNotEqualTo(Long)
+ Criteria andOperatorUserIdGreaterThan(Long)
+ Criteria andOperatorUserIdGreaterThanOrEqualTo(Long)
+ Criteria andOperatorUserIdLessThan(Long)
+ Criteria andOperatorUserIdLessThanOrEqualTo(Long)
+ Criteria andOperatorUserIdIn(List<Long>)
+ Criteria andOperatorUserIdNotIn(List<Long>)
+ Criteria andOperatorUserIdBetween(Long,Long)
+ Criteria andOperatorUserIdNotBetween(Long,Long)
+ Criteria andExpiredAtIsNull()
+ Criteria andExpiredAtIsNotNull()
+ Criteria andExpiredAtEqualTo(Date)
+ Criteria andExpiredAtNotEqualTo(Date)
+ Criteria andExpiredAtGreaterThan(Date)
+ Criteria andExpiredAtGreaterThanOrEqualTo(Date)
+ Criteria andExpiredAtLessThan(Date)
+ Criteria andExpiredAtLessThanOrEqualTo(Date)
+ Criteria andExpiredAtIn(List<Date>)
+ Criteria andExpiredAtNotIn(List<Date>)
+ Criteria andExpiredAtBetween(Date,Date)
+ Criteria andExpiredAtNotBetween(Date,Date)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.moon.model.TbConfirmLoanTriggerExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.moon.model.TbConfirmLoanTriggerExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.moon.test.app.service.VaLoanInfoServiceTest {
- VaLoanInfoService vaLoanInfoService
- VirtualAccountServiceFacade virtualAccountServiceFacade
- {static} Long ID
- {static} Long FUND_ID
- Long getWhtFundId()
+ void createVaLoanNow()
+ void createVaLoanFuture()
+ void createVaLoanPast()
+ void createVaLoanOverdue()
+ void test_01_createVaLoanOverdueFull()
+ void getPageVaLoanInfo()
+ void test_02_loanRepayment()
}
class com.welab.moon.model.dto.TbUserCreditAmountDTO {
- Long userId
- String name
- String mobile
- String email
- String docId
- String partnerUserNo
- Long useMoney
- Long residueMoney
- Long sumMoney
}
abstract class com.welab.moon.app.service.confirmloan.AbstractTbConfirmLoanService {
# BaseTbConfirmLoanTriggerService baseTbConfirmLoanTriggerService
+ {abstract}String strategy()
+ {abstract}void execute(List<TbConfirmLoanTrigger>)
# TbUnconfirmLoanTriggerReq getTbUnconfirmLoanTriggerReq(List<TbConfirmLoanTrigger>)
}
class com.welab.moon.app.service.confirmloan.AbstractTbConfirmLoanService$TbUnconfirmLoanTriggerReq {
- List<Long> pkIdList
- List<String> loanNumberList
}
class com.welab.moon.model.dto.traveloka.ContactList {
- String mobile
- String name
- String relationship
}
class com.welab.moon.model.vo.CancelLoanInfoQryVO {
- Date beginDate
- Date endDate
- String orderNo
- Long operatorUserId
- String partner
- Byte triggerType
- List<Long> operatorUserIds
}
enum com.welab.moon.enums.SourceIdEnum {
+  AHASS_UNDER_HSO
+  AHASS_UNDER_TRIO
+  GUDANGADA
- String partner
- String sourceId
+ {static} String getByPartner(String)
}
class com.welab.moon.model.mongo.tbuser.BaseUserDoc {
- String agreementNo
- String agreementDate
- String bankAccount
- String storeName
- String address
}
class com.welab.moon.app.service.disbursement.job.D0FixedAccountDisbursementJob {
+ String strategy()
# BatchLendQryParam buildBatchLendQryParam(DisbursementContext)
}
class com.welab.moon.service.impl.TravelokaServiceImpl {
- BaseTbUserService baseTbUserService
- MongoManager mongoManager
- CreateTravelokaTbLoanCmdExe createTravelokaTbLoanCmdExe
- BaseTbLoanService baseTbLoanService
- TravelokaRepaymenCmdExe travelokaRepaymenCmdExe
+ TravelokaUserInfoVO findByUserId(Long)
+ TbUserVO findTbUserByNik(String)
+ List<TravelokaBaseUserInfoVO> findByUserIdList(List<Long>)
+ Response<List<CreateTravelokaVO>> createTraveloka(List<TravelokaDTO>)
+ TravelokaDuesVO findByLoanNumber(String)
+ Response repayment(List<TravelokaRepaymentDTO>)
+ Response<List<TravelokaRepaymentDTO>> queryRepaymentTrack(List<String>)
- List<TravelokaBaseUserInfoVO> buildTravelokaBaseUserInfoVO(List<TbUser>)
}
class com.welab.moon.mq.listener.TbRepaymentListener {
- TbRepaymentNotifyCmdExe tbRepaymentNotifyCmdExe
+ void onMessage(Message)
}
class com.welab.moon.model.dto.traveloka.Loans {
- String orderNo
- Date disbursedAt
- String tenor
- String customerSegment
- String partnerProductType
- String interestRate
- Date dueDatePayment
- List<Dues> dues
- String contract
}
class com.welab.moon.model.dto.PageTbAgreementParamDTO {
- String partner
- String mobile
- String tbLoanNumber
- int pageIndex
- int pageSize
}
class com.welab.moon.test.job.HsoModeDisbursementJobTest {
- HsoModeDisbursementJob hsoModeDisbursementJob
+ void testDisbursement()
}
class com.welab.moon.test.app.service.agreement.TbAgreementTest {
- TbAgreementService tbAgreementService
- TbSignUpKeyManager tbSignUpKeyManager
- BaseTbUserService baseTbUserService
- BaseTbLoanService baseTbLoanService
+ void agreementFileList()
+ void agreementFileListGroup()
+ void verifySignUp()
}
class com.welab.moon.controller.TbCancelLoanController {
- TbUnConfirmLoanTriggerService tbUnConfirmLoanTriggerService
+ Response<CancelLoanResultVO> importCancelLoan(Long,MultipartFile,String)
+ Response<PageInfo<CancelLoanInfoVO>> query(Long,CancelLoanInfoQryVO,String)
}
class com.welab.moon.app.command.traveloka.TravelokaUserInfoModifyCmdExe {
- BaseTbTravelokaModifyLogService baseTbTravelokaModifyLogService
+ void doHandel(TravelokaDTO,TravelokaPaylateUserDoc,TbUser)
- void saveWorkAndUserModifyLog(Object,Object,TbUser,String)
- void saveContactModifyLog(List<ContactList>,List<ContactList>,TbUser,String)
- void diffField(Object,Object,Map<String,Object>,Map<String,Object>)
}
class com.welab.moon.app.service.agreement.expiredstrategy.AutoSigningAgreementService {
+ String strategy()
+ void execute(List<TbAgreementDoc>)
- void autoSigned(List<Long>)
}
class com.welab.moon.utils.PageUtil {
+ {static} PageInfo<TbLoansVO> pageHelper(List<TbLoansVO>,Integer,Integer)
}
class com.welab.moon.app.model.traveloka.bo.disbursement.BatchLendQryParam {
- String partner
- Date startTime
- Date endTime
}
class com.welab.moon.model.mongo.tbreg.PersonalRegDoc {
- BigDecimal loanAmount
- Long ktpDocId
- String nik
- String name
- String fullName
- String education
- String gender
- String birthPlace
- Integer birthday
- String npwp
- Long npwpDocId
- String province
- String city
- String area
- String village
- String streetLine
- String zipCode
- String currentAddress
- String email
- String maritalStatus
- Long familyPhotoCardDocId
- Integer familyMembersCount
- String spouseNik
- String spouseName
- Integer spouseBirthday
- String momSurname
- String homeOwnership
- String occupation
- String companyName
- String workIndustry
- String companyAddress
- BigDecimal annualNetIncome
- Long buildingFrontSelfieDocId
- Long buildingFrontRightDocId
- Long buildingFrontLeftDocId
- Long businessProductsSelfieDocId
- String bankCode
- String bankAccount
- String bankAccountHolderName
- String emergencyContact1
- String emergencyContact1Relationship
- String emergencyContact1Address
- String emergencyContact2
- String emergencyContact2Relationship
- String emergencyContact2Address
}
class com.welab.moon.test.job.TbAgreementDocExpiredJobTest {
- TbAgreementDocExpiredJob tbAgreementDocExpiredJob
+ void execute()
}
class com.welab.moon.facade.collect.CollectEventServiceFacade {
- CollectEventService collectEventService
+ void addCollectEvents(CollectEventDTO)
}
class com.welab.moon.test.app.service.daya.MessagePushTest {
- DayaConfirmOrCancelMessageCmdExe dayaConfirmOrCancelMessageCmdExe
+ void messageTest()
}
class com.welab.moon.exception.ResponsCodeType {
+ {static} String USER_IN_EXISTENCE
}
enum com.welab.moon.exception.ExternalResponsCodeTypeEnum {
+  USER_IN_EXISTENCE
- Integer code
- String message
- <<Create>> ExternalResponsCodeTypeEnum(Integer,String)
+ Integer getCode()
+ String getMessage()
}


com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.HomePageServiceTest
java.io.Serializable <|.. com.welab.moon.model.dto.gada.PreApprovalInfoDTO
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.TbAgreementTest
java.io.Serializable <|.. com.welab.moon.model.dto.gada.apply.UpdateTbCreditApplyDTO
com.welab.moon.service.RestoreTbUserService <|.. com.welab.moon.service.impl.RestoreTbUserServiceImpl
java.io.Serializable <|.. com.welab.moon.model.vo.UserPartnerInfoVO
java.io.Serializable <|.. com.welab.moon.model.dto.gada.apply.BusinessProfileDTO
com.welab.moon.app.service.AbstractTbLoanImport <|-- com.welab.moon.app.service.credit.trio.TrioLoanImportService
java.io.Serializable <|.. com.welab.moon.model.dto.TbAgreementDocDTO
com.welab.moon.model.mongo.Doc <|-- com.welab.moon.model.mongo.TravelokaTbLoanDoc
java.io.Serializable <|.. com.welab.moon.model.dto.ConfirmLoanDTO
com.welab.moon.model.mongo.tbuser.TbUserDoc <|-- com.welab.moon.model.mongo.tbuser.TravelokaPaylateUserDoc
com.welab.moon.config.BaseConfig <|-- com.welab.moon.config.DisbursementJobConfig
java.io.Serializable <|.. com.welab.moon.model.dto.TbCreditUserAccountInfoDTO
com.welab.moon.model.TbCreditUserAccountLogExample +.. com.welab.moon.model.TbCreditUserAccountLogExample$GeneratedCriteria
com.welab.moon.model.TbCreditUserAccountLogExample +.. com.welab.moon.model.TbCreditUserAccountLogExample$Criteria
com.welab.moon.model.GeneratedCriteria <|-- com.welab.moon.model.TbCreditUserAccountLogExample$Criteria
com.welab.moon.model.TbCreditUserAccountLogExample +.. com.welab.moon.model.TbCreditUserAccountLogExample$Criterion
com.welab.moon.app.service.AbstractCreateTbLoanByApi <|-- com.welab.moon.app.command.CreateGadaTbLoanCmdExe
java.io.Serializable <|.. com.welab.moon.model.dto.GadaDetail
java.io.Serializable <|.. com.welab.moon.model.ext.TbLoanExt
com.welab.moon.test.BaseEnv <|-- com.welab.moon.test.app.service.gada.UpdateGadaCity
com.welab.moon.mq.RabbitConfiguration +.. com.welab.moon.mq.RabbitConfiguration$QueueConstants
com.welab.moon.mq.RabbitConfiguration +.. com.welab.moon.mq.RabbitConfiguration$ExchangeConstants
com.welab.moon.mapper.TbUserMapper <|-- com.welab.moon.mapper.ext.TbUserExtMapper
java.io.Serializable <|.. com.welab.moon.model.dto.gada.query.GadaUserInfoDTO
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.trio.TrioImportUserTest
java.io.Serializable <|.. com.welab.moon.model.dto.RestoreTbUserAccountDTO
java.io.Serializable <|.. com.welab.moon.model.dto.traveloka.Dues
com.welab.moon.model.bo.BaseImportTbUserBO <|-- com.welab.moon.model.bo.TokoImportTbUserBO
com.welab.moon.app.service.AbstractExcelEmailReport <|-- com.welab.moon.app.command.credit.gada.GadaCreditApplyCmdExe
com.welab.moon.model.mongo.Doc <|-- com.welab.moon.model.mongo.TbLoanDoc
com.welab.moon.model.mongo.tbuser.BaseUserDoc <|-- com.welab.moon.model.mongo.tbuser.GadaUserDoc
com.welab.moon.config.BaseConfig <|-- com.welab.moon.config.TbDisbursementReportConfig
com.welab.moon.model.TbConfigsExample +.. com.welab.moon.model.TbConfigsExample$GeneratedCriteria
com.welab.moon.model.TbConfigsExample +.. com.welab.moon.model.TbConfigsExample$Criteria
com.welab.moon.model.GeneratedCriteria <|-- com.welab.moon.model.TbConfigsExample$Criteria
com.welab.moon.model.TbConfigsExample +.. com.welab.moon.model.TbConfigsExample$Criterion
com.welab.moon.app.service.TbLoanService <|.. com.welab.moon.app.service.credit.hso.HsoTbLoanService
com.welab.moon.app.service.AbstractTbLoans <|-- com.welab.moon.app.service.credit.hso.HsoTbLoanService
java.io.Serializable <|.. com.welab.moon.model.vo.TbLoansInfoVO
com.welab.moon.model.dto.PageQueryDTO <|-- com.welab.moon.model.dto.VaLoanInfoQueryDTO
com.welab.moon.model.vo.user.UserLevel1InfoVO <|-- com.welab.moon.model.vo.user.UpdateUserLevel1InfoVO
org.springframework.web.filter.OncePerRequestFilter <|-- com.welab.moon.filter.LogFilter
com.welab.moon.model.mongo.tbuser.TbUserDoc <|-- com.welab.moon.model.mongo.tbuser.TokoUserDoc
com.welab.moon.app.base.BaseTbUserDocService +.. com.welab.moon.app.base.BaseTbUserDocService$TbUserDetail
com.welab.moon.app.base.TbUser <|-- com.welab.moon.app.base.BaseTbUserDocService$TbUserDetail
com.welab.moon.model.mongo.tbuser.BaseUserDoc <|-- com.welab.moon.model.mongo.tbuser.SmpUserDoc
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.daya.DayaImportUserTest
com.welab.moon.app.service.TbLoanImportService <|.. com.welab.moon.app.service.AbstractTbLoanImport
com.welab.moon.model.bo.PageQryBO <|-- com.welab.moon.model.vo.user.TbUserQryVO
com.welab.sea.util.dto.PageQuery <|-- com.welab.moon.model.vo.AgreementFileListDTO
com.welab.moon.config.BaseConfig <|-- com.welab.moon.config.credit.ProductConfig
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.traveloka.TravelokaDisbursementNotifyTest
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.TbCreditLimitTest
com.welab.moon.model.TbUserAgentRelExample +.. com.welab.moon.model.TbUserAgentRelExample$GeneratedCriteria
com.welab.moon.model.TbUserAgentRelExample +.. com.welab.moon.model.TbUserAgentRelExample$Criteria
com.welab.moon.model.GeneratedCriteria <|-- com.welab.moon.model.TbUserAgentRelExample$Criteria
com.welab.moon.model.TbUserAgentRelExample +.. com.welab.moon.model.TbUserAgentRelExample$Criterion
java.io.Serializable <|.. com.welab.moon.model.vo.TrioCheckResultVO
java.io.Serializable <|.. com.welab.moon.model.dto.TbLoanDTO
com.welab.moon.app.service.AbstractImportTbUser <|-- com.welab.moon.app.service.credit.smp.SmpUserImportService
com.welab.moon.common.Urls +.. com.welab.moon.common.Urls$Home
com.welab.moon.common.Urls +.. com.welab.moon.common.Urls$User
com.welab.moon.common.Urls +.. com.welab.moon.common.Urls$Loan
com.welab.moon.common.Urls +.. com.welab.moon.common.Urls$Agreement
com.welab.moon.common.Urls +.. com.welab.moon.common.Urls$Credit
com.welab.moon.common.Urls +.. com.welab.moon.common.Urls$Config
com.welab.moon.common.Urls +.. com.welab.moon.common.Urls$VaLoanInfo
com.welab.moon.common.Urls +.. com.welab.moon.common.Urls$SmsMessage
com.welab.moon.common.Urls +.. com.welab.moon.common.Urls$TbCancelLoan
com.welab.moon.common.Urls +.. com.welab.moon.common.Urls$TbReg
com.welab.moon.common.Urls +.. com.welab.moon.common.Urls$TbCreditApply
java.io.Serializable <|.. com.welab.moon.model.vo.CreateTravelokaVO
java.io.Serializable <|.. com.welab.moon.model.vo.TravelokaBaseUserInfoVO
com.welab.moon.model.TbUser <|-- com.welab.moon.model.bo.TbUserDetailBO
com.welab.moon.mapper.TbAgreementDocMapper <|-- com.welab.moon.mapper.ext.TbAgreementDocExtMapper
com.welab.moon.mapper.TbCreditUserAccountMapper <|-- com.welab.moon.mapper.ext.TbCreditUserAccountExtMapper
com.welab.moon.utils.StringUtils <|-- com.welab.moon.utils.StringUtils
java.io.Serializable <|.. com.welab.moon.model.dto.traveloka.TravelokaRepaymentDTO
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.hso.HsoImportLoanTest
com.welab.moon.model.mongo.tbuser.BaseUserDoc <|-- com.welab.moon.model.mongo.tbuser.HsoUserDoc
com.welab.moon.model.mongo.tbuser.HsoUserDoc +.. com.welab.moon.model.mongo.tbuser.HsoUserDoc$SalesInfo
com.welab.moon.app.service.AbstractImportTbUser <|-- com.welab.moon.app.service.credit.hso.HsoUserImportService
java.io.Serializable <|.. com.welab.moon.model.dto.DeductionTbUserAccountDTO
java.io.Serializable <|.. com.welab.moon.model.dto.TbConfigDTO
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.hso.TbDisbursementJobTest
com.welab.moon.app.service.disbursement.job.DayaModeDisbursementJob <|-- com.welab.moon.app.service.disbursement.job.TrioModeDisbursementJob
java.io.Serializable <|.. com.welab.moon.model.vo.TbUserDocVO
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.mq.TbDisbursementNotifyTest
java.io.Serializable <|.. com.welab.moon.model.vo.TbUserVO
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.job.GadaStatisticsReportJobTest
com.welab.moon.model.bo.credit.BaseTbUserAccountTransBO <|-- com.welab.moon.model.bo.credit.DeductionTbUserAccountBO
com.welab.moon.model.mongo.TbLoanDoc <|-- com.welab.moon.model.mongo.SmpTbLoanDoc
com.welab.moon.model.vo.TbLoansVO <|-- com.welab.moon.model.vo.HsoLoansVO
com.welab.moon.app.service.disbursement.email.AbstractTbDisbursementEmailReportTemplateService <|-- com.welab.moon.app.service.disbursement.email.SmpDisbursementEmailReportTemplateService
com.welab.moon.app.service.disbursement.email.SmpDisbursementEmailReportTemplateService +.. com.welab.moon.app.service.disbursement.email.SmpDisbursementEmailReportTemplateService$SmpDisbursementLoan
com.welab.moon.app.service.disbursement.email.TbDisbursementReportLoan <|-- com.welab.moon.app.service.disbursement.email.SmpDisbursementEmailReportTemplateService$SmpDisbursementLoan
com.welab.moon.model.bo.PageQryBO <|-- com.welab.moon.model.vo.credit.apply.ApplyQryVO
java.io.Serializable <|.. com.welab.moon.model.dto.gada.apply.GadaApplyCreditUserInfoDTO
com.welab.moon.app.service.TbLoanService <|.. com.welab.moon.app.service.credit.gada.GadaTbLoanService
com.welab.moon.app.service.AbstractTbLoans <|-- com.welab.moon.app.service.credit.gada.GadaTbLoanService
com.welab.moon.app.service.disbursement.email.AbstractTbDisbursementEmailReportTemplateService <|-- com.welab.moon.app.service.disbursement.email.DayaDisbursementEmailReportTemplateService
com.welab.moon.app.service.disbursement.email.DayaDisbursementEmailReportTemplateService +.. com.welab.moon.app.service.disbursement.email.DayaDisbursementEmailReportTemplateService$DayaDisbursementLoan
com.welab.moon.app.service.disbursement.email.TbDisbursementReportLoan <|-- com.welab.moon.app.service.disbursement.email.DayaDisbursementEmailReportTemplateService$DayaDisbursementLoan
com.welab.loan.finance.dto.PageDto <|-- com.welab.moon.model.dto.HsoLimitDTO
com.welab.moon.app.service.AbstractTbLoanImport <|-- com.welab.moon.app.service.credit.hso.HsoLoanImportService
com.welab.moon.app.service.credit.hso.HsoLoanImportService +.. com.welab.moon.app.service.credit.hso.HsoLoanImportService$HsoImportLoanBO
com.welab.moon.config.BaseConfig <|-- com.welab.moon.config.credit.NoticeDpdConfig
com.welab.moon.app.service.disbursement.email.AbstractTbDisbursementEmailReportTemplateService <|-- com.welab.moon.app.service.disbursement.email.TravelokaDisbursementEmailReportTemplate
com.welab.moon.app.service.disbursement.email.TravelokaDisbursementEmailReportTemplate +.. com.welab.moon.app.service.disbursement.email.TravelokaDisbursementEmailReportTemplate$TravelokaDisbursementLoan
com.welab.moon.app.service.disbursement.email.TbDisbursementReportLoan <|-- com.welab.moon.app.service.disbursement.email.TravelokaDisbursementEmailReportTemplate$TravelokaDisbursementLoan
com.welab.moon.service.ITbCreditUserAccountService <|.. com.welab.moon.service.impl.TbCreditUserAccountServiceImpl
com.welab.moon.model.TbCreditUserAccountExample +.. com.welab.moon.model.TbCreditUserAccountExample$GeneratedCriteria
com.welab.moon.model.TbCreditUserAccountExample +.. com.welab.moon.model.TbCreditUserAccountExample$Criteria
com.welab.moon.model.GeneratedCriteria <|-- com.welab.moon.model.TbCreditUserAccountExample$Criteria
com.welab.moon.model.TbCreditUserAccountExample +.. com.welab.moon.model.TbCreditUserAccountExample$Criterion
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.moon.job.TbDisbursementReportJob
com.welab.moon.app.service.disbursement.email.AbstractTbDisbursementEmailReportTemplateService <|-- com.welab.moon.app.service.disbursement.email.TrioDisbursementEmailReportTemplateService
com.welab.moon.app.service.disbursement.email.TrioDisbursementEmailReportTemplateService +.. com.welab.moon.app.service.disbursement.email.TrioDisbursementEmailReportTemplateService$TrioDisbursementLoan
com.welab.moon.app.service.disbursement.email.TbDisbursementReportLoan <|-- com.welab.moon.app.service.disbursement.email.TrioDisbursementEmailReportTemplateService$TrioDisbursementLoan
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.moon.job.TbConfirmLoanTriggerJob
com.welab.moon.config.BaseConfig <|-- com.welab.moon.config.AgreementDocExpiredConfig
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.TbUserManageTest
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.CreditLoanDpdNoticeTest
com.welab.moon.app.service.AbstractImportTbUser <|-- com.welab.moon.app.service.credit.gada.GadaUserServiceImportTbUser
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.gada.GadaApiServiceTest
com.welab.sea.util.dto.PageQuery <|-- com.welab.moon.model.dto.PendRepayQueryDTO
com.welab.moon.service.TbUserInfoService <|.. com.welab.moon.service.impl.TbUserInfoServiceImpl
com.welab.moon.model.mongo.tbuser.gada.apiuser.BaseGadaApiUserDoc <|-- com.welab.moon.model.mongo.tbuser.gada.apiuser.GadaPersonDoc
com.welab.moon.app.service.disbursement.job.AbstractDisbursementJob <|-- com.welab.moon.app.service.disbursement.job.D1FixedAccountDisbursementJob
com.welab.moon.model.vo.GadaUserCheckVO +.. com.welab.moon.model.vo.GadaUserCheckVO$UserVO
com.welab.moon.model.mongo.Doc <|-- com.welab.moon.model.mongo.AopTbLoanDoc
com.welab.moon.model.bo.credit.BaseTbUserAccountTransBO <|-- com.welab.moon.model.bo.credit.FreezeTbUserAccountBalanceBO
com.welab.moon.app.service.CreateTbLoanByApiService <|.. com.welab.moon.app.service.AbstractCreateTbLoanByApi
com.welab.moon.model.mongo.Doc <|-- com.welab.moon.model.mongo.tbreg.BaseRegDoc
java.io.Serializable <|.. com.welab.moon.model.dto.traveloka.UserProfile
com.welab.moon.app.service.TbLoanService <|.. com.welab.moon.app.service.AbstractTbLoans
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.job.UnConfirmTbLoanCancelJobTest
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.hso.HsoQueryTest
com.welab.moon.app.service.disbursement.email.AbstractTbDisbursementEmailReportTemplateService <|-- com.welab.moon.app.service.disbursement.email.DefaultDisbursementEmailReportTemplateService
java.io.Serializable <|.. com.welab.moon.model.dto.traveloka.TravelokaDTO
java.io.Serializable <|.. com.welab.moon.model.dto.gada.query.GadaPersonDTO
java.io.Serializable <|.. com.welab.moon.model.vo.TbLoanDocVO
com.welab.moon.app.service.agreement.expiredstrategy.CancelSigningAgreementService <|-- com.welab.moon.app.service.agreement.expiredstrategy.AutoSigningOrCancelAgreementService
com.welab.moon.config.auto.CreditConfiguration +.. com.welab.moon.config.auto.CreditConfiguration$PartnerConfig
com.welab.moon.app.service.TbLoanService <|.. com.welab.moon.app.service.credit.daya.DayaTbLoanService
com.welab.moon.app.service.AbstractTbLoans <|-- com.welab.moon.app.service.credit.daya.DayaTbLoanService
com.welab.moon.model.bo.BaseImportTbUserBO <|-- com.welab.moon.model.bo.SmpUserImportBO
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.moon.job.GadaUserLimitReportJob
com.welab.moon.model.mongo.tbuser.BaseUserDoc <|-- com.welab.moon.model.mongo.tbuser.TrioUserDoc
com.welab.moon.model.bo.PageQryBO <|-- com.welab.moon.model.bo.TbDisbursementReportQryBO
java.io.Serializable <|.. com.welab.moon.model.bo.OverdueNotifyBO
com.welab.common.exception.FastRuntimeException <|-- com.welab.moon.exception.MoonException
java.io.Serializable <|.. com.welab.moon.model.vo.TbLoanVO
com.welab.moon.app.service.confirmloan.AbstractTbConfirmLoanService <|-- com.welab.moon.app.service.confirmloan.strategy.PendingCancelToSigndeStrategyService
com.welab.moon.model.bo.BaseImportTbUserBO <|-- com.welab.moon.model.bo.GadaUserImportBO
java.io.Serializable <|.. com.welab.moon.model.dto.traveloka.WorkProfile
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.job.CreditLoanDpdNoticeJobTest
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.gada.GadaLimitReportTest
com.welab.moon.app.service.agreement.AbstractTbAgreementDocExpiredService <|-- com.welab.moon.app.service.agreement.expiredstrategy.CancelSigningAgreementService
com.welab.moon.model.TbAgreementDocExample +.. com.welab.moon.model.TbAgreementDocExample$GeneratedCriteria
com.welab.moon.model.TbAgreementDocExample +.. com.welab.moon.model.TbAgreementDocExample$Criteria
com.welab.moon.model.GeneratedCriteria <|-- com.welab.moon.model.TbAgreementDocExample$Criteria
com.welab.moon.model.TbAgreementDocExample +.. com.welab.moon.model.TbAgreementDocExample$Criterion
com.welab.moon.model.mongo.TbLoanDoc <|-- com.welab.moon.model.mongo.GadaTbLoanDoc
java.io.Serializable <|.. com.welab.moon.model.dto.PageQueryDTO
com.welab.moon.mapper.TbCreditUserAccountLogMapper <|-- com.welab.moon.mapper.ext.TbCreditUserAccountLogExtMapper
com.welab.moon.model.TbLendBatchExample +.. com.welab.moon.model.TbLendBatchExample$GeneratedCriteria
com.welab.moon.model.TbLendBatchExample +.. com.welab.moon.model.TbLendBatchExample$Criteria
com.welab.moon.model.GeneratedCriteria <|-- com.welab.moon.model.TbLendBatchExample$Criteria
com.welab.moon.model.TbLendBatchExample +.. com.welab.moon.model.TbLendBatchExample$Criterion
com.welab.sea.util.dto.PageQuery <|-- com.welab.moon.model.dto.RepaymentQryDTO
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.gada.GadaImportUserTest
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.daya.DayaImportLoanTest
com.welab.moon.app.service.AbstractExcelEmailReport <|-- com.welab.moon.app.service.disbursement.email.AbstractTbDisbursementEmailReportTemplateService
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.moon.job.TbAgreementDocExpiredJob
com.welab.moon.model.mongo.TbLoanDoc <|-- com.welab.moon.model.mongo.DayaTbLoanDoc
com.welab.moon.model.mongo.TbLoanDoc <|-- com.welab.moon.model.mongo.HsoTbLoanDoc
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.TbRegisterTest
com.welab.moon.app.service.TbLoanService <|.. com.welab.moon.app.service.credit.smp.SmpTbLoanService
com.welab.moon.app.service.AbstractTbLoans <|-- com.welab.moon.app.service.credit.smp.SmpTbLoanService
com.welab.moon.app.command.agreement.GadaAgreementReportCmdExe +.. com.welab.moon.app.command.agreement.GadaAgreementReportCmdExe$GadaAgreementReportBO
com.welab.moon.model.bo.BaseImportTbUserBO <|-- com.welab.moon.model.bo.DayaImportTbUserBO
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.moon.app.service.disbursement.job.AbstractDisbursementJob
com.welab.moon.app.service.agreement.AbstractTbAgreementDocExpiredService <|-- com.welab.moon.app.service.agreement.expiredstrategy.CancelAgreementDocService
com.welab.moon.model.mongo.Doc <|-- com.welab.moon.model.mongo.TbRepaymentTrackDoc
com.welab.moon.app.service.AbstractTbLoanImport <|-- com.welab.moon.app.service.credit.daya.DayaLoanImportService
java.io.Serializable <|.. com.welab.moon.model.vo.TravelokaUserInfoVO
com.welab.moon.model.TbUserExample +.. com.welab.moon.model.TbUserExample$GeneratedCriteria
com.welab.moon.model.TbUserExample +.. com.welab.moon.model.TbUserExample$Criteria
com.welab.moon.model.GeneratedCriteria <|-- com.welab.moon.model.TbUserExample$Criteria
com.welab.moon.model.TbUserExample +.. com.welab.moon.model.TbUserExample$Criterion
com.welab.moon.model.VaLoanInfo <|-- com.welab.moon.model.vo.VaLoanInfoRspVO
com.welab.moon.model.mongo.Doc <|-- com.welab.moon.model.mongo.credit.gada.GadaCreditApplyDoc
java.io.Serializable <|.. com.welab.moon.model.dto.SigningUrlDTO
com.welab.moon.model.mongo.tbuser.BaseUserDoc <|-- com.welab.moon.model.mongo.tbuser.DayaUserDoc
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.daya.DayaCancelLoanTest
com.welab.moon.model.bo.BaseImportTbUserBO <|-- com.welab.moon.model.bo.HsoUserImportBO
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.TbQueryTest
java.io.Serializable <|.. com.welab.moon.model.dto.traveloka.KtpAddress
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.trio.TrioImportLoanTest
com.welab.moon.service.ITbLoanDubboService <|.. com.welab.moon.service.impl.TbLoanDubboServiceImpl
com.welab.sea.util.dto.PageQuery <|-- com.welab.moon.model.dto.QueryLoansDTO
java.io.Serializable <|.. com.welab.moon.model.dto.gada.query.GadaBusinessDTO
java.io.Serializable <|.. com.welab.moon.model.dto.gada.apply.PersonProfileDTO
com.welab.moon.app.service.confirmloan.AbstractTbConfirmLoanService <|-- com.welab.moon.app.service.confirmloan.strategy.SigndeToTimeOutStrategyService
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.gada.GadaDocTest
com.welab.moon.app.service.disbursement.job.AbstractDisbursementJob <|-- com.welab.moon.app.service.disbursement.job.HsoModeDisbursementJob
com.welab.moon.model.mongo.tbuser.BaseLeve1UserDoc <|-- com.welab.moon.model.mongo.tbuser.daya.DayaLeve1UserDoc
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.gada.GadaApplyUserTest
com.welab.moon.model.vo.TbLoansVO <|-- com.welab.moon.model.vo.TrioLoansVO
com.welab.moon.app.service.AbstractTbLoanImport <|-- com.welab.moon.app.service.restock.RestockLoanImportService
java.io.Serializable <|.. com.welab.moon.model.dto.gada.GadaApprovalLoansDTO
java.io.Serializable <|.. com.welab.moon.model.vo.TravelokaDuesVO
com.welab.moon.config.BaseConfig <|-- com.welab.moon.config.credit.FreezeBlackConfig
com.welab.moon.app.service.AbstractImportTbUser <|-- com.welab.moon.app.service.credit.daya.DayaUserImportService
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.job.VaLoanInfoInitFeeJobTest
com.welab.moon.mapper.TbConfirmLoanTriggerMapper <|-- com.welab.moon.mapper.ext.TbConfirmLoanTriggerExtMapper
com.welab.moon.model.TbLoan <|-- com.welab.moon.model.ext.TbDisbursementReportLoan
com.welab.moon.model.mongo.tbuser.TbUserDoc <|-- com.welab.moon.model.mongo.tbuser.TravelokaUserDoc
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.moon.job.credit.CreditLoanDpdNoticeJob
com.welab.moon.model.bo.BaseImportTbUserBO <|-- com.welab.moon.model.bo.TrioImportTbUserBO
com.welab.moon.model.mongo.Doc <|-- com.welab.moon.model.mongo.tbuser.TbUserDoc
com.welab.moon.model.mongo.tbreg.PersonalRegDoc <|-- com.welab.moon.model.bo.PersonalRegBO
com.welab.moon.app.service.AbstractTbLoanImport <|-- com.welab.moon.app.service.credit.smp.SmpLoanImportService
java.io.Serializable <|.. com.welab.moon.model.vo.TbBankAccountInfoVO
com.welab.moon.model.VaLoanInfoExample +.. com.welab.moon.model.VaLoanInfoExample$GeneratedCriteria
com.welab.moon.model.VaLoanInfoExample +.. com.welab.moon.model.VaLoanInfoExample$Criteria
com.welab.moon.model.GeneratedCriteria <|-- com.welab.moon.model.VaLoanInfoExample$Criteria
com.welab.moon.model.VaLoanInfoExample +.. com.welab.moon.model.VaLoanInfoExample$Criterion
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.CreditConfigurationTest
com.welab.moon.app.service.disbursement.job.AbstractDisbursementJob <|-- com.welab.moon.app.service.disbursement.job.DayaModeDisbursementJob
com.welab.moon.app.service.AbstractImportTbUser <|-- com.welab.moon.app.service.credit.trio.TrioUserImportService
com.welab.moon.app.service.TbLoanService <|.. com.welab.moon.app.service.credit.trio.TrioTbLoanService
com.welab.moon.app.service.AbstractTbLoans <|-- com.welab.moon.app.service.credit.trio.TrioTbLoanService
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.mq.TbRepaymentNotifyTest
com.welab.moon.model.mongo.TbLoanDoc <|-- com.welab.moon.model.mongo.TrioTbLoanDoc
com.welab.moon.model.mongo.Doc <|-- com.welab.moon.model.mongo.tbuser.BaseLeve1UserDoc
com.welab.moon.mapper.TbLendBatchMapper <|-- com.welab.moon.mapper.ext.TbLendBatchExtMapper
com.welab.moon.model.mongo.tbreg.BaseRegDoc <|-- com.welab.moon.model.mongo.tbreg.BusinessRegDoc
com.welab.moon.model.TbCreditApplyExample +.. com.welab.moon.model.TbCreditApplyExample$GeneratedCriteria
com.welab.moon.model.TbCreditApplyExample +.. com.welab.moon.model.TbCreditApplyExample$Criteria
com.welab.moon.model.GeneratedCriteria <|-- com.welab.moon.model.TbCreditApplyExample$Criteria
com.welab.moon.model.TbCreditApplyExample +.. com.welab.moon.model.TbCreditApplyExample$Criterion
com.welab.moon.model.mongo.tbuser.gada.apiuser.BaseGadaApiUserDoc <|-- com.welab.moon.model.mongo.tbuser.gada.apiuser.GadaBusinessDoc
com.welab.moon.model.bo.credit.BaseTbUserAccountTransBO <|-- com.welab.moon.model.bo.credit.RestoreTbUserAccountBO
java.io.Serializable <|.. com.welab.moon.model.dto.TbUserQryDTO
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.job.TbDisbursementReportJobTest
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.trio.TrioQueryTest
com.welab.moon.model.mongo.tbuser.TbUserDoc <|-- com.welab.moon.model.mongo.tbuser.RestockUserDoc
com.welab.moon.service.TbAgreementDocService <|.. com.welab.moon.service.impl.TbAgreementDocServiceImpl
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.TbConfigTest
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.traveloka.TravelokaTest
com.welab.moon.mapper.TbCreditApplyMapper <|-- com.welab.moon.mapper.ext.TbCreditApplyExtMapper
com.welab.moon.model.vo.TbLoansVO <|-- com.welab.moon.model.vo.AopLoansVO
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.moon.job.GadaStatisticsReportJob
com.welab.moon.model.TbLoanExample +.. com.welab.moon.model.TbLoanExample$GeneratedCriteria
com.welab.moon.model.TbLoanExample +.. com.welab.moon.model.TbLoanExample$Criteria
com.welab.moon.model.GeneratedCriteria <|-- com.welab.moon.model.TbLoanExample$Criteria
com.welab.moon.model.TbLoanExample +.. com.welab.moon.model.TbLoanExample$Criterion
com.welab.sea.util.dto.DTO <|-- com.welab.moon.model.mongo.Doc
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.hso.HsoImportUserTest
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.CreditBusiServiceTest
com.welab.moon.app.service.TbUserService <|.. com.welab.moon.app.service.AbstractImportTbUser
com.welab.moon.app.service.agreement.AbstractTbAgreementDocExpiredService <|-- com.welab.moon.app.service.agreement.expiredstrategy.CancelAndNotifyPartnerSigningAgreementService
com.welab.moon.model.mongo.tbuser.GadaUserDoc <|-- com.welab.moon.model.mongo.tbuser.gada.apiuser.BaseGadaApiUserDoc
com.welab.sea.util.dto.PageQuery <|-- com.welab.moon.model.dto.RepaymentListQry
com.welab.moon.service.TbUserAccountInfoService <|.. com.welab.moon.service.impl.TbUserAccountInfoServiceImpl
com.welab.moon.model.TbTravelokaModifyLogExample +.. com.welab.moon.model.TbTravelokaModifyLogExample$GeneratedCriteria
com.welab.moon.model.TbTravelokaModifyLogExample +.. com.welab.moon.model.TbTravelokaModifyLogExample$Criteria
com.welab.moon.model.GeneratedCriteria <|-- com.welab.moon.model.TbTravelokaModifyLogExample$Criteria
com.welab.moon.model.TbTravelokaModifyLogExample +.. com.welab.moon.model.TbTravelokaModifyLogExample$Criterion
com.welab.moon.model.mongo.tbreg.BusinessRegDoc <|-- com.welab.moon.model.bo.BusinessRegBO
com.welab.moon.service.IGadaService <|.. com.welab.moon.service.impl.GadaServiceImpl
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.moon.job.VaLoanInfoInitFeeJob
com.welab.moon.model.TbConfirmLoanTriggerExample +.. com.welab.moon.model.TbConfirmLoanTriggerExample$GeneratedCriteria
com.welab.moon.model.TbConfirmLoanTriggerExample +.. com.welab.moon.model.TbConfirmLoanTriggerExample$Criteria
com.welab.moon.model.GeneratedCriteria <|-- com.welab.moon.model.TbConfirmLoanTriggerExample$Criteria
com.welab.moon.model.TbConfirmLoanTriggerExample +.. com.welab.moon.model.TbConfirmLoanTriggerExample$Criterion
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.VaLoanInfoServiceTest
java.io.Serializable <|.. com.welab.moon.model.dto.TbUserCreditAmountDTO
com.welab.moon.app.service.confirmloan.AbstractTbConfirmLoanService +.. com.welab.moon.app.service.confirmloan.AbstractTbConfirmLoanService$TbUnconfirmLoanTriggerReq
java.io.Serializable <|.. com.welab.moon.model.dto.traveloka.ContactList
com.welab.moon.model.dto.PageQueryDTO <|-- com.welab.moon.model.vo.CancelLoanInfoQryVO
com.welab.moon.model.mongo.tbuser.TbUserDoc <|-- com.welab.moon.model.mongo.tbuser.BaseUserDoc
com.welab.moon.app.service.disbursement.job.D1FixedAccountDisbursementJob <|-- com.welab.moon.app.service.disbursement.job.D0FixedAccountDisbursementJob
com.welab.moon.service.ITbTravelokaService <|.. com.welab.moon.service.impl.TravelokaServiceImpl
java.io.Serializable <|.. com.welab.moon.model.dto.traveloka.Loans
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.job.HsoModeDisbursementJobTest
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.agreement.TbAgreementTest
com.welab.moon.app.service.agreement.AbstractTbAgreementDocExpiredService <|-- com.welab.moon.app.service.agreement.expiredstrategy.AutoSigningAgreementService
com.welab.moon.model.mongo.tbreg.BaseRegDoc <|-- com.welab.moon.model.mongo.tbreg.PersonalRegDoc
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.job.TbAgreementDocExpiredJobTest
com.welab.moon.test.base.SimpleTest <|-- com.welab.moon.test.app.service.daya.MessagePushTest
@enduml