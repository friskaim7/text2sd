@startuml
class com.welab.pay.gateway.dto.QueryTaskDto {
- String taskId
- String loanNum
- List<String> loanNumList
- List<String> thirdpartyIdList
- Byte type
- Byte fundId
- Long userId
- Byte status
- Date startTime
- Date endTime
- int pageSize
- int pageNum
- String accountNumber
- String tradingType
}
interface com.welab.pay.gateway.config.Constant {
~ String Y
~ String N
~ byte SIMULATE
~ byte XENDIT
~ byte BNI
~ byte BNI_PAYMENT
~ byte FASPAY
~ byte PERMATA
~ byte ALFAMART
~ byte ASTRAPAY
~ byte BCA
~ byte BNI_FUND_CONFIG
~ String ACCOUNT
~ String INVOICE
~ String VIRTUALACCOUNT
~ String PAYMENT
~ String VALIDATOR
~ String BNI_BANK_CODE
~ String PERMATA_BANK_CODE
~ String BNI_CODE
~ String BATEWAY_BNI_PAYMENT_TOKEN
~ String BATEWAY_BNI_PAYMENT_TOKEN_12
~ String BATEWAY_PERMATA_PAYMENT_TOKEN
~ String BNI_VERSION_10
~ String BNI_VERSION_12
~ Long MAX_BNI_INTERBANK_AMOUNT
~ String TRXSTATUS_TRANSACTION_OK
~ String TRXSTATUS_TRANSACTION_FAILED
~ List<Long> FLEXIFIT_USER_ID_List
~ List<String> SPECIAL_CODE
~ List BNI_VERSION_12_RETRY_CODE_LIST
~ List BNI_VERSION_10_RETRY_CODE_LIST
~ String BNI_BIND_BANK_MAIL_CODE
~ String MOCK_REQUEST_RESULT_SUCCESS
~ String MOCK_REQUEST_RESULT_ERROR
}
interface com.welab.pay.gateway.mapper.GatewayRequestBackMapper {
~ long countByExample(GatewayRequestBackExample)
~ int deleteByExample(GatewayRequestBackExample)
~ int deleteByPrimaryKey(Long)
~ int insert(GatewayRequestBackWithBLOBs)
~ int insertSelective(GatewayRequestBackWithBLOBs)
~ List<GatewayRequestBackWithBLOBs> selectByExampleWithBLOBs(GatewayRequestBackExample)
~ List<GatewayRequestBack> selectByExample(GatewayRequestBackExample)
~ GatewayRequestBackWithBLOBs selectByPrimaryKey(Long)
~ int updateByExampleSelective(GatewayRequestBackWithBLOBs,GatewayRequestBackExample)
~ int updateByExampleWithBLOBs(GatewayRequestBackWithBLOBs,GatewayRequestBackExample)
~ int updateByExample(GatewayRequestBack,GatewayRequestBackExample)
~ int updateByPrimaryKeySelective(GatewayRequestBackWithBLOBs)
~ int updateByPrimaryKeyWithBLOBs(GatewayRequestBackWithBLOBs)
~ int updateByPrimaryKey(GatewayRequestBack)
}
enum com.welab.pay.gateway.enums.StatusEnum {
+  PENDING
+  SUCCESS
+  FAILURE
+  EXPIRED
+  PENDING_RETRY
- Byte status
- String code
- <<Create>> StatusEnum(Byte,String)
+ {static} StatusEnum getByCode(String)
+ {static} StatusEnum getByStatus(Byte)
+ {static} List getStatusList()
+ Byte getStatus()
+ void setStatus(Byte)
+ String getCode()
+ void setCode(String)
}
class com.welab.pay.gateway.model.GatewayVirtualAccountPayment {
- Long id
- Date createAt
- Date updateAt
- String paymentId
- String callbackVirtualAccountId
- String ownerId
- String externalId
- String bankCode
- Long amount
- String merchantCode
- String thirdpartyId
- Byte fundId
+ Long getId()
+ void setId(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ String getPaymentId()
+ void setPaymentId(String)
+ String getCallbackVirtualAccountId()
+ void setCallbackVirtualAccountId(String)
+ String getOwnerId()
+ void setOwnerId(String)
+ String getExternalId()
+ void setExternalId(String)
+ String getBankCode()
+ void setBankCode(String)
+ Long getAmount()
+ void setAmount(Long)
+ String getMerchantCode()
+ void setMerchantCode(String)
+ String getThirdpartyId()
+ void setThirdpartyId(String)
+ Byte getFundId()
+ void setFundId(Byte)
}
class com.welab.pay.gateway.app.base.BaseVirtualAccountPayBackNoticeService {
- VirtualAccountPayBackNoticeMapper payBackNoticeMapper
+ int insertSelective(VirtualAccountPayBackNotice)
+ int update(VirtualAccountPayBackNotice)
+ VirtualAccountPayBackNotice selectByAccountNumber(String)
}
interface com.welab.pay.gateway.config.permata.PermataRepaymentConfig {
}
class com.welab.pay.gateway.config.permata.PermataRepaymentConfig$WrapResponse {
+ String STATUS
}
interface com.welab.pay.gateway.config.permata.PermataRepaymentConfig$GetBill {
}
class com.welab.pay.gateway.config.permata.PermataRepaymentConfig$GetBill$Request {
+ String INSTCODE
+ String VI_VANUMBER
+ String VI_TRACENO
+ String VI_TRNDATE
+ String VI_DELCHANNEL
}
class com.welab.pay.gateway.config.permata.PermataRepaymentConfig$GetBill$Response {
+ String CUSTNAME
+ String BILL_AMOUNT
+ String VI_CCY
+ List<RefInfoVO> RefInfo
}
class com.welab.pay.gateway.config.permata.PermataRepaymentConfig$RefInfoVO {
+ String RefName
+ String RefValue
}
interface com.welab.pay.gateway.config.permata.PermataRepaymentConfig$PayBill {
}
class com.welab.pay.gateway.config.permata.PermataRepaymentConfig$PayBill$Request {
+ String INSTCODE
+ String VI_VANUMBER
+ String VI_TRACENO
+ String VI_TRNDATE
+ String BILL_AMOUNT
+ String VI_CCY
+ String VI_DELCHANNEL
+ List<RefInfoVO> RefInfo
}
class com.welab.pay.gateway.config.permata.PermataRepaymentConfig$PayBill$Response {
}
interface com.welab.pay.gateway.config.permata.PermataRepaymentConfig$RevBill {
}
class com.welab.pay.gateway.config.permata.PermataRepaymentConfig$RevBill$Request {
+ String INSTCODE
+ String VI_VANUMBER
+ String VI_TRACENO
+ String VI_TRNDATE
+ String BILL_AMOUNT
+ String VI_CCY
+ String VI_DELCHANNEL
+ List<RefInfoVO> RefInfo
}
class com.welab.pay.gateway.config.permata.PermataRepaymentConfig$RevBill$Response {
}
class com.welab.pay.gateway.impl.simulate.SimulateVirtualAccountImpl {
- BaseVirtualAccountService baseVirtualAccountService
- BaseTaskService gatewayTaskService
- MqForward mqForward
+ Response<VirtualAccountVO> createVirtualAccount(VirtualAccountDto)
+ Response<VirtualAccountVO> updateVirtualAccount(UpdateVirtualAccountDto)
+ Response<List<BankVO>> getBanksforVirtualAccounts(FundEnum)
+ Response<List<VirtualAccountVO>> queryOrCreateVirtualAccounts(VirtualAccountDto)
+ Response<List<VirtualAccountVO>> queryOrCreateOrUpdateVirtualAccounts(VirtualAccountDto)
+ Response<Boolean> batchUpdateVirtualAccounts(List<VirtualAccountDto>)
}
class com.welab.pay.gateway.dto.mq.FundRechargeMqDto {
- {static} long serialVersionUID
- FundEnum fundEnum
- String accountNumber
- String creditAccountNo
- Long amount
- Date transactionDate
- String orderNo
}
class com.welab.pay.gateway.dto.cmd.astrapay.AstraPayWalletRegCmd {
- Long userId
}
class com.welab.pay.gateway.config.bca.BcaApiConfiguration {
- String url
- String clientId
- String clientSecret
- String apiKey
- String apiSecret
- String channelId
- String credentialId
- String corporateId
- String origin
- String testVaAccounts
}
class com.welab.pay.gateway.utils.SHA1 {
+ {static} String SHA1(String)
+ {static} String MD5(String)
+ {static} void main(String[])
}
class com.welab.pay.gateway.controller.astrapay.AstrapayController {
- BaseVirtualAccountService baseVirtualAccountService
- BaseOrderService baseOrderService
- BaseTaskService baseTaskService
- BaseCallbackService baseCallbackService
- BaseAmountRecordService baseAmountRecordService
- RepaymentHelper repaymentHelper
- GatewayConfig gatewayConfig
- AstrapayAuth astrapayAuth
- DuesService duesService
+ Object checkStatus(HttpServletRequest)
+ Object payment(HttpServletRequest)
+ Object inquiry(HttpServletRequest,String)
- Object vmInquiry(String,String)
- GatewayVirtualAccount getAstraPayInfo(String,String)
- AstraPayResponse bulidAstraPayInfo(boolean,GatewayVirtualAccount)
- Object vmPayment(String,HttpServletRequest)
}
class com.welab.pay.gateway.dto.RefundDto {
- {static} long serialVersionUID
- FundEnum fundEnum
- Long userId
- String externalId
- String bankCode
- String accountHolderName
- String fundAccountNumber
- String accountNumber
- String description
- Long amount
- String loanNum
}
class com.welab.pay.gateway.impl.simulate.SimulateValidator {
- BaseBankAccountService baseBankAccountService
+ Response<BankAccountVO> validatorBankAccount(BankAccountDto)
}
interface com.welab.pay.gateway.VirtualAccount {
+ Response<VirtualAccountVO> createVirtualAccount(VirtualAccountDto)
+ Response<VirtualAccountVO> updateVirtualAccount(UpdateVirtualAccountDto)
+ Response<List<BankVO>> getBanksforVirtualAccounts(FundEnum)
+ Response<List<VirtualAccountVO>> queryOrCreateVirtualAccounts(VirtualAccountDto)
+ Response<List<VirtualAccountVO>> queryOrCreateOrUpdateVirtualAccounts(VirtualAccountDto)
+ Response<Boolean> batchUpdateVirtualAccounts(List<VirtualAccountDto>)
~ String generateVirtualAccountName(VirtualAccountDto)
~ String buildVirtualAccount(String,String)
}
class com.welab.pay.gateway.vo.AstraPayWalletCallResVO {
- String status
- String message
}
class com.welab.pay.gateway.impl.bca.BcaPayment {
- PaymentHelper paymentHelper
- BcaManager bcaManager
- BaseGatewayTaskService baseGatewayTaskService
# GatewayTask buildTask(PayingDto)
# Response<PayingVO> doPaying(GatewayTask,TransferDto)
# Response<TransferVO> doTransfer(GatewayTask,TransferDto)
# GatewayTask buildTransferTask(TransferDto)
+ Response<TransferVO> reTransfer(TransferDto,String)
# void doRetryDisbursement(GatewayTask,String)
- Response<PayingVO> buildResponse(GatewayTask,BcaApiModel.TransfersDomesticOpt.TransfersDomesticRes)
- Response<PayingVO> buildResponse(GatewayTask,BcaApiModel.TransfersOpt.TransfersRes)
}
class com.welab.pay.gateway.model.GatewayRequestExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> GatewayRequestExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.pay.gateway.model.GatewayRequestExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andTaskIdIsNull()
+ Criteria andTaskIdIsNotNull()
+ Criteria andTaskIdEqualTo(String)
+ Criteria andTaskIdNotEqualTo(String)
+ Criteria andTaskIdGreaterThan(String)
+ Criteria andTaskIdGreaterThanOrEqualTo(String)
+ Criteria andTaskIdLessThan(String)
+ Criteria andTaskIdLessThanOrEqualTo(String)
+ Criteria andTaskIdLike(String)
+ Criteria andTaskIdNotLike(String)
+ Criteria andTaskIdIn(List<String>)
+ Criteria andTaskIdNotIn(List<String>)
+ Criteria andTaskIdBetween(String,String)
+ Criteria andTaskIdNotBetween(String,String)
+ Criteria andRequestUrlIsNull()
+ Criteria andRequestUrlIsNotNull()
+ Criteria andRequestUrlEqualTo(String)
+ Criteria andRequestUrlNotEqualTo(String)
+ Criteria andRequestUrlGreaterThan(String)
+ Criteria andRequestUrlGreaterThanOrEqualTo(String)
+ Criteria andRequestUrlLessThan(String)
+ Criteria andRequestUrlLessThanOrEqualTo(String)
+ Criteria andRequestUrlLike(String)
+ Criteria andRequestUrlNotLike(String)
+ Criteria andRequestUrlIn(List<String>)
+ Criteria andRequestUrlNotIn(List<String>)
+ Criteria andRequestUrlBetween(String,String)
+ Criteria andRequestUrlNotBetween(String,String)
+ Criteria andThirdpartyIdIsNull()
+ Criteria andThirdpartyIdIsNotNull()
+ Criteria andThirdpartyIdEqualTo(String)
+ Criteria andThirdpartyIdNotEqualTo(String)
+ Criteria andThirdpartyIdGreaterThan(String)
+ Criteria andThirdpartyIdGreaterThanOrEqualTo(String)
+ Criteria andThirdpartyIdLessThan(String)
+ Criteria andThirdpartyIdLessThanOrEqualTo(String)
+ Criteria andThirdpartyIdLike(String)
+ Criteria andThirdpartyIdNotLike(String)
+ Criteria andThirdpartyIdIn(List<String>)
+ Criteria andThirdpartyIdNotIn(List<String>)
+ Criteria andThirdpartyIdBetween(String,String)
+ Criteria andThirdpartyIdNotBetween(String,String)
}
class com.welab.pay.gateway.model.GatewayRequestExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.pay.gateway.model.GatewayRequestExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
enum com.welab.pay.gateway.enums.TaskTypeEnum {
+  CREATE_FIXED_VIRTUAL_ACCOUNTS
+  CREATE_INVOICE
+  PAYING
+  UPDATE_FIXED_VIRTUAL_ACCOUNTS
+  REFUND
+  TRANSFER
+  INVOICE
- Byte type
- String name
- <<Create>> TaskTypeEnum(Byte,String)
+ {static} String getNameByType(Byte)
+ {static} List getTypeList()
+ Byte getType()
+ void setType(Byte)
+ String getName()
+ void setName(String)
}
class com.welab.pay.gateway.controller.bca.BcaCallController {
- AccessTokenAuthHandler accessTokenAuthHandler
- BcaManager bcaManager
+ AccessTokenVo getToken()
+ VaBillsResVO vaBills(HttpServletRequest,VaBillsReqVO)
+ VaPaymentsResVO vaPayments(HttpServletRequest,VaPaymentsReqVO)
}
class com.welab.pay.gateway.vo.bca.VaBillsReqVO {
- String CompanyCode
- String CustomerNumber
- String RequestID
- String ChannelType
- String TransactionDate
- String AdditionalData
}
class com.welab.pay.gateway.vo.VirtualAccountVO {
- {static} long serialVersionUID
- Long id
- String name
- Date createAt
- Date updateAt
- String ownerId
- String externalId
- String accountNumber
- String bankCode
- String merchantCode
- String thirdpartyId
- Boolean isClosed
- Date expirationDate
- Boolean isSingleUse
- Long suggestedAmount
- StatusEnum status
- Byte fundId
- Long userId
}
class com.welab.pay.gateway.config.bni.BniEncryption {
# {static} String getTime()
+ {static} String hashData(String,String,String)
+ {static} String parseData(String,String,String)
+ {static} String parseData(String)
+ {static} String parseData(String,byte)
# {static} Boolean tsDiff(int)
# {static} String doubleEncrypt(String,String,String)
# {static} byte[] encrypt(byte[],String)
# {static} String doubleDecrypt(String,String,String)
# {static} byte[] decrypt(byte[],String)
+ {static} void main(String[])
}
class com.welab.pay.gateway.vo.AstraPayWalletPaymentCallBackVO {
- String merchantTransactionId
- String astrapayTransactionId
- String amount
- String status
- String callbackTimestamp
- String callbackSecurity
}
class com.welab.pay.gateway.http.test.Main {
- {static} Logger log
+ {static} void main(String[])
}
class com.welab.pay.gateway.mq.consumers.PayingTaskConsumer {
- GatewayConfig gatewayConfig
- CacheTransferExtendIdCmdExe cacheTransferExtendIdCmdExe
+ void onMessage(Message)
}
class com.welab.pay.gateway.factory.GatewayFactory {
- {static} Map<String,Map<Byte,Object>> services
+ void setApplicationContext(ApplicationContext)
+ {static} Invoice getInvoice(FundEnum)
+ {static} VirtualAccount getVirtualAccount(FundEnum)
+ {static} Account getAccount(FundEnum)
+ {static} Payment getPayment(FundEnum)
+ {static} Validator getValidator(FundEnum)
}
class com.welab.pay.gateway.impl.bni.BniPayment {
- BaseRequestService baseRequestService
- PaymentHelper paymentHelper
- BaseBankAccountService baseBankAccountService
- BNIManager bniManager
- QueryTaskService taskService
- BaseTaskService baseTaskService
- UserProfilesService userProfilesService
- MessagePushService messagePushService
- String bniMockStatusRsp
- Response<PayingVO> otherPaying(GatewayTask,String,TransferDto,GatewayBank,GatewayBankAccount)
- Response<PayingVO> bulidResponse(GatewayTask,BNIPaymentConfig.WrapResponse)
- Response<PayingVO> bulidResponseV12(GatewayTask,BNIPaymentConfig12.Disbursement.DisbursementResponse)
- Response<PayingVO> bniPaying(GatewayTask,String,TransferDto,GatewayBank,GatewayBankAccount)
- Response<PayingVO> largeAmountPaying(GatewayTask,String,TransferDto,GatewayBank,GatewayBankAccount)
# Response<PayingVO> doPaying(GatewayTask,TransferDto)
# Response<TransferVO> doTransfer(GatewayTask,TransferDto)
- Dopayment.Response specialTransfer(GatewayTask,TransferDto,GatewayDto,Dopayment.Request,GatewayBankAccount)
# void doRetryDisbursement(GatewayTask,String)
+ void rebindBankEMail(GatewayTask,String)
- boolean canRetryTask(GatewayTask,String)
}
class com.welab.pay.gateway.mq.consumers.TaskStatusConsumer {
- BaseTaskService baseTaskService
- TaskNotify taskNotify
- JedisCluster jedisCluster
+ void onMessage(Message)
}
class com.welab.pay.gateway.core.config.GatewayAuthForThirdpartyConfig {
- Map<String,AuthConfig> authConfig
+ AuthConfig getAuthConfig(FundEnum)
}
class com.welab.pay.gateway.core.config.GatewayAuthForThirdpartyConfig$AuthConfig {
- String userName
- String passWord
}
abstract class com.welab.pay.gateway.impl.AbstractPayment {
- BaseTaskService gatewayTaskService
- PaymentHelper paymentHelper
- JedisCluster jedisCluster
~ String rediesKeyPrx
~ String repaymentRediesKeyPrx
# boolean isAddTask()
+ Response<PayingVO> payingForOffline(PayingDto)
# Response<PayingVO> doPayingForOffline(GatewayTask,PayingDto)
# GatewayTask buildTask(PayingDto)
+ Response<PayingVO> paying(PayingDto)
# {abstract}Response<PayingVO> doPaying(GatewayTask,TransferDto)
+ Response<TransferVO> transfer(TransferDto)
# GatewayTask buildTransferTask(TransferDto)
+ Response<TransferVO> reTransfer(TransferDto,String)
# {abstract}Response<TransferVO> doTransfer(GatewayTask,TransferDto)
# {abstract}void doRetryDisbursement(GatewayTask,String)
}
class com.welab.pay.gateway.test.ValidatorServiceTest {
- ValidatorService validatorService
- BniValidator bniValidator
+ void validatorBankAccount()
+ void startsWith()
}
class com.welab.pay.gateway.twilio.test.Example {
}
class com.welab.pay.gateway.controller.astrapay.AstrapayAuth {
- String userName
- String password
+ boolean auth(HttpServletRequest,String)
+ {static} void main(String[])
}
class com.welab.pay.gateway.impl.simulate.SimulatePayment {
- BaseTaskService gatewayTaskService
- MqForward mqForward
+ Response<PayingVO> paying(PayingDto)
+ Response<PayingVO> payingForOffline(PayingDto)
+ Response<TransferVO> transfer(TransferDto)
+ Response<TransferVO> reTransfer(TransferDto,String)
}
enum com.welab.pay.gateway.enums.BcaTransferTypeEnum {
+  ONL
+  LLG
+  RTG
- String transferType
~ <<Create>> BcaTransferTypeEnum(String)
+ String getTransferType()
+ {static} BcaTransferTypeEnum getByType(String)
+ {static} BcaTransferTypeEnum analysisType(long)
}
interface com.welab.pay.gateway.mapper.GatewayVirtualAccountMapper {
~ long countByExample(GatewayVirtualAccountExample)
~ int deleteByExample(GatewayVirtualAccountExample)
~ int deleteByPrimaryKey(Long)
~ int insert(GatewayVirtualAccount)
~ int insertSelective(GatewayVirtualAccount)
~ List<GatewayVirtualAccount> selectByExample(GatewayVirtualAccountExample)
~ GatewayVirtualAccount selectByPrimaryKey(Long)
~ int updateByExampleSelective(GatewayVirtualAccount,GatewayVirtualAccountExample)
~ int updateByExample(GatewayVirtualAccount,GatewayVirtualAccountExample)
~ int updateByPrimaryKeySelective(GatewayVirtualAccount)
~ int updateByPrimaryKey(GatewayVirtualAccount)
}
class com.welab.pay.gateway.model.GatewayConfigExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> GatewayConfigExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.pay.gateway.model.GatewayConfigExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Integer)
+ Criteria andIdNotEqualTo(Integer)
+ Criteria andIdGreaterThan(Integer)
+ Criteria andIdGreaterThanOrEqualTo(Integer)
+ Criteria andIdLessThan(Integer)
+ Criteria andIdLessThanOrEqualTo(Integer)
+ Criteria andIdIn(List<Integer>)
+ Criteria andIdNotIn(List<Integer>)
+ Criteria andIdBetween(Integer,Integer)
+ Criteria andIdNotBetween(Integer,Integer)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Byte)
+ Criteria andFundIdNotEqualTo(Byte)
+ Criteria andFundIdGreaterThan(Byte)
+ Criteria andFundIdGreaterThanOrEqualTo(Byte)
+ Criteria andFundIdLessThan(Byte)
+ Criteria andFundIdLessThanOrEqualTo(Byte)
+ Criteria andFundIdIn(List<Byte>)
+ Criteria andFundIdNotIn(List<Byte>)
+ Criteria andFundIdBetween(Byte,Byte)
+ Criteria andFundIdNotBetween(Byte,Byte)
+ Criteria andFundNameIsNull()
+ Criteria andFundNameIsNotNull()
+ Criteria andFundNameEqualTo(String)
+ Criteria andFundNameNotEqualTo(String)
+ Criteria andFundNameGreaterThan(String)
+ Criteria andFundNameGreaterThanOrEqualTo(String)
+ Criteria andFundNameLessThan(String)
+ Criteria andFundNameLessThanOrEqualTo(String)
+ Criteria andFundNameLike(String)
+ Criteria andFundNameNotLike(String)
+ Criteria andFundNameIn(List<String>)
+ Criteria andFundNameNotIn(List<String>)
+ Criteria andFundNameBetween(String,String)
+ Criteria andFundNameNotBetween(String,String)
}
class com.welab.pay.gateway.model.GatewayConfigExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.pay.gateway.model.GatewayConfigExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.pay.gateway.dto.GatewayRepaymentOrderParamDTO {
- String trxChannel
- String trxIdOrVa
- Date transactionDate
}
class com.welab.pay.gateway.config.Swagger2Config {
+ Docket createRestApi()
- ApiInfo apiInfo()
}
class com.welab.pay.gateway.model.VirtualAccountPayBackNoticeExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> VirtualAccountPayBackNoticeExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.pay.gateway.model.VirtualAccountPayBackNoticeExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andAccountNumberIsNull()
+ Criteria andAccountNumberIsNotNull()
+ Criteria andAccountNumberEqualTo(String)
+ Criteria andAccountNumberNotEqualTo(String)
+ Criteria andAccountNumberGreaterThan(String)
+ Criteria andAccountNumberGreaterThanOrEqualTo(String)
+ Criteria andAccountNumberLessThan(String)
+ Criteria andAccountNumberLessThanOrEqualTo(String)
+ Criteria andAccountNumberLike(String)
+ Criteria andAccountNumberNotLike(String)
+ Criteria andAccountNumberIn(List<String>)
+ Criteria andAccountNumberNotIn(List<String>)
+ Criteria andAccountNumberBetween(String,String)
+ Criteria andAccountNumberNotBetween(String,String)
+ Criteria andNotifyTypeIsNull()
+ Criteria andNotifyTypeIsNotNull()
+ Criteria andNotifyTypeEqualTo(String)
+ Criteria andNotifyTypeNotEqualTo(String)
+ Criteria andNotifyTypeGreaterThan(String)
+ Criteria andNotifyTypeGreaterThanOrEqualTo(String)
+ Criteria andNotifyTypeLessThan(String)
+ Criteria andNotifyTypeLessThanOrEqualTo(String)
+ Criteria andNotifyTypeLike(String)
+ Criteria andNotifyTypeNotLike(String)
+ Criteria andNotifyTypeIn(List<String>)
+ Criteria andNotifyTypeNotIn(List<String>)
+ Criteria andNotifyTypeBetween(String,String)
+ Criteria andNotifyTypeNotBetween(String,String)
+ Criteria andDestinationIsNull()
+ Criteria andDestinationIsNotNull()
+ Criteria andDestinationEqualTo(String)
+ Criteria andDestinationNotEqualTo(String)
+ Criteria andDestinationGreaterThan(String)
+ Criteria andDestinationGreaterThanOrEqualTo(String)
+ Criteria andDestinationLessThan(String)
+ Criteria andDestinationLessThanOrEqualTo(String)
+ Criteria andDestinationLike(String)
+ Criteria andDestinationNotLike(String)
+ Criteria andDestinationIn(List<String>)
+ Criteria andDestinationNotIn(List<String>)
+ Criteria andDestinationBetween(String,String)
+ Criteria andDestinationNotBetween(String,String)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.pay.gateway.model.VirtualAccountPayBackNoticeExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.pay.gateway.model.VirtualAccountPayBackNoticeExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.pay.gateway.dto.AccountDto {
- {static} long serialVersionUID
- FundEnum fundEnum
- String accountNo
}
class com.welab.pay.gateway.http.FaspayHttpUtils {
+ {static} FaspayConfig.PostData.Request bulidPostData(InvoiceDto)
+ {static} FaspayConfig.PostData.Response postData(FaspayConfig.PostData.Request)
+ {static} String getPaymentUrl(String,Long,String,String,String,String,String,String)
}
class com.welab.pay.gateway.dto.cmd.astrapay.AstraPayWalletPaymentCmd {
- Long userId
- Long amount
- String platformOrderNo
- PlatformEnum platform
}
class com.welab.pay.gateway.impl.bni.BniVirtualAccountSynHandler {
- {static} JedisCluster jedisCluster
- {static} BaseVirtualAccountService baseVirtualAccountService
+ {static} Response<InvoiceVO> handleBlockException(BniVirtualAccountSynHandler.UpdateVirtualAccountReq,BlockException)
+ {static} Response<InvoiceVO> handleFallbackException(BniVirtualAccountSynHandler.UpdateVirtualAccountReq,Throwable)
+ {static} UpdateVirtualAccountReq saveUpdateVirtualAccountReq(UpdateInvoiceDto)
+ {static} UpdateVirtualAccountReq getUpdateVirtualAccountReq(String)
+ {static} void removeUpdateVirtualAccountReq(String,Date)
+ {static} void removeRetryUsers(String)
+ {static} List<String> getRetryUsers(int)
- {static} void saveErrorVa(String,UpdateVirtualAccountReq)
- {static} void init()
}
class com.welab.pay.gateway.impl.bni.BniVirtualAccountSynHandler$UpdateVirtualAccountReq {
- String bniStatus
}
interface com.welab.pay.gateway.Account {
+ Response<AccountVO> getAccount(AccountDto)
}
class com.welab.pay.gateway.impl.faspay.FaspayVirtualAccountImpl {
- BaseVirtualAccountService baseVirtualAccountService
- BaseTaskService gatewayTaskService
- BaseBankServcie baseBankServcie
+ Response<VirtualAccountVO> createVirtualAccount(VirtualAccountDto)
+ Response<VirtualAccountVO> updateVirtualAccount(UpdateVirtualAccountDto)
+ Response<List<BankVO>> getBanksforVirtualAccounts(FundEnum)
+ Response<List<VirtualAccountVO>> queryOrCreateVirtualAccounts(VirtualAccountDto)
+ Response<List<VirtualAccountVO>> queryOrCreateOrUpdateVirtualAccounts(VirtualAccountDto)
+ Response<Boolean> batchUpdateVirtualAccounts(List<VirtualAccountDto>)
+ String buildVirtualAccount(String,String)
}
class com.welab.pay.gateway.mq.consumers.HttpRequestConsumer {
- BaseRequestService baseRequestService
+ void onMessage(Message)
}
class com.welab.pay.gateway.mq.consumers.BniValidatorConsumer {
- JedisCluster jedisCluster
+ void onMessage(Message)
}
class com.welab.pay.gateway.test.TaskTtest {
- MqForward mqForward
- BaseTaskService baseTaskService
- MessageMqService messageMqService
- BniPayment bniPayment
- String QUEUE_WELAB_SEA_TASK_STATUS
- String refundVirAccount
+ void sendTaskStatus()
+ void rebindBankEMail()
+ void testRefund()
}
class com.welab.pay.gateway.service.BaseAmountRecordService {
- GatewayAmountRecordMapper gatewayAmountRecordMapper
- int save(GatewayAmountRecord)
+ int add(FundEnum,String,Long,String,String)
+ GatewayAmountRecord getOneByThirdpartyId(String)
}
class com.welab.pay.gateway.vo.RefundVO {
- {static} long serialVersionUID
- Date createAt
- Date paidAt
- String externalId
- Long amount
- String bankCode
- String accountHolderName
- StatusEnum status
- String taskId
}
enum com.welab.pay.gateway.config.alfamart.TxTypeEnum {
+  Echo_Test
+  Cash_In_Validation
+  Purchase_Validation_with_Coupon
+  Cash_Out_Validation_with_Coupon
+  Cash_In_Transaction
+  Purchase_Transaction_with_Coupon
+  Cash_Out_Transaction_with_Coupon
+  Cash_In_Advice
+  Purchase_Advice
+  Cash_Out_Advice
+  Cash_In_Commit
+  Purchase_with_Coupon_Reversal
+  Cash_Out_with_Coupon_Reversal
- String code
- String desc
- <<Create>> TxTypeEnum(String,String)
+ {static} boolean isExist(String)
+ String getCode()
+ String getDesc()
}
class com.welab.pay.gateway.model.GatewayTaskExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> GatewayTaskExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.pay.gateway.model.GatewayTaskExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Byte)
+ Criteria andFundIdNotEqualTo(Byte)
+ Criteria andFundIdGreaterThan(Byte)
+ Criteria andFundIdGreaterThanOrEqualTo(Byte)
+ Criteria andFundIdLessThan(Byte)
+ Criteria andFundIdLessThanOrEqualTo(Byte)
+ Criteria andFundIdIn(List<Byte>)
+ Criteria andFundIdNotIn(List<Byte>)
+ Criteria andFundIdBetween(Byte,Byte)
+ Criteria andFundIdNotBetween(Byte,Byte)
+ Criteria andFundNameIsNull()
+ Criteria andFundNameIsNotNull()
+ Criteria andFundNameEqualTo(String)
+ Criteria andFundNameNotEqualTo(String)
+ Criteria andFundNameGreaterThan(String)
+ Criteria andFundNameGreaterThanOrEqualTo(String)
+ Criteria andFundNameLessThan(String)
+ Criteria andFundNameLessThanOrEqualTo(String)
+ Criteria andFundNameLike(String)
+ Criteria andFundNameNotLike(String)
+ Criteria andFundNameIn(List<String>)
+ Criteria andFundNameNotIn(List<String>)
+ Criteria andFundNameBetween(String,String)
+ Criteria andFundNameNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
+ Criteria andExtendIdIsNull()
+ Criteria andExtendIdIsNotNull()
+ Criteria andExtendIdEqualTo(String)
+ Criteria andExtendIdNotEqualTo(String)
+ Criteria andExtendIdGreaterThan(String)
+ Criteria andExtendIdGreaterThanOrEqualTo(String)
+ Criteria andExtendIdLessThan(String)
+ Criteria andExtendIdLessThanOrEqualTo(String)
+ Criteria andExtendIdLike(String)
+ Criteria andExtendIdNotLike(String)
+ Criteria andExtendIdIn(List<String>)
+ Criteria andExtendIdNotIn(List<String>)
+ Criteria andExtendIdBetween(String,String)
+ Criteria andExtendIdNotBetween(String,String)
+ Criteria andTaskIdIsNull()
+ Criteria andTaskIdIsNotNull()
+ Criteria andTaskIdEqualTo(String)
+ Criteria andTaskIdNotEqualTo(String)
+ Criteria andTaskIdGreaterThan(String)
+ Criteria andTaskIdGreaterThanOrEqualTo(String)
+ Criteria andTaskIdLessThan(String)
+ Criteria andTaskIdLessThanOrEqualTo(String)
+ Criteria andTaskIdLike(String)
+ Criteria andTaskIdNotLike(String)
+ Criteria andTaskIdIn(List<String>)
+ Criteria andTaskIdNotIn(List<String>)
+ Criteria andTaskIdBetween(String,String)
+ Criteria andTaskIdNotBetween(String,String)
+ Criteria andThirdpartyIdIsNull()
+ Criteria andThirdpartyIdIsNotNull()
+ Criteria andThirdpartyIdEqualTo(String)
+ Criteria andThirdpartyIdNotEqualTo(String)
+ Criteria andThirdpartyIdGreaterThan(String)
+ Criteria andThirdpartyIdGreaterThanOrEqualTo(String)
+ Criteria andThirdpartyIdLessThan(String)
+ Criteria andThirdpartyIdLessThanOrEqualTo(String)
+ Criteria andThirdpartyIdLike(String)
+ Criteria andThirdpartyIdNotLike(String)
+ Criteria andThirdpartyIdIn(List<String>)
+ Criteria andThirdpartyIdNotIn(List<String>)
+ Criteria andThirdpartyIdBetween(String,String)
+ Criteria andThirdpartyIdNotBetween(String,String)
+ Criteria andLoanNumIsNull()
+ Criteria andLoanNumIsNotNull()
+ Criteria andLoanNumEqualTo(String)
+ Criteria andLoanNumNotEqualTo(String)
+ Criteria andLoanNumGreaterThan(String)
+ Criteria andLoanNumGreaterThanOrEqualTo(String)
+ Criteria andLoanNumLessThan(String)
+ Criteria andLoanNumLessThanOrEqualTo(String)
+ Criteria andLoanNumLike(String)
+ Criteria andLoanNumNotLike(String)
+ Criteria andLoanNumIn(List<String>)
+ Criteria andLoanNumNotIn(List<String>)
+ Criteria andLoanNumBetween(String,String)
+ Criteria andLoanNumNotBetween(String,String)
+ Criteria andParamsIsNull()
+ Criteria andParamsIsNotNull()
+ Criteria andParamsEqualTo(String)
+ Criteria andParamsNotEqualTo(String)
+ Criteria andParamsGreaterThan(String)
+ Criteria andParamsGreaterThanOrEqualTo(String)
+ Criteria andParamsLessThan(String)
+ Criteria andParamsLessThanOrEqualTo(String)
+ Criteria andParamsLike(String)
+ Criteria andParamsNotLike(String)
+ Criteria andParamsIn(List<String>)
+ Criteria andParamsNotIn(List<String>)
+ Criteria andParamsBetween(String,String)
+ Criteria andParamsNotBetween(String,String)
+ Criteria andPlatformIsNull()
+ Criteria andPlatformIsNotNull()
+ Criteria andPlatformEqualTo(String)
+ Criteria andPlatformNotEqualTo(String)
+ Criteria andPlatformGreaterThan(String)
+ Criteria andPlatformGreaterThanOrEqualTo(String)
+ Criteria andPlatformLessThan(String)
+ Criteria andPlatformLessThanOrEqualTo(String)
+ Criteria andPlatformLike(String)
+ Criteria andPlatformNotLike(String)
+ Criteria andPlatformIn(List<String>)
+ Criteria andPlatformNotIn(List<String>)
+ Criteria andPlatformBetween(String,String)
+ Criteria andPlatformNotBetween(String,String)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andTradingTypeIsNull()
+ Criteria andTradingTypeIsNotNull()
+ Criteria andTradingTypeEqualTo(String)
+ Criteria andTradingTypeNotEqualTo(String)
+ Criteria andTradingTypeGreaterThan(String)
+ Criteria andTradingTypeGreaterThanOrEqualTo(String)
+ Criteria andTradingTypeLessThan(String)
+ Criteria andTradingTypeLessThanOrEqualTo(String)
+ Criteria andTradingTypeLike(String)
+ Criteria andTradingTypeNotLike(String)
+ Criteria andTradingTypeIn(List<String>)
+ Criteria andTradingTypeNotIn(List<String>)
+ Criteria andTradingTypeBetween(String,String)
+ Criteria andTradingTypeNotBetween(String,String)
+ Criteria andVersionIsNull()
+ Criteria andVersionIsNotNull()
+ Criteria andVersionEqualTo(String)
+ Criteria andVersionNotEqualTo(String)
+ Criteria andVersionGreaterThan(String)
+ Criteria andVersionGreaterThanOrEqualTo(String)
+ Criteria andVersionLessThan(String)
+ Criteria andVersionLessThanOrEqualTo(String)
+ Criteria andVersionLike(String)
+ Criteria andVersionNotLike(String)
+ Criteria andVersionIn(List<String>)
+ Criteria andVersionNotIn(List<String>)
+ Criteria andVersionBetween(String,String)
+ Criteria andVersionNotBetween(String,String)
}
class com.welab.pay.gateway.model.GatewayTaskExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.pay.gateway.model.GatewayTaskExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.pay.gateway.utils.HashUtil {
- {static} Map<HashAlgorithm,HashFunction> hashFunctionStrategy
- {static} Key hmacSha1Key
- {static} Key hmacSha256Key
- {static} Key hmacSha512Key
- {static} Key hmacMd5Key
- {static} Base64.Encoder encoder
- <<Create>> HashUtil()
+ {static} long hmacMd5(Object)
+ {static} String hmacMd5AsBae64(Object)
+ {static} long murmurhash3(Object)
+ {static} String murmurhash3AsBase64(Object)
+ {static} long hmacSHA1(Object)
+ {static} String hmacSHA1AsBase64(Object)
+ {static} long hmacSHA256(Object)
+ {static} String hmacSHA256AsBase64(Object)
+ {static} long hmacSHA512(Object)
+ {static} String hmacSHA512AsBase64(Object)
+ {static} long sipHash24(Object)
+ {static} String sipHash24AsBase64(Object)
- {static} HashCode getHashCode(String,HashAlgorithm)
+ {static} String littleMD5a(String)
+ {static} String little16MD5a(String)
+ {static} String BigMD55(String)
+ {static} String Big16MD55(String)
+ {static} String getSHA1(String)
+ {static} void main(String[])
}
enum com.welab.pay.gateway.utils.HashAlgorithm {
+  Murmurhash3_128
+  HMAC_SHA1
+  HMAC_SHA256
+  HMAC_SHA512
+  HMAC_MD5
+  SIP_HASH24
}
class com.welab.pay.gateway.dto.DisburseSuccessDto {
- String taskId
- Date disburseDate
}
class com.welab.pay.gateway.config.sentinel.SentinelConfiguration {
- String sentinelDegradeRules
+ {static} String BNI_VIRTUAL_ACCOUNT_SYN
+ void init()
+ SentinelResourceAspect sentinelResourceAspect()
- void addStateChangeObserver()
}
enum com.welab.pay.gateway.core.enums.AuthWayEnum {
+  BASEIC_AUTH
+  ACCESS_TOKEN
}
class com.welab.pay.gateway.service.impl.BankDubboServiceImpl {
- BaseBankServcie baseBankServcie
- GatewayConfig gatewayConfig
+ BankVO getBankByBankCode(String)
+ List<BankVO> getVirtualBankVOList(FundEnum)
}
interface com.welab.pay.gateway.mapper.GatewayRequestMapper {
~ long countByExample(GatewayRequestExample)
~ int deleteByExample(GatewayRequestExample)
~ int deleteByPrimaryKey(Long)
~ int insert(GatewayRequestWithBLOBs)
~ int insertSelective(GatewayRequestWithBLOBs)
~ List<GatewayRequestWithBLOBs> selectByExampleWithBLOBs(GatewayRequestExample)
~ List<GatewayRequest> selectByExample(GatewayRequestExample)
~ GatewayRequestWithBLOBs selectByPrimaryKey(Long)
~ int updateByExampleSelective(GatewayRequestWithBLOBs,GatewayRequestExample)
~ int updateByExampleWithBLOBs(GatewayRequestWithBLOBs,GatewayRequestExample)
~ int updateByExample(GatewayRequest,GatewayRequestExample)
~ int updateByPrimaryKeySelective(GatewayRequestWithBLOBs)
~ int updateByPrimaryKeyWithBLOBs(GatewayRequestWithBLOBs)
~ int updateByPrimaryKey(GatewayRequest)
}
class com.welab.pay.gateway.controller.alfamart.RequestDto {
- String login
- String pwd
- String terminal
- String cust_key
- String tx_date
- String tx_type
- String tx_amt
- String tx_id
- String name
- String rek_type
- String signature
}
interface com.welab.pay.gateway.config.astrapay.AstraPayResponseCode {
+ String SUCCESS
+ String FAILURE
}
class com.welab.pay.gateway.impl.bca.BcaVirtualAccountImpl {
- BaseBankServcie baseBankServcie
- BaseVirtualAccountService baseVirtualAccountService
+ Response<VirtualAccountVO> createVirtualAccount(VirtualAccountDto)
- void doSaveVirtualAccount(VirtualAccountDto,String,String)
+ Response<VirtualAccountVO> updateVirtualAccount(UpdateVirtualAccountDto)
+ Response<List<BankVO>> getBanksforVirtualAccounts(FundEnum)
+ Response<List<VirtualAccountVO>> queryOrCreateVirtualAccounts(VirtualAccountDto)
- List<GatewayVirtualAccount> createGatewayVirtualAccounts(VirtualAccountDto)
+ Response<List<VirtualAccountVO>> queryOrCreateOrUpdateVirtualAccounts(VirtualAccountDto)
+ Response<Boolean> batchUpdateVirtualAccounts(List<VirtualAccountDto>)
}
class com.welab.pay.gateway.service.BaseTaskService {
- GatewayTaskMapper gatewayTaskMapper
+ List<GatewayTask> getList(Byte,Byte)
+ List<GatewayTask> getList(Byte,List<Byte>,List<Byte>,Date)
+ List<GatewayTask> getList(Byte,Byte,List<Byte>,Date)
+ List<GatewayTask> getList(GatewayTaskExample)
+ int save(GatewayTask)
+ GatewayTask initTask(FundEnum,TaskTypeEnum,Long,String,String,String,String)
+ GatewayTask getOneByTaskId(String)
+ GatewayTask getOneByLoanNumAndStatus(String,List<Byte>)
+ GatewayTask getOneByLoanNumAndStatus(String,List<Byte>,byte)
+ GatewayTask getOneByLoanNumAndStatus(String,byte)
+ GatewayTask getOneByLoanNumAndStatus(String)
+ List<GatewayTask> getListByExtendIdAndTypeAndStatus(String,Byte,List<Byte>)
+ List<GatewayTask> getListByExtendIdAndTypeAndStatusAndPlat(String,String,Byte,List<Byte>)
+ GatewayTask getOneByExtendIdAndType(String,Byte)
+ long countByExtendIdAndType(String)
+ long countByExtendIdAndType(String,PlatformEnum)
+ GatewayTask getByExtendIdAndType(String,PlatformEnum,StatusEnum)
+ GatewayTask updateStatus(String,String,StatusEnum,String)
+ GatewayTask updateStatus(String,StatusEnum)
+ GatewayTask updateStatus(String,StatusEnum,String)
+ PageInfo<GatewayTask> getTaskByPage(GatewayTaskExample,int,int)
+ GatewayTask getOneById(Long)
+ List<GatewayTask> list(List<String>)
}
class com.welab.pay.gateway.dto.qry.astrapay.AstraPayWalletProfileQry {
- Long userId
- boolean showBalance
}
class com.welab.pay.gateway.controller.permata.Authentication {
- String userName
- String passWord
- String secretKey
+ boolean auth(HttpServletRequest,HttpServletResponse)
+ boolean signature(HttpServletRequest,String,HttpServletResponse)
}
class com.welab.pay.gateway.model.GatewayRequest {
- Long id
- Date createAt
- Date updateAt
- String taskId
- String requestUrl
- String thirdpartyId
+ Long getId()
+ void setId(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ String getTaskId()
+ void setTaskId(String)
+ String getRequestUrl()
+ void setRequestUrl(String)
+ String getThirdpartyId()
+ void setThirdpartyId(String)
}
class com.welab.pay.gateway.app.command.bca.BcaVaPaymentsCmdExe {
- GatewayConfig gatewayConfig
- BaseCallbackService baseCallbackService
- BaseVirtualAccountService baseVirtualAccountService
- BaseOrderService baseOrderService
- RepaymentHelper repaymentHelper
- BaseAmountRecordService baseAmountRecordService
- BcaApiConfiguration bcaApiConfiguration
- BaseGatewayRepaymentOrderService repaymentOrderService
+ VaPaymentsResVO vaPayments(VaPaymentsReqVO,GatewayRequestBackWithBLOBs)
}
class com.welab.pay.gateway.response.ResponsCodeType {
+ {static} String RECIPIENT_NOT_FOUND_ERROR
+ {static} String gatewayOrder
+ {static} String XENDIT_GATEWAY_BODY_NULL
+ {static} String UNSUPPORTED_BANK_CODE_ERROR
+ {static} String BANK_CODE_NOT_SUPPORTED_ERROR
+ {static} String VIRTUAL_ACCOUNTS_NOT_FIND
- {static} String ALAMART_REFRESH_LIMIT
- {static} String BANK_ACCOUNT_QUERY_FAILED
- {static} String FEATURES_UN_SUPPORT
- {static} String BCA_GET_BALANCE_ERROR
}
enum com.welab.pay.gateway.response.GatewayResponsCodeTypeEnum {
+  XENDIT_gatewayOrder
+  RECIPIENT_NOT_FOUND_ERROR
+  XENDIT_GATEWAY_BODY_NULL
+  UNSUPPORTED_BANK_CODE_ERROR
+  BANK_CODE_NOT_SUPPORTED_ERROR
+  VIRTUAL_ACCOUNTS_NOT_FIND
+  ALAMART_REFRESH_LIMIT
+  BANK_ACCOUNT_QUERY_FAILED
+  FEATURES_UN_SUPPORT
+  BCA_GET_BALANCE_ERROR
- Integer code
- String message
- <<Create>> GatewayResponsCodeTypeEnum(Integer,String)
+ Integer getCode()
+ String getMessage()
}
class com.welab.pay.gateway.test.AccountServiceTest {
- AccountService accountService
- BniVirtualAccountImpl virtualAccount
- GatewayConfig gatewayConfig
+ void createVirtualAccount()
+ void updateVirtualAccount()
+ void getBanksforVirtualAccounts()
+ void queryOrCreateVirtualAccounts()
+ void queryOrCreateOrUpdateVirtualAccounts()
+ void createVAConcurrentTest()
+ void batchUpdateVirtualAccounts()
+ void getAccount()
+ void init()
}
class com.welab.pay.gateway.config.astrapay.wallet.Profile {
}
class com.welab.pay.gateway.config.astrapay.wallet.Profile$Request {
- String signature
}
class com.welab.pay.gateway.config.astrapay.wallet.Profile$Response {
- String balance
}
class com.welab.pay.gateway.app.impl.VirtualAccountServiceImpl {
- VirtualAccountQryExcute virtualAccountQryExcute
- VirtualAccountUpdateCmdExcute virtualAccountUpdateCmdExcute
- CreateVANumberCmdExcute createVANumberCmdExcute
- VirtualAccountAddCmdExcute virtualAccountAddCmdExcute
- BaseVirtualAccountService baseVirtualAccountService
+ Response<PageInfo<VirtualAccountDto>> list(VirtualAccountQry)
+ Response<Boolean> virtualAccountUpdate(VirtualAccountUpdateCmd)
+ Response<Boolean> virtualAccountUpdateByAccount(VirtualAccountUpdateByAccountCmd)
+ Response<String> createVANumber(CreateVANumberCmd)
+ Response<Boolean> virtualAccountAdd(VirtualAccountAddCmd)
+ Response<VirtualAccountVO> getAccount(String,FundEnum)
}
interface com.welab.pay.gateway.mapper.VirtualAccountPayBackNoticeMapper {
~ long countByExample(VirtualAccountPayBackNoticeExample)
~ int deleteByExample(VirtualAccountPayBackNoticeExample)
~ int deleteByPrimaryKey(Long)
~ int insert(VirtualAccountPayBackNotice)
~ int insertSelective(VirtualAccountPayBackNotice)
~ List<VirtualAccountPayBackNotice> selectByExample(VirtualAccountPayBackNoticeExample)
~ VirtualAccountPayBackNotice selectByPrimaryKey(Long)
~ int updateByExampleSelective(VirtualAccountPayBackNotice,VirtualAccountPayBackNoticeExample)
~ int updateByExample(VirtualAccountPayBackNotice,VirtualAccountPayBackNoticeExample)
~ int updateByPrimaryKeySelective(VirtualAccountPayBackNotice)
~ int updateByPrimaryKey(VirtualAccountPayBackNotice)
}
interface com.welab.pay.gateway.common.RedisKeys {
~ String GATEWAY_KEY
~ String BNI_VALIDATOR_FAIL
~ String BNI_VALIDATOR_LIMIT
~ String CREATE_VA_LOCK
}
interface com.welab.pay.gateway.Invoice {
+ Response<InvoiceVO> createInvoice(InvoiceDto)
+ Response<InvoiceVO> updateInvoice(UpdateInvoiceDto)
}
class com.welab.pay.gateway.dto.BankAccountDto {
- {static} long serialVersionUID
- String bankCode
- String bankAccountNumber
- String bankAccountHolderName
- FundEnum fundEnum
- Integer fundId
}
class com.welab.pay.gateway.dto.mq.DisbursementMqDto {
- {static} long serialVersionUID
- String platform
- Long userId
- String externalId
- Long amount
- String bankCode
- String accountHolderName
- String failure
- String failureCode
- String status
- Date paidDate
- String orderNo
- FundEnum fundEnum
- String debitAccountNo
- String creditAccountNo
- String loanNum
- String remark
}
class com.welab.pay.gateway.dto.InvoiceDto {
- FundEnum fundEnum
- PlatformEnum platformEnum
- Long userId
- {static} long serialVersionUID
- String externalId
- String virtualAccountNumber
- Boolean shouldSendEmail
- String payerEmail
- String description
- Long amount
- String loanNum
- String customerName
- String paymentChannel
- String mobile
}
enum com.welab.pay.gateway.enums.VirtualAccountPayBackNoticeEnum {
+  BROADCAST
+  QUEUE
+  NO_NOTICE
- String type
- String desc
+ {static} VirtualAccountPayBackNoticeEnum getByType(String)
}
class com.welab.pay.gateway.model.GatewayAmountRecord {
- Long id
- Date createAt
- Date updateAt
- Byte fundId
- String fundName
- Long operationAmount
- String taskId
- String remark
- String extendId
- String receiptAccount
- String receiptAccountName
- String expenditureAccount
- String expenditureAccountName
- String thirdpartyId
- Long fees
+ Long getId()
+ void setId(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ Byte getFundId()
+ void setFundId(Byte)
+ String getFundName()
+ void setFundName(String)
+ Long getOperationAmount()
+ void setOperationAmount(Long)
+ String getTaskId()
+ void setTaskId(String)
+ String getRemark()
+ void setRemark(String)
+ String getExtendId()
+ void setExtendId(String)
+ String getReceiptAccount()
+ void setReceiptAccount(String)
+ String getReceiptAccountName()
+ void setReceiptAccountName(String)
+ String getExpenditureAccount()
+ void setExpenditureAccount(String)
+ String getExpenditureAccountName()
+ void setExpenditureAccountName(String)
+ String getThirdpartyId()
+ void setThirdpartyId(String)
+ Long getFees()
+ void setFees(Long)
}
class com.welab.pay.gateway.config.WebAppConfigurer {
+ void addInterceptors(InterceptorRegistry)
}
enum com.welab.pay.gateway.config.bni.BNIFund {
}
class com.welab.pay.gateway.http.test.BNIPaymentHttpUtilsTest {
- String signatureFilePath
- String p12Password
- String url
- String client_id
- String client_name
- String secret_key
~ String username
+ void token()
+ void getinterbankinquiry()
+ void dopayment()
+ void getinterbankpayment()
+ void getpaymentstatus()
+ void getbalance()
+ void getinhouseinquiry()
+ {static} void main(String[])
}
class com.welab.pay.gateway.config.ErrorCodeConvert {
- {static} Map<String,Enum<?>> exceptionMap
+ {static} Response<T> convert(String,T)
}
class com.welab.pay.gateway.service.BaseMqService {
- GatewayMqMapper gatewayMqMapper
+ int save(GatewayMq)
}
class com.welab.pay.gateway.model.GatewayBankExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> GatewayBankExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.pay.gateway.model.GatewayBankExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Byte)
+ Criteria andFundIdNotEqualTo(Byte)
+ Criteria andFundIdGreaterThan(Byte)
+ Criteria andFundIdGreaterThanOrEqualTo(Byte)
+ Criteria andFundIdLessThan(Byte)
+ Criteria andFundIdLessThanOrEqualTo(Byte)
+ Criteria andFundIdIn(List<Byte>)
+ Criteria andFundIdNotIn(List<Byte>)
+ Criteria andFundIdBetween(Byte,Byte)
+ Criteria andFundIdNotBetween(Byte,Byte)
+ Criteria andCodeIsNull()
+ Criteria andCodeIsNotNull()
+ Criteria andCodeEqualTo(String)
+ Criteria andCodeNotEqualTo(String)
+ Criteria andCodeGreaterThan(String)
+ Criteria andCodeGreaterThanOrEqualTo(String)
+ Criteria andCodeLessThan(String)
+ Criteria andCodeLessThanOrEqualTo(String)
+ Criteria andCodeLike(String)
+ Criteria andCodeNotLike(String)
+ Criteria andCodeIn(List<String>)
+ Criteria andCodeNotIn(List<String>)
+ Criteria andCodeBetween(String,String)
+ Criteria andCodeNotBetween(String,String)
+ Criteria andNameIsNull()
+ Criteria andNameIsNotNull()
+ Criteria andNameEqualTo(String)
+ Criteria andNameNotEqualTo(String)
+ Criteria andNameGreaterThan(String)
+ Criteria andNameGreaterThanOrEqualTo(String)
+ Criteria andNameLessThan(String)
+ Criteria andNameLessThanOrEqualTo(String)
+ Criteria andNameLike(String)
+ Criteria andNameNotLike(String)
+ Criteria andNameIn(List<String>)
+ Criteria andNameNotIn(List<String>)
+ Criteria andNameBetween(String,String)
+ Criteria andNameNotBetween(String,String)
+ Criteria andIsAllowVirtualIsNull()
+ Criteria andIsAllowVirtualIsNotNull()
+ Criteria andIsAllowVirtualEqualTo(Boolean)
+ Criteria andIsAllowVirtualNotEqualTo(Boolean)
+ Criteria andIsAllowVirtualGreaterThan(Boolean)
+ Criteria andIsAllowVirtualGreaterThanOrEqualTo(Boolean)
+ Criteria andIsAllowVirtualLessThan(Boolean)
+ Criteria andIsAllowVirtualLessThanOrEqualTo(Boolean)
+ Criteria andIsAllowVirtualIn(List<Boolean>)
+ Criteria andIsAllowVirtualNotIn(List<Boolean>)
+ Criteria andIsAllowVirtualBetween(Boolean,Boolean)
+ Criteria andIsAllowVirtualNotBetween(Boolean,Boolean)
+ Criteria andGatewayCodeIsNull()
+ Criteria andGatewayCodeIsNotNull()
+ Criteria andGatewayCodeEqualTo(String)
+ Criteria andGatewayCodeNotEqualTo(String)
+ Criteria andGatewayCodeGreaterThan(String)
+ Criteria andGatewayCodeGreaterThanOrEqualTo(String)
+ Criteria andGatewayCodeLessThan(String)
+ Criteria andGatewayCodeLessThanOrEqualTo(String)
+ Criteria andGatewayCodeLike(String)
+ Criteria andGatewayCodeNotLike(String)
+ Criteria andGatewayCodeIn(List<String>)
+ Criteria andGatewayCodeNotIn(List<String>)
+ Criteria andGatewayCodeBetween(String,String)
+ Criteria andGatewayCodeNotBetween(String,String)
+ Criteria andExtConfigIsNull()
+ Criteria andExtConfigIsNotNull()
+ Criteria andExtConfigEqualTo(String)
+ Criteria andExtConfigNotEqualTo(String)
+ Criteria andExtConfigGreaterThan(String)
+ Criteria andExtConfigGreaterThanOrEqualTo(String)
+ Criteria andExtConfigLessThan(String)
+ Criteria andExtConfigLessThanOrEqualTo(String)
+ Criteria andExtConfigLike(String)
+ Criteria andExtConfigNotLike(String)
+ Criteria andExtConfigIn(List<String>)
+ Criteria andExtConfigNotIn(List<String>)
+ Criteria andExtConfigBetween(String,String)
+ Criteria andExtConfigNotBetween(String,String)
+ Criteria andSortIsNull()
+ Criteria andSortIsNotNull()
+ Criteria andSortEqualTo(Integer)
+ Criteria andSortNotEqualTo(Integer)
+ Criteria andSortGreaterThan(Integer)
+ Criteria andSortGreaterThanOrEqualTo(Integer)
+ Criteria andSortLessThan(Integer)
+ Criteria andSortLessThanOrEqualTo(Integer)
+ Criteria andSortIn(List<Integer>)
+ Criteria andSortNotIn(List<Integer>)
+ Criteria andSortBetween(Integer,Integer)
+ Criteria andSortNotBetween(Integer,Integer)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
}
class com.welab.pay.gateway.model.GatewayBankExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.pay.gateway.model.GatewayBankExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
interface com.welab.pay.gateway.service.InvoiceService {
+ Response<InvoiceVO> createInvoice(InvoiceDto)
+ Response<InvoiceVO> getInvoiceById(String)
+ Response<Boolean> expireInvoice(String)
}
class com.welab.pay.gateway.filter.LogFilter {
- {static} Logger LOGGER
- {static} String NOTIFICATION_PREFIX
- {static} String REQUEST_PREFIX
- {static} String RESPONSE_PREFIX
- AtomicLong _id
# void doFilterInternal(HttpServletRequest,HttpServletResponse,FilterChain)
+ void destroy()
- void log(StringBuilder)
- StringBuilder prefixId(StringBuilder,long)
- void printRequestLine(StringBuilder,String,long,String,String)
- void printResponseLine(StringBuilder,String,long,int)
- void printPrefixedHeaders(StringBuilder,long,String,HttpServletRequest)
}
class com.welab.pay.gateway.controller.faspay.FasPayCallbackController {
- BaseVirtualAccountService baseVirtualAccountService
- BaseOrderService baseOrderService
- BaseTaskService baseTaskService
- BaseCallbackService baseCallbackService
- BaseAmountRecordService baseAmountRecordService
- RepaymentHelper repaymentHelper
- GatewayConfig gatewayConfig
- DuesService duesService
- MqForward mqForward
+ Object onlinePayment(HttpServletRequest)
+ Object payment(HttpServletRequest)
+ Object inquiryVm(HttpServletRequest,String,String)
- Object vmInquiry(String)
- Object vmPayment(String,String,HttpServletRequest)
}
class com.welab.pay.gateway.http.BNIPaymentHttpUtils {
- {static} JedisCluster jedisCluster
+ {static} BNIPaymentConfig.Token.Response token(String,String,String,String)
+ {static} BNIPaymentConfig.Getinterbankinquiry.Response getinterbankinquiry(String,String,String,String,String,String,String,BNIPaymentConfig.Getinterbankinquiry.Request)
+ {static} BNIPaymentConfig.Getinterbankpayment.Response getinterbankpayment(String,String,String,String,String,String,String,BNIPaymentConfig.Getinterbankpayment.Request)
+ {static} BNIPaymentConfig.Getbalance.Response getbalance(String,String,String,String,String,String,String,BNIPaymentConfig.Getbalance.Request)
+ {static} BNIPaymentConfig.Dopayment.Response dopayment(String,String,String,String,String,String,String,BNIPaymentConfig.Dopayment.Request)
+ {static} BNIPaymentConfig.Getpaymentstatus.Response getpaymentstatus(String,String,String,String,String,String,String,BNIPaymentConfig.Getpaymentstatus.Request)
+ {static} BNIPaymentConfig.Getinhouseinquiry.Response getinhouseinquiry(String,String,String,String,String,String,String,BNIPaymentConfig.Getinhouseinquiry.Request)
- {static} Map<String,String> getToken(String,String,String,String)
- {static} void signature(String,String,String,String,BNIPaymentConfig.WrapReqeust,String)
+ {static} T convert(String,Class<T>)
+ {static} void main(String[])
+ {static} BNIPaymentConfig.Getinterbankinquiry.Response getinterbankinquiry(GatewayDto,Request)
+ {static} Dopayment.Response dopayment(GatewayDto,com.welab.pay.gateway.config.bni.BNIPaymentConfig.Dopayment.Request)
+ {static} Getinterbankpayment.Response getinterbankpayment(GatewayDto,com.welab.pay.gateway.config.bni.BNIPaymentConfig.Getinterbankpayment.Request)
+ {static} Getpaymentstatus.Response getpaymentstatus(GatewayDto,com.welab.pay.gateway.config.bni.BNIPaymentConfig.Getpaymentstatus.Request)
+ {static} Getbalance.Response getbalance(GatewayDto,com.welab.pay.gateway.config.bni.BNIPaymentConfig.Getbalance.Request)
+ {static} Response getinhouseinquiry(GatewayDto,com.welab.pay.gateway.config.bni.BNIPaymentConfig.Getinhouseinquiry.Request)
}
interface com.welab.pay.gateway.common.Urls {
~ String ROOT
~ String ROOT_DESC
~ String V1
~ String V3
~ String V3_NOAUTH
}
interface com.welab.pay.gateway.common.Urls$Pay {
~ String MODEL
~ String V1_GET_AVAILABLE_BANKS
~ String V1_GET_AVAILABLE_BANKS_DESC
}
interface com.welab.pay.gateway.common.Urls$Repair {
~ String MODEL
~ String V1_REPAIR_PAYING
~ String V1_REPAIR_PAYING_DESC
}
interface com.welab.pay.gateway.common.Urls$Account {
~ String MODEL
~ String V1_GET_BANKS_FOR_VIRTUAL_ACCOUNTS
~ String V1_GET_BANKS_FOR_VIRTUAL_ACCOUNTS_DESC
~ String V1_GET_INIT
~ String V1_GET_INIT_DESC
}
interface com.welab.pay.gateway.common.Urls$Validator {
~ String MODEL
~ String V1_VALIDATOR_BANK_ACCOUNT
~ String V1_VALIDATOR_BANK_ACCOUNT_DESC
}
interface com.welab.pay.gateway.common.Urls$Monitor {
~ String MONITOR
~ String MONITOR_DESC
}
interface com.welab.pay.gateway.common.Urls$AstraPay {
~ String ASTRAPAY
~ String ASTRAPAY_DESC
~ String INQUIRY_VM
~ String INQUIRY_VM_DESC
~ String PAYMENT
~ String PAYMENT_DESC
~ String CHECK_STATUS
~ String CHECK_STATUS_DESC
}
interface com.welab.pay.gateway.common.Urls$AstraPayWallet {
~ String ASTRAPAY_WALLET
~ String ASTRAPAY_WALLET_DESC
~ String ACCOUNT_CALLBACK
~ String ACCOUNT_CALLBACK_DESC
~ String PAYMENT_CALLBACK
~ String PAYMENT_CALLBACK_DESC
}
interface com.welab.pay.gateway.common.Urls$Simulate {
~ String MODEL
~ String V1_DISBURSEMENT_CALLBACK
~ String V1_DISBURSEMENT_CALLBACK_DESC
~ String V1_INVOICES_CALLBACK
~ String V1_INVOICES_CALLBACK_DESC
~ String V1_FIXED_VIRTUAL_ACCOUNTS_PAYMENT_CALLBACK
~ String V1_FIXED_VIRTUAL_ACCOUNTS_PAYMENT_CALLBACK_DESC
~ String V1_FIXED_VIRTUAL_ACCOUNTS_CALLBACK
~ String V1_FIXED_VIRTUAL_ACCOUNTS_CALLBACK_DESC
~ String V1_BANK_ACCOUNT_DATAS_CALLBACK
~ String V1_BANK_ACCOUNT_DATA_CALLBACK_DESC
}
interface com.welab.pay.gateway.common.Urls$Bca {
~ String MODEL
~ String BCA_TOKEN
~ String BCA_BILLS
~ String BCA_PAYMENTS
}
interface com.welab.pay.gateway.service.VirtualAccountService {
~ Response<PageInfo<VirtualAccountDto>> list(VirtualAccountQry)
~ Response<Boolean> virtualAccountUpdate(VirtualAccountUpdateCmd)
~ Response<Boolean> virtualAccountUpdateByAccount(VirtualAccountUpdateByAccountCmd)
~ Response<String> createVANumber(CreateVANumberCmd)
~ Response<Boolean> virtualAccountAdd(VirtualAccountAddCmd)
+ Response<VirtualAccountVO> getAccount(String,FundEnum)
}
interface com.welab.pay.gateway.config.bni.BNIConfig {
}
class com.welab.pay.gateway.config.bni.BNIConfig$Bill {
- String type
- String client_id
- String trx_id
- String trx_amount
- String billing_type
- String customer_name
- String customer_email
- String customer_phone
- String virtual_account
- String datetime_expired
- String description
}
class com.welab.pay.gateway.config.bni.BNIConfig$WrapResponse {
- String status
- String message
- String data
}
interface com.welab.pay.gateway.config.bni.BNIConfig$Createbilling {
}
class com.welab.pay.gateway.config.bni.BNIConfig$Createbilling$Request {
+ <<Create>> Request()
}
class com.welab.pay.gateway.config.bni.BNIConfig$Createbilling$Response {
- String client_id
- String virtual_account
}
class com.welab.pay.gateway.config.bni.BNIConfig$Createbilling$CallBack {
- String trx_id
- String virtual_account
- String customer_name
- String trx_amount
- String payment_amount
- String cumulative_payment_amount
- String payment_ntb
- String datetime_payment
- String datetime_payment_iso8601
}
interface com.welab.pay.gateway.config.bni.BNIConfig$InquiryBilling {
}
class com.welab.pay.gateway.config.bni.BNIConfig$InquiryBilling$Request {
+ <<Create>> Request()
}
class com.welab.pay.gateway.config.bni.BNIConfig$InquiryBilling$Response {
- String va_status
- String payment_ntb
- String payment_amount
- String datetime_created
- String datetime_payment
- String datetime_last_updated
}
interface com.welab.pay.gateway.config.bni.BNIConfig$Updatebilling {
}
class com.welab.pay.gateway.config.bni.BNIConfig$Updatebilling$Request {
+ <<Create>> Request()
}
class com.welab.pay.gateway.config.bni.BNIConfig$Updatebilling$Response {
- String trx_id
- String virtual_account
}
class com.welab.pay.gateway.vo.AccountVO {
- {static} long serialVersionUID
- String name
- Long amount
}
interface com.welab.pay.gateway.config.permata.PermataConstant {
~ String OAUTH_SIGNATURE
~ String OAUTH_TIMESTAMP
~ String API_KEY
~ String AUTHORIZATION
~ String ORGANIZATIONNAME
~ String PERMATA_TIMESTAMP
~ String PERMATA_SIGNATURE
}
interface com.welab.pay.gateway.service.PayService {
+ Response<PayingVO> paying(PayingDto)
+ Response<Void> asyncPaying(PayingDto)
+ Response<PayingVO> payingForOffline(PayingDto)
+ Response<TransferVO> transfer(TransferDto)
+ Response<Void> asyncTransfer(TransferDto)
+ Response<RefundVO> refund(RefundDto)
+ Response<PayingVO> getPayingVOByTaskId(String)
+ Response<List<PayingVO>> getPayingVOByLoanNum(String)
+ Response<List<BankVO>> getAvailableBanks(FundEnum)
+ Response<Void> batchCancelPaying(List<String>)
+ Response<Void> cancelByExtendId(String,PlatformEnum)
+ Response<Boolean> isExistExtendIdForTask(String)
+ Response<Boolean> isExistExtendIdForTask(String,PlatformEnum)
}
class com.welab.pay.gateway.model.GatewayRepaymentOrderExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> GatewayRepaymentOrderExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.pay.gateway.model.GatewayRepaymentOrderExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
+ Criteria andTrxChannelIsNull()
+ Criteria andTrxChannelIsNotNull()
+ Criteria andTrxChannelEqualTo(String)
+ Criteria andTrxChannelNotEqualTo(String)
+ Criteria andTrxChannelGreaterThan(String)
+ Criteria andTrxChannelGreaterThanOrEqualTo(String)
+ Criteria andTrxChannelLessThan(String)
+ Criteria andTrxChannelLessThanOrEqualTo(String)
+ Criteria andTrxChannelLike(String)
+ Criteria andTrxChannelNotLike(String)
+ Criteria andTrxChannelIn(List<String>)
+ Criteria andTrxChannelNotIn(List<String>)
+ Criteria andTrxChannelBetween(String,String)
+ Criteria andTrxChannelNotBetween(String,String)
+ Criteria andTrxIdOrVaIsNull()
+ Criteria andTrxIdOrVaIsNotNull()
+ Criteria andTrxIdOrVaEqualTo(String)
+ Criteria andTrxIdOrVaNotEqualTo(String)
+ Criteria andTrxIdOrVaGreaterThan(String)
+ Criteria andTrxIdOrVaGreaterThanOrEqualTo(String)
+ Criteria andTrxIdOrVaLessThan(String)
+ Criteria andTrxIdOrVaLessThanOrEqualTo(String)
+ Criteria andTrxIdOrVaLike(String)
+ Criteria andTrxIdOrVaNotLike(String)
+ Criteria andTrxIdOrVaIn(List<String>)
+ Criteria andTrxIdOrVaNotIn(List<String>)
+ Criteria andTrxIdOrVaBetween(String,String)
+ Criteria andTrxIdOrVaNotBetween(String,String)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andTransactionDateIsNull()
+ Criteria andTransactionDateIsNotNull()
+ Criteria andTransactionDateEqualTo(Date)
+ Criteria andTransactionDateNotEqualTo(Date)
+ Criteria andTransactionDateGreaterThan(Date)
+ Criteria andTransactionDateGreaterThanOrEqualTo(Date)
+ Criteria andTransactionDateLessThan(Date)
+ Criteria andTransactionDateLessThanOrEqualTo(Date)
+ Criteria andTransactionDateIn(List<Date>)
+ Criteria andTransactionDateNotIn(List<Date>)
+ Criteria andTransactionDateBetween(Date,Date)
+ Criteria andTransactionDateNotBetween(Date,Date)
+ Criteria andOrderNoIsNull()
+ Criteria andOrderNoIsNotNull()
+ Criteria andOrderNoEqualTo(String)
+ Criteria andOrderNoNotEqualTo(String)
+ Criteria andOrderNoGreaterThan(String)
+ Criteria andOrderNoGreaterThanOrEqualTo(String)
+ Criteria andOrderNoLessThan(String)
+ Criteria andOrderNoLessThanOrEqualTo(String)
+ Criteria andOrderNoLike(String)
+ Criteria andOrderNoNotLike(String)
+ Criteria andOrderNoIn(List<String>)
+ Criteria andOrderNoNotIn(List<String>)
+ Criteria andOrderNoBetween(String,String)
+ Criteria andOrderNoNotBetween(String,String)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
}
class com.welab.pay.gateway.model.GatewayRepaymentOrderExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.pay.gateway.model.GatewayRepaymentOrderExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
interface com.welab.pay.gateway.mapper.GatewayConfigMapper {
~ long countByExample(GatewayConfigExample)
~ int deleteByExample(GatewayConfigExample)
~ int deleteByPrimaryKey(Integer)
~ int insert(GatewayConfig)
~ int insertSelective(GatewayConfig)
~ List<GatewayConfig> selectByExample(GatewayConfigExample)
~ GatewayConfig selectByPrimaryKey(Integer)
~ int updateByExampleSelective(GatewayConfig,GatewayConfigExample)
~ int updateByExample(GatewayConfig,GatewayConfigExample)
~ int updateByPrimaryKeySelective(GatewayConfig)
~ int updateByPrimaryKey(GatewayConfig)
}
class com.welab.pay.gateway.app.command.bca.BcaTransIdCmdExe {
- {static} String BCA_TRANS_ID_KEY
- {static} Long MAX_TRANS_ID
+ String generateTransId()
}
class com.welab.pay.gateway.config.bni.BNIPaymentSignature {
+ {static} String getSignature(String,String,String)
+ {static} void main(String[])
}
class com.welab.pay.gateway.app.command.CreateVANumberCmdExcute {
- BaseBankServcie baseBankServcie
- JedisCluster jedisCluster
- {static} String PREFIX
+ Response<String> excute(CreateVANumberCmd)
- {static} String bulidVirtualAccount(String,int)
- {static} String buildBNIVirtualAccount()
}
interface com.welab.pay.gateway.service.QueryTaskService {
+ Response<List<TaskVO>> queryListByExtendAndType(String,TaskTypeEnum)
+ Response<TaskVO> queryByTaskId(String)
+ Response<PageInfo> queryTaskByPage(QueryTaskDto)
+ Response<Void> retryTask(QueryTaskDto)
~ Response<List<TaskVO>> queryFailureTasks(List<String>,List<TaskTypeEnum>)
+ Response<Void> expiredTask(Long)
+ Response<Void> retryTaskStatusInquire(QueryTaskDto)
~ List<String> getLoanNumList(List<String>)
+ List<String> getThirdpartyIdList(List<String>)
~ List<GatewayTaskRequestVO> queryTaskRequestDetails(PlatformEnum,String)
~ Response<List<TaskVO>> getLoanListByExtendId(List<String>,PlatformEnum)
}
class com.welab.pay.gateway.helper.RequestServiceHelper {
- MqForward mqForward
+ void add(String,String,String,String)
}
class com.welab.pay.gateway.config.astrapay.wallet.TransactionStatus {
}
class com.welab.pay.gateway.config.astrapay.wallet.TransactionStatus$Request {
- String merchantTransactionId
}
class com.welab.pay.gateway.config.astrapay.wallet.TransactionStatus$Response {
- String merchantTransactionId
- String astrapayTransactionId
- String amount
- String status
}
class com.welab.pay.gateway.model.GatewayAmountExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> GatewayAmountExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.pay.gateway.model.GatewayAmountExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andAccountNoIsNull()
+ Criteria andAccountNoIsNotNull()
+ Criteria andAccountNoEqualTo(String)
+ Criteria andAccountNoNotEqualTo(String)
+ Criteria andAccountNoGreaterThan(String)
+ Criteria andAccountNoGreaterThanOrEqualTo(String)
+ Criteria andAccountNoLessThan(String)
+ Criteria andAccountNoLessThanOrEqualTo(String)
+ Criteria andAccountNoLike(String)
+ Criteria andAccountNoNotLike(String)
+ Criteria andAccountNoIn(List<String>)
+ Criteria andAccountNoNotIn(List<String>)
+ Criteria andAccountNoBetween(String,String)
+ Criteria andAccountNoNotBetween(String,String)
+ Criteria andAccountNameIsNull()
+ Criteria andAccountNameIsNotNull()
+ Criteria andAccountNameEqualTo(String)
+ Criteria andAccountNameNotEqualTo(String)
+ Criteria andAccountNameGreaterThan(String)
+ Criteria andAccountNameGreaterThanOrEqualTo(String)
+ Criteria andAccountNameLessThan(String)
+ Criteria andAccountNameLessThanOrEqualTo(String)
+ Criteria andAccountNameLike(String)
+ Criteria andAccountNameNotLike(String)
+ Criteria andAccountNameIn(List<String>)
+ Criteria andAccountNameNotIn(List<String>)
+ Criteria andAccountNameBetween(String,String)
+ Criteria andAccountNameNotBetween(String,String)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andRelationIdIsNull()
+ Criteria andRelationIdIsNotNull()
+ Criteria andRelationIdEqualTo(String)
+ Criteria andRelationIdNotEqualTo(String)
+ Criteria andRelationIdGreaterThan(String)
+ Criteria andRelationIdGreaterThanOrEqualTo(String)
+ Criteria andRelationIdLessThan(String)
+ Criteria andRelationIdLessThanOrEqualTo(String)
+ Criteria andRelationIdLike(String)
+ Criteria andRelationIdNotLike(String)
+ Criteria andRelationIdIn(List<String>)
+ Criteria andRelationIdNotIn(List<String>)
+ Criteria andRelationIdBetween(String,String)
+ Criteria andRelationIdNotBetween(String,String)
+ Criteria andTransactionAtIsNull()
+ Criteria andTransactionAtIsNotNull()
+ Criteria andTransactionAtEqualTo(Date)
+ Criteria andTransactionAtNotEqualTo(Date)
+ Criteria andTransactionAtGreaterThan(Date)
+ Criteria andTransactionAtGreaterThanOrEqualTo(Date)
+ Criteria andTransactionAtLessThan(Date)
+ Criteria andTransactionAtLessThanOrEqualTo(Date)
+ Criteria andTransactionAtIn(List<Date>)
+ Criteria andTransactionAtNotIn(List<Date>)
+ Criteria andTransactionAtBetween(Date,Date)
+ Criteria andTransactionAtNotBetween(Date,Date)
}
class com.welab.pay.gateway.model.GatewayAmountExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.pay.gateway.model.GatewayAmountExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.pay.gateway.vo.bca.VaPaymentsReqVO {
- String CompanyCode
- String CustomerNumber
- String RequestID
- String ChannelType
- String CustomerName
- String CurrencyCode
- String PaidAmount
- String TotalAmount
- String SubCompany
- String TransactionDate
- String Reference
- List<DetailBill> DetailBills
- String FlagAdvice
- String Additionaldata
}
class com.welab.pay.gateway.vo.bca.VaPaymentsReqVO$DetailBill {
- String BillAmount
- String BillNumber
- String BillSubCompany
- String BillReference
}
class com.welab.pay.gateway.impl.bni.BniVirtualAccountImpl {
- BaseVirtualAccountService baseVirtualAccountService
- BaseRequestService baseRequestService
- MqForward mqForward
- Boolean mock
- BniInvoiceImpl bniInvoice
+ Response<VirtualAccountVO> createVirtualAccount(VirtualAccountDto)
+ Response<VirtualAccountVO> updateVirtualAccount(UpdateVirtualAccountDto)
+ Response<List<BankVO>> getBanksforVirtualAccounts(FundEnum)
+ Response<List<VirtualAccountVO>> queryOrCreateVirtualAccounts(VirtualAccountDto)
+ Response<List<VirtualAccountVO>> queryOrCreateOrUpdateVirtualAccounts(VirtualAccountDto)
+ Response<Boolean> batchUpdateVirtualAccounts(List<VirtualAccountDto>)
+ String buildVirtualAccount(String,String)
}
class com.welab.pay.gateway.vo.bca.VaPaymentsResVO {
- String CompanyCode
- String CustomerNumber
- String RequestID
- String PaymentFlagStatus
- BcaApiModel.BaseBcaHttpRes.BcaResultMsg PaymentFlagReason
- String CustomerName
- String CurrencyCode
- String PaidAmount
- String TotalAmount
- String TransactionDate
- List<DetailBill> DetailBills
- List<BcaApiModel.BaseBcaHttpRes.BcaResultMsg> FreeTexts
- String AdditionalData
+ {static} VaPaymentsResVO buildVaPaymentsRes(VaPaymentsReqVO,String,String,String)
}
class com.welab.pay.gateway.vo.bca.VaPaymentsResVO$DetailBill {
- String BillNumber
- String Status
- BcaApiModel.BaseBcaHttpRes.BcaResultMsg Reason
}
class com.welab.pay.gateway.utils.LuaUtil {
- {static} String bca_trans_id_script
- <<Create>> LuaUtil()
+ {static} Long bcaTransIdIncr(String,long)
+ {static} JedisCluster getJedisCluster()
}
class com.welab.pay.gateway.impl.bni.BniAccountImpl {
- RequestServiceHelper requestServiceHelper
+ Response<AccountVO> getAccount(AccountDto)
}
class com.welab.pay.gateway.vo.PayingVO {
- {static} long serialVersionUID
- Date createAt
- Date paidAt
- String externalId
- Long amount
- String bankCode
- String accountHolderName
- StatusEnum status
- String taskId
- String offlineCode
- Date expirationTime
- Integer remainingSecond
}
class com.welab.pay.gateway.impl.bca.BcaAccountImpl {
- BcaManager bcaManager
+ Response<AccountVO> getAccount(AccountDto)
}
class com.welab.pay.gateway.test.BniInvoiceTest {
- BniInvoiceImpl bniInvoice
- JedisCluster jedisCluster
- BaseVirtualAccountService baseVirtualAccountService
+ void testUpdateInvoice()
+ void test2()
+ {static} void main(String[])
}
interface com.welab.pay.gateway.config.faspay.FaspayErrorCode {
+ String SUCCESS
+ String FAILURE
}
class com.welab.pay.gateway.vo.GatewayTaskRequestVO {
- StatusEnum statusEnum
- String thirdpartyId
- String url
- String responseBody
}
class com.welab.pay.gateway.impl.bni.BniAccountHelper {
- BaseAmountService baseAmountService
- boolean mock
- void refresh(String,String,Date)
}
class com.welab.pay.gateway.http.test.RepaymentOrderTest {
- GatewayRepaymentOrderService gatewayRepaymentOrderService
+ void testList()
}
class com.welab.pay.gateway.controller.callback.SimulateCallbackController {
- BaseTaskService baseTaskService
- BaseOrderService baseOrderService
- BaseVirtualAccountService baseVirtualAccountService
- BaseAmountRecordService baseAmountRecordService
- RepaymentHelper repaymentHelper
- Boolean mock
- Integer alfamartExpirationTime
- BaseRequestService baseRequestService
- PermataPayment permataPayment
- BniPayment bniPayment
- BniVirtualAccountImpl bniVaService
- AccountService accountService
- BcaPayment bcaPayment
- PaymentHelper paymentHelper
- BaseGatewayRepaymentOrderService repaymentOrderService
- {static} Long PT_FEDERAL_INTERNATIONAL_USER_ID
+ Object monitor(HttpServletRequest)
- Object bcaBankCardInquiry(HttpServletRequest)
+ void llgTransfer(HttpServletRequest)
+ String receipt(HttpServletRequest)
+ Response createVA(HttpServletRequest)
}
class com.welab.pay.gateway.exception.PayGatewayException {
- {static} long serialVersionUID
}
class com.welab.pay.gateway.job.AstraPayWalletTransactionStatusJob {
- BaseOrderService baseOrderService
- AstraPayWalletManager astraPayWalletManager
+ void execute(ShardingContext)
- void handTransaction(ExecutorService,List<GatewayOrder>,CountDownLatch)
- void handTransactionStatus(GatewayOrder)
}
class com.welab.pay.gateway.job.AstraPayWalletTransactionStatusJob$JobParam {
- ShardingContext shardingContext
- Date statrTime
- Date endTime
+ <<Create>> JobParam(ShardingContext)
+ JobParam invoke()
}
class com.welab.pay.gateway.impl.simulate.SimulateInvoiceImpl {
- BaseVirtualAccountService baseVirtualAccountService
+ Response<InvoiceVO> createInvoice(InvoiceDto)
+ Response<InvoiceVO> updateInvoice(UpdateInvoiceDto)
}
class com.welab.pay.gateway.mq.MqConfig {
}
class com.welab.pay.gateway.model.GatewayBank {
- Long id
- Date createAt
- Date updateAt
- Byte fundId
- String code
- String name
- Boolean isAllowVirtual
- String gatewayCode
- String extConfig
- Integer sort
- Boolean deleted
+ Long getId()
+ void setId(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ Byte getFundId()
+ void setFundId(Byte)
+ String getCode()
+ void setCode(String)
+ String getName()
+ void setName(String)
+ Boolean getIsAllowVirtual()
+ void setIsAllowVirtual(Boolean)
+ String getGatewayCode()
+ void setGatewayCode(String)
+ String getExtConfig()
+ void setExtConfig(String)
+ Integer getSort()
+ void setSort(Integer)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
}
class com.welab.pay.gateway.job.TaskNotify {
- BaseRequestService baseRequestService
- BaseAmountRecordService baseAmountRecordService
- MqForward mqForward
- Boolean mock
- String mockRequestResult
- BaseTaskService baseTaskService
- BNIManager bniManager
- Integer repairCount
- BcaManager bcaManager
+ void handleTask(GatewayTask)
+ void handleBniTask(GatewayTask)
+ void handlePermataTask(GatewayTask)
+ void handleBcaTask(GatewayTask)
+ void handleFailTask(FundEnum,GatewayTask,Long)
+ void handleCommonPayTask(FundEnum,GatewayTask,Long)
+ void handleCommonPayTask(FundEnum,GatewayTask,Long,Date)
- void notifyPaying(FundEnum,GatewayTask,Long,PayingDto,String)
- void notifyPaying(FundEnum,GatewayTask,Long,PayingDto,String,Date)
- void notifyTransfer(FundEnum,GatewayTask,Long,TransferDto,StatusEnum)
+ DisbursementStatusResponse checkBniPaymentstatus(GatewayTask)
+ {static} boolean isSuccess(BNIPaymentConfig.Getpaymentstatus.Response)
+ {static} boolean isAccountQuerySuccessV12(BNIPaymentConfig12.Getinhouseinquiry.Response)
+ PermataLoanConfig.StatusTransaction.Response checkPermataPaymentstatus(GatewayTask)
}
class com.welab.pay.gateway.utils.HMACSHA256Util {
- {static} String byteArrayToHexString(byte[])
+ {static} String sha256_HMAC(String,String)
+ {static} String sha256_HMAC_BASE64(String,String)
+ {static} void main(String[])
}
class com.welab.pay.gateway.mq.consumers.VACreateConsumer {
+ void onMessage(Message)
}
class com.welab.pay.gateway.model.GatewayVirtualAccount {
- Long id
- String name
- Date createAt
- Date updateAt
- String ownerId
- String externalId
- String accountNumber
- String bankCode
- String merchantCode
- String thirdpartyId
- Boolean isClosed
- Date expirationDate
- Boolean isSingleUse
- Long suggestedAmount
- String status
- Byte fundId
- Long userId
+ Long getId()
+ void setId(Long)
+ String getName()
+ void setName(String)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ String getOwnerId()
+ void setOwnerId(String)
+ String getExternalId()
+ void setExternalId(String)
+ String getAccountNumber()
+ void setAccountNumber(String)
+ String getBankCode()
+ void setBankCode(String)
+ String getMerchantCode()
+ void setMerchantCode(String)
+ String getThirdpartyId()
+ void setThirdpartyId(String)
+ Boolean getIsClosed()
+ void setIsClosed(Boolean)
+ Date getExpirationDate()
+ void setExpirationDate(Date)
+ Boolean getIsSingleUse()
+ void setIsSingleUse(Boolean)
+ Long getSuggestedAmount()
+ void setSuggestedAmount(Long)
+ String getStatus()
+ void setStatus(String)
+ Byte getFundId()
+ void setFundId(Byte)
+ Long getUserId()
+ void setUserId(Long)
}
class com.welab.pay.gateway.http.test.SHA1 {
+ {static} String SHA1(String)
+ {static} String MD5(String)
+ {static} void main(String[])
}
class com.welab.pay.gateway.response.DisbursementResponse {
- String responseCode
- String errorMessage
- String responseBody
+ <<Create>> DisbursementResponse(String,String,String)
+ <<Create>> DisbursementResponse()
}
class com.welab.pay.gateway.controller.AccountController {
- AccountService accountService
- BNIAuthenticateConfig config
+ Object getBanksforVirtualAccounts(HttpServletRequest,Object)
+ Response<String> init()
+ BNIPaymentConfig12.Token.Response token()
}
class com.welab.pay.gateway.controller.callback.BniCallbackController {
- BaseCallbackService baseCallbackService
- BaseVirtualAccountService baseVirtualAccountService
- RepaymentHelper repaymentHelper
- BaseAmountRecordService baseAmountRecordService
- BaseOrderService baseOrderService
- MqForward mqForward
- BaseGatewayRepaymentOrderService repaymentOrderService
- AccountService accountService
- String refundVirAccount
- {static} Long PT_FEDERAL_INTERNATIONAL_USER_ID
+ Map<String,String> bniDisbursement(HttpServletRequest)
}
class com.welab.pay.gateway.dto.cmd.VirtualAccountUpdateByAccountCmd {
- String accountNumber
- FundEnum fundEnum
- Long amount
- Integer status
}
class com.welab.pay.gateway.impl.faspay.PaspayInvoiceImpl {
- BaseRequestService baseRequestService
- BaseOrderService baseOrderService
- PaymentHelper paymentHelper
- BaseTaskService baseTaskService
+ Response<InvoiceVO> createInvoice(InvoiceDto)
+ Response<InvoiceVO> updateInvoice(UpdateInvoiceDto)
}
class com.welab.pay.gateway.http.AstraPayWalletHttpUtils {
- {static} JedisCluster jedisCluster
- {static} AstrapayWalletConfiguration astrapayWalletConfiguration
- <<Create>> AstraPayWalletHttpUtils()
+ {static} Authorization.Response getAuthorization()
+ {static} Payment.Response payment(Payment.Request)
+ {static} Profile.Response profile(Profile.Request)
+ {static} TransactionStatus.Response transactionStatus(TransactionStatus.Request)
- {static} Authorization.Response getCacheAuthorization()
- {static} void init()
}
interface com.welab.pay.gateway.mapper.GatewayBankMapper {
~ long countByExample(GatewayBankExample)
~ int deleteByExample(GatewayBankExample)
~ int deleteByPrimaryKey(Long)
~ int insert(GatewayBank)
~ int insertSelective(GatewayBank)
~ List<GatewayBank> selectByExample(GatewayBankExample)
~ GatewayBank selectByPrimaryKey(Long)
~ int updateByExampleSelective(GatewayBank,GatewayBankExample)
~ int updateByExample(GatewayBank,GatewayBankExample)
~ int updateByPrimaryKeySelective(GatewayBank)
~ int updateByPrimaryKey(GatewayBank)
}
class com.welab.pay.gateway.utils.EncryptionUtil {
- <<Create>> EncryptionUtil()
+ {static} byte[] getSHA256(String)
+ {static} String byte2Hex(byte[])
}
class com.welab.pay.gateway.service.impl.PayServiceImpl {
- BaseTaskService gatewayTaskService
- BaseBankServcie baseBankServcie
- GatewayConfig gatewayConfig
- BaseOrderService baseOrderService
- MqForward mqForward
- CacheTransferExtendIdCmdExe cacheTransferExtendIdCmdExe
+ Response<PayingVO> paying(PayingDto)
+ Response<Void> asyncPaying(PayingDto)
+ Response<PayingVO> payingForOffline(PayingDto)
+ Response<PayingVO> getPayingVOByTaskId(String)
+ Response<List<PayingVO>> getPayingVOByLoanNum(String)
+ Response<List<BankVO>> getAvailableBanks(FundEnum)
+ Response<RefundVO> refund(RefundDto)
+ Response<TransferVO> transfer(TransferDto)
+ Response<Void> asyncTransfer(TransferDto)
+ Response<Void> batchCancelPaying(List<String>)
+ Response<Void> cancelByExtendId(String,PlatformEnum)
+ Response<Boolean> isExistExtendIdForTask(String)
+ Response<Boolean> isExistExtendIdForTask(String,PlatformEnum)
}
class com.welab.pay.gateway.controller.alfamart.AlfamartPayCallbackController {
- BaseOrderService baseOrderService
- BaseTaskService baseTaskService
- BaseCallbackService baseCallbackService
- TaskNotify taskNotify
- String secretkey
- String userName
- String password
- Boolean mock
- Boolean swichAlfamart
~ {static} ExecutorService executorService
+ void request(HttpServletRequest,HttpServletResponse)
+ AlfamartPaymentErrorCode checkStatus(GatewayOrder,RequestDto)
- void transactionSuccess(String,Long,GatewayOrder)
- RequestDto bulidRequestDto(HttpServletRequest)
- AlfamartPaymentErrorCode checkParam(RequestDto)
}
class com.welab.pay.gateway.controller.alfamart.AlfamartPayCallbackController$ResponseBulider {
- StringBuilder stringBuilder
+ <<Create>> ResponseBulider()
+ ResponseBulider append(String)
+ String bulid()
}
class com.welab.pay.gateway.dto.cmd.GatewayTaskCmd {
- Long id
- Date createAt
- Date updateAt
- Byte type
- Long userId
- Byte fundId
- String fundName
- Byte status
- String remark
- String extendId
- String taskId
- String thirdpartyId
- String loanNum
- String params
- String platform
- Long amount
- String tradingType
- String version
}
class com.welab.pay.gateway.impl.PaymentHelper {
- BaseBankAccountService baseBankAccountService
- BaseBankServcie baseBankServcie
- JedisCluster jedisCluster
- Boolean testSwitch
- BcaTransIdCmdExe bcaTransIdCmdExe
- {static} String HASH_PASS_LOAN_KEY
+ GatewayBankAccount checkBankAcount(FundEnum,String,String)
+ GatewayBankAccount checkBankAcount(String)
+ GatewayBankAccount checkBankAcount(String,String)
+ GatewayBankAccount getBankAcount(String)
+ GatewayBankAccount getBankAcount(String,String)
+ GatewayBank checkBank(FundEnum,String)
+ GatewayTask bulidGatewayTaskOffineLine(FundEnum,TaskTypeEnum,PayingDto)
+ GatewayTask bulidGatewayTask(FundEnum,TaskTypeEnum,PayingDto)
+ GatewayTask bulidGatewayTask(FundEnum,TaskTypeEnum,TransferDto)
+ GatewayTask bulidGatewayTask(FundEnum,TaskTypeEnum,InvoiceDto)
}
class com.welab.pay.gateway.dto.PayingDto {
- {static} long serialVersionUID
- PlatformEnum platformEnum
- FundEnum fundEnum
- Long userId
- String externalId
- String bankCode
- String accountHolderName
- String debitAccountNo
- String accountNumber
- String description
- Long amount
- String loanNum
- boolean refreshReferenceNumber
- Map<String,Object> externalMap
- String tradingType
- boolean refreshThirdPartyId
- String oldVersion
- String remark
}
class com.welab.pay.gateway.job.RetryPaymentJob {
- BaseTaskService baseTaskService
- BNIManager bniManager
- BcaManager bcaManager
+ void execute(ShardingContext)
+ void doBni(GatewayTask,TaskTypeEnum)
+ void doBca(GatewayTask,TaskTypeEnum)
+ void doPermata(GatewayTask,TaskTypeEnum)
}
interface com.welab.pay.gateway.mapper.GatewayBankAccountMapper {
~ long countByExample(GatewayBankAccountExample)
~ int deleteByExample(GatewayBankAccountExample)
~ int deleteByPrimaryKey(Long)
~ int insert(GatewayBankAccount)
~ int insertSelective(GatewayBankAccount)
~ List<GatewayBankAccount> selectByExample(GatewayBankAccountExample)
~ GatewayBankAccount selectByPrimaryKey(Long)
~ int updateByExampleSelective(GatewayBankAccount,GatewayBankAccountExample)
~ int updateByExample(GatewayBankAccount,GatewayBankAccountExample)
~ int updateByPrimaryKeySelective(GatewayBankAccount)
~ int updateByPrimaryKey(GatewayBankAccount)
}
enum com.welab.pay.gateway.enums.OnlinePayChanelEnum {
+  DOB
+  Cimb
+  Bni
+  MandiriClickpay
- String code
- String value
- <<Create>> OnlinePayChanelEnum(String,String)
+ String getCode()
+ String getValue()
+ {static} String getCode(String)
+ {static} String getValue(String)
}
class com.welab.pay.gateway.model.GatewayOrderExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> GatewayOrderExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.pay.gateway.model.GatewayOrderExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Integer)
+ Criteria andIdNotEqualTo(Integer)
+ Criteria andIdGreaterThan(Integer)
+ Criteria andIdGreaterThanOrEqualTo(Integer)
+ Criteria andIdLessThan(Integer)
+ Criteria andIdLessThanOrEqualTo(Integer)
+ Criteria andIdIn(List<Integer>)
+ Criteria andIdNotIn(List<Integer>)
+ Criteria andIdBetween(Integer,Integer)
+ Criteria andIdNotBetween(Integer,Integer)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andTaskIdIsNull()
+ Criteria andTaskIdIsNotNull()
+ Criteria andTaskIdEqualTo(String)
+ Criteria andTaskIdNotEqualTo(String)
+ Criteria andTaskIdGreaterThan(String)
+ Criteria andTaskIdGreaterThanOrEqualTo(String)
+ Criteria andTaskIdLessThan(String)
+ Criteria andTaskIdLessThanOrEqualTo(String)
+ Criteria andTaskIdLike(String)
+ Criteria andTaskIdNotLike(String)
+ Criteria andTaskIdIn(List<String>)
+ Criteria andTaskIdNotIn(List<String>)
+ Criteria andTaskIdBetween(String,String)
+ Criteria andTaskIdNotBetween(String,String)
+ Criteria andOrderNoIsNull()
+ Criteria andOrderNoIsNotNull()
+ Criteria andOrderNoEqualTo(String)
+ Criteria andOrderNoNotEqualTo(String)
+ Criteria andOrderNoGreaterThan(String)
+ Criteria andOrderNoGreaterThanOrEqualTo(String)
+ Criteria andOrderNoLessThan(String)
+ Criteria andOrderNoLessThanOrEqualTo(String)
+ Criteria andOrderNoLike(String)
+ Criteria andOrderNoNotLike(String)
+ Criteria andOrderNoIn(List<String>)
+ Criteria andOrderNoNotIn(List<String>)
+ Criteria andOrderNoBetween(String,String)
+ Criteria andOrderNoNotBetween(String,String)
+ Criteria andThirdpartyIdIsNull()
+ Criteria andThirdpartyIdIsNotNull()
+ Criteria andThirdpartyIdEqualTo(String)
+ Criteria andThirdpartyIdNotEqualTo(String)
+ Criteria andThirdpartyIdGreaterThan(String)
+ Criteria andThirdpartyIdGreaterThanOrEqualTo(String)
+ Criteria andThirdpartyIdLessThan(String)
+ Criteria andThirdpartyIdLessThanOrEqualTo(String)
+ Criteria andThirdpartyIdLike(String)
+ Criteria andThirdpartyIdNotLike(String)
+ Criteria andThirdpartyIdIn(List<String>)
+ Criteria andThirdpartyIdNotIn(List<String>)
+ Criteria andThirdpartyIdBetween(String,String)
+ Criteria andThirdpartyIdNotBetween(String,String)
+ Criteria andPlatformOrderNoIsNull()
+ Criteria andPlatformOrderNoIsNotNull()
+ Criteria andPlatformOrderNoEqualTo(String)
+ Criteria andPlatformOrderNoNotEqualTo(String)
+ Criteria andPlatformOrderNoGreaterThan(String)
+ Criteria andPlatformOrderNoGreaterThanOrEqualTo(String)
+ Criteria andPlatformOrderNoLessThan(String)
+ Criteria andPlatformOrderNoLessThanOrEqualTo(String)
+ Criteria andPlatformOrderNoLike(String)
+ Criteria andPlatformOrderNoNotLike(String)
+ Criteria andPlatformOrderNoIn(List<String>)
+ Criteria andPlatformOrderNoNotIn(List<String>)
+ Criteria andPlatformOrderNoBetween(String,String)
+ Criteria andPlatformOrderNoNotBetween(String,String)
+ Criteria andPlatformIsNull()
+ Criteria andPlatformIsNotNull()
+ Criteria andPlatformEqualTo(String)
+ Criteria andPlatformNotEqualTo(String)
+ Criteria andPlatformGreaterThan(String)
+ Criteria andPlatformGreaterThanOrEqualTo(String)
+ Criteria andPlatformLessThan(String)
+ Criteria andPlatformLessThanOrEqualTo(String)
+ Criteria andPlatformLike(String)
+ Criteria andPlatformNotLike(String)
+ Criteria andPlatformIn(List<String>)
+ Criteria andPlatformNotIn(List<String>)
+ Criteria andPlatformBetween(String,String)
+ Criteria andPlatformNotBetween(String,String)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Byte)
+ Criteria andFundIdNotEqualTo(Byte)
+ Criteria andFundIdGreaterThan(Byte)
+ Criteria andFundIdGreaterThanOrEqualTo(Byte)
+ Criteria andFundIdLessThan(Byte)
+ Criteria andFundIdLessThanOrEqualTo(Byte)
+ Criteria andFundIdIn(List<Byte>)
+ Criteria andFundIdNotIn(List<Byte>)
+ Criteria andFundIdBetween(Byte,Byte)
+ Criteria andFundIdNotBetween(Byte,Byte)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andFinishTimeIsNull()
+ Criteria andFinishTimeIsNotNull()
+ Criteria andFinishTimeEqualTo(Date)
+ Criteria andFinishTimeNotEqualTo(Date)
+ Criteria andFinishTimeGreaterThan(Date)
+ Criteria andFinishTimeGreaterThanOrEqualTo(Date)
+ Criteria andFinishTimeLessThan(Date)
+ Criteria andFinishTimeLessThanOrEqualTo(Date)
+ Criteria andFinishTimeIn(List<Date>)
+ Criteria andFinishTimeNotIn(List<Date>)
+ Criteria andFinishTimeBetween(Date,Date)
+ Criteria andFinishTimeNotBetween(Date,Date)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(String)
+ Criteria andTypeNotEqualTo(String)
+ Criteria andTypeGreaterThan(String)
+ Criteria andTypeGreaterThanOrEqualTo(String)
+ Criteria andTypeLessThan(String)
+ Criteria andTypeLessThanOrEqualTo(String)
+ Criteria andTypeLike(String)
+ Criteria andTypeNotLike(String)
+ Criteria andTypeIn(List<String>)
+ Criteria andTypeNotIn(List<String>)
+ Criteria andTypeBetween(String,String)
+ Criteria andTypeNotBetween(String,String)
+ Criteria andDeletedIsNull()
+ Criteria andDeletedIsNotNull()
+ Criteria andDeletedEqualTo(Boolean)
+ Criteria andDeletedNotEqualTo(Boolean)
+ Criteria andDeletedGreaterThan(Boolean)
+ Criteria andDeletedGreaterThanOrEqualTo(Boolean)
+ Criteria andDeletedLessThan(Boolean)
+ Criteria andDeletedLessThanOrEqualTo(Boolean)
+ Criteria andDeletedIn(List<Boolean>)
+ Criteria andDeletedNotIn(List<Boolean>)
+ Criteria andDeletedBetween(Boolean,Boolean)
+ Criteria andDeletedNotBetween(Boolean,Boolean)
+ Criteria andResponseCodeIsNull()
+ Criteria andResponseCodeIsNotNull()
+ Criteria andResponseCodeEqualTo(String)
+ Criteria andResponseCodeNotEqualTo(String)
+ Criteria andResponseCodeGreaterThan(String)
+ Criteria andResponseCodeGreaterThanOrEqualTo(String)
+ Criteria andResponseCodeLessThan(String)
+ Criteria andResponseCodeLessThanOrEqualTo(String)
+ Criteria andResponseCodeLike(String)
+ Criteria andResponseCodeNotLike(String)
+ Criteria andResponseCodeIn(List<String>)
+ Criteria andResponseCodeNotIn(List<String>)
+ Criteria andResponseCodeBetween(String,String)
+ Criteria andResponseCodeNotBetween(String,String)
+ Criteria andExpirationTimeIsNull()
+ Criteria andExpirationTimeIsNotNull()
+ Criteria andExpirationTimeEqualTo(Date)
+ Criteria andExpirationTimeNotEqualTo(Date)
+ Criteria andExpirationTimeGreaterThan(Date)
+ Criteria andExpirationTimeGreaterThanOrEqualTo(Date)
+ Criteria andExpirationTimeLessThan(Date)
+ Criteria andExpirationTimeLessThanOrEqualTo(Date)
+ Criteria andExpirationTimeIn(List<Date>)
+ Criteria andExpirationTimeNotIn(List<Date>)
+ Criteria andExpirationTimeBetween(Date,Date)
+ Criteria andExpirationTimeNotBetween(Date,Date)
}
class com.welab.pay.gateway.model.GatewayOrderExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.pay.gateway.model.GatewayOrderExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.pay.gateway.http.test.SimpleTest {
+ <<Create>> SimpleTest()
+ void initializeBefore()
+ {static} void print(Object)
}
class com.welab.pay.gateway.http.test.HMACSHA256Util {
- {static} String byteArrayToHexString(byte[])
+ {static} String sha256_HMAC(String,String)
+ {static} String sha256_HMAC_BASE64(String,String)
+ {static} void main(String[])
}
interface com.welab.pay.gateway.config.faspay.FaspayConfig {
}
class com.welab.pay.gateway.config.faspay.FaspayConfig$BaseRequest {
- String signature
}
class com.welab.pay.gateway.config.faspay.FaspayConfig$BaseResponse {
- String response
- String response_code
- String response_desc
}
class com.welab.pay.gateway.config.faspay.FaspayConfig$Item {
- String product
- String qty
- String amount
- String payment_plan
- String merchant_id
- String tenor
}
interface com.welab.pay.gateway.config.faspay.FaspayConfig$PostData {
}
class com.welab.pay.gateway.config.faspay.FaspayConfig$PostData$Request {
- String merchant_id
- String merchant
- String bill_no
- String bill_date
- String bill_expired
- String bill_desc
- String bill_currency
- String bill_total
- String payment_channel
- String pay_type
- String cust_no
- String cust_name
- String msisdn
- String email
- String terminal
- List<Item> item
}
class com.welab.pay.gateway.config.faspay.FaspayConfig$PostData$Response {
- String trx_id
- String merchant_id
- String merchant
- String bill_no
- String redirect_url
- List<Product> bill_items
}
class com.welab.pay.gateway.config.faspay.FaspayConfig$PostData$Response$Product {
- String product
- String amount
- String tenor
- String qty
- String merchant_id
- String payment_plan
}
class com.welab.pay.gateway.http.test.BcaHttpTest {
- BcaApiConfiguration bcaApiConfiguration
- BcaPayment bcaPayment
- BcaManager bcaManager
- BaseGatewayTaskService baseGatewayTaskService
- BcaTransIdCmdExe bcaTransIdCmdExe
- RetryPaymentJob retryPaymentJob
+ void testBalancey()
+ void testTransfer()
+ void testPaymentStatus1()
+ void testTransId()
+ void testTransfe1r()
+ void testHandle()
+ void testTransfersDomestic()
+ void testPaymentStatus()
}
interface com.welab.pay.gateway.config.bni.BNIPaymentConfig12 {
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig12$WrapHeader {
- String integratorId
- String billerId
- String requestUuid
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig12$WrapReqeust {
- String clientId
- String signature
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig12$WrapResponse {
~ String responseCode
~ String responseMessage
~ String responseText
~ String errorMessage
}
interface com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Token {
~ String path
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Token$Response {
~ String access_token
~ String token_type
~ String expires_in
~ String scope
}
interface com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement {
~ String path
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement$Request {
- DisbursementRequest request
+ <<Create>> Request()
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement$DisbursementRequest {
- WrapHeader header
- String sourceOfFund
- String destinationBankCode
- String beneficiaryAccountNum
- String beneficiaryName
- String senderName
- String desc
- Long trxAmount
- String currency
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement$Response {
- String responseTimestamp
- String responseUuid
- String forwardingReferenceNum
- String sourceOfFund
- String balanceAfter
- String destinationBankCode
- String senderName
- String beneficiaryAccountNum
- String beneficiaryName
- String trxDescription
- String trxAmount
- String currency
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement$DisbursementResponse {
- Disbursement.Response response
- Map other
- String originalRsp
}
interface com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry {
~ String path
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry$BNIRequest {
- WrapHeader header
- String destinationBankCode
- String beneficiaryAccountNum
- String currency
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry$Request {
- BNIRequest request
- String timestamp
+ <<Create>> Request()
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry$GetinhouseinquiryResponse {
- String responseTimestamp
- String responseUuid
- String integratorId
- String billerId
- String forwardingReferenceNumber
- String bankReferenceNumber
- String destinationBankCode
- String beneficiaryAccount
- String currency
- String bankName
- String beneficiaryName
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry$Response {
- Getinhouseinquiry.GetinhouseinquiryResponse response
}
interface com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus {
~ String path
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus$GetpaymentRequest {
- Request request
+ <<Create>> GetpaymentRequest()
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus$Request {
- WrapHeader header
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus$GetpaymentResponse {
- String responseTimestamp
- String responseUuid
- String integratorId
- String billerId
- String forwardingReferenceNum
- String trxStatus
- String destinationBankCode
- String beneficiaryAccountNum
- String beneficiaryName
- String trxDescription
- String trxAmount
- String currency
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus$Response {
- GetpaymentResponse response
}
class com.welab.pay.gateway.job.PaymentJob {
- BaseTaskService baseTaskService
- MqForward mqForward
- JedisCluster jedisCluster
+ void execute(ShardingContext)
}
interface com.welab.pay.gateway.service.GatewayRepaymentOrderService {
~ List<GatewayRepaymentOrderResDTO> listByParam(List<GatewayRepaymentOrderParamDTO>)
}
interface com.welab.pay.gateway.mapper.GatewayAmountRecordMapper {
~ long countByExample(GatewayAmountRecordExample)
~ int deleteByExample(GatewayAmountRecordExample)
~ int deleteByPrimaryKey(Long)
~ int insert(GatewayAmountRecord)
~ int insertSelective(GatewayAmountRecord)
~ List<GatewayAmountRecord> selectByExample(GatewayAmountRecordExample)
~ GatewayAmountRecord selectByPrimaryKey(Long)
~ int updateByExampleSelective(GatewayAmountRecord,GatewayAmountRecordExample)
~ int updateByExample(GatewayAmountRecord,GatewayAmountRecordExample)
~ int updateByPrimaryKeySelective(GatewayAmountRecord)
~ int updateByPrimaryKey(GatewayAmountRecord)
}
class com.welab.pay.gateway.service.BaseCallbackService {
- GatewayRequestBackMapper gatewayRequestBackMapper
+ int save(GatewayRequestBackWithBLOBs)
+ int addRequestCallback(String,String,String,String,String)
}
class com.welab.pay.gateway.model.GatewayVirtualAccountPaymentExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> GatewayVirtualAccountPaymentExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.pay.gateway.model.GatewayVirtualAccountPaymentExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andPaymentIdIsNull()
+ Criteria andPaymentIdIsNotNull()
+ Criteria andPaymentIdEqualTo(String)
+ Criteria andPaymentIdNotEqualTo(String)
+ Criteria andPaymentIdGreaterThan(String)
+ Criteria andPaymentIdGreaterThanOrEqualTo(String)
+ Criteria andPaymentIdLessThan(String)
+ Criteria andPaymentIdLessThanOrEqualTo(String)
+ Criteria andPaymentIdLike(String)
+ Criteria andPaymentIdNotLike(String)
+ Criteria andPaymentIdIn(List<String>)
+ Criteria andPaymentIdNotIn(List<String>)
+ Criteria andPaymentIdBetween(String,String)
+ Criteria andPaymentIdNotBetween(String,String)
+ Criteria andCallbackVirtualAccountIdIsNull()
+ Criteria andCallbackVirtualAccountIdIsNotNull()
+ Criteria andCallbackVirtualAccountIdEqualTo(String)
+ Criteria andCallbackVirtualAccountIdNotEqualTo(String)
+ Criteria andCallbackVirtualAccountIdGreaterThan(String)
+ Criteria andCallbackVirtualAccountIdGreaterThanOrEqualTo(String)
+ Criteria andCallbackVirtualAccountIdLessThan(String)
+ Criteria andCallbackVirtualAccountIdLessThanOrEqualTo(String)
+ Criteria andCallbackVirtualAccountIdLike(String)
+ Criteria andCallbackVirtualAccountIdNotLike(String)
+ Criteria andCallbackVirtualAccountIdIn(List<String>)
+ Criteria andCallbackVirtualAccountIdNotIn(List<String>)
+ Criteria andCallbackVirtualAccountIdBetween(String,String)
+ Criteria andCallbackVirtualAccountIdNotBetween(String,String)
+ Criteria andOwnerIdIsNull()
+ Criteria andOwnerIdIsNotNull()
+ Criteria andOwnerIdEqualTo(String)
+ Criteria andOwnerIdNotEqualTo(String)
+ Criteria andOwnerIdGreaterThan(String)
+ Criteria andOwnerIdGreaterThanOrEqualTo(String)
+ Criteria andOwnerIdLessThan(String)
+ Criteria andOwnerIdLessThanOrEqualTo(String)
+ Criteria andOwnerIdLike(String)
+ Criteria andOwnerIdNotLike(String)
+ Criteria andOwnerIdIn(List<String>)
+ Criteria andOwnerIdNotIn(List<String>)
+ Criteria andOwnerIdBetween(String,String)
+ Criteria andOwnerIdNotBetween(String,String)
+ Criteria andExternalIdIsNull()
+ Criteria andExternalIdIsNotNull()
+ Criteria andExternalIdEqualTo(String)
+ Criteria andExternalIdNotEqualTo(String)
+ Criteria andExternalIdGreaterThan(String)
+ Criteria andExternalIdGreaterThanOrEqualTo(String)
+ Criteria andExternalIdLessThan(String)
+ Criteria andExternalIdLessThanOrEqualTo(String)
+ Criteria andExternalIdLike(String)
+ Criteria andExternalIdNotLike(String)
+ Criteria andExternalIdIn(List<String>)
+ Criteria andExternalIdNotIn(List<String>)
+ Criteria andExternalIdBetween(String,String)
+ Criteria andExternalIdNotBetween(String,String)
+ Criteria andBankCodeIsNull()
+ Criteria andBankCodeIsNotNull()
+ Criteria andBankCodeEqualTo(String)
+ Criteria andBankCodeNotEqualTo(String)
+ Criteria andBankCodeGreaterThan(String)
+ Criteria andBankCodeGreaterThanOrEqualTo(String)
+ Criteria andBankCodeLessThan(String)
+ Criteria andBankCodeLessThanOrEqualTo(String)
+ Criteria andBankCodeLike(String)
+ Criteria andBankCodeNotLike(String)
+ Criteria andBankCodeIn(List<String>)
+ Criteria andBankCodeNotIn(List<String>)
+ Criteria andBankCodeBetween(String,String)
+ Criteria andBankCodeNotBetween(String,String)
+ Criteria andAmountIsNull()
+ Criteria andAmountIsNotNull()
+ Criteria andAmountEqualTo(Long)
+ Criteria andAmountNotEqualTo(Long)
+ Criteria andAmountGreaterThan(Long)
+ Criteria andAmountGreaterThanOrEqualTo(Long)
+ Criteria andAmountLessThan(Long)
+ Criteria andAmountLessThanOrEqualTo(Long)
+ Criteria andAmountIn(List<Long>)
+ Criteria andAmountNotIn(List<Long>)
+ Criteria andAmountBetween(Long,Long)
+ Criteria andAmountNotBetween(Long,Long)
+ Criteria andMerchantCodeIsNull()
+ Criteria andMerchantCodeIsNotNull()
+ Criteria andMerchantCodeEqualTo(String)
+ Criteria andMerchantCodeNotEqualTo(String)
+ Criteria andMerchantCodeGreaterThan(String)
+ Criteria andMerchantCodeGreaterThanOrEqualTo(String)
+ Criteria andMerchantCodeLessThan(String)
+ Criteria andMerchantCodeLessThanOrEqualTo(String)
+ Criteria andMerchantCodeLike(String)
+ Criteria andMerchantCodeNotLike(String)
+ Criteria andMerchantCodeIn(List<String>)
+ Criteria andMerchantCodeNotIn(List<String>)
+ Criteria andMerchantCodeBetween(String,String)
+ Criteria andMerchantCodeNotBetween(String,String)
+ Criteria andThirdpartyIdIsNull()
+ Criteria andThirdpartyIdIsNotNull()
+ Criteria andThirdpartyIdEqualTo(String)
+ Criteria andThirdpartyIdNotEqualTo(String)
+ Criteria andThirdpartyIdGreaterThan(String)
+ Criteria andThirdpartyIdGreaterThanOrEqualTo(String)
+ Criteria andThirdpartyIdLessThan(String)
+ Criteria andThirdpartyIdLessThanOrEqualTo(String)
+ Criteria andThirdpartyIdLike(String)
+ Criteria andThirdpartyIdNotLike(String)
+ Criteria andThirdpartyIdIn(List<String>)
+ Criteria andThirdpartyIdNotIn(List<String>)
+ Criteria andThirdpartyIdBetween(String,String)
+ Criteria andThirdpartyIdNotBetween(String,String)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Byte)
+ Criteria andFundIdNotEqualTo(Byte)
+ Criteria andFundIdGreaterThan(Byte)
+ Criteria andFundIdGreaterThanOrEqualTo(Byte)
+ Criteria andFundIdLessThan(Byte)
+ Criteria andFundIdLessThanOrEqualTo(Byte)
+ Criteria andFundIdIn(List<Byte>)
+ Criteria andFundIdNotIn(List<Byte>)
+ Criteria andFundIdBetween(Byte,Byte)
+ Criteria andFundIdNotBetween(Byte,Byte)
}
class com.welab.pay.gateway.model.GatewayVirtualAccountPaymentExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.pay.gateway.model.GatewayVirtualAccountPaymentExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
enum com.welab.pay.gateway.enums.AccountTypeEnum {
+  CASH
+  HOLDING
+  TAX
- Byte type
- String code
- <<Create>> AccountTypeEnum(Byte,String)
+ Byte getType()
+ void setType(Byte)
+ String getCode()
+ void setCode(String)
}
class com.welab.pay.gateway.impl.astrapay.AstrapayVirtualAccountImpl {
- BaseVirtualAccountService baseVirtualAccountService
- BaseBankServcie baseBankServcie
+ Response<VirtualAccountVO> createVirtualAccount(VirtualAccountDto)
+ Response<VirtualAccountVO> updateVirtualAccount(UpdateVirtualAccountDto)
+ Response<List<BankVO>> getBanksforVirtualAccounts(FundEnum)
+ Response<List<VirtualAccountVO>> queryOrCreateVirtualAccounts(VirtualAccountDto)
+ Response<List<VirtualAccountVO>> queryOrCreateOrUpdateVirtualAccounts(VirtualAccountDto)
+ Response<Boolean> batchUpdateVirtualAccounts(List<VirtualAccountDto>)
+ String buildVirtualAccount(String,String)
}
class com.welab.pay.gateway.dto.qry.VirtualAccountQry {
- String name
- String bankCode
- String accountNumber
- Long userId
- Boolean closedStatus
}
class com.welab.pay.gateway.service.BaseOrderService {
- GatewayOrderMapper gatewayOrderMapper
+ int save(GatewayOrder)
+ int faspayInit(String,String,String,String,String,Long)
+ int astraPayInit(String,String,String,String,String,Long)
+ int bniSuccessInit(String,String,String,String,Long)
+ int permataSuccessInit(String,String,String,String,Long)
+ int simulateSuccessInit(String,String,String,String,Long)
- int successInit(FundEnum,String,String,String,String,String,Long)
+ int faspayInit(String,String,String,String,Long)
+ GatewayOrder getPermataOne(String)
+ GatewayOrder getFaspayOne(String,byte)
+ GatewayOrder getOne(FundEnum,String)
+ GatewayOrder getOne(FundEnum,String,byte)
+ GatewayOrder getOneByTaskId(String)
+ GatewayOrder getOneByExample(GatewayOrderExample)
+ int delete(String)
+ int updateAstraPayWalletPendingRepaymentOrder(String,String,Byte)
+ List<GatewayOrder> getAstraPayWalletPendingRepaymentOrders(Date,Date,int,int,Integer)
+ GatewayOrder getAstraPayWalletRepaymentOrderByOrderNo(String)
+ GatewayOrder getAstraPayWalletRepaymentOrderByPlatformOrderNo(String,PlatformEnum)
+ Integer getGatewayOrderMaxId()
+ GatewayOrder getOneByThirdpartyIdAndFundId(String,Byte,Byte)
}
class com.welab.pay.gateway.utils.StatusUtils {
+ {static} String COMPLETED
+ {static} String ACTIVE
+ {static} StatusEnum convert(String)
}
class com.welab.pay.gateway.service.impl.AstraPayWalletServiceImpl {
- AstraPayWalletManager astraPayWalletManager
+ Response<String> generateRegInfo(AstraPayWalletRegCmd)
+ Response<String> payment(AstraPayWalletPaymentCmd)
+ Response<AstraPayWalletProfileDTO> profile(AstraPayWalletProfileQry)
+ void unBind(Long)
}
class com.welab.pay.gateway.vo.GatewayRequestVO {
- {static} long serialVersionUID
- Long id
- Date createAt
- Date updateAt
- String taskId
- String requestUrl
- String thirdpartyId
- String requestParam
- String responseBody
- String responseCode
- String responseMessage
}
class com.welab.pay.gateway.http.test.PermataHttpUtilsTest {
+ void token()
+ void balanceInfo()
+ void accountInfo()
+ void fundsTransfer()
+ void OnlineXferInfo()
+ void InterBankTransfer()
+ void LlgTransfer()
+ void RtgsTransfer()
+ void BillInfo()
+ void Payment()
+ void AccountStatement()
+ void StatusTransaction()
}
class com.welab.pay.gateway.config.astrapay.wallet.Payment {
}
class com.welab.pay.gateway.config.astrapay.wallet.Payment$Request {
- String signature
- String merchantTransactionId
- String amount
- String currency
- String description
}
class com.welab.pay.gateway.config.astrapay.wallet.Payment$Response {
- String token
- String urlRedirect
}
class com.welab.pay.gateway.dto.GatewayRepaymentOrderResDTO {
- Long id
- Long userId
- String trxChannel
- String trxIdOrVa
- Long amount
- Date transactionDate
- String orderNo
- Date createAt
- Date updateAt
}
class com.welab.pay.gateway.helper.VaAmountHelper {
+ {static} Long getAmount(VirtualAccountDto)
+ {static} Long getAmount(UpdateVirtualAccountDto,String)
- {static} Long getAmount(Long,Long,List<String>,String)
}
class com.welab.pay.gateway.service.BaseGatewayRequestService {
- GatewayRequestMapper gatewayRequestMapper
+ List<GatewayRequest> listByTaskId(String)
}
class com.welab.pay.gateway.model.GatewayBankAccountExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> GatewayBankAccountExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.pay.gateway.model.GatewayBankAccountExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andNameIsNull()
+ Criteria andNameIsNotNull()
+ Criteria andNameEqualTo(String)
+ Criteria andNameNotEqualTo(String)
+ Criteria andNameGreaterThan(String)
+ Criteria andNameGreaterThanOrEqualTo(String)
+ Criteria andNameLessThan(String)
+ Criteria andNameLessThanOrEqualTo(String)
+ Criteria andNameLike(String)
+ Criteria andNameNotLike(String)
+ Criteria andNameIn(List<String>)
+ Criteria andNameNotIn(List<String>)
+ Criteria andNameBetween(String,String)
+ Criteria andNameNotBetween(String,String)
+ Criteria andAccountNumberIsNull()
+ Criteria andAccountNumberIsNotNull()
+ Criteria andAccountNumberEqualTo(String)
+ Criteria andAccountNumberNotEqualTo(String)
+ Criteria andAccountNumberGreaterThan(String)
+ Criteria andAccountNumberGreaterThanOrEqualTo(String)
+ Criteria andAccountNumberLessThan(String)
+ Criteria andAccountNumberLessThanOrEqualTo(String)
+ Criteria andAccountNumberLike(String)
+ Criteria andAccountNumberNotLike(String)
+ Criteria andAccountNumberIn(List<String>)
+ Criteria andAccountNumberNotIn(List<String>)
+ Criteria andAccountNumberBetween(String,String)
+ Criteria andAccountNumberNotBetween(String,String)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Byte)
+ Criteria andFundIdNotEqualTo(Byte)
+ Criteria andFundIdGreaterThan(Byte)
+ Criteria andFundIdGreaterThanOrEqualTo(Byte)
+ Criteria andFundIdLessThan(Byte)
+ Criteria andFundIdLessThanOrEqualTo(Byte)
+ Criteria andFundIdIn(List<Byte>)
+ Criteria andFundIdNotIn(List<Byte>)
+ Criteria andFundIdBetween(Byte,Byte)
+ Criteria andFundIdNotBetween(Byte,Byte)
+ Criteria andBankCodeIsNull()
+ Criteria andBankCodeIsNotNull()
+ Criteria andBankCodeEqualTo(String)
+ Criteria andBankCodeNotEqualTo(String)
+ Criteria andBankCodeGreaterThan(String)
+ Criteria andBankCodeGreaterThanOrEqualTo(String)
+ Criteria andBankCodeLessThan(String)
+ Criteria andBankCodeLessThanOrEqualTo(String)
+ Criteria andBankCodeLike(String)
+ Criteria andBankCodeNotLike(String)
+ Criteria andBankCodeIn(List<String>)
+ Criteria andBankCodeNotIn(List<String>)
+ Criteria andBankCodeBetween(String,String)
+ Criteria andBankCodeNotBetween(String,String)
+ Criteria andExtendIdIsNull()
+ Criteria andExtendIdIsNotNull()
+ Criteria andExtendIdEqualTo(String)
+ Criteria andExtendIdNotEqualTo(String)
+ Criteria andExtendIdGreaterThan(String)
+ Criteria andExtendIdGreaterThanOrEqualTo(String)
+ Criteria andExtendIdLessThan(String)
+ Criteria andExtendIdLessThanOrEqualTo(String)
+ Criteria andExtendIdLike(String)
+ Criteria andExtendIdNotLike(String)
+ Criteria andExtendIdIn(List<String>)
+ Criteria andExtendIdNotIn(List<String>)
+ Criteria andExtendIdBetween(String,String)
+ Criteria andExtendIdNotBetween(String,String)
}
class com.welab.pay.gateway.model.GatewayBankAccountExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.pay.gateway.model.GatewayBankAccountExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.pay.gateway.impl.alfamart.AlfamartPayment {
- BaseOrderService baseOrderService
- Integer expirationTime
# boolean isAddTask()
# Response<PayingVO> doPayingForOffline(GatewayTask,PayingDto)
- {static} String bulidOfflineCode(String)
# Response<PayingVO> doPaying(GatewayTask,TransferDto)
# Response<TransferVO> doTransfer(GatewayTask,TransferDto)
# void doRetryDisbursement(GatewayTask,String)
}
class com.welab.pay.gateway.vo.BaseVO {
- {static} long serialVersionUID
}
class com.welab.pay.gateway.utils.FormatUtil {
+ {static} String handleRp(Long,String)
}
enum com.welab.pay.gateway.config.alfamart.AlfamartPaymentErrorCode {
+  SUCCESS
+  Invalid_Transaction
+  Invalid_PIN
+  Invalid_Transaction_Type
+  Invalid_Amount_Field
+  Invalid_Response_Code
+  Processor_Down_Time_Out
+  Invalid_Card_Number_Resend_Passcode
+  Module_Processing_Error
+  Exceed_PIN_Tries
+  Invalid_Account
+  Exceed_Withdrawal_Limit
+  Exceed_Limit
+  Reached_Amount_Limit
+  Exceeds_Account_Limit_Wrong_Passcode
+  Invalid_Message_Passcode
+  Do_Not_Honor
+  Account_Already_NSF
+  Exceeds_Funds_Available
+  Amount_Is_Exceed_Transaction
+  General_Denial
+  NO_SUCH_ACCOUNT
+  Currency_Conversion_Error
+  Duplicate_Transaction
+  Message_Rejected
+  Invalid_Debit_Account
+  Invalid_Credit_Account_Payee_is_Unknown
+  Debit_and_Credit_Account_Are_The_Same
+  Transaction_is_Being_Processed
+  No_Routing_For_Institution_Network
+  Processor_Not_Signed_On
+  Cash_In_Cash_Out_Already_Flag
+  Wrong_Passcode
+  Wrong_Passcode_3_Times
+  Invalid_Customer_Code
+  Amount_More_Than_The_Coupon
+  Invalid_Expired_Used_Coupon
+  Invalid_Phone_Number_Invalid_Beneficiary
+  PIN_Expired
+  User_Not_Allowed_for_Coupon_Purchase
+  User_Not_Allowed_for_Coupon_Cash_Out
+  Already_Registered
+  Invalid_CIF_or_MSISDN
+  Phone_Number_Not_Found_Invalid_MTI
+  Customer_Blacklisted
+  IP_Address_is_not_valid
+  Invalid_Service_ID
+  The_Consumer_ID_could_not_access_Business_Service
+  Duplicate_RqUID_has_found_please_retry_later
+  Authentication_failure
+  Invalid_Request_Message
+  Timeout
+  Invalid_Response_Message
- String code
- String message
- <<Create>> AlfamartPaymentErrorCode(String,String)
+ {static} boolean isSuccess(String)
+ String getCode()
+ String getMessage()
}
class com.welab.pay.gateway.response.DueVo {
- String loanNumber
- String phoneNumber
- String userName
- String dueDate
- Integer indexDue
- Long lateFee
- Long principalAmount
- Long serviceFee
}
class com.welab.pay.gateway.dto.ChangeLendingWayDto {
- {static} long serialVersionUID
- String loanNumber
- Byte oldLendType
- Byte lendType
}
class com.welab.pay.gateway.app.manager.BcaManager {
- BcaVaBillsCmdExe bcaVaBillsCmdExe
- BcaVaPaymentsCmdExe bcaVaPaymentsCmdExe
- PaymentHelper paymentHelper
- BaseRequestService baseRequestService
- BaseBankAccountService baseBankAccountService
- RequestServiceHelper requestServiceHelper
- BaseGatewayTaskService baseGatewayTaskService
- BNIManager bniManager
+ VaBillsResVO vaBills(VaBillsReqVO,GatewayRequestBackWithBLOBs)
+ VaPaymentsResVO vaPayments(VaPaymentsReqVO,GatewayRequestBackWithBLOBs)
+ GatewayBankAccount getAccountInquiry(GatewayTask,String,String)
+ BcaApiModel.TransfersDomesticOpt.TransfersDomesticRes doTransferInterBank(GatewayTask,BcaApiModel.TransfersDomesticOpt.TransfersDomesticReq)
+ BcaApiModel.TransfersOpt.TransfersRes doTransferInBank(GatewayTask,BcaApiModel.TransfersOpt.TransfersReq)
+ BcaApiModel.GetBalanceOpt.BalanceRes getBalance(String)
+ BcaApiModel.TransfersStatusOpt.TransfersStatusRes getPaymentStatus(GatewayTask)
}
class com.welab.pay.gateway.dto.UpdateInvoiceDto {
- {static} long serialVersionUID
- Long userId
- String loanNum
- FundEnum fundEnum
- String externalId
- Long amount
- String customerName
- Date sendTime
- boolean asynExecute
}
interface com.welab.pay.gateway.config.bni.BNIPaymentConfig {
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig$WrapReqeust {
- String clientId
- String signature
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig$WrapResponse {
~ String responseCode
~ String responseMessage
~ String errorMessage
}
interface com.welab.pay.gateway.config.bni.BNIPaymentConfig$Token {
~ String path
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig$Token$Response {
~ String access_token
~ String token_type
~ String expires_in
~ String scope
}
interface com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankinquiry {
~ String method
~ String contentType
~ String path
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankinquiry$Request {
~ String customerReferenceNumber
~ String accountNum
~ String destinationBankCode
~ String destinationAccountNum
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankinquiry$Response {
~ String destinationAccountNum
~ String destinationAccountName
~ String destinationBankName
~ String retrievalReffNum
}
interface com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getbalance {
~ String method
~ String contentType
~ String path
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getbalance$Request {
~ String accountNo
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getbalance$Response {
~ String customerName
~ String accountCurrency
~ String accountBalance
}
interface com.welab.pay.gateway.config.bni.BNIPaymentConfig$Dopayment {
~ String method
~ String contentType
~ String path
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig$Dopayment$Request {
~ String customerReferenceNumber
~ String paymentMethod
~ String debitAccountNo
~ String creditAccountNo
~ String valueDate
~ String valueCurrency
~ Long valueAmount
~ String Remark
~ String beneficiaryEmailAddress
~ String destinationBankCode
~ String beneficiaryName
~ String beneficiaryAddress1
~ String beneficiaryAddress2
~ String chargingModelId
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig$Dopayment$Response {
~ String responseTimestamp
~ String debitAccountNo
~ String creditAccountNo
~ String customerReference
~ String bankReference
~ String valueAmount
~ String valueCurrency
}
interface com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinhouseinquiry {
~ String method
~ String contentType
~ String path
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinhouseinquiry$Request {
~ String accountNo
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinhouseinquiry$Response {
~ String responseTimestamp
~ String customerName
~ String accountCurrency
~ String accountNumber
~ String accountStatus
~ String accountType
}
interface com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getpaymentstatus {
~ String method
~ String contentType
~ String path
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getpaymentstatus$Request {
~ String customerReferenceNumber
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getpaymentstatus$Response {
~ String responseTimestamp
~ PreviousResponse previousResponse
~ String customerReference
~ String bankReference
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getpaymentstatus$PreviousResponse {
~ String transactionStatus
~ String previousResponseCode
~ String previousResponseMessage
~ String previousResponseTimestamp
~ String debitAccountNo
~ String creditAccountNo
~ String valueAmount
~ String valueCurrency
}
interface com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankpayment {
~ String method
~ String contentType
~ String path
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankpayment$Request {
~ String customerReferenceNumber
~ String amount
~ String destinationAccountNum
~ String destinationAccountName
~ String destinationBankCode
~ String destinationBankName
~ String accountNum
~ String retrievalReffNum
}
class com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankpayment$Response {
~ String destinationAccountNum
~ String destinationAccountName
~ String customerReffNum
~ String accountName
}
class com.welab.pay.gateway.config.bca.BcaApiModel {
+ {static} String SUB_COMPANY_CODE
}
class com.welab.pay.gateway.config.bca.BcaApiModel$BcaHttpReq {
- String httpMethod
- String relativeUrl
- String accessToken
- Object body
- String timestamp
}
class com.welab.pay.gateway.config.bca.BcaApiModel$BaseBcaHttpRes {
- String ErrorCode
- BcaResultMsg ErrorMessage
+ boolean isSuccess()
+ String getMsg()
}
class com.welab.pay.gateway.config.bca.BcaApiModel$BaseBcaHttpRes$BcaResultMsg {
- String English
- String Indonesian
}
class com.welab.pay.gateway.config.bca.BcaApiModel$Authentication {
- String CorporateID
- String AccessCode
- String BranchCode
- String UserID
- String LocalID
}
class com.welab.pay.gateway.config.bca.BcaApiModel$AccessTokenOpt {
+ {static} String TOKEN_REQ_URL
}
class com.welab.pay.gateway.config.bca.BcaApiModel$AccessTokenOpt$AccessTokenRes {
- String access_token
- String token_type
- Integer expires_in
- String scope
}
class com.welab.pay.gateway.config.bca.BcaApiModel$InquiryAccountOpt {
+ {static} String INQUIRY_ACCOUNT_REQ_URL
+ {static} String INQUIRY_ACCOUNT_REQ_METHOD
+ {static} String getInquiryAccountReqUrl(String,String)
}
class com.welab.pay.gateway.config.bca.BcaApiModel$InquiryAccountOpt$InquiryAccountReq {
- String bankCode
- String accountNumber
}
class com.welab.pay.gateway.config.bca.BcaApiModel$InquiryAccountOpt$InquiryAccountRes {
- String beneficiary_bank_code
- String beneficiary_account_number
- String beneficiary_account_name
}
class com.welab.pay.gateway.config.bca.BcaApiModel$TransfersOpt {
+ {static} String TRANSFERS_REQ_URL
+ {static} String TRANSFERS_REQ_METHOD
}
class com.welab.pay.gateway.config.bca.BcaApiModel$TransfersOpt$TransfersReq {
- String CorporateID
- String SourceAccountNumber
- String TransactionID
- String TransactionDate
- String ReferenceID
- String CurrencyCode
- String Amount
- String BeneficiaryAccountNumber
- String Remark1
- String Remark2
}
class com.welab.pay.gateway.config.bca.BcaApiModel$TransfersOpt$TransfersRes {
- String TransactionID
- String TransactionDate
- String ReferenceID
- String Status
+ boolean isSuccess()
}
class com.welab.pay.gateway.config.bca.BcaApiModel$TransfersDomesticOpt {
+ {static} String TRANSFERS_DOMESTIC_REQ_URL
+ {static} String TRANSFERS_DOMESTIC_REQ_METHOD
}
class com.welab.pay.gateway.config.bca.BcaApiModel$TransfersDomesticOpt$TransfersDomesticReq {
- String transaction_id
- String transaction_date
- String source_account_number
- String beneficiary_account_number
- String beneficiary_bank_code
- String beneficiary_name
- String amount
- String transfer_type
- String beneficiary_cust_type
- String beneficiary_cust_residence
- String currency_code
- String remark1
- String remark2
- String beneficiary_email
}
class com.welab.pay.gateway.config.bca.BcaApiModel$TransfersDomesticOpt$TransfersDomesticRes {
- String transaction_id
- String transaction_date
- String filler_ppu_no
}
class com.welab.pay.gateway.config.bca.BcaApiModel$TransfersStatusOpt {
+ {static} String BASE_TRANSFERS_STATUS_REQ_URL
+ {static} String TRANSFERS_STATUS_REQ_METHOD
+ {static} String TRANSFERS_STATUS_SUCCESS
+ {static} String TRANSFERS_STATUS_FAILED
+ {static} String TRANSFERS_STATUS_PENDING
}
class com.welab.pay.gateway.config.bca.BcaApiModel$TransfersStatusOpt$TransfersStatusReq {
- String transactionId
- String transactionDate
- String transferType
}
class com.welab.pay.gateway.config.bca.BcaApiModel$TransfersStatusOpt$TransfersStatusRes {
- String transactionId
- String transactionDate
- String transferType
- String sourceAccountNumber
- String beneficiaryAccountNumber
- String beneficiaryBankCode
- String currency
- String amount
- String statusCode
- BcaResultMsg reason
+ String getMsg()
}
class com.welab.pay.gateway.config.bca.BcaApiModel$GetBalanceOpt {
+ {static} String CORPORATE_ID
+ {static} String BALANCE_REQ_URL
+ {static} String BALANCE_REQ_METHOD
+ {static} String getBalanceReqUrl(String,String)
}
class com.welab.pay.gateway.config.bca.BcaApiModel$GetBalanceOpt$BalanceRes {
- List<AccountDetailDataSuccess> AccountDetailDataSuccess
- List<AccountDetailDataFailed> AccountDetailDataFailed
}
class com.welab.pay.gateway.config.bca.BcaApiModel$GetBalanceOpt$AccountDetailDataSuccess {
- String AccountNumber
- String Currency
- String Balance
- String AvailableBalance
- String FloatAmount
- String HoldAmount
- String Plafon
}
class com.welab.pay.gateway.config.bca.BcaApiModel$GetBalanceOpt$AccountDetailDataFailed {
- String AccountNumber
}
enum com.welab.pay.gateway.enums.FundEnum {
+  XENDIT
+  BNI
+  SIMULATE
+  FASPAY
+  PERMATA
+  ALFAMART
+  ASTRA_PAY
+  TAPP
+  ASTRAPAY_WALLET
+  BCA
+  MANUAL
- byte id
- String name
- <<Create>> FundEnum(byte,String)
+ {static} FundEnum getById(byte)
+ {static} FundEnum getById(String)
+ {static} List getFundList()
+ byte getId()
+ void setId(byte)
+ String getName()
+ void setName(String)
}
class com.welab.pay.gateway.controller.permata.PermataCallbackController {
- BaseVirtualAccountService baseVirtualAccountService
- RepaymentHelper repaymentHelper
- BaseOrderService baseOrderService
- BaseCallbackService baseCallbackService
- Authentication authentication
- BaseAmountRecordService baseAmountRecordService
- GatewayConfig gatewayConfig
- MqForward mqForward
- DuesService duesService
- Boolean mock
+ Object revBill(HttpServletRequest,HttpServletResponse)
+ Object getBill(HttpServletRequest,HttpServletResponse)
+ Object payBill(HttpServletRequest,HttpServletResponse)
}
class com.welab.pay.gateway.vo.bca.VaBillsResVO {
- String CompanyCode
- String CustomerNumber
- String RequestID
- String InquiryStatus
- BcaApiModel.BaseBcaHttpRes.BcaResultMsg InquiryReason
- String CustomerName
- String CurrencyCode
- String TotalAmount
- String SubCompany
- List<DetailBill> DetailBills
- List<BcaApiModel.BaseBcaHttpRes.BcaResultMsg> FreeTexts
- String AdditionalData
+ {static} VaBillsResVO buildVaBillsRes(VaBillsReqVO,String,String,String)
}
class com.welab.pay.gateway.vo.bca.VaBillsResVO$DetailBill {
- BcaApiModel.BaseBcaHttpRes.BcaResultMsg BillDescription
- String BillAmount
- String BillNumber
- String BillSubCompany
}
class com.welab.pay.gateway.http.test.FastPayUtilsTest2 {
+ void test()
}
class com.welab.pay.gateway.config.astrapay.wallet.Authorization {
}
class com.welab.pay.gateway.config.astrapay.wallet.Authorization$Response {
- String access_token
- int expires_in
- int refresh_expires_in
- String token_type
- String scope
}
interface com.welab.pay.gateway.mapper.ext.GatewayRepaymentOrderExtMapper {
~ List<GatewayRepaymentOrder> listByParam(List<GatewayRepaymentOrderParamDTO>)
}
class com.welab.pay.gateway.Application {
- {static} Logger LOG
+ FilterRegistrationBean httpServletRequestReplacedFilter()
+ SimpleRabbitListenerContainerFactory buildEmailMqContainerFactory(SimpleRabbitListenerContainerFactoryConfigurer,ConnectionFactory)
+ {static} void main(String[])
}
class com.welab.pay.gateway.vo.AccessTokenVo {
- String access_token
- String token_type
- Integer expires_in
- String scope
}
class com.welab.pay.gateway.model.VirtualAccountPayBackNotice {
- Long id
- String accountNumber
- String notifyType
- String destination
- String remark
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getAccountNumber()
+ void setAccountNumber(String)
+ String getNotifyType()
+ void setNotifyType(String)
+ String getDestination()
+ void setDestination(String)
+ String getRemark()
+ void setRemark(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.pay.gateway.dto.mq.BaseMqDto {
- {static} long serialVersionUID
- String ip
- Date activeDate
- Map<String,Object> externalMap
- String taskId
}
class com.welab.pay.gateway.utils.BNIUtils {
+ {static} boolean isBNICode(String)
}
class com.welab.pay.gateway.config.GatewayDto {
- Byte id
- String secretKey
- String clientId
- String userName
- String url
- String accountNo
- String clientName
- String signatureKey
- String apiKey
- String signatureFilePath
- String p12Password
}
class com.welab.pay.gateway.impl.permata.PermataAccountImpl {
- RequestServiceHelper requestServiceHelper
+ Response<AccountVO> getAccount(AccountDto)
}
class com.welab.pay.gateway.model.GatewayMqExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> GatewayMqExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.pay.gateway.model.GatewayMqExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Integer)
+ Criteria andIdNotEqualTo(Integer)
+ Criteria andIdGreaterThan(Integer)
+ Criteria andIdGreaterThanOrEqualTo(Integer)
+ Criteria andIdLessThan(Integer)
+ Criteria andIdLessThanOrEqualTo(Integer)
+ Criteria andIdIn(List<Integer>)
+ Criteria andIdNotIn(List<Integer>)
+ Criteria andIdBetween(Integer,Integer)
+ Criteria andIdNotBetween(Integer,Integer)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andTypeIsNull()
+ Criteria andTypeIsNotNull()
+ Criteria andTypeEqualTo(Byte)
+ Criteria andTypeNotEqualTo(Byte)
+ Criteria andTypeGreaterThan(Byte)
+ Criteria andTypeGreaterThanOrEqualTo(Byte)
+ Criteria andTypeLessThan(Byte)
+ Criteria andTypeLessThanOrEqualTo(Byte)
+ Criteria andTypeIn(List<Byte>)
+ Criteria andTypeNotIn(List<Byte>)
+ Criteria andTypeBetween(Byte,Byte)
+ Criteria andTypeNotBetween(Byte,Byte)
+ Criteria andTaskIdIsNull()
+ Criteria andTaskIdIsNotNull()
+ Criteria andTaskIdEqualTo(String)
+ Criteria andTaskIdNotEqualTo(String)
+ Criteria andTaskIdGreaterThan(String)
+ Criteria andTaskIdGreaterThanOrEqualTo(String)
+ Criteria andTaskIdLessThan(String)
+ Criteria andTaskIdLessThanOrEqualTo(String)
+ Criteria andTaskIdLike(String)
+ Criteria andTaskIdNotLike(String)
+ Criteria andTaskIdIn(List<String>)
+ Criteria andTaskIdNotIn(List<String>)
+ Criteria andTaskIdBetween(String,String)
+ Criteria andTaskIdNotBetween(String,String)
+ Criteria andTokenIsNull()
+ Criteria andTokenIsNotNull()
+ Criteria andTokenEqualTo(String)
+ Criteria andTokenNotEqualTo(String)
+ Criteria andTokenGreaterThan(String)
+ Criteria andTokenGreaterThanOrEqualTo(String)
+ Criteria andTokenLessThan(String)
+ Criteria andTokenLessThanOrEqualTo(String)
+ Criteria andTokenLike(String)
+ Criteria andTokenNotLike(String)
+ Criteria andTokenIn(List<String>)
+ Criteria andTokenNotIn(List<String>)
+ Criteria andTokenBetween(String,String)
+ Criteria andTokenNotBetween(String,String)
+ Criteria andQueueIsNull()
+ Criteria andQueueIsNotNull()
+ Criteria andQueueEqualTo(String)
+ Criteria andQueueNotEqualTo(String)
+ Criteria andQueueGreaterThan(String)
+ Criteria andQueueGreaterThanOrEqualTo(String)
+ Criteria andQueueLessThan(String)
+ Criteria andQueueLessThanOrEqualTo(String)
+ Criteria andQueueLike(String)
+ Criteria andQueueNotLike(String)
+ Criteria andQueueIn(List<String>)
+ Criteria andQueueNotIn(List<String>)
+ Criteria andQueueBetween(String,String)
+ Criteria andQueueNotBetween(String,String)
}
class com.welab.pay.gateway.model.GatewayMqExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.pay.gateway.model.GatewayMqExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
abstract class com.welab.pay.gateway.core.authentication.AbstractAuthHandler {
# GatewayAuthForThirdpartyConfig gatewayAuthConfig
+ {abstract}String getAuthType()
# {abstract}boolean doAuth(Authentication,GatewayAuthForThirdpartyConfig.AuthConfig,String)
+ boolean auth(Authentication,HttpServletRequest,HttpServletResponse)
# void authError(GatewayAuthForThirdpartyConfig.AuthConfig,HttpServletRequest,HttpServletResponse)
# String getReqAuthorization(FundEnum,HttpServletRequest)
}
class com.welab.pay.gateway.http.test.FastPayUtilsTest {
- {static} String userName
- {static} String password
+ {static} void main(String[])
+ {static} void test()
}
class com.welab.pay.gateway.app.command.bca.BcaVaBillsCmdExe {
- GatewayConfig gatewayConfig
- BaseCallbackService baseCallbackService
- BaseVirtualAccountService baseVirtualAccountService
- BaseOrderService baseOrderService
- MqForward mqForward
- DuesService duesService
+ VaBillsResVO vaBills(VaBillsReqVO,GatewayRequestBackWithBLOBs)
+ {static} void main(String[])
}
class com.welab.pay.gateway.model.GatewayRequestBack {
- Long id
- Date createAt
- Date updateAt
- Date callBackAt
- String taskId
- String callBackIp
- String callBackUrl
- String thirdpartyId
+ Long getId()
+ void setId(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ Date getCallBackAt()
+ void setCallBackAt(Date)
+ String getTaskId()
+ void setTaskId(String)
+ String getCallBackIp()
+ void setCallBackIp(String)
+ String getCallBackUrl()
+ void setCallBackUrl(String)
+ String getThirdpartyId()
+ void setThirdpartyId(String)
}
enum com.welab.pay.gateway.enums.BNITransactionStatusEnum {
+  UNKNOWN
+  INPROGRESS
+  FAILED
+  PAID
}
class com.welab.pay.gateway.error.GatewayException {
- {static} long serialVersionUID
+ <<Create>> GatewayException(String,Exception)
}
class com.welab.pay.gateway.http.BcaHttpUtils {
- {static} int DEFAULT_RETRY_COUNT
- {static} JedisCluster jedisCluster
- <<Create>> BcaHttpUtils()
+ {static} BcaApiModel.AccessTokenOpt.AccessTokenRes getAccessToken()
+ {static} BcaApiModel.TransfersOpt.TransfersRes transfersOpt(BcaApiModel.TransfersOpt.TransfersReq)
+ {static} BcaApiModel.TransfersDomesticOpt.TransfersDomesticRes transfersDomesticOpt(BcaApiModel.TransfersDomesticOpt.TransfersDomesticReq)
+ {static} BcaApiModel.InquiryAccountOpt.InquiryAccountRes inquiryAccount(BcaApiModel.InquiryAccountOpt.InquiryAccountReq)
+ {static} BcaApiModel.GetBalanceOpt.BalanceRes getBalance(String)
+ {static} BcaApiModel.TransfersStatusOpt.TransfersStatusRes transfersStatus(BcaApiModel.TransfersStatusOpt.TransfersStatusReq)
- {static} T sendBcaRequest(BcaApiModel.BcaHttpReq,Class<T>)
- {static} T sendBcaRequestByChannelID(BcaApiModel.BcaHttpReq,Class<T>)
- {static} T sendBcaRequest(Map<String,String>,BcaApiModel.BcaHttpReq,Class<T>,int)
- {static} String createSignature(BcaApiModel.BcaHttpReq)
- {static} JedisCluster getJedisCluster()
- {static} BcaApiConfiguration getBcaGatewayConfig()
+ {static} String buildUrl(String)
}
class com.welab.pay.gateway.dto.TransferDto {
- {static} long serialVersionUID
- PlatformEnum platformEnum
- FundEnum fundEnum
- Long userId
- String externalId
- String bankCode
- String debitAccountNo
- String creditAccountNo
- String description
- Long amount
- String loanNum
- Map<String,Object> externalMap
- String tradingType
- boolean isManualBni
- String oldVersion
- String remark
}
class com.welab.pay.gateway.core.authentication.AccessTokenAuthHandler {
- JedisCluster jedisCluster
+ String getAuthType()
# boolean doAuth(Authentication,GatewayAuthForThirdpartyConfig.AuthConfig,String)
+ String createAccessToken(FundEnum,boolean,AccessTokenVo)
- String getTokenKey(String)
}
interface com.welab.pay.gateway.Validator {
+ Response<BankAccountVO> validatorBankAccount(BankAccountDto)
}
class com.welab.pay.gateway.service.impl.ValidatorServiceImpl {
- JedisCluster jedisCluster
- Integer gatewayBniValidatorLimit
- MqForward mqForward
- GatewayConfig gatewayConfig
+ Response<BankAccountVO> validatorBankAccount(BankAccountDto)
}
class com.welab.pay.gateway.service.impl.InvoiceServiceImpl {
- GatewayConfig gatewayConfig
+ Response<InvoiceVO> createInvoice(InvoiceDto)
+ Response<InvoiceVO> getInvoiceById(String)
+ Response<Boolean> expireInvoice(String)
}
interface com.welab.pay.gateway.mapper.GatewayOrderMapper {
~ long countByExample(GatewayOrderExample)
~ int deleteByExample(GatewayOrderExample)
~ int deleteByPrimaryKey(Integer)
~ int insert(GatewayOrder)
~ int insertSelective(GatewayOrder)
~ List<GatewayOrder> selectByExampleWithBLOBs(GatewayOrderExample)
~ List<GatewayOrder> selectByExample(GatewayOrderExample)
~ GatewayOrder selectByPrimaryKey(Integer)
~ int updateByExampleSelective(GatewayOrder,GatewayOrderExample)
~ int updateByExampleWithBLOBs(GatewayOrder,GatewayOrderExample)
~ int updateByExample(GatewayOrder,GatewayOrderExample)
~ int updateByPrimaryKeySelective(GatewayOrder)
~ int updateByPrimaryKeyWithBLOBs(GatewayOrder)
~ int updateByPrimaryKey(GatewayOrder)
}
interface com.welab.pay.gateway.service.AccountService {
+ Response<Void> init()
+ Response<AccountVO> getAccountVOByFund(FundEnum,AccountTypeEnum)
+ Response<VirtualAccountVO> createVirtualAccount(VirtualAccountDto)
+ Response<VirtualAccountVO> updateVirtualAccount(UpdateVirtualAccountDto)
+ Response<List<VirtualAccountVO>> createVirtualAccounts(List<VirtualAccountDto>)
+ Response<List<BankVO>> getBanksforVirtualAccounts(FundEnum)
+ Response<List<VirtualAccountVO>> queryOrCreateVirtualAccounts(VirtualAccountDto)
+ Response<List<VirtualAccountVO>> findListByUserId(Long)
+ Response<List<VirtualAccountVO>> queryOrCreateOrUpdateVirtualAccounts(VirtualAccountDto)
+ boolean batchUpdateVirtualAccounts(List<VirtualAccountDto>)
+ Response<AccountVO> getAccount(AccountDto)
}
class com.welab.pay.gateway.http.HttpUtils {
+ {static} MediaType JSON
+ {static} OkHttpsUtils okHttpsUtils
- {static} Pattern reg
+ {static} String get(String,String,String,Map<String,String>)
+ {static} String get(String,String,String)
+ {static} String post(String,String,String,Map<String,String>,Map<String,String>)
+ {static} String post(String,String,String,Map<String,String>)
+ {static} String patch(String,String,String,Map<String,String>,Map<String,String>)
+ {static} String patch(String,String,String,Map<String,String>)
+ {static} String callByJson(String,String,String,Map<String,String>,Map<String,String>,String)
+ {static} String callByJson(String,String,String,Map<String,String>,String)
+ {static} String callByJson(String,String)
+ {static} String call(HttpMethod,String,String,String,Map<String,String>,Map<String,String>,Map<String,String>)
+ {static} String bniCallByJson(String,String,Request.Builder)
+ {static} String replacePlaceholder(String,Map<String,String>)
+ {static} void main(String[])
}
class com.welab.pay.gateway.app.command.VirtualAccountQryExcute {
- BaseVirtualAccountService baseVirtualAccountService
+ Response<PageInfo<VirtualAccountDto>> excute(VirtualAccountQry)
}
class com.welab.pay.gateway.config.astrapay.PaymentRequestDto {
- String trxId
- String code
- String paymentDate
- String signature
}
class com.welab.pay.gateway.model.GatewayVirtualAccountExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> GatewayVirtualAccountExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.pay.gateway.model.GatewayVirtualAccountExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andNameIsNull()
+ Criteria andNameIsNotNull()
+ Criteria andNameEqualTo(String)
+ Criteria andNameNotEqualTo(String)
+ Criteria andNameGreaterThan(String)
+ Criteria andNameGreaterThanOrEqualTo(String)
+ Criteria andNameLessThan(String)
+ Criteria andNameLessThanOrEqualTo(String)
+ Criteria andNameLike(String)
+ Criteria andNameNotLike(String)
+ Criteria andNameIn(List<String>)
+ Criteria andNameNotIn(List<String>)
+ Criteria andNameBetween(String,String)
+ Criteria andNameNotBetween(String,String)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andOwnerIdIsNull()
+ Criteria andOwnerIdIsNotNull()
+ Criteria andOwnerIdEqualTo(String)
+ Criteria andOwnerIdNotEqualTo(String)
+ Criteria andOwnerIdGreaterThan(String)
+ Criteria andOwnerIdGreaterThanOrEqualTo(String)
+ Criteria andOwnerIdLessThan(String)
+ Criteria andOwnerIdLessThanOrEqualTo(String)
+ Criteria andOwnerIdLike(String)
+ Criteria andOwnerIdNotLike(String)
+ Criteria andOwnerIdIn(List<String>)
+ Criteria andOwnerIdNotIn(List<String>)
+ Criteria andOwnerIdBetween(String,String)
+ Criteria andOwnerIdNotBetween(String,String)
+ Criteria andExternalIdIsNull()
+ Criteria andExternalIdIsNotNull()
+ Criteria andExternalIdEqualTo(String)
+ Criteria andExternalIdNotEqualTo(String)
+ Criteria andExternalIdGreaterThan(String)
+ Criteria andExternalIdGreaterThanOrEqualTo(String)
+ Criteria andExternalIdLessThan(String)
+ Criteria andExternalIdLessThanOrEqualTo(String)
+ Criteria andExternalIdLike(String)
+ Criteria andExternalIdNotLike(String)
+ Criteria andExternalIdIn(List<String>)
+ Criteria andExternalIdNotIn(List<String>)
+ Criteria andExternalIdBetween(String,String)
+ Criteria andExternalIdNotBetween(String,String)
+ Criteria andAccountNumberIsNull()
+ Criteria andAccountNumberIsNotNull()
+ Criteria andAccountNumberEqualTo(String)
+ Criteria andAccountNumberNotEqualTo(String)
+ Criteria andAccountNumberGreaterThan(String)
+ Criteria andAccountNumberGreaterThanOrEqualTo(String)
+ Criteria andAccountNumberLessThan(String)
+ Criteria andAccountNumberLessThanOrEqualTo(String)
+ Criteria andAccountNumberLike(String)
+ Criteria andAccountNumberNotLike(String)
+ Criteria andAccountNumberIn(List<String>)
+ Criteria andAccountNumberNotIn(List<String>)
+ Criteria andAccountNumberBetween(String,String)
+ Criteria andAccountNumberNotBetween(String,String)
+ Criteria andBankCodeIsNull()
+ Criteria andBankCodeIsNotNull()
+ Criteria andBankCodeEqualTo(String)
+ Criteria andBankCodeNotEqualTo(String)
+ Criteria andBankCodeGreaterThan(String)
+ Criteria andBankCodeGreaterThanOrEqualTo(String)
+ Criteria andBankCodeLessThan(String)
+ Criteria andBankCodeLessThanOrEqualTo(String)
+ Criteria andBankCodeLike(String)
+ Criteria andBankCodeNotLike(String)
+ Criteria andBankCodeIn(List<String>)
+ Criteria andBankCodeNotIn(List<String>)
+ Criteria andBankCodeBetween(String,String)
+ Criteria andBankCodeNotBetween(String,String)
+ Criteria andMerchantCodeIsNull()
+ Criteria andMerchantCodeIsNotNull()
+ Criteria andMerchantCodeEqualTo(String)
+ Criteria andMerchantCodeNotEqualTo(String)
+ Criteria andMerchantCodeGreaterThan(String)
+ Criteria andMerchantCodeGreaterThanOrEqualTo(String)
+ Criteria andMerchantCodeLessThan(String)
+ Criteria andMerchantCodeLessThanOrEqualTo(String)
+ Criteria andMerchantCodeLike(String)
+ Criteria andMerchantCodeNotLike(String)
+ Criteria andMerchantCodeIn(List<String>)
+ Criteria andMerchantCodeNotIn(List<String>)
+ Criteria andMerchantCodeBetween(String,String)
+ Criteria andMerchantCodeNotBetween(String,String)
+ Criteria andThirdpartyIdIsNull()
+ Criteria andThirdpartyIdIsNotNull()
+ Criteria andThirdpartyIdEqualTo(String)
+ Criteria andThirdpartyIdNotEqualTo(String)
+ Criteria andThirdpartyIdGreaterThan(String)
+ Criteria andThirdpartyIdGreaterThanOrEqualTo(String)
+ Criteria andThirdpartyIdLessThan(String)
+ Criteria andThirdpartyIdLessThanOrEqualTo(String)
+ Criteria andThirdpartyIdLike(String)
+ Criteria andThirdpartyIdNotLike(String)
+ Criteria andThirdpartyIdIn(List<String>)
+ Criteria andThirdpartyIdNotIn(List<String>)
+ Criteria andThirdpartyIdBetween(String,String)
+ Criteria andThirdpartyIdNotBetween(String,String)
+ Criteria andIsClosedIsNull()
+ Criteria andIsClosedIsNotNull()
+ Criteria andIsClosedEqualTo(Boolean)
+ Criteria andIsClosedNotEqualTo(Boolean)
+ Criteria andIsClosedGreaterThan(Boolean)
+ Criteria andIsClosedGreaterThanOrEqualTo(Boolean)
+ Criteria andIsClosedLessThan(Boolean)
+ Criteria andIsClosedLessThanOrEqualTo(Boolean)
+ Criteria andIsClosedIn(List<Boolean>)
+ Criteria andIsClosedNotIn(List<Boolean>)
+ Criteria andIsClosedBetween(Boolean,Boolean)
+ Criteria andIsClosedNotBetween(Boolean,Boolean)
+ Criteria andExpirationDateIsNull()
+ Criteria andExpirationDateIsNotNull()
+ Criteria andExpirationDateEqualTo(Date)
+ Criteria andExpirationDateNotEqualTo(Date)
+ Criteria andExpirationDateGreaterThan(Date)
+ Criteria andExpirationDateGreaterThanOrEqualTo(Date)
+ Criteria andExpirationDateLessThan(Date)
+ Criteria andExpirationDateLessThanOrEqualTo(Date)
+ Criteria andExpirationDateIn(List<Date>)
+ Criteria andExpirationDateNotIn(List<Date>)
+ Criteria andExpirationDateBetween(Date,Date)
+ Criteria andExpirationDateNotBetween(Date,Date)
+ Criteria andIsSingleUseIsNull()
+ Criteria andIsSingleUseIsNotNull()
+ Criteria andIsSingleUseEqualTo(Boolean)
+ Criteria andIsSingleUseNotEqualTo(Boolean)
+ Criteria andIsSingleUseGreaterThan(Boolean)
+ Criteria andIsSingleUseGreaterThanOrEqualTo(Boolean)
+ Criteria andIsSingleUseLessThan(Boolean)
+ Criteria andIsSingleUseLessThanOrEqualTo(Boolean)
+ Criteria andIsSingleUseIn(List<Boolean>)
+ Criteria andIsSingleUseNotIn(List<Boolean>)
+ Criteria andIsSingleUseBetween(Boolean,Boolean)
+ Criteria andIsSingleUseNotBetween(Boolean,Boolean)
+ Criteria andSuggestedAmountIsNull()
+ Criteria andSuggestedAmountIsNotNull()
+ Criteria andSuggestedAmountEqualTo(Long)
+ Criteria andSuggestedAmountNotEqualTo(Long)
+ Criteria andSuggestedAmountGreaterThan(Long)
+ Criteria andSuggestedAmountGreaterThanOrEqualTo(Long)
+ Criteria andSuggestedAmountLessThan(Long)
+ Criteria andSuggestedAmountLessThanOrEqualTo(Long)
+ Criteria andSuggestedAmountIn(List<Long>)
+ Criteria andSuggestedAmountNotIn(List<Long>)
+ Criteria andSuggestedAmountBetween(Long,Long)
+ Criteria andSuggestedAmountNotBetween(Long,Long)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(String)
+ Criteria andStatusNotEqualTo(String)
+ Criteria andStatusGreaterThan(String)
+ Criteria andStatusGreaterThanOrEqualTo(String)
+ Criteria andStatusLessThan(String)
+ Criteria andStatusLessThanOrEqualTo(String)
+ Criteria andStatusLike(String)
+ Criteria andStatusNotLike(String)
+ Criteria andStatusIn(List<String>)
+ Criteria andStatusNotIn(List<String>)
+ Criteria andStatusBetween(String,String)
+ Criteria andStatusNotBetween(String,String)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Byte)
+ Criteria andFundIdNotEqualTo(Byte)
+ Criteria andFundIdGreaterThan(Byte)
+ Criteria andFundIdGreaterThanOrEqualTo(Byte)
+ Criteria andFundIdLessThan(Byte)
+ Criteria andFundIdLessThanOrEqualTo(Byte)
+ Criteria andFundIdIn(List<Byte>)
+ Criteria andFundIdNotIn(List<Byte>)
+ Criteria andFundIdBetween(Byte,Byte)
+ Criteria andFundIdNotBetween(Byte,Byte)
+ Criteria andUserIdIsNull()
+ Criteria andUserIdIsNotNull()
+ Criteria andUserIdEqualTo(Long)
+ Criteria andUserIdNotEqualTo(Long)
+ Criteria andUserIdGreaterThan(Long)
+ Criteria andUserIdGreaterThanOrEqualTo(Long)
+ Criteria andUserIdLessThan(Long)
+ Criteria andUserIdLessThanOrEqualTo(Long)
+ Criteria andUserIdIn(List<Long>)
+ Criteria andUserIdNotIn(List<Long>)
+ Criteria andUserIdBetween(Long,Long)
+ Criteria andUserIdNotBetween(Long,Long)
}
class com.welab.pay.gateway.model.GatewayVirtualAccountExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.pay.gateway.model.GatewayVirtualAccountExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
interface com.welab.pay.gateway.config.permata.PermataLoanResponseCode {
+ String SUCCESS
+ String DECLINE
+ String CONNECTION_TIMEOUT_TO_BACK_END
+ String DAILY_LIMIT_EXCEEDS
+ String ACCOUNT_NOT_FOUND
+ String INSUFFICIENT_FUND
+ String GENERIC_ERROR
+ String TIMEOUT
+ String BILL_ALREADY_PAID
+ String INVALID_BENEFICIARY_OR_CURRENCY
+ String TRANSPORT_ERROR_TO_BACK_END
+ String UN_AUTHORIZED
+ String SIGNATURE_NOT_VALID
+ {static} boolean isSuccess(String)
}
class com.welab.pay.gateway.config.bca.BcaErrorsCode {
+ {static} String UN_AUTHORIZED
- <<Create>> BcaErrorsCode()
}
class com.welab.pay.gateway.impl.permata.PermataPayment {
- PaymentHelper paymentHelper
- BaseRequestService baseRequestService
# Response<PayingVO> doPaying(GatewayTask,TransferDto)
- Response<PayingVO> permataPaying(GatewayTask,String,String,String,String,Long,String)
- Response<PayingVO> otherPaying(GatewayTask,String,String,String,String,Long,String,String,String)
# Response<TransferVO> doTransfer(GatewayTask,TransferDto)
- Response<PayingVO> bulidResponse(GatewayTask,PermataLoanConfig.WrapResponse)
# void doRetryDisbursement(GatewayTask,String)
}
class com.welab.pay.gateway.model.GatewayConfig {
- Integer id
- Date createAt
- Date updateAt
- Byte fundId
- String fundName
+ Integer getId()
+ void setId(Integer)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ Byte getFundId()
+ void setFundId(Byte)
+ String getFundName()
+ void setFundName(String)
}
class com.welab.pay.gateway.impl.bni.BniValidator {
- BaseBankAccountService baseBankAccountService
- BaseBankServcie baseBankServcie
- RequestServiceHelper requestServiceHelper
+ Response<BankAccountVO> validatorBankAccount(BankAccountDto)
+ {static} void main(String[])
}
class com.welab.pay.gateway.app.manager.BNIManager {
- BNIAuthenticateConfig config
- BaseRequestService baseRequestService
- PaymentHelper paymentHelper
- BaseBankAccountService baseBankAccountService
- Boolean mock
+ DisbursementStatusResponse getDisbursementStatus(GatewayTask)
+ BNIPaymentConfig12.GetDisbursementStatus.Response getDisbursementStatusV12(String,String)
+ GatewayBankAccount getAccountInquiry(GatewayTask,String,String,String,boolean)
- GatewayBankAccount getinterbankinquiryV12(GatewayTask,String,String,String,GatewayBankAccount)
+ GatewayBankAccount getinterbankinquiryV10(String,String,String,String,GatewayBankAccount)
+ BNIPaymentConfig12.Disbursement.DisbursementResponse disbursementV12(BNIDisbursementCmd)
}
class com.welab.pay.gateway.test.BaseTest {
}
class com.welab.pay.gateway.model.GatewayRequestBackExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> GatewayRequestBackExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.pay.gateway.model.GatewayRequestBackExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andCallBackAtIsNull()
+ Criteria andCallBackAtIsNotNull()
+ Criteria andCallBackAtEqualTo(Date)
+ Criteria andCallBackAtNotEqualTo(Date)
+ Criteria andCallBackAtGreaterThan(Date)
+ Criteria andCallBackAtGreaterThanOrEqualTo(Date)
+ Criteria andCallBackAtLessThan(Date)
+ Criteria andCallBackAtLessThanOrEqualTo(Date)
+ Criteria andCallBackAtIn(List<Date>)
+ Criteria andCallBackAtNotIn(List<Date>)
+ Criteria andCallBackAtBetween(Date,Date)
+ Criteria andCallBackAtNotBetween(Date,Date)
+ Criteria andTaskIdIsNull()
+ Criteria andTaskIdIsNotNull()
+ Criteria andTaskIdEqualTo(String)
+ Criteria andTaskIdNotEqualTo(String)
+ Criteria andTaskIdGreaterThan(String)
+ Criteria andTaskIdGreaterThanOrEqualTo(String)
+ Criteria andTaskIdLessThan(String)
+ Criteria andTaskIdLessThanOrEqualTo(String)
+ Criteria andTaskIdLike(String)
+ Criteria andTaskIdNotLike(String)
+ Criteria andTaskIdIn(List<String>)
+ Criteria andTaskIdNotIn(List<String>)
+ Criteria andTaskIdBetween(String,String)
+ Criteria andTaskIdNotBetween(String,String)
+ Criteria andCallBackIpIsNull()
+ Criteria andCallBackIpIsNotNull()
+ Criteria andCallBackIpEqualTo(String)
+ Criteria andCallBackIpNotEqualTo(String)
+ Criteria andCallBackIpGreaterThan(String)
+ Criteria andCallBackIpGreaterThanOrEqualTo(String)
+ Criteria andCallBackIpLessThan(String)
+ Criteria andCallBackIpLessThanOrEqualTo(String)
+ Criteria andCallBackIpLike(String)
+ Criteria andCallBackIpNotLike(String)
+ Criteria andCallBackIpIn(List<String>)
+ Criteria andCallBackIpNotIn(List<String>)
+ Criteria andCallBackIpBetween(String,String)
+ Criteria andCallBackIpNotBetween(String,String)
+ Criteria andCallBackUrlIsNull()
+ Criteria andCallBackUrlIsNotNull()
+ Criteria andCallBackUrlEqualTo(String)
+ Criteria andCallBackUrlNotEqualTo(String)
+ Criteria andCallBackUrlGreaterThan(String)
+ Criteria andCallBackUrlGreaterThanOrEqualTo(String)
+ Criteria andCallBackUrlLessThan(String)
+ Criteria andCallBackUrlLessThanOrEqualTo(String)
+ Criteria andCallBackUrlLike(String)
+ Criteria andCallBackUrlNotLike(String)
+ Criteria andCallBackUrlIn(List<String>)
+ Criteria andCallBackUrlNotIn(List<String>)
+ Criteria andCallBackUrlBetween(String,String)
+ Criteria andCallBackUrlNotBetween(String,String)
+ Criteria andThirdpartyIdIsNull()
+ Criteria andThirdpartyIdIsNotNull()
+ Criteria andThirdpartyIdEqualTo(String)
+ Criteria andThirdpartyIdNotEqualTo(String)
+ Criteria andThirdpartyIdGreaterThan(String)
+ Criteria andThirdpartyIdGreaterThanOrEqualTo(String)
+ Criteria andThirdpartyIdLessThan(String)
+ Criteria andThirdpartyIdLessThanOrEqualTo(String)
+ Criteria andThirdpartyIdLike(String)
+ Criteria andThirdpartyIdNotLike(String)
+ Criteria andThirdpartyIdIn(List<String>)
+ Criteria andThirdpartyIdNotIn(List<String>)
+ Criteria andThirdpartyIdBetween(String,String)
+ Criteria andThirdpartyIdNotBetween(String,String)
}
class com.welab.pay.gateway.model.GatewayRequestBackExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.pay.gateway.model.GatewayRequestBackExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.pay.gateway.vo.BankVO {
- {static} long serialVersionUID
- String name
- String code
- String loanTimeMsg
}
class com.welab.pay.gateway.app.command.CacheTransferExtendIdCmdExe {
- JedisCluster jedisCluster
- {static} String CACHE_TRANSFER_EXTENTSID_KEY
+ void cacheTransferExtendId(String,PlatformEnum,String)
+ void delCache(String,PlatformEnum)
+ Boolean existCache(String,PlatformEnum)
}
class com.welab.pay.gateway.dto.cmd.BNIDisbursementCmd {
- GatewayTaskCmd task
- String fundAccountNum
- String bankCode
- String bankAccountNum
- Long amount
- String remark
- String beneficiaryName
}
class com.welab.pay.gateway.vo.bca.BcaPaymentExtendVO {
- String transactionDate
- String transferType
+ {static} String BCA_EXTEND_KEY
+ {static} String addExtend(String,BcaPaymentExtendVO)
+ {static} String putDate(String,String)
+ {static} String putTransferType(String,String)
+ {static} BcaPaymentExtendVO parseParams(String)
}
class com.welab.pay.gateway.mq.consumers.VaCreateOrUpdateConsumer {
- AccountService accountService
+ void onMessage(Message)
}
class com.welab.pay.gateway.test.QueryTaskServiceImplTest {
- QueryTaskService queryTaskService
- ITaskService taskService
+ void getPayingVOByTaskId()
+ void getOneByTaskId()
}
class com.welab.pay.gateway.vo.BaseTaskVO {
- {static} long serialVersionUID
}
class com.welab.pay.gateway.test.VATest {
- AccountService accountService
- VirtualAccountConsumer virtualAccountConsumer
+ void onMessage()
}
class com.welab.pay.gateway.model.GatewayRequestBackWithBLOBs {
- String callBackBody
- String callBackParam
+ String getCallBackBody()
+ void setCallBackBody(String)
+ String getCallBackParam()
+ void setCallBackParam(String)
}
class com.welab.pay.gateway.dto.cmd.CreateVANumberCmd {
- FundEnum fundEnum
- String bankCode
}
class com.welab.pay.gateway.impl.permata.PermataVirtualAccountImpl {
- BaseVirtualAccountService baseVirtualAccountService
- BaseTaskService gatewayTaskService
- BaseBankServcie baseBankServcie
+ Response<VirtualAccountVO> createVirtualAccount(VirtualAccountDto)
+ Response<VirtualAccountVO> updateVirtualAccount(UpdateVirtualAccountDto)
+ Response<List<BankVO>> getBanksforVirtualAccounts(FundEnum)
+ Response<List<VirtualAccountVO>> queryOrCreateVirtualAccounts(VirtualAccountDto)
+ Response<List<VirtualAccountVO>> queryOrCreateOrUpdateVirtualAccounts(VirtualAccountDto)
+ Response<Boolean> batchUpdateVirtualAccounts(List<VirtualAccountDto>)
# {static} String bulidVirtualAccount(String,String)
+ String buildVirtualAccount(String,String)
+ {static} void main(String[])
}
class com.welab.pay.gateway.service.BaseBankServcie {
- GatewayBankMapper gatewayBankMapper
+ List<GatewayBank> getList(byte)
+ List<GatewayBank> getList(byte,boolean)
+ long count(byte)
+ String getGatewayCode(byte,String)
+ int save(GatewayBank)
+ GatewayBank getOne(byte,String)
}
interface com.welab.pay.gateway.service.BankService {
~ BankVO getBankByBankCode(String)
~ List<BankVO> getVirtualBankVOList(FundEnum)
}
enum com.welab.pay.gateway.config.bni.BNIPaymentErrorCode {
+  SUCCESS
+  SUCCESS_001
+  INSUFFICIENT_BALANCE
+  Unregistered_Account
+  ACCOUNT_IS_CLOSED
+  ACCOUNT_IS_BLOCKED
+  RECORD_IS_PAID
+  NO_SUCH_ACCOUNT
+  INPROGRESS
- String code
- String message
- <<Create>> BNIPaymentErrorCode(String,String)
+ {static} boolean isSuccess(String)
+ {static} boolean isInprogressV12(String)
+ String getCode()
+ String getMessage()
}
class com.welab.pay.gateway.http.PermataHttpUtils {
- {static} JedisCluster jedisCluster
+ {static} PermataLoanConfig.Token.Response token()
+ {static} PermataLoanConfig.BalanceInfo.Response balanceInfo(PermataLoanConfig.BalanceInfo.Request)
+ {static} PermataLoanConfig.AccountInfo.Response accountInfo(PermataLoanConfig.AccountInfo.Request)
+ {static} PermataLoanConfig.FundsTransfer.Response fundsTransfer(PermataLoanConfig.FundsTransfer.Request)
+ {static} PermataLoanConfig.OnlineXferInfo.Response onlineXferInfo(PermataLoanConfig.OnlineXferInfo.Request)
+ {static} PermataLoanConfig.InterBankTransfer.Response interBankTransfer(PermataLoanConfig.InterBankTransfer.Request)
+ {static} PermataLoanConfig.LlgTransfer.Response llgTransfer(PermataLoanConfig.LlgTransfer.Request)
+ {static} PermataLoanConfig.RtgsTransfer.Response rtgsTransfer(PermataLoanConfig.RtgsTransfer.Request)
+ {static} PermataLoanConfig.BillInfo.Response billInfo(PermataLoanConfig.BillInfo.Request)
+ {static} PermataLoanConfig.Payment.Response payment(PermataLoanConfig.Payment.Request)
+ {static} PermataLoanConfig.AccountStatement.Response accountStatement(PermataLoanConfig.AccountStatement.Request)
+ {static} PermataLoanConfig.StatusTransaction.Response statusTransaction(PermataLoanConfig.StatusTransaction.Request)
+ {static} T call(String,Object,Class<T>)
- {static} Map<String,String> initHeaders(String,String)
}
class com.welab.pay.gateway.http.BNIPaymentHttp12Utils {
- {static} JedisCluster jedisCluster
+ {static} BNIPaymentConfig12.Token.Response token(BNIAuthenticateConfig)
+ {static} Map<String,String> getToken(BNIAuthenticateConfig)
+ {static} BNIPaymentConfig12.Getinhouseinquiry.Response getinhouseinquiry(BNIAuthenticateConfig,BNIPaymentConfig12.Getinhouseinquiry.Request)
+ {static} BNIPaymentConfig12.Getinhouseinquiry.Response parseHouseinquiryResponse(String)
+ {static} BNIPaymentConfig12.GetDisbursementStatus.Response getDisbursementStatus(BNIAuthenticateConfig,BNIPaymentConfig12.GetDisbursementStatus.GetpaymentRequest)
+ {static} BNITransactionStatusEnum getDisbursementStatus(BNIPaymentConfig12.GetDisbursementStatus.Response)
+ {static} BNIPaymentConfig12.Disbursement.DisbursementResponse disbursement(BNIAuthenticateConfig,BNIPaymentConfig12.Disbursement.Request)
- {static} String getCurrentTimeStamp()
- {static} void addHeader(BNIAuthenticateConfig,Map<String,Object>,okhttp3.Request.Builder)
}
class com.welab.pay.gateway.http.test.BNIHttpUtilsTest {
- {static} String url
- {static} String client_id
- {static} String secret_key
+ void createbilling()
+ {static} void main(String[])
+ void inquiryBilling()
+ void updatebilling()
}
class com.welab.pay.gateway.vo.InvoiceVO {
- {static} long serialVersionUID
- String id
- String gatewayPictureUrl
- String gatewayName
- String gatewayUrl
- Long amount
- String status
- String externalId
- Boolean shouldExcludeCreditCard
- String shouldSendEmail
- Date expiryDate
- List<AvailableRetailOutletVO> availableRetailOutletVOList
- List<AvailableBankVO> availableBankVOList
}
class com.welab.pay.gateway.vo.InvoiceVO$AvailableBankVO {
- {static} long serialVersionUID
- String bankCode
- String collectionType
- String bankAccountNumber
- Long transferAmount
- String bankBranch
- String accountHolderName
- Long identityAmount
}
class com.welab.pay.gateway.vo.InvoiceVO$AvailableRetailOutletVO {
- {static} long serialVersionUID
- String retailOutletName
- String paymentCode
- Long transferAmount
}
interface com.welab.pay.gateway.mapper.GatewayMqMapper {
~ long countByExample(GatewayMqExample)
~ int deleteByExample(GatewayMqExample)
~ int deleteByPrimaryKey(Integer)
~ int insert(GatewayMq)
~ int insertSelective(GatewayMq)
~ List<GatewayMq> selectByExampleWithBLOBs(GatewayMqExample)
~ List<GatewayMq> selectByExample(GatewayMqExample)
~ GatewayMq selectByPrimaryKey(Integer)
~ int updateByExampleSelective(GatewayMq,GatewayMqExample)
~ int updateByExampleWithBLOBs(GatewayMq,GatewayMqExample)
~ int updateByExample(GatewayMq,GatewayMqExample)
~ int updateByPrimaryKeySelective(GatewayMq)
~ int updateByPrimaryKeyWithBLOBs(GatewayMq)
~ int updateByPrimaryKey(GatewayMq)
}
class com.welab.pay.gateway.dto.VirtualAccountDto {
- {static} long serialVersionUID
- FundEnum fundEnum
- Long userId
- String bankCode
- String name
- String externalId
- Long amount
- String mobile
- String accountNumber
- Integer status
- Long id
- String namePrefix
- List<String> bankCodeList
}
interface com.welab.pay.gateway.config.faspay.FaspayCallbackConfig {
}
class com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$BaseRequest {
- String signature
}
class com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$BaseResponse {
- String response
- String response_code
- String response_desc
- String response_date
}
interface com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Inquiry {
}
class com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Inquiry$Request {
- String va_number
}
class com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Inquiry$Response {
- String va_number
- String amount
- String cust_name
}
class com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Inquiry$CallBack {
}
interface com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Payment {
}
class com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Payment$Request {
- String va_number
- String trx_uid
}
class com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Payment$Response {
- String va_number
- String amount
- String cust_name
}
class com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Payment$CallBack {
}
interface com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$PaymentNotification {
}
class com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$PaymentNotification$Request {
- String request
- String trx_id
- String merchant_id
- String merchant
- String bill_no
- String payment_reff
- String payment_date
- String payment_status_code
- String payment_status_desc
}
class com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$PaymentNotification$Response {
- String trx_id
- String merchant
- String merchant_id
- String bill_no
}
class com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$PaymentNotification$CallBack {
}
class com.welab.pay.gateway.vo.AstraPayWalletAccountCallBackVO {
- String signature
- String merchantUserId
- String callbackTimestamp
}
class com.welab.pay.gateway.controller.astrapay.AstraPayWalletController {
- AstraPayWalletManager astraPayWalletManager
+ AstraPayWalletCallResVO accountCallBack(AstraPayWalletAccountCallBackVO)
+ AstraPayWalletCallResVO paymentCallBack(AstraPayWalletPaymentCallBackVO)
}
class com.welab.pay.gateway.http.XenditHttpUtils {
+ {static} String get(byte,String,Map<String,String>)
+ {static} String get(byte,String)
+ {static} String post(byte,String,Map<String,String>,Map<String,String>)
+ {static} String post(byte,String,Map<String,String>)
+ {static} String patch(byte,String,Map<String,String>,Map<String,String>)
+ {static} String patch(byte,String,Map<String,String>)
}
class com.welab.pay.gateway.core.authentication.BaseicAuthHandler {
+ String getAuthType()
# boolean doAuth(Authentication,GatewayAuthForThirdpartyConfig.AuthConfig,String)
}
class com.welab.pay.gateway.config.astrapay.wallet.AstrapayWalletConfiguration {
- String clientId
- String clientSecret
- String encryptKey
- String baseUrl
- String authUrl
- String regUrl
- String paymentUrl
- String profileUrl
- String transactionStatusUrl
}
class com.welab.pay.gateway.helper.RepaymentHelper {
- MqForward mqForward
- BaseVirtualAccountPayBackNoticeService baseVirtualAccountPayBackNoticeService
+ void repaymentNotify(String,VirtualAccountPaymentMqDto)
+ VirtualAccountPaymentMqDto bulidVirtualAccountPaymentMqDto(FundEnum,Long,Long,String,Date)
}
class com.welab.pay.gateway.utils.HttpRequestUtil {
+ {static} GatewayRequestBackWithBLOBs bulidCallback(HttpServletRequest)
+ {static} GatewayRequestBackWithBLOBs bulidCallback(HttpServletRequest,String)
+ {static} String getIpAddress(HttpServletRequest)
}
class com.welab.pay.gateway.dto.cmd.VirtualAccountAddCmd {
- String name
- Long amount
- String bankCode
- String accountNumber
- Long userId
- FundEnum fundEnum
- String externalId
- CustomizeNotice customizeNotice
}
class com.welab.pay.gateway.dto.cmd.VirtualAccountAddCmd$CustomizeNotice {
- VirtualAccountPayBackNoticeEnum notifyType
- String destination
- String remark
}
class com.welab.pay.gateway.dto.BaseDto {
- {static} long serialVersionUID
}
class com.welab.pay.gateway.service.BaseBankAccountService {
- GatewayBankAccountMapper gatewayBankAccountMapper
+ int save(GatewayBankAccount)
+ GatewayBankAccount getOne(byte,String,String)
+ GatewayBankAccount getOne(String)
+ GatewayBankAccount getOne(String,String)
+ GatewayBankAccount getOne(byte,String)
+ int add(Byte,String,String,String)
}
class com.welab.pay.gateway.mq.MqForward {
- RabbitTemplate rabbitTemplate
- BaseMqService baseMqService
- String EXCHANGE_WELAB_SEA_TRANSFER
- String EXCHANGE_WELAB_SEA_PAYMENT
- String EXCHANGE_WELAB_SEA_RECHARGE
- String EXCHANGE_WELAB_SEA_FUND_RECHARGE
- String QUEUE_WELAB_SEA_BNI_INVOICE_UPDATE
- String QUEUE_WELAB_SEA_BNI_VALIDATOR
- String QUEUE_WELAB_SEA_PAY_HTTP_REQUEST
- String QUEUE_WELAB_SEA_PAY_TASK
- String QUEUE_WELAB_SEA_TASK_STATUS
+ void sendTaskStatus(String)
+ void sendAdvancePayment(String)
+ void sendPayTask(String)
+ void sendHttpRequest(String)
+ void sendUpdateVirtual(String)
+ void sendBniValidator(String)
+ void fundRechargeForBni(Long,Date,String,String,String)
+ void fundRecharge(String,FundRechargeMqDto)
+ void disbursement(String,DisbursementMqDto)
+ void exchangDisbursement(String,DisbursementMqDto)
+ void exchangTransfer(String,TransferCallbackDto)
+ void exchangeFixedVirtualAccountsPayment(VirtualAccountPaymentMqDto,String)
+ void send(String,Object,byte,String)
+ void sendExchange(String,Object,byte,String)
+ {static} void main(String[])
}
class com.welab.pay.gateway.job.RetryVirtualAccountSynJob {
- BniInvoiceImpl bniInvoice
+ void execute(ShardingContext)
}
class com.welab.pay.gateway.model.GatewayAmountRecordExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> GatewayAmountRecordExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.pay.gateway.model.GatewayAmountRecordExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andCreateAtIsNull()
+ Criteria andCreateAtIsNotNull()
+ Criteria andCreateAtEqualTo(Date)
+ Criteria andCreateAtNotEqualTo(Date)
+ Criteria andCreateAtGreaterThan(Date)
+ Criteria andCreateAtGreaterThanOrEqualTo(Date)
+ Criteria andCreateAtLessThan(Date)
+ Criteria andCreateAtLessThanOrEqualTo(Date)
+ Criteria andCreateAtIn(List<Date>)
+ Criteria andCreateAtNotIn(List<Date>)
+ Criteria andCreateAtBetween(Date,Date)
+ Criteria andCreateAtNotBetween(Date,Date)
+ Criteria andUpdateAtIsNull()
+ Criteria andUpdateAtIsNotNull()
+ Criteria andUpdateAtEqualTo(Date)
+ Criteria andUpdateAtNotEqualTo(Date)
+ Criteria andUpdateAtGreaterThan(Date)
+ Criteria andUpdateAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdateAtLessThan(Date)
+ Criteria andUpdateAtLessThanOrEqualTo(Date)
+ Criteria andUpdateAtIn(List<Date>)
+ Criteria andUpdateAtNotIn(List<Date>)
+ Criteria andUpdateAtBetween(Date,Date)
+ Criteria andUpdateAtNotBetween(Date,Date)
+ Criteria andFundIdIsNull()
+ Criteria andFundIdIsNotNull()
+ Criteria andFundIdEqualTo(Byte)
+ Criteria andFundIdNotEqualTo(Byte)
+ Criteria andFundIdGreaterThan(Byte)
+ Criteria andFundIdGreaterThanOrEqualTo(Byte)
+ Criteria andFundIdLessThan(Byte)
+ Criteria andFundIdLessThanOrEqualTo(Byte)
+ Criteria andFundIdIn(List<Byte>)
+ Criteria andFundIdNotIn(List<Byte>)
+ Criteria andFundIdBetween(Byte,Byte)
+ Criteria andFundIdNotBetween(Byte,Byte)
+ Criteria andFundNameIsNull()
+ Criteria andFundNameIsNotNull()
+ Criteria andFundNameEqualTo(String)
+ Criteria andFundNameNotEqualTo(String)
+ Criteria andFundNameGreaterThan(String)
+ Criteria andFundNameGreaterThanOrEqualTo(String)
+ Criteria andFundNameLessThan(String)
+ Criteria andFundNameLessThanOrEqualTo(String)
+ Criteria andFundNameLike(String)
+ Criteria andFundNameNotLike(String)
+ Criteria andFundNameIn(List<String>)
+ Criteria andFundNameNotIn(List<String>)
+ Criteria andFundNameBetween(String,String)
+ Criteria andFundNameNotBetween(String,String)
+ Criteria andOperationAmountIsNull()
+ Criteria andOperationAmountIsNotNull()
+ Criteria andOperationAmountEqualTo(Long)
+ Criteria andOperationAmountNotEqualTo(Long)
+ Criteria andOperationAmountGreaterThan(Long)
+ Criteria andOperationAmountGreaterThanOrEqualTo(Long)
+ Criteria andOperationAmountLessThan(Long)
+ Criteria andOperationAmountLessThanOrEqualTo(Long)
+ Criteria andOperationAmountIn(List<Long>)
+ Criteria andOperationAmountNotIn(List<Long>)
+ Criteria andOperationAmountBetween(Long,Long)
+ Criteria andOperationAmountNotBetween(Long,Long)
+ Criteria andTaskIdIsNull()
+ Criteria andTaskIdIsNotNull()
+ Criteria andTaskIdEqualTo(String)
+ Criteria andTaskIdNotEqualTo(String)
+ Criteria andTaskIdGreaterThan(String)
+ Criteria andTaskIdGreaterThanOrEqualTo(String)
+ Criteria andTaskIdLessThan(String)
+ Criteria andTaskIdLessThanOrEqualTo(String)
+ Criteria andTaskIdLike(String)
+ Criteria andTaskIdNotLike(String)
+ Criteria andTaskIdIn(List<String>)
+ Criteria andTaskIdNotIn(List<String>)
+ Criteria andTaskIdBetween(String,String)
+ Criteria andTaskIdNotBetween(String,String)
+ Criteria andRemarkIsNull()
+ Criteria andRemarkIsNotNull()
+ Criteria andRemarkEqualTo(String)
+ Criteria andRemarkNotEqualTo(String)
+ Criteria andRemarkGreaterThan(String)
+ Criteria andRemarkGreaterThanOrEqualTo(String)
+ Criteria andRemarkLessThan(String)
+ Criteria andRemarkLessThanOrEqualTo(String)
+ Criteria andRemarkLike(String)
+ Criteria andRemarkNotLike(String)
+ Criteria andRemarkIn(List<String>)
+ Criteria andRemarkNotIn(List<String>)
+ Criteria andRemarkBetween(String,String)
+ Criteria andRemarkNotBetween(String,String)
+ Criteria andExtendIdIsNull()
+ Criteria andExtendIdIsNotNull()
+ Criteria andExtendIdEqualTo(String)
+ Criteria andExtendIdNotEqualTo(String)
+ Criteria andExtendIdGreaterThan(String)
+ Criteria andExtendIdGreaterThanOrEqualTo(String)
+ Criteria andExtendIdLessThan(String)
+ Criteria andExtendIdLessThanOrEqualTo(String)
+ Criteria andExtendIdLike(String)
+ Criteria andExtendIdNotLike(String)
+ Criteria andExtendIdIn(List<String>)
+ Criteria andExtendIdNotIn(List<String>)
+ Criteria andExtendIdBetween(String,String)
+ Criteria andExtendIdNotBetween(String,String)
+ Criteria andReceiptAccountIsNull()
+ Criteria andReceiptAccountIsNotNull()
+ Criteria andReceiptAccountEqualTo(String)
+ Criteria andReceiptAccountNotEqualTo(String)
+ Criteria andReceiptAccountGreaterThan(String)
+ Criteria andReceiptAccountGreaterThanOrEqualTo(String)
+ Criteria andReceiptAccountLessThan(String)
+ Criteria andReceiptAccountLessThanOrEqualTo(String)
+ Criteria andReceiptAccountLike(String)
+ Criteria andReceiptAccountNotLike(String)
+ Criteria andReceiptAccountIn(List<String>)
+ Criteria andReceiptAccountNotIn(List<String>)
+ Criteria andReceiptAccountBetween(String,String)
+ Criteria andReceiptAccountNotBetween(String,String)
+ Criteria andReceiptAccountNameIsNull()
+ Criteria andReceiptAccountNameIsNotNull()
+ Criteria andReceiptAccountNameEqualTo(String)
+ Criteria andReceiptAccountNameNotEqualTo(String)
+ Criteria andReceiptAccountNameGreaterThan(String)
+ Criteria andReceiptAccountNameGreaterThanOrEqualTo(String)
+ Criteria andReceiptAccountNameLessThan(String)
+ Criteria andReceiptAccountNameLessThanOrEqualTo(String)
+ Criteria andReceiptAccountNameLike(String)
+ Criteria andReceiptAccountNameNotLike(String)
+ Criteria andReceiptAccountNameIn(List<String>)
+ Criteria andReceiptAccountNameNotIn(List<String>)
+ Criteria andReceiptAccountNameBetween(String,String)
+ Criteria andReceiptAccountNameNotBetween(String,String)
+ Criteria andExpenditureAccountIsNull()
+ Criteria andExpenditureAccountIsNotNull()
+ Criteria andExpenditureAccountEqualTo(String)
+ Criteria andExpenditureAccountNotEqualTo(String)
+ Criteria andExpenditureAccountGreaterThan(String)
+ Criteria andExpenditureAccountGreaterThanOrEqualTo(String)
+ Criteria andExpenditureAccountLessThan(String)
+ Criteria andExpenditureAccountLessThanOrEqualTo(String)
+ Criteria andExpenditureAccountLike(String)
+ Criteria andExpenditureAccountNotLike(String)
+ Criteria andExpenditureAccountIn(List<String>)
+ Criteria andExpenditureAccountNotIn(List<String>)
+ Criteria andExpenditureAccountBetween(String,String)
+ Criteria andExpenditureAccountNotBetween(String,String)
+ Criteria andExpenditureAccountNameIsNull()
+ Criteria andExpenditureAccountNameIsNotNull()
+ Criteria andExpenditureAccountNameEqualTo(String)
+ Criteria andExpenditureAccountNameNotEqualTo(String)
+ Criteria andExpenditureAccountNameGreaterThan(String)
+ Criteria andExpenditureAccountNameGreaterThanOrEqualTo(String)
+ Criteria andExpenditureAccountNameLessThan(String)
+ Criteria andExpenditureAccountNameLessThanOrEqualTo(String)
+ Criteria andExpenditureAccountNameLike(String)
+ Criteria andExpenditureAccountNameNotLike(String)
+ Criteria andExpenditureAccountNameIn(List<String>)
+ Criteria andExpenditureAccountNameNotIn(List<String>)
+ Criteria andExpenditureAccountNameBetween(String,String)
+ Criteria andExpenditureAccountNameNotBetween(String,String)
+ Criteria andThirdpartyIdIsNull()
+ Criteria andThirdpartyIdIsNotNull()
+ Criteria andThirdpartyIdEqualTo(String)
+ Criteria andThirdpartyIdNotEqualTo(String)
+ Criteria andThirdpartyIdGreaterThan(String)
+ Criteria andThirdpartyIdGreaterThanOrEqualTo(String)
+ Criteria andThirdpartyIdLessThan(String)
+ Criteria andThirdpartyIdLessThanOrEqualTo(String)
+ Criteria andThirdpartyIdLike(String)
+ Criteria andThirdpartyIdNotLike(String)
+ Criteria andThirdpartyIdIn(List<String>)
+ Criteria andThirdpartyIdNotIn(List<String>)
+ Criteria andThirdpartyIdBetween(String,String)
+ Criteria andThirdpartyIdNotBetween(String,String)
+ Criteria andFeesIsNull()
+ Criteria andFeesIsNotNull()
+ Criteria andFeesEqualTo(Long)
+ Criteria andFeesNotEqualTo(Long)
+ Criteria andFeesGreaterThan(Long)
+ Criteria andFeesGreaterThanOrEqualTo(Long)
+ Criteria andFeesLessThan(Long)
+ Criteria andFeesLessThanOrEqualTo(Long)
+ Criteria andFeesIn(List<Long>)
+ Criteria andFeesNotIn(List<Long>)
+ Criteria andFeesBetween(Long,Long)
+ Criteria andFeesNotBetween(Long,Long)
}
class com.welab.pay.gateway.model.GatewayAmountRecordExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.pay.gateway.model.GatewayAmountRecordExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.pay.gateway.service.BaseRequestService {
- GatewayRequestMapper gatewayRequestMapper
+ int save(GatewayRequestWithBLOBs)
+ int addRequest(String,String,String,String)
+ GatewayRequestWithBLOBs getOneByTaskId(String)
+ List<GatewayRequestWithBLOBs> getListByTaskId(String)
}
interface com.welab.pay.gateway.service.ITaskService {
~ Response changeLendingWay(ChangeLendingWayDto)
~ Response<List<GatewayRequestVO>> getGatewayRequestByTaskId(String)
~ Response<Boolean> disburseSuccess(DisburseSuccessDto)
~ Response<Boolean> onlineDisburseHandle()
}
interface com.welab.pay.gateway.config.permata.PermataRepaymentErrorCode {
+ String SUCCESS
+ String DECLINE
+ String INVALID_AMOUNT
+ String BILL_NOT_FOUND
+ String GENERAL_ERROR
+ String BILL_ALREADY_PAID
+ String BILLER_HOST_DOWN
+ String TRANSPORT_ERROR_TO_BILLER
+ String TIMEOUT
}
class com.welab.pay.gateway.model.GatewayOrder {
- Integer id
- Date createAt
- Date updateAt
- String taskId
- String orderNo
- String thirdpartyId
- String platformOrderNo
- String platform
- Byte fundId
- Byte status
- Long amount
- Date finishTime
- String type
- Boolean deleted
- String responseCode
- Date expirationTime
- String extend
+ Integer getId()
+ void setId(Integer)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ String getTaskId()
+ void setTaskId(String)
+ String getOrderNo()
+ void setOrderNo(String)
+ String getThirdpartyId()
+ void setThirdpartyId(String)
+ String getPlatformOrderNo()
+ void setPlatformOrderNo(String)
+ String getPlatform()
+ void setPlatform(String)
+ Byte getFundId()
+ void setFundId(Byte)
+ Byte getStatus()
+ void setStatus(Byte)
+ Long getAmount()
+ void setAmount(Long)
+ Date getFinishTime()
+ void setFinishTime(Date)
+ String getType()
+ void setType(String)
+ Boolean getDeleted()
+ void setDeleted(Boolean)
+ String getResponseCode()
+ void setResponseCode(String)
+ Date getExpirationTime()
+ void setExpirationTime(Date)
+ String getExtend()
+ void setExtend(String)
}
class com.welab.pay.gateway.dto.mq.VirtualAccountPaymentMqDto {
- {static} long serialVersionUID
- Long userId
- String externalId
- String accountNumber
- String bankCode
- Long amount
- Date transactionDate
- String orderNo
- FundEnum fundEnum
}
class com.welab.pay.gateway.app.command.VirtualAccountAddCmdExcute {
- BaseVirtualAccountPayBackNoticeService baseVirtualAccountPayBackNoticeService
+ Response<Boolean> excute(VirtualAccountAddCmd)
- void saveNotice(VirtualAccountDto,VirtualAccountAddCmd.CustomizeNotice)
}
class com.welab.pay.gateway.dto.astrapay.AstraPayWalletProfileDTO {
- String status
- BigDecimal balance
}
class com.welab.pay.gateway.impl.SpecialTradingHelper {
- {static} String BNI_A_TO_BCA_B
+ {static} boolean passOldApi(String)
}
class com.welab.pay.gateway.app.base.BaseGatewayTaskService {
- GatewayTaskMapper gatewayTaskMapper
+ GatewayTask getByThirdpartyId(String)
+ GatewayTask getByThirdpartyId(String,String)
+ boolean existBca(String)
+ void updateParams(Long,String)
+ GatewayTask getById(Long)
}
class com.welab.pay.gateway.vo.TransferVO {
- {static} long serialVersionUID
- Date createAt
- Date paidAt
- String externalId
- Long amount
- String bankCode
- String accountHolderName
- StatusEnum status
- String taskId
}
class com.welab.pay.gateway.mq.consumers.TaskMqBody {
- int type
- String body
}
class com.welab.pay.gateway.model.GatewayAmount {
- Long id
- Date createAt
- Date updateAt
- String accountNo
- String accountName
- Long amount
- String relationId
- Date transactionAt
+ Long getId()
+ void setId(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ String getAccountNo()
+ void setAccountNo(String)
+ String getAccountName()
+ void setAccountName(String)
+ Long getAmount()
+ void setAmount(Long)
+ String getRelationId()
+ void setRelationId(String)
+ Date getTransactionAt()
+ void setTransactionAt(Date)
}
class com.welab.pay.gateway.controller.twilio.TwilioController {
+ Object twilioReply(HttpServletRequest)
+ void say(HttpServletRequest,HttpServletResponse)
}
class com.welab.pay.gateway.vo.TaskVO {
- {static} long serialVersionUID
- Long id
- Date createAt
- Date updateAt
- Byte type
- String typeStr
- Long userId
- Byte fundId
- String fundName
- Byte status
- String statusStr
- String remark
- String extendId
- String taskId
- String thirdpartyId
- String loanNum
- String params
- Long amount
- String tradingType
}
class com.welab.pay.gateway.service.BaseVirtualAccountService {
- GatewayVirtualAccountMapper gatewayVirtualAccountMapper
- UserService userService
- GatewayConfig gatewayConfig
+ int save(GatewayVirtualAccount)
+ int updateSuggestedAmount(FundEnum,String,long)
+ int updateSuggestedAmount(FundEnum,Long,Long,String)
+ int updateSuggestedAmount(FundEnum,Long,String,Long,String)
+ int updateIsClosed(byte,long,Boolean)
+ int updateIsClosed(byte,String,Boolean)
+ GatewayVirtualAccount getOneByAccountNumber(byte,String)
+ GatewayVirtualAccount getOneByTaskId(byte,String)
+ GatewayVirtualAccount getOne(String,String)
+ String getMaxAccount()
+ List<GatewayVirtualAccount> getList(byte,Long)
+ List<GatewayVirtualAccount> getList(Long)
+ GatewayVirtualAccount getOne(byte,Long)
+ GatewayVirtualAccount getOne(byte,Long,Boolean)
+ GatewayVirtualAccount getOne(byte,Long,String,Boolean)
+ void updateIsClosed(List<GatewayVirtualAccount>,Boolean)
+ List<GatewayVirtualAccount> getList(String)
+ GatewayVirtualAccount getOneByFundIdAndAccountNumber(byte,String)
+ GatewayVirtualAccount getOneById(Long)
+ GatewayVirtualAccount getOneByFundIdAndMobile(byte,String)
+ PageInfo<GatewayVirtualAccount> page(PageQuery,GatewayVirtualAccountExample)
+ int updateByFundIdAndAccountNumber(byte,String,GatewayVirtualAccount)
+ GatewayVirtualAccount getAstraPayWalletAccount(String)
+ int updateByFundIdAndUserId(byte,Long,GatewayVirtualAccount)
}
class com.welab.pay.gateway.config.permata.PermataReqeustParse {
+ {static} PermataRepaymentConfig.GetBill.Request parseGetBill(String)
+ {static} PermataRepaymentConfig.GetBill.Response bulidGetBill(String)
+ {static} PermataRepaymentConfig.PayBill.Request parsePayBill(String)
+ {static} PermataRepaymentConfig.PayBill.Response bulidPayBill(String)
+ {static} PermataRepaymentConfig.RevBill.Request parseRevBill(String)
+ {static} PermataRepaymentConfig.RevBill.Response bulidRevBill(String)
+ {static} void main(String[])
}
class com.welab.pay.gateway.test.PayServiceImplTest {
- PayService payService
- CreateVANumberCmdExcute excute
+ void paying()
+ void transfer()
+ void getPayingVOByTaskId()
+ void bulidVirtualAccount()
}
class com.welab.pay.gateway.controller.BNITestController {
- BNIAuthenticateConfig config
}
class com.welab.pay.gateway.service.impl.TaskServiceImpl {
- GatewayTaskMapper gatewayTaskMapper
- GatewayOrderMapper gatewayOrderMapper
- BaseRequestService baseRequestService
- BaseTaskService taskService
- TaskNotify taskNotify
- PaymentJob paymentJob
+ Response changeLendingWay(ChangeLendingWayDto)
+ Response<List<GatewayRequestVO>> getGatewayRequestByTaskId(String)
+ Response<Boolean> disburseSuccess(DisburseSuccessDto)
+ Response<Boolean> onlineDisburseHandle()
}
interface com.welab.pay.gateway.config.bni.BNIErrorCode {
+ String _000
+ String _101
+ String _103
~ String ERROR_997
}
class com.welab.pay.gateway.http.test.BNIPaymentHttp12UtilsTest {
- BNIAuthenticateConfig config
- BNIManager bniManager
- JedisCluster jedisCluster
- Boolean testSwitch
- GatewayConfig gatewayConfig
- BaseGatewayTaskService baseGatewayTaskService
+ void getinhouseinquiry()
+ void disbursement()
+ void getDisbursementStatus()
+ void testQ()
+ {static} void main(String[])
+ void testRes()
}
class com.welab.pay.gateway.dto.mq.TransferCallbackDto {
- {static} long serialVersionUID
- String platform
- Long userId
- String externalId
- Long amount
- String failure
- String failureCode
- StatusEnum status
- String orderNo
- Date paidDate
- FundEnum fundEnum
- String debitAccountNo
- String creditAccountNo
- String loanNum
- String bankCode
- String remark
- String tradingType
}
class com.welab.pay.gateway.helper.VoConvert {
+ {static} List<VirtualAccountVO> convertVirtualAccountVOs(List<GatewayVirtualAccount>)
+ {static} VirtualAccountVO convertVirtualAccountVO(GatewayVirtualAccount)
+ {static} List<BankVO> convertBankVOs(List<GatewayBank>)
+ {static} BankVO convertBankVO(GatewayBank)
+ {static} List<TaskVO> convertTaskVOs(List<GatewayTask>)
+ {static} TaskVO convertTaskVO(GatewayTask)
}
class com.welab.pay.gateway.dto.QueryVirtualAccountDto {
- {static} long serialVersionUID
- FundEnum fundEnum
- Long userId
}
enum com.welab.pay.gateway.config.RedisKeyEnum {
+  ASTRAPAY_WALLET_AUTH
+  ASTRAPAY_WALLET_AUTH_LOCK
+  BNI_VA_SYN_USER
+  BNI_VA_SYN_DATA
+  OPEN_THIRDPARTY_AUTH_TOKEN
+  BCA_AUTH
+  BCA_AUTH_LOCK
- String key
- String desc
- Integer failureTime
+ String getCacheKey(String)
}
class com.welab.pay.gateway.response.DisbursementStatusResponse {
- String responseCode
- String amount
- String responseBody
- Boolean isSuccess
+ <<Create>> DisbursementStatusResponse()
+ <<Create>> DisbursementStatusResponse(String,String,String,Boolean)
}
interface com.welab.pay.gateway.mapper.GatewayRepaymentOrderMapper {
~ long countByExample(GatewayRepaymentOrderExample)
~ int deleteByPrimaryKey(Long)
~ int insert(GatewayRepaymentOrder)
~ int insertSelective(GatewayRepaymentOrder)
~ List<GatewayRepaymentOrder> selectByExample(GatewayRepaymentOrderExample)
~ GatewayRepaymentOrder selectByPrimaryKey(Long)
~ int updateByExampleSelective(GatewayRepaymentOrder,GatewayRepaymentOrderExample)
~ int updateByExample(GatewayRepaymentOrder,GatewayRepaymentOrderExample)
~ int updateByPrimaryKeySelective(GatewayRepaymentOrder)
~ int updateByPrimaryKey(GatewayRepaymentOrder)
}
class com.welab.pay.gateway.core.config.AuthHandlerFactory {
- ApplicationContext applicationContext
- {static} Map<String,AbstractAuthHandler> authHandlerMap
+ void init()
+ {static} AbstractAuthHandler getAuthHandler(AuthWayEnum)
- {static} String buildKey(FundEnum,AuthWayEnum)
}
interface com.welab.pay.gateway.service.ValidatorService {
+ Response<BankAccountVO> validatorBankAccount(BankAccountDto)
}
class com.welab.pay.gateway.app.command.VirtualAccountUpdateCmdExcute {
- BaseVirtualAccountService baseVirtualAccountService
+ Response<Boolean> excute(VirtualAccountUpdateCmd)
+ Response<Boolean> updateByAccount(VirtualAccountUpdateByAccountCmd)
}
interface com.welab.pay.gateway.config.permata.PermataLoanConfig {
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$WrapResponse {
+ String StatusCode
+ String StatusDesc
+ String ResponseTimestamp
+ String CustRefID
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$WrapRequest {
+ String RequestTimestamp
+ String CustRefID
}
interface com.welab.pay.gateway.config.permata.PermataLoanConfig$Token {
~ String method
~ String contentType
~ String path
~ String desc
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$Token$Request {
+ String grant_type
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$Token$Response {
- String access_token
- String token_type
- String expires_in
- String scope
}
interface com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo {
~ String method
~ String contentType
~ String path
~ String desc
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Request {
+ BalInqRq BalInqRq
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Request$BalInqRq {
+ MsgRqHdr MsgRqHdr
+ InqInfo InqInfo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Request$BalInqRq$MsgRqHdr {
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Request$BalInqRq$InqInfo {
+ String AccountNumber
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Response {
+ BalInqRs BalInqRs
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Response$BalInqRs {
+ MsgRsHdr MsgRsHdr
+ InqInfo InqInfo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Response$BalInqRs$MsgRsHdr {
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Response$BalInqRs$InqInfo {
+ String AccountNumber
+ String AccountCurrency
+ String AccountBalanceAmount
+ String BalanceType
}
interface com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo {
~ String method
~ String contentType
~ String path
~ String desc
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Request {
+ Obj AcctInqRq
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Request$Obj {
+ MsgRqHdr MsgRqHdr
+ InqInfo InqInfo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Request$Obj$MsgRqHdr {
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Request$Obj$InqInfo {
+ String AccountNumber
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Response {
+ Obj AcctInqRs
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Response$Obj {
+ MsgRsHdr MsgRsHdr
+ InqInfo InqInfo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Response$Obj$MsgRsHdr {
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Response$Obj$InqInfo {
+ String AccountNumber
+ String AccountName
}
interface com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer {
~ String method
~ String contentType
~ String path
~ String desc
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Request {
+ Obj XferAddRq
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Request$Obj {
+ MsgRqHdr MsgRqHdr
+ XferInfo XferInfo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Request$Obj$MsgRqHdr {
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Request$Obj$XferInfo {
+ String FromAccount
+ String ToAccount
+ Long Amount
+ String CurrencyCode
+ String ChargeTo
+ String TrxDesc
+ String TrxDesc2
+ String BenefEmail
+ String BenefAcctName
+ String BenefPhoneNo
+ String FromAcctName
+ String TkiFlag
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Response {
+ Obj XferAddRs
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Response$Obj {
+ MsgRsHdr MsgRsHdr
+ String TrxReffNo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Response$Obj$MsgRsHdr {
}
interface com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo {
~ String method
~ String contentType
~ String path
~ String desc
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Request {
+ Obj OlXferInqRq
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Request$Obj {
+ MsgRqHdr MsgRqHdr
+ XferInfo XferInfo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Request$Obj$MsgRqHdr {
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Request$Obj$XferInfo {
+ String ToAccount
+ String BankId
+ String BankName
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Response {
+ Obj OlXferInqRs
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Response$Obj {
+ MsgRsHdr MsgRsHdr
+ XferInfo XferInfo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Response$Obj$MsgRsHdr {
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Response$Obj$XferInfo {
+ String ToAccount
+ String ToAccountFullName
+ String BankId
+ String BankName
}
interface com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer {
~ String method
~ String contentType
~ String path
~ String desc
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Request {
+ Obj OlXferAddRq
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Request$Obj {
+ MsgRqHdr MsgRqHdr
+ XferInfo XferInfo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Request$Obj$MsgRqHdr {
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Request$Obj$XferInfo {
+ String FromAccount
+ String ToAccount
+ String ToBankId
+ String ToBankName
+ Long Amount
+ String ChargeTo
+ String TrxDesc
+ String TrxDesc2
+ String BenefEmail
+ String BenefAcctName
+ String BenefPhoneNo
+ String FromAcctName
+ String DatiII
+ String TkiFlag
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Response {
+ Obj OlXferAddRs
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Response$Obj {
+ MsgRsHdr MsgRsHdr
+ String TrxReffNo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Response$Obj$MsgRsHdr {
}
interface com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer {
~ String method
~ String contentType
~ String path
~ String desc
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Request {
+ Obj LlgXferAddRq
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Request$Obj {
+ MsgRqHdr MsgRqHdr
+ XferInfo XferInfo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Request$Obj$MsgRqHdr {
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Request$Obj$XferInfo {
+ String FromAccount
+ String ToAccount
+ String ToBankId
+ String ToBankName
+ Long Amount
+ String CurrencyCode
+ String ChargeTo
+ String TrxDesc
+ String TrxDesc2
+ String CitizenStatus
+ String ResidentStatus
+ String BenefType
+ String BenefEmail
+ String BenefAcctName
+ String BenefPhoneNo
+ String BenefBankAddress
+ String BenefBankBranchName
+ String BenefBankCity
+ String FromAcctName
+ String FromCurrencyCode
+ String Filler1
+ String Filler2
+ String Filler3
+ String BenefAddress1
+ String BenefAddress2
+ String BenefAddress3
+ String DatiII
+ String TkiFlag
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Response {
+ Obj OlXferAddRs
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Response$Obj {
+ MsgRsHdr MsgRsHdr
+ String TrxReffNo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Response$Obj$MsgRsHdr {
}
interface com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer {
~ String method
~ String contentType
~ String path
~ String desc
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Request {
+ Obj RtgsXferAddRq
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Request$Obj {
+ MsgRqHdr MsgRqHdr
+ XferInfo XferInfo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Request$Obj$MsgRqHdr {
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Request$Obj$XferInfo {
+ String FromAccount
+ String ToAccount
+ String ToBankId
+ String ToBankName
+ Long Amount
+ String CurrencyCode
+ String ChargeTo
+ String TrxDesc
+ String TrxDesc2
+ String CitizenStatus
+ String ResidentStatus
+ String BenefType
+ String BenefEmail
+ String BenefAcctName
+ String BenefPhoneNo
+ String BenefBankAddress
+ String BenefBankBranchName
+ String BenefBankCity
+ String FromAcctName
+ String FromCurrencyCode
+ String Filler1
+ String Filler2
+ String Filler3
+ String BenefAddress1
+ String BenefAddress2
+ String BenefAddress3
+ String DatiII
+ String TkiFlag
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Response {
+ Obj RtgsXferAddRs
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Response$Obj {
+ MsgRsHdr MsgRsHdr
+ String TrxReffNo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Response$Obj$MsgRsHdr {
}
interface com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo {
~ String method
~ String contentType
~ String path
~ String desc
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Request {
+ Obj BillInquiryRq
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Request$Obj {
+ MsgRqHdr MsgRqHdr
+ BillInquiryInfo BillInquiryInfo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Request$Obj$MsgRqHdr {
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Request$Obj$BillInquiryInfo {
+ String BillType
+ String InstCode
+ String BillNumber
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Response {
+ Obj BillInquiryRs
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Response$Obj {
+ MsgRsHdr MsgRsHdr
+ String BillInquiryInfo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Response$Obj$MsgRsHdr {
}
interface com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment {
~ String method
~ String contentType
~ String path
~ String desc
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Request {
+ Obj BillPaymentRq
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Request$Obj {
+ MsgRqHdr MsgRqHdr
+ BillPaymentInfo BillPaymentInfo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Request$Obj$MsgRqHdr {
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Request$Obj$BillPaymentInfo {
+ String BillType
+ String InstCode
+ String BillNumber
+ String TrxAmount
+ String Currency
+ String UserId
+ String DebAccNumber
+ String DebAccName
+ String DebAccCur
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Response {
+ Obj BillInquiryRs
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Response$Obj {
+ MsgRsHdr MsgRsHdr
+ String BillRefNo
+ String InstCode
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Response$Obj$MsgRsHdr {
}
interface com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement {
~ String method
~ String contentType
~ String path
~ String desc
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Request {
+ Obj AcctStmtRq
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Request$Obj {
+ MsgRqHdr MsgRqHdr
+ StatementInfo StatementInfo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Request$Obj$MsgRqHdr {
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Request$Obj$StatementInfo {
+ String AccountNumber
+ String AccountCurrency
+ String StartDate
+ String EndDate
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response {
+ Obj BillInquiryRs
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj {
+ MsgRsHdr MsgRsHdr
+ StatementInfo StatementInfo
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj$MsgRsHdr {
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj$StatementInfo {
+ String BalanceAmount
+ String SignBalance
+ DetailStatement DetailStatement
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj$DetailStatement {
+ List<AcctStmtDtl> AcctStmtDtl
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj$AcctStmtDtl {
+ String PostingDate
+ String EffectiveDate
+ String ChequeNo
+ String RefNo
+ String TrxAmount
+ String TrxCurrency
+ String TrxType
+ String PayRef
+ String CustRef
+ String TrxDesc
}
interface com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction {
~ String method
~ String contentType
~ String path
~ String desc
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction$Request {
+ Obj StatusTransactionRq
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction$Request$Obj {
+ String CorpID
+ String CustRefID
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction$Response {
+ Obj StatusTransactionRs
}
class com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction$Response$Obj {
+ String TrxReffNo
}
class com.welab.pay.gateway.config.faspay.FaspayConfigBulider {
+ {static} FaspayCallbackConfig.Inquiry.Response bulidInquiryFailureResponse(String)
+ {static} FaspayCallbackConfig.Inquiry.Response bulidInquirySuccessResponse(String,String,String)
+ {static} FaspayCallbackConfig.Inquiry.Response bulidPaymentSuccessResponse(String,String,String)
}
class com.welab.pay.gateway.service.impl.QueryTaskServiceImpl {
- BaseTaskService baseTaskService
- TaskNotify taskNotify
- BaseRequestService requestService
- BcaTransIdCmdExe bcaTransIdCmdExe
+ Response<List<TaskVO>> queryListByExtendAndType(String,TaskTypeEnum)
+ Response<TaskVO> queryByTaskId(String)
+ Response<PageInfo> queryTaskByPage(QueryTaskDto)
+ Response<Void> retryTask(QueryTaskDto)
+ Response<List<TaskVO>> queryFailureTasks(List<String>,List<TaskTypeEnum>)
+ Response<Void> expiredTask(Long)
+ Response<Void> retryTaskStatusInquire(QueryTaskDto)
+ List<String> getLoanNumList(List<String>)
+ List<String> getThirdpartyIdList(List<String>)
+ List<GatewayTaskRequestVO> queryTaskRequestDetails(PlatformEnum,String)
+ Response<List<TaskVO>> getLoanListByExtendId(List<String>,PlatformEnum)
}
class com.welab.pay.gateway.vo.BankAccountVO {
- {static} long serialVersionUID
- String bankAccountNumber
- String bankAccountHolderName
- String bankCode
- String bankName
- StatusEnum status
}
class com.welab.pay.gateway.response.AstraPayResponse {
- String response
- String response_code
- String response_desc
- String response_date
- String va_number
- String amount
- String cust_name
- List<DueVo> dueVoList
- String transaction
- String usePhoneNumber
}
class com.welab.pay.gateway.controller.PayController {
- PayServiceImpl payServiceImpl
- String bankListKey
- JedisCluster jedisCluster
+ Response<List<BankVO>> getAvailableBanks(boolean)
}
class com.welab.pay.gateway.dto.mq.MqRefundDto {
- {static} long serialVersionUID
- String platform
- Long userId
- String externalId
- Long amount
- String failure
- String failureCode
- StatusEnum status
- String orderNo
- Date paidDate
- FundEnum fundEnum
}
class com.welab.pay.gateway.utils.DateUtil {
+ {static} boolean isValidDate(String,String)
}
interface com.welab.pay.gateway.config.SimulateConfig {
~ String _token_id
~ String _authentication_id
~ String _amount
~ String _external_id
~ String _account_number
~ String _bank_code
~ String _account_holder_name
~ String _description
~ String _bank_account_number
~ String _buy_currency
~ String _sell_amount
~ String _sell_currency
~ String _name
~ String _callback_virtual_account_id
~ String _payment_id
~ String _fixed_virtual_account_id
~ String _payer_email
~ String _virtual_account_number
~ String _suggested_amount
~ String _is_closed
~ String _expected_amount
~ String _expiration_date
~ String _is_single_use
~ String _invoice_id
~ String _account_type
}
interface com.welab.pay.gateway.config.SimulateConfig$CreateSubscription {
+ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$CreateSubscription$Request {
+ String token_id
+ String authentication_id
+ String amount
+ String frequency
+ String start_date
+ String end_date
}
class com.welab.pay.gateway.config.SimulateConfig$CreateSubscription$Callback {
+ String id
+ String status
+ String business_id
+ String subscription_id
+ String external_id
+ String merchant_reference_code
+ String merchant_id
+ String card_type
+ String masked_card_number
+ String charge_type
+ String card_brand
+ String capture_amount
+ String eci
+ String created
}
interface com.welab.pay.gateway.config.SimulateConfig$GetSubscription {
+ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$CancelSubscription {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$CreateCharge {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$CreateCharge$Request {
~ String token_id
~ String external_id
~ String amount
~ String authentication_id
~ String card_cvn
}
interface com.welab.pay.gateway.config.SimulateConfig$CreateRefund {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$CreateRefund$Request {
~ String header_x_idempotency_key
~ String credit_card_charge_id
~ String amount
~ String external_id
}
interface com.welab.pay.gateway.config.SimulateConfig$CreateRefund$Callback {
}
interface com.welab.pay.gateway.config.SimulateConfig$AvailableVirtualAccountBanks {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$GetDisbursementById {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$GetDisbursementById$Request {
~ String disbursement_id
}
class com.welab.pay.gateway.config.SimulateConfig$GetDisbursementById$Response {
- String id
- String user_id
- String external_id
- Long amount
- String bank_code
- String account_holder_name
- String disbursement_description
- String status
- String error_code
}
interface com.welab.pay.gateway.config.SimulateConfig$CreateDisbursement {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$CreateDisbursement$Request {
~ String external_id
~ String bank_code
~ String account_holder_name
~ String account_number
~ String description
~ String amount
}
class com.welab.pay.gateway.config.SimulateConfig$CreateDisbursement$Response {
- String id
- String user_id
- String external_id
- Long amount
- String bank_code
- String account_holder_name
- String disbursement_description
- String status
- String error_code
}
class com.welab.pay.gateway.config.SimulateConfig$CreateDisbursement$Callback {
- String id
- String user_id
- String external_id
- Long amount
- String bank_code
- String account_holder_name
- String disbursement_description
- String failure_code
- Boolean is_instant
- String status
- String updated
- String created
}
interface com.welab.pay.gateway.config.SimulateConfig$GetDisbursementByExternalId {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$GetDisbursementByExternalId$Request {
~ String external_id
}
interface com.welab.pay.gateway.config.SimulateConfig$GetAvailableDisbursementBanks {
~ String url
}
class com.welab.pay.gateway.config.SimulateConfig$GetAvailableDisbursementBanks$Response {
- String name
- String code
- String can_disburse
- String can_name_validate
}
interface com.welab.pay.gateway.config.SimulateConfig$NameValidator {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$NameValidator$Request {
~ String bank_account_number
~ String bank_code
}
class com.welab.pay.gateway.config.SimulateConfig$NameValidator$Response {
- String bank_account_number
- String bank_account_holder_name
- String bank_code
- String reference
- String status
- String failure_reason
- String updated
- String id
}
class com.welab.pay.gateway.config.SimulateConfig$NameValidator$Callback {
- String bank_account_number
- String bank_account_holder_name
- String bank_code
- String status
- String id
- String updated
}
interface com.welab.pay.gateway.config.SimulateConfig$NPWPValidator {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$NPWPValidator$Request {
~ String account_number
}
interface com.welab.pay.gateway.config.SimulateConfig$CreateQuote {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$CreateQuote$Request {
~ String buy_currency
~ String sell_amount
~ String sell_currency
}
interface com.welab.pay.gateway.config.SimulateConfig$GetBanksForVirtualAccounts {
~ String url
}
class com.welab.pay.gateway.config.SimulateConfig$GetBanksForVirtualAccounts$Response {
- String name
- String code
}
interface com.welab.pay.gateway.config.SimulateConfig$CreateFixedVirtualAccounts {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$CreateFixedVirtualAccounts$Request {
~ String external_id
~ String bank_code
~ String name
~ String virtual_account_number
~ String suggested_amount
~ String is_closed
~ String expected_amount
~ String expiration_date
~ String is_single_use
}
class com.welab.pay.gateway.config.SimulateConfig$CreateFixedVirtualAccounts$Response {
- String ownerId
- String externalId
- String bankCode
- String merchant_code
- String name
- String account_number
- Long suggested_amount
- Boolean is_closed
- String expected_amount
- String expiration_date
- String id
- Boolean is_single_use
- String status
}
class com.welab.pay.gateway.config.SimulateConfig$CreateFixedVirtualAccounts$PaymentCallback {
- String id
- String payment_id
- String callback_virtual_account_id
- String owner_id
- String external_id
- String account_number
- String bank_code
- Long amount
- String transaction_timestamp
- String merchant_code
- String updated
- String created
}
class com.welab.pay.gateway.config.SimulateConfig$CreateFixedVirtualAccounts$CreateUpdateCallback {
- String id
- String owner_id
- String external_id
- String merchant_code
- String account_number
- String bank_code
- String name
- Boolean is_closed
- Boolean is_single_use
- String status
- String expiration_date
- String updated
- String created
}
interface com.welab.pay.gateway.config.SimulateConfig$UpdateFixedVirtualAccounts {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$UpdateFixedVirtualAccounts$Request {
~ String fixed_virtual_account_id
}
interface com.welab.pay.gateway.config.SimulateConfig$UpdateFixedVirtualAccounts$Request$Optional {
~ String suggested_amount
~ String expected_amount
~ String expiration_date
~ String is_single_use
}
interface com.welab.pay.gateway.config.SimulateConfig$GetFixedVirtualAccount {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$GetFixedVirtualAccount$Request {
~ String callback_virtual_account_id
}
interface com.welab.pay.gateway.config.SimulateConfig$GetFixedVirtualAccountPayment {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$GetFixedVirtualAccountPayment$Request {
~ String payment_id
}
interface com.welab.pay.gateway.config.SimulateConfig$CreateInvoice {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$CreateInvoice$Request {
~ String external_id
~ String payer_email
~ String description
~ String amount
~ String callback_virtual_account_id
}
class com.welab.pay.gateway.config.SimulateConfig$CreateInvoice$Response {
- String id
- String userId
- String external_id
- String status
- String merchant_name
- String merchant_profile_picture_url
- Long amount
- String payer_email
- String description
- String invoice_url
- String expiry_date
- List<AvailableBanks> available_banks
- List<AvailableRetailOutlets> available_retail_outlets
- Boolean should_exclude_credit_card
- Boolean should_send_email
- String created
- String updated
}
class com.welab.pay.gateway.config.SimulateConfig$CreateInvoice$AvailableBanks {
- String bank_code
- String collection_type
- String bank_account_number
- Long transfer_amount
- String bank_branch
- String account_holder_name
- Long identity_amount
}
class com.welab.pay.gateway.config.SimulateConfig$CreateInvoice$AvailableRetailOutlets {
- String retail_outlet_name
- String payment_code
- Long transfer_amount
}
class com.welab.pay.gateway.config.SimulateConfig$CreateInvoice$Callback {
- String id
- String user_id
- String external_id
- Boolean is_high
- String merchant_name
- Long amount
- Long fees_paid_amount
- String status
- String payer_email
- String description
- Long adjusted_received_amount
- String payment_method
- String bank_code
- Long paid_amount
- String retail_outlet_name
- String updated
- String created
}
interface com.welab.pay.gateway.config.SimulateConfig$GetInvoice {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$GetInvoice$Request {
~ String invoice_id
}
interface com.welab.pay.gateway.config.SimulateConfig$ExpireInvoice {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$ExpireInvoice$Request {
~ String invoice_id
}
interface com.welab.pay.gateway.config.SimulateConfig$GetBalance {
~ String url
}
interface com.welab.pay.gateway.config.SimulateConfig$GetBalance$Request {
~ String account_type
}
class com.welab.pay.gateway.config.SimulateConfig$GetBalance$Response {
- Long balance
}
class com.welab.pay.gateway.impl.bni.BniInvoiceImpl {
- BaseVirtualAccountService baseVirtualAccountService
- Boolean mock
- String mockRequestResult
- ExecutorService executorService
+ Response<InvoiceVO> createInvoice(InvoiceDto)
+ Response<InvoiceVO> updateInvoice(UpdateInvoiceDto)
+ void sendAsynExecuteUpdateInvoiceByRedis(String)
+ Response<InvoiceVO> sendUpdateInvoice(BniVirtualAccountSynHandler.UpdateVirtualAccountReq)
}
class com.welab.pay.gateway.model.GatewayBankAccount {
- Long id
- Date createAt
- Date updateAt
- String name
- String accountNumber
- Byte fundId
- String bankCode
- String extendId
+ Long getId()
+ void setId(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ String getName()
+ void setName(String)
+ String getAccountNumber()
+ void setAccountNumber(String)
+ Byte getFundId()
+ void setFundId(Byte)
+ String getBankCode()
+ void setBankCode(String)
+ String getExtendId()
+ void setExtendId(String)
}
class com.welab.pay.gateway.config.bca.BcaConstant {
+ {static} int TRANS_ID_EXPIRY_DATE
+ {static} String BCA_GATEWAY_CODE
}
interface com.welab.pay.gateway.mapper.GatewayTaskMapper {
~ long countByExample(GatewayTaskExample)
~ int deleteByPrimaryKey(Long)
~ int insert(GatewayTask)
~ int insertSelective(GatewayTask)
~ List<GatewayTask> selectByExample(GatewayTaskExample)
~ GatewayTask selectByPrimaryKey(Long)
~ int updateByExampleSelective(GatewayTask,GatewayTaskExample)
~ int updateByExample(GatewayTask,GatewayTaskExample)
~ int updateByPrimaryKeySelective(GatewayTask)
~ int updateByPrimaryKey(GatewayTask)
}
class com.welab.pay.gateway.service.BaseVirtualAccountPaymentService {
- GatewayVirtualAccountPaymentMapper gatewayVirtualAccountPaymentMapper
+ int save(GatewayVirtualAccountPayment)
+ GatewayVirtualAccountPayment getByPaymentId(String)
}
class com.welab.pay.gateway.model.GatewayRepaymentOrder {
- Long id
- Long userId
- String trxChannel
- String trxIdOrVa
- Long amount
- Date transactionDate
- String orderNo
- Date createAt
- Date updateAt
+ Long getId()
+ void setId(Long)
+ Long getUserId()
+ void setUserId(Long)
+ String getTrxChannel()
+ void setTrxChannel(String)
+ String getTrxIdOrVa()
+ void setTrxIdOrVa(String)
+ Long getAmount()
+ void setAmount(Long)
+ Date getTransactionDate()
+ void setTransactionDate(Date)
+ String getOrderNo()
+ void setOrderNo(String)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
}
class com.welab.pay.gateway.job.EmergencyJob {
- MessageEmailService messageEmailService
- BaseTaskService baseTaskService
- String taskEmails
- Boolean mock
- JedisCluster jedisCluster
~ String rediesKey
+ void execute(ShardingContext)
}
class com.welab.pay.gateway.http.OkHttpsUtils {
- {static} OkHttpClient okHttpClient
- {static} MyTrustManager mMyTrustManager
- {static} SSLSocketFactory createSSLSocketFactory()
+ OkHttpClient getTrustAllClient()
}
class com.welab.pay.gateway.http.OkHttpsUtils$MyTrustManager {
+ void checkClientTrusted(X509Certificate[],String)
+ void checkServerTrusted(java.security.cert.X509Certificate[],String)
+ java.security.cert.X509Certificate[] getAcceptedIssuers()
}
class com.welab.pay.gateway.http.OkHttpsUtils$TrustAllHostnameVerifier {
+ boolean verify(String,SSLSession)
}
class com.welab.pay.gateway.model.GatewayRequestWithBLOBs {
- String requestParam
- String responseBody
- String responseCode
- String responseMessage
+ String getRequestParam()
+ void setRequestParam(String)
+ String getResponseBody()
+ void setResponseBody(String)
+ String getResponseCode()
+ void setResponseCode(String)
+ String getResponseMessage()
+ void setResponseMessage(String)
}
class com.welab.pay.gateway.test.MqServiceTest {
- String WELAB_SEA_FINANCE_DISBURSEMENT
- String WELAB_SEA_FINANCE_INVOICES
- String WELAB_SEA_FINANCE_VIRTUAL_ACCOUNTS_PAYMENT
- String WELAB_SEA_FINANCE_VIRTUAL_ACCOUNTS_CREATE
- String WELAB_SEA_FINANCE_BANK_ACCOUNT
+ void createVirtualAccount()
}
class com.welab.pay.gateway.model.GatewayTask {
- Long id
- Date createAt
- Date updateAt
- Byte type
- Long userId
- Byte fundId
- String fundName
- Byte status
- String remark
- String extendId
- String taskId
- String thirdpartyId
- String loanNum
- String params
- String platform
- Long amount
- String tradingType
- String version
+ Long getId()
+ void setId(Long)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Date getUpdateAt()
+ void setUpdateAt(Date)
+ Byte getType()
+ void setType(Byte)
+ Long getUserId()
+ void setUserId(Long)
+ Byte getFundId()
+ void setFundId(Byte)
+ String getFundName()
+ void setFundName(String)
+ Byte getStatus()
+ void setStatus(Byte)
+ String getRemark()
+ void setRemark(String)
+ String getExtendId()
+ void setExtendId(String)
+ String getTaskId()
+ void setTaskId(String)
+ String getThirdpartyId()
+ void setThirdpartyId(String)
+ String getLoanNum()
+ void setLoanNum(String)
+ String getParams()
+ void setParams(String)
+ String getPlatform()
+ void setPlatform(String)
+ Long getAmount()
+ void setAmount(Long)
+ String getTradingType()
+ void setTradingType(String)
+ String getVersion()
+ void setVersion(String)
}
class com.welab.pay.gateway.utils.UniqueUtils {
+ {static} String[] chars
+ {static} String getUnique()
+ {static} String random_30()
+ {static} String random_20()
+ {static} String random_12()
+ {static} String random(int)
+ {static} String random_8()
+ {static} void main(String[])
}
enum com.welab.pay.gateway.enums.PlatformEnum {
+  FUND
+  FINANCE
+  PAY_GATEWAY
~ String name
~ <<Create>> PlatformEnum(String)
+ {static} String getNameForEnum(PlatformEnum)
+ String getName()
}
interface com.welab.pay.gateway.Payment {
+ Response<PayingVO> paying(PayingDto)
+ Response<PayingVO> payingForOffline(PayingDto)
+ Response<TransferVO> transfer(TransferDto)
+ Response<TransferVO> reTransfer(TransferDto,String)
}
class com.welab.pay.gateway.impl.permata.PermataValidator {
- BaseBankAccountService baseBankAccountService
- BaseBankServcie baseBankServcie
- RequestServiceHelper requestServiceHelper
+ Response<BankAccountVO> validatorBankAccount(BankAccountDto)
}
class com.welab.pay.gateway.utils.SpringBeanUtil {
- {static} ApplicationContext applicationContext
+ void setApplicationContext(ApplicationContext)
+ {static} T getBean(Class<T>)
+ {static} Object getBean(String)
}
class com.welab.pay.gateway.interceptor.ThirdpartyAuthenticationInterceptor {
+ boolean preHandle(HttpServletRequest,HttpServletResponse,Object)
}
class com.welab.pay.gateway.facade.message.MessagePushServiceFacade {
- MessagePushService messagePushService
+ void pushMsg(AppPushMsgDTO)
}
class com.welab.pay.gateway.mq.consumers.VirtualAccountConsumer {
- GatewayConfig gatewayConfig
+ void onMessage(Message)
}
interface com.welab.pay.gateway.mapper.GatewayVirtualAccountPaymentMapper {
~ long countByExample(GatewayVirtualAccountPaymentExample)
~ int deleteByExample(GatewayVirtualAccountPaymentExample)
~ int deleteByPrimaryKey(Long)
~ int insert(GatewayVirtualAccountPayment)
~ int insertSelective(GatewayVirtualAccountPayment)
~ List<GatewayVirtualAccountPayment> selectByExample(GatewayVirtualAccountPaymentExample)
~ GatewayVirtualAccountPayment selectByPrimaryKey(Long)
~ int updateByExampleSelective(GatewayVirtualAccountPayment,GatewayVirtualAccountPaymentExample)
~ int updateByExample(GatewayVirtualAccountPayment,GatewayVirtualAccountPaymentExample)
~ int updateByPrimaryKeySelective(GatewayVirtualAccountPayment)
~ int updateByPrimaryKey(GatewayVirtualAccountPayment)
}
class com.welab.pay.gateway.controller.ValidatorController {
- ValidatorService validatorService
+ Response<BankAccountVO> validatorBankAccount(BankAccountDto)
}
class com.welab.pay.gateway.job.RepairPaymentJob {
- BaseTaskService baseTaskService
- TaskNotify taskNotify
- Integer repairCount
- BNIManager bniManager
+ void execute(ShardingContext)
+ void doBni(GatewayTask)
+ void doPermata(GatewayTask)
}
class com.welab.pay.gateway.test.InvoiceServiceTest {
- InvoiceService invoiceService
+ void createInvoice()
}
class com.welab.pay.gateway.app.base.BaseGatewayRepaymentOrderService {
- GatewayRepaymentOrderExtMapper extMapper
- GatewayRepaymentOrderMapper repaymentOrderMapper
+ List<GatewayRepaymentOrder> listByParam(List<GatewayRepaymentOrderParamDTO>)
+ void save(GatewayRepaymentOrder)
}
class com.welab.pay.gateway.dto.UpdateVirtualAccountDto {
- {static} long serialVersionUID
- FundEnum fundEnum
- Long userId
- String externalId
- Long amount
- String bankCode
- String name
- String accountNumber
- boolean asynExecute
- List<String> bankCodeList
- String mobile
}
class com.welab.pay.gateway.app.manager.AstraPayWalletManager {
- AstrapayWalletConfiguration astrapayWalletConfiguration
- BaseVirtualAccountService baseVirtualAccountService
- BaseOrderService baseOrderService
- MessagePushServiceFacade messagePushServiceFacade
- RepaymentHelper repaymentHelper
- BaseAmountRecordService baseAmountRecordService
- String PAY_URL_KEY
- {static} Map<String,StatusEnum> ASTRAPAY_PAY_STATUS_MAP
+ AstraPayWalletCallResVO accountCallBack(AstraPayWalletAccountCallBackVO)
+ AstraPayWalletCallResVO paymentCallBack(AstraPayWalletPaymentCallBackVO)
+ boolean updatePayStatus(String,String,String)
+ Response<String> generateRegInfo(AstraPayWalletRegCmd)
+ Response<String> payment(AstraPayWalletPaymentCmd)
+ Response<AstraPayWalletProfileDTO> profile(AstraPayWalletProfileQry)
+ void unBind(Long)
- GatewayVirtualAccount checkPay(AstraPayWalletPaymentCmd)
- AstraPayWalletCallResVO buildSuccessResult()
- AstraPayWalletCallResVO buildErrorResult(String)
}
enum com.welab.pay.gateway.config.MqType {
+  DISBURSEMENT
+  INVOICES
+  FIXEDVIRTUALACCOUNTSPAYMENT
+  FIXEDVIRTUALACCOUNTSCRAETEORUPDATE
+  BANKACCOUNTDATAS
+  TRANSFER
+  FUND_RECHARGE
- Byte type
- String code
- <<Create>> MqType(Byte,String)
+ Byte getType()
+ String getCode()
}
class com.welab.pay.gateway.config.GatewayConfig {
+ {static} String AUTHORIZATION
+ {static} String APPLICATION_JSON
- {static} Map<Byte,GatewayDto> gatewayConfig
- String xenditConfig
- Byte gateway
- String gatewayVms
- void init()
+ {static} void initGatewayConfig()
+ {static} String getUrl(byte)
+ {static} String getSecretKey(byte)
+ {static} String getClientId(byte)
+ {static} String getAccountNo(byte)
+ {static} String getUserName(byte)
+ {static} GatewayDto getById(byte)
+ {static} String getSecretKeyById(byte)
+ FundEnum getFundEnum()
+ List<FundEnum> getVmFundEnum()
+ {static} GatewayDto getById(FundEnum)
}
class com.welab.pay.gateway.app.impl.GatewayRepaymentOrderServiceImpl {
- BaseGatewayRepaymentOrderService orderService
+ List<GatewayRepaymentOrderResDTO> listByParam(List<GatewayRepaymentOrderParamDTO>)
}
enum com.welab.pay.gateway.enums.OrderEnum {
+  REPAYMENT
+  ALFAMART_LOAN
- Byte type
- String name
- <<Create>> OrderEnum(Byte,String)
+ Byte getType()
+ void setType(Byte)
+ String getName()
+ void setName(String)
}
class com.welab.pay.gateway.dto.cmd.VirtualAccountUpdateCmd {
- Long id
- String name
- Long amount
- Integer status
}
class com.welab.pay.gateway.config.bni.BNIAuthenticateConfig {
- String host
- String password
- String userName
- String secretKey
- String key
- String integratorId
- String billerId
+ <<Create>> BNIAuthenticateConfig(String,String,String,String)
+ <<Create>> BNIAuthenticateConfig()
}
class com.welab.pay.gateway.impl.simulate.SimulateAccountImpl {
+ Response<AccountVO> getAccount(AccountDto)
}
class com.welab.pay.gateway.utils.SHA256Utils {
- <<Create>> SHA256Utils()
+ {static} String getSHA256Str(String)
+ {static} void main(String[])
}
class com.welab.pay.gateway.config.astrapay.PaymentResponseDto {
- String response_code
- String status
}
interface com.welab.pay.gateway.mapper.GatewayAmountMapper {
~ long countByExample(GatewayAmountExample)
~ int deleteByExample(GatewayAmountExample)
~ int deleteByPrimaryKey(Long)
~ int insert(GatewayAmount)
~ int insertSelective(GatewayAmount)
~ List<GatewayAmount> selectByExample(GatewayAmountExample)
~ GatewayAmount selectByPrimaryKey(Long)
~ int updateByExampleSelective(GatewayAmount,GatewayAmountExample)
~ int updateByExample(GatewayAmount,GatewayAmountExample)
~ int updateByPrimaryKeySelective(GatewayAmount)
~ int updateByPrimaryKey(GatewayAmount)
}
class com.welab.pay.gateway.service.BaseAmountService {
- GatewayAmountMapper gatewayAmountMapper
+ int save(GatewayAmount)
}
class com.welab.pay.gateway.controller.RepairController {
- BaseTaskService baseTaskService
+ String paying(String)
}
class com.welab.pay.gateway.model.GatewayMq {
- Integer id
- Date createAt
- Byte type
- String taskId
- String token
- String queue
- String body
+ Integer getId()
+ void setId(Integer)
+ Date getCreateAt()
+ void setCreateAt(Date)
+ Byte getType()
+ void setType(Byte)
+ String getTaskId()
+ void setTaskId(String)
+ String getToken()
+ void setToken(String)
+ String getQueue()
+ void setQueue(String)
+ String getBody()
+ void setBody(String)
}
class com.welab.pay.gateway.service.impl.AccountServiceImpl {
- BaseBankServcie baseBankServcie
- BaseVirtualAccountService baseVirtualAccountService
- GatewayConfig gatewayConfig
- MqForward mqForward
- JedisCluster jedisCluster
+ Response<List<BankVO>> getBanksforVirtualAccounts(FundEnum)
+ Response<VirtualAccountVO> createVirtualAccount(VirtualAccountDto)
+ Response<List<VirtualAccountVO>> createVirtualAccounts(List<VirtualAccountDto>)
+ Response<AccountVO> getAccountVOByFund(FundEnum,AccountTypeEnum)
+ Response<VirtualAccountVO> updateVirtualAccount(UpdateVirtualAccountDto)
+ Response<Void> init()
+ Response<List<VirtualAccountVO>> queryOrCreateVirtualAccounts(VirtualAccountDto)
+ Response<List<VirtualAccountVO>> findListByUserId(Long)
+ Response<List<VirtualAccountVO>> queryOrCreateOrUpdateVirtualAccounts(VirtualAccountDto)
+ boolean batchUpdateVirtualAccounts(List<VirtualAccountDto>)
+ Response<AccountVO> getAccount(AccountDto)
}
class com.welab.pay.gateway.http.BNIHttpUtils {
+ {static} BNIConfig.Createbilling.Response createbilling(String,String,String,BNIConfig.Createbilling.Request)
+ {static} BNIConfig.InquiryBilling.Response inquiryBilling(String,String,String,BNIConfig.InquiryBilling.Request)
+ {static} BNIConfig.Updatebilling.Response updatebilling(String,String,String,BNIConfig.Updatebilling.Request)
- {static} T call(String,String,String,String,Class<T>)
}
class com.welab.pay.gateway.http.BNIHttpUtils$WrapData {
- String client_id
- String data
+ {static} WrapData bulid(String,String)
}
interface com.welab.pay.gateway.service.IAstraPayWalletService {
~ String ASTRAPAY_WALLET_BANK_CODE
~ Long ASTRAPAY_WALLET_MIN_PAYAMOUNT
~ Long ASTRAPAY_WALLET_MAX_PAYAMOUNT
~ Response<String> generateRegInfo(AstraPayWalletRegCmd)
~ Response<String> payment(AstraPayWalletPaymentCmd)
~ Response<AstraPayWalletProfileDTO> profile(AstraPayWalletProfileQry)
~ void unBind(Long)
}


com.welab.pay.gateway.dto.Serializable <|.. com.welab.pay.gateway.dto.QueryTaskDto
com.welab.pay.gateway.config.permata.PermataRepaymentConfig +.. com.welab.pay.gateway.config.permata.PermataRepaymentConfig$WrapResponse
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataRepaymentConfig$WrapResponse
com.welab.pay.gateway.config.permata.PermataRepaymentConfig +.. com.welab.pay.gateway.config.permata.PermataRepaymentConfig$GetBill
com.welab.pay.gateway.config.permata.Serializable <|-- com.welab.pay.gateway.config.permata.PermataRepaymentConfig$GetBill
com.welab.pay.gateway.config.permata.PermataRepaymentConfig$GetBill +.. com.welab.pay.gateway.config.permata.PermataRepaymentConfig$GetBill$Request
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataRepaymentConfig$GetBill$Request
com.welab.pay.gateway.config.permata.PermataRepaymentConfig$GetBill +.. com.welab.pay.gateway.config.permata.PermataRepaymentConfig$GetBill$Response
com.welab.pay.gateway.config.permata.WrapResponse <|-- com.welab.pay.gateway.config.permata.PermataRepaymentConfig$GetBill$Response
com.welab.pay.gateway.config.permata.PermataRepaymentConfig +.. com.welab.pay.gateway.config.permata.PermataRepaymentConfig$RefInfoVO
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataRepaymentConfig$RefInfoVO
com.welab.pay.gateway.config.permata.PermataRepaymentConfig +.. com.welab.pay.gateway.config.permata.PermataRepaymentConfig$PayBill
com.welab.pay.gateway.config.permata.Serializable <|-- com.welab.pay.gateway.config.permata.PermataRepaymentConfig$PayBill
com.welab.pay.gateway.config.permata.PermataRepaymentConfig$PayBill +.. com.welab.pay.gateway.config.permata.PermataRepaymentConfig$PayBill$Request
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataRepaymentConfig$PayBill$Request
com.welab.pay.gateway.config.permata.PermataRepaymentConfig$PayBill +.. com.welab.pay.gateway.config.permata.PermataRepaymentConfig$PayBill$Response
com.welab.pay.gateway.config.permata.WrapResponse <|-- com.welab.pay.gateway.config.permata.PermataRepaymentConfig$PayBill$Response
com.welab.pay.gateway.config.permata.PermataRepaymentConfig +.. com.welab.pay.gateway.config.permata.PermataRepaymentConfig$RevBill
com.welab.pay.gateway.config.permata.Serializable <|-- com.welab.pay.gateway.config.permata.PermataRepaymentConfig$RevBill
com.welab.pay.gateway.config.permata.PermataRepaymentConfig$RevBill +.. com.welab.pay.gateway.config.permata.PermataRepaymentConfig$RevBill$Request
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataRepaymentConfig$RevBill$Request
com.welab.pay.gateway.config.permata.PermataRepaymentConfig$RevBill +.. com.welab.pay.gateway.config.permata.PermataRepaymentConfig$RevBill$Response
com.welab.pay.gateway.config.permata.WrapResponse <|-- com.welab.pay.gateway.config.permata.PermataRepaymentConfig$RevBill$Response
com.welab.pay.gateway.VirtualAccount <|.. com.welab.pay.gateway.impl.simulate.SimulateVirtualAccountImpl
com.welab.pay.gateway.dto.mq.BaseMqDto <|-- com.welab.pay.gateway.dto.mq.FundRechargeMqDto
java.io.Serializable <|.. com.welab.pay.gateway.dto.cmd.astrapay.AstraPayWalletRegCmd
com.welab.pay.gateway.dto.BaseDto <|-- com.welab.pay.gateway.dto.RefundDto
com.welab.pay.gateway.Validator <|.. com.welab.pay.gateway.impl.simulate.SimulateValidator
com.welab.pay.gateway.impl.AbstractPayment <|-- com.welab.pay.gateway.impl.bca.BcaPayment
com.welab.pay.gateway.model.GatewayRequestExample +.. com.welab.pay.gateway.model.GatewayRequestExample$GeneratedCriteria
com.welab.pay.gateway.model.GatewayRequestExample +.. com.welab.pay.gateway.model.GatewayRequestExample$Criteria
com.welab.pay.gateway.model.GeneratedCriteria <|-- com.welab.pay.gateway.model.GatewayRequestExample$Criteria
com.welab.pay.gateway.model.GatewayRequestExample +.. com.welab.pay.gateway.model.GatewayRequestExample$Criterion
com.welab.pay.gateway.vo.BaseVO <|-- com.welab.pay.gateway.vo.VirtualAccountVO
org.springframework.amqp.core.MessageListener <|.. com.welab.pay.gateway.mq.consumers.PayingTaskConsumer
org.springframework.context.ApplicationContextAware <|.. com.welab.pay.gateway.factory.GatewayFactory
com.welab.pay.gateway.impl.AbstractPayment <|-- com.welab.pay.gateway.impl.bni.BniPayment
org.springframework.amqp.core.MessageListener <|.. com.welab.pay.gateway.mq.consumers.TaskStatusConsumer
com.welab.pay.gateway.core.config.GatewayAuthForThirdpartyConfig +.. com.welab.pay.gateway.core.config.GatewayAuthForThirdpartyConfig$AuthConfig
com.welab.pay.gateway.Payment <|.. com.welab.pay.gateway.impl.AbstractPayment
com.welab.pay.gateway.test.BaseTest <|-- com.welab.pay.gateway.test.ValidatorServiceTest
com.welab.pay.gateway.Payment <|.. com.welab.pay.gateway.impl.simulate.SimulatePayment
com.welab.pay.gateway.model.GatewayConfigExample +.. com.welab.pay.gateway.model.GatewayConfigExample$GeneratedCriteria
com.welab.pay.gateway.model.GatewayConfigExample +.. com.welab.pay.gateway.model.GatewayConfigExample$Criteria
com.welab.pay.gateway.model.GeneratedCriteria <|-- com.welab.pay.gateway.model.GatewayConfigExample$Criteria
com.welab.pay.gateway.model.GatewayConfigExample +.. com.welab.pay.gateway.model.GatewayConfigExample$Criterion
java.io.Serializable <|.. com.welab.pay.gateway.dto.GatewayRepaymentOrderParamDTO
com.welab.pay.gateway.model.VirtualAccountPayBackNoticeExample +.. com.welab.pay.gateway.model.VirtualAccountPayBackNoticeExample$GeneratedCriteria
com.welab.pay.gateway.model.VirtualAccountPayBackNoticeExample +.. com.welab.pay.gateway.model.VirtualAccountPayBackNoticeExample$Criteria
com.welab.pay.gateway.model.GeneratedCriteria <|-- com.welab.pay.gateway.model.VirtualAccountPayBackNoticeExample$Criteria
com.welab.pay.gateway.model.VirtualAccountPayBackNoticeExample +.. com.welab.pay.gateway.model.VirtualAccountPayBackNoticeExample$Criterion
com.welab.pay.gateway.dto.BaseDto <|-- com.welab.pay.gateway.dto.AccountDto
java.io.Serializable <|.. com.welab.pay.gateway.dto.cmd.astrapay.AstraPayWalletPaymentCmd
com.welab.pay.gateway.impl.bni.BniVirtualAccountSynHandler +.. com.welab.pay.gateway.impl.bni.BniVirtualAccountSynHandler$UpdateVirtualAccountReq
com.welab.pay.gateway.impl.bni.UpdateInvoiceDto <|-- com.welab.pay.gateway.impl.bni.BniVirtualAccountSynHandler$UpdateVirtualAccountReq
com.welab.pay.gateway.VirtualAccount <|.. com.welab.pay.gateway.impl.faspay.FaspayVirtualAccountImpl
org.springframework.amqp.core.MessageListener <|.. com.welab.pay.gateway.mq.consumers.HttpRequestConsumer
org.springframework.amqp.core.MessageListener <|.. com.welab.pay.gateway.mq.consumers.BniValidatorConsumer
com.welab.pay.gateway.http.test.SimpleTest <|-- com.welab.pay.gateway.test.TaskTtest
com.welab.pay.gateway.vo.BaseVO <|-- com.welab.pay.gateway.vo.RefundVO
com.welab.pay.gateway.model.GatewayTaskExample +.. com.welab.pay.gateway.model.GatewayTaskExample$GeneratedCriteria
com.welab.pay.gateway.model.GatewayTaskExample +.. com.welab.pay.gateway.model.GatewayTaskExample$Criteria
com.welab.pay.gateway.model.GeneratedCriteria <|-- com.welab.pay.gateway.model.GatewayTaskExample$Criteria
com.welab.pay.gateway.model.GatewayTaskExample +.. com.welab.pay.gateway.model.GatewayTaskExample$Criterion
java.io.Serializable <|.. com.welab.pay.gateway.dto.DisburseSuccessDto
com.welab.pay.gateway.service.BankService <|.. com.welab.pay.gateway.service.impl.BankDubboServiceImpl
com.welab.pay.gateway.VirtualAccount <|.. com.welab.pay.gateway.impl.bca.BcaVirtualAccountImpl
java.io.Serializable <|.. com.welab.pay.gateway.dto.qry.astrapay.AstraPayWalletProfileQry
com.welab.pay.gateway.http.test.SimpleTest <|-- com.welab.pay.gateway.test.AccountServiceTest
com.welab.pay.gateway.config.astrapay.wallet.Profile +.. com.welab.pay.gateway.config.astrapay.wallet.Profile$Request
com.welab.pay.gateway.config.astrapay.wallet.Profile +.. com.welab.pay.gateway.config.astrapay.wallet.Profile$Response
com.welab.pay.gateway.service.VirtualAccountService <|.. com.welab.pay.gateway.app.impl.VirtualAccountServiceImpl
com.welab.pay.gateway.dto.BaseDto <|-- com.welab.pay.gateway.dto.BankAccountDto
com.welab.pay.gateway.dto.mq.BaseMqDto <|-- com.welab.pay.gateway.dto.mq.DisbursementMqDto
com.welab.pay.gateway.dto.BaseDto <|-- com.welab.pay.gateway.dto.InvoiceDto
org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter <|-- com.welab.pay.gateway.config.WebAppConfigurer
com.welab.pay.gateway.model.GatewayBankExample +.. com.welab.pay.gateway.model.GatewayBankExample$GeneratedCriteria
com.welab.pay.gateway.model.GatewayBankExample +.. com.welab.pay.gateway.model.GatewayBankExample$Criteria
com.welab.pay.gateway.model.GeneratedCriteria <|-- com.welab.pay.gateway.model.GatewayBankExample$Criteria
com.welab.pay.gateway.model.GatewayBankExample +.. com.welab.pay.gateway.model.GatewayBankExample$Criterion
org.springframework.web.filter.OncePerRequestFilter <|-- com.welab.pay.gateway.filter.LogFilter
com.welab.pay.gateway.common.Urls +.. com.welab.pay.gateway.common.Urls$Pay
com.welab.pay.gateway.common.Urls +.. com.welab.pay.gateway.common.Urls$Repair
com.welab.pay.gateway.common.Urls +.. com.welab.pay.gateway.common.Urls$Account
com.welab.pay.gateway.common.Urls +.. com.welab.pay.gateway.common.Urls$Validator
com.welab.pay.gateway.common.Urls +.. com.welab.pay.gateway.common.Urls$Monitor
com.welab.pay.gateway.common.Urls +.. com.welab.pay.gateway.common.Urls$AstraPay
com.welab.pay.gateway.common.Urls +.. com.welab.pay.gateway.common.Urls$AstraPayWallet
com.welab.pay.gateway.common.Urls +.. com.welab.pay.gateway.common.Urls$Simulate
com.welab.pay.gateway.common.Urls +.. com.welab.pay.gateway.common.Urls$Bca
com.welab.pay.gateway.config.bni.BNIConfig +.. com.welab.pay.gateway.config.bni.BNIConfig$Bill
com.welab.pay.gateway.config.bni.WrapResponse <|-- com.welab.pay.gateway.config.bni.BNIConfig$Bill
com.welab.pay.gateway.config.bni.BNIConfig +.. com.welab.pay.gateway.config.bni.BNIConfig$WrapResponse
com.welab.pay.gateway.config.bni.Serializable <|.. com.welab.pay.gateway.config.bni.BNIConfig$WrapResponse
com.welab.pay.gateway.config.bni.BNIConfig +.. com.welab.pay.gateway.config.bni.BNIConfig$Createbilling
com.welab.pay.gateway.config.bni.Serializable <|-- com.welab.pay.gateway.config.bni.BNIConfig$Createbilling
com.welab.pay.gateway.config.bni.BNIConfig$Createbilling +.. com.welab.pay.gateway.config.bni.BNIConfig$Createbilling$Request
com.welab.pay.gateway.config.bni.Bill <|-- com.welab.pay.gateway.config.bni.BNIConfig$Createbilling$Request
com.welab.pay.gateway.config.bni.BNIConfig$Createbilling +.. com.welab.pay.gateway.config.bni.BNIConfig$Createbilling$Response
com.welab.pay.gateway.config.bni.WrapResponse <|-- com.welab.pay.gateway.config.bni.BNIConfig$Createbilling$Response
com.welab.pay.gateway.config.bni.BNIConfig$Createbilling +.. com.welab.pay.gateway.config.bni.BNIConfig$Createbilling$CallBack
com.welab.pay.gateway.config.bni.Serializable <|.. com.welab.pay.gateway.config.bni.BNIConfig$Createbilling$CallBack
com.welab.pay.gateway.config.bni.BNIConfig +.. com.welab.pay.gateway.config.bni.BNIConfig$InquiryBilling
com.welab.pay.gateway.config.bni.Serializable <|-- com.welab.pay.gateway.config.bni.BNIConfig$InquiryBilling
com.welab.pay.gateway.config.bni.BNIConfig$InquiryBilling +.. com.welab.pay.gateway.config.bni.BNIConfig$InquiryBilling$Request
com.welab.pay.gateway.config.bni.Bill <|-- com.welab.pay.gateway.config.bni.BNIConfig$InquiryBilling$Request
com.welab.pay.gateway.config.bni.BNIConfig$InquiryBilling +.. com.welab.pay.gateway.config.bni.BNIConfig$InquiryBilling$Response
com.welab.pay.gateway.config.bni.Bill <|-- com.welab.pay.gateway.config.bni.BNIConfig$InquiryBilling$Response
com.welab.pay.gateway.config.bni.BNIConfig +.. com.welab.pay.gateway.config.bni.BNIConfig$Updatebilling
com.welab.pay.gateway.config.bni.Serializable <|-- com.welab.pay.gateway.config.bni.BNIConfig$Updatebilling
com.welab.pay.gateway.config.bni.BNIConfig$Updatebilling +.. com.welab.pay.gateway.config.bni.BNIConfig$Updatebilling$Request
com.welab.pay.gateway.config.bni.Bill <|-- com.welab.pay.gateway.config.bni.BNIConfig$Updatebilling$Request
com.welab.pay.gateway.config.bni.BNIConfig$Updatebilling +.. com.welab.pay.gateway.config.bni.BNIConfig$Updatebilling$Response
com.welab.pay.gateway.config.bni.WrapResponse <|-- com.welab.pay.gateway.config.bni.BNIConfig$Updatebilling$Response
com.welab.pay.gateway.vo.BaseVO <|-- com.welab.pay.gateway.vo.AccountVO
com.welab.pay.gateway.model.GatewayRepaymentOrderExample +.. com.welab.pay.gateway.model.GatewayRepaymentOrderExample$GeneratedCriteria
com.welab.pay.gateway.model.GatewayRepaymentOrderExample +.. com.welab.pay.gateway.model.GatewayRepaymentOrderExample$Criteria
com.welab.pay.gateway.model.GeneratedCriteria <|-- com.welab.pay.gateway.model.GatewayRepaymentOrderExample$Criteria
com.welab.pay.gateway.model.GatewayRepaymentOrderExample +.. com.welab.pay.gateway.model.GatewayRepaymentOrderExample$Criterion
com.welab.pay.gateway.config.astrapay.wallet.TransactionStatus +.. com.welab.pay.gateway.config.astrapay.wallet.TransactionStatus$Request
com.welab.pay.gateway.config.astrapay.wallet.TransactionStatus +.. com.welab.pay.gateway.config.astrapay.wallet.TransactionStatus$Response
com.welab.pay.gateway.model.GatewayAmountExample +.. com.welab.pay.gateway.model.GatewayAmountExample$GeneratedCriteria
com.welab.pay.gateway.model.GatewayAmountExample +.. com.welab.pay.gateway.model.GatewayAmountExample$Criteria
com.welab.pay.gateway.model.GeneratedCriteria <|-- com.welab.pay.gateway.model.GatewayAmountExample$Criteria
com.welab.pay.gateway.model.GatewayAmountExample +.. com.welab.pay.gateway.model.GatewayAmountExample$Criterion
com.welab.pay.gateway.vo.bca.VaPaymentsReqVO +.. com.welab.pay.gateway.vo.bca.VaPaymentsReqVO$DetailBill
com.welab.pay.gateway.VirtualAccount <|.. com.welab.pay.gateway.impl.bni.BniVirtualAccountImpl
com.welab.pay.gateway.vo.bca.VaPaymentsResVO +.. com.welab.pay.gateway.vo.bca.VaPaymentsResVO$DetailBill
com.welab.pay.gateway.Account <|.. com.welab.pay.gateway.impl.bni.BniAccountImpl
com.welab.pay.gateway.vo.BaseVO <|-- com.welab.pay.gateway.vo.PayingVO
com.welab.pay.gateway.Account <|.. com.welab.pay.gateway.impl.bca.BcaAccountImpl
com.welab.pay.gateway.test.BaseTest <|-- com.welab.pay.gateway.test.BniInvoiceTest
java.io.Serializable <|.. com.welab.pay.gateway.vo.GatewayTaskRequestVO
com.welab.pay.gateway.http.test.SimpleTest <|-- com.welab.pay.gateway.http.test.RepaymentOrderTest
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.pay.gateway.job.AstraPayWalletTransactionStatusJob
com.welab.pay.gateway.job.AstraPayWalletTransactionStatusJob +.. com.welab.pay.gateway.job.AstraPayWalletTransactionStatusJob$JobParam
com.welab.pay.gateway.Invoice <|.. com.welab.pay.gateway.impl.simulate.SimulateInvoiceImpl
org.springframework.amqp.core.MessageListener <|.. com.welab.pay.gateway.mq.consumers.VACreateConsumer
java.io.Serializable <|.. com.welab.pay.gateway.response.DisbursementResponse
com.welab.sea.util.dto.Command <|-- com.welab.pay.gateway.dto.cmd.VirtualAccountUpdateByAccountCmd
com.welab.pay.gateway.Invoice <|.. com.welab.pay.gateway.impl.faspay.PaspayInvoiceImpl
com.welab.pay.gateway.service.PayService <|.. com.welab.pay.gateway.service.impl.PayServiceImpl
com.welab.pay.gateway.controller.alfamart.AlfamartPayCallbackController +.. com.welab.pay.gateway.controller.alfamart.AlfamartPayCallbackController$ResponseBulider
java.io.Serializable <|.. com.welab.pay.gateway.dto.cmd.GatewayTaskCmd
com.welab.pay.gateway.dto.BaseDto <|-- com.welab.pay.gateway.dto.PayingDto
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.pay.gateway.job.RetryPaymentJob
com.welab.pay.gateway.model.GatewayOrderExample +.. com.welab.pay.gateway.model.GatewayOrderExample$GeneratedCriteria
com.welab.pay.gateway.model.GatewayOrderExample +.. com.welab.pay.gateway.model.GatewayOrderExample$Criteria
com.welab.pay.gateway.model.GeneratedCriteria <|-- com.welab.pay.gateway.model.GatewayOrderExample$Criteria
com.welab.pay.gateway.model.GatewayOrderExample +.. com.welab.pay.gateway.model.GatewayOrderExample$Criterion
com.welab.pay.gateway.config.faspay.FaspayConfig +.. com.welab.pay.gateway.config.faspay.FaspayConfig$BaseRequest
com.welab.pay.gateway.config.faspay.Serializable <|.. com.welab.pay.gateway.config.faspay.FaspayConfig$BaseRequest
com.welab.pay.gateway.config.faspay.FaspayConfig +.. com.welab.pay.gateway.config.faspay.FaspayConfig$BaseResponse
com.welab.pay.gateway.config.faspay.Serializable <|.. com.welab.pay.gateway.config.faspay.FaspayConfig$BaseResponse
com.welab.pay.gateway.config.faspay.FaspayConfig +.. com.welab.pay.gateway.config.faspay.FaspayConfig$Item
com.welab.pay.gateway.config.faspay.Serializable <|.. com.welab.pay.gateway.config.faspay.FaspayConfig$Item
com.welab.pay.gateway.config.faspay.FaspayConfig +.. com.welab.pay.gateway.config.faspay.FaspayConfig$PostData
com.welab.pay.gateway.config.faspay.Serializable <|-- com.welab.pay.gateway.config.faspay.FaspayConfig$PostData
com.welab.pay.gateway.config.faspay.FaspayConfig$PostData +.. com.welab.pay.gateway.config.faspay.FaspayConfig$PostData$Request
com.welab.pay.gateway.config.faspay.BaseRequest <|-- com.welab.pay.gateway.config.faspay.FaspayConfig$PostData$Request
com.welab.pay.gateway.config.faspay.FaspayConfig$PostData +.. com.welab.pay.gateway.config.faspay.FaspayConfig$PostData$Response
com.welab.pay.gateway.config.faspay.BaseResponse <|-- com.welab.pay.gateway.config.faspay.FaspayConfig$PostData$Response
com.welab.pay.gateway.config.faspay.FaspayConfig$PostData$Response +.. com.welab.pay.gateway.config.faspay.FaspayConfig$PostData$Response$Product
com.welab.pay.gateway.config.faspay.Serializable <|.. com.welab.pay.gateway.config.faspay.FaspayConfig$PostData$Response$Product
com.welab.pay.gateway.http.test.SimpleTest <|-- com.welab.pay.gateway.http.test.BcaHttpTest
com.welab.pay.gateway.config.bni.BNIPaymentConfig12 +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$WrapHeader
com.welab.pay.gateway.config.bni.Serializable <|.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$WrapHeader
com.welab.pay.gateway.config.bni.BNIPaymentConfig12 +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$WrapReqeust
com.welab.pay.gateway.config.bni.Serializable <|.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$WrapReqeust
com.welab.pay.gateway.config.bni.BNIPaymentConfig12 +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$WrapResponse
com.welab.pay.gateway.config.bni.Serializable <|.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$WrapResponse
com.welab.pay.gateway.config.bni.BNIPaymentConfig12 +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Token
com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Token +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Token$Response
com.welab.pay.gateway.config.bni.Serializable <|.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Token$Response
com.welab.pay.gateway.config.bni.BNIPaymentConfig12 +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement
com.welab.pay.gateway.config.bni.Serializable <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement
com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement$Request
com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement$DisbursementRequest
com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement$Response
com.welab.pay.gateway.config.bni.WrapResponse <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement$Response
com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement$DisbursementResponse
com.welab.pay.gateway.config.bni.Serializable <|.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Disbursement$DisbursementResponse
com.welab.pay.gateway.config.bni.BNIPaymentConfig12 +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry
com.welab.pay.gateway.config.bni.Serializable <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry
com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry$BNIRequest
com.welab.pay.gateway.config.bni.Serializable <|.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry$BNIRequest
com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry$Request
com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry$GetinhouseinquiryResponse
com.welab.pay.gateway.config.bni.Serializable <|.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry$GetinhouseinquiryResponse
com.welab.pay.gateway.config.bni.WrapResponse <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry$GetinhouseinquiryResponse
com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry$Response
com.welab.pay.gateway.config.bni.Serializable <|.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$Getinhouseinquiry$Response
com.welab.pay.gateway.config.bni.BNIPaymentConfig12 +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus
com.welab.pay.gateway.config.bni.Serializable <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus
com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus$GetpaymentRequest
com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus$Request
com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus$GetpaymentResponse
com.welab.pay.gateway.config.bni.WrapResponse <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus$GetpaymentResponse
com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus$Response
com.welab.pay.gateway.config.bni.Serializable <|.. com.welab.pay.gateway.config.bni.BNIPaymentConfig12$GetDisbursementStatus$Response
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.pay.gateway.job.PaymentJob
com.welab.pay.gateway.model.GatewayVirtualAccountPaymentExample +.. com.welab.pay.gateway.model.GatewayVirtualAccountPaymentExample$GeneratedCriteria
com.welab.pay.gateway.model.GatewayVirtualAccountPaymentExample +.. com.welab.pay.gateway.model.GatewayVirtualAccountPaymentExample$Criteria
com.welab.pay.gateway.model.GeneratedCriteria <|-- com.welab.pay.gateway.model.GatewayVirtualAccountPaymentExample$Criteria
com.welab.pay.gateway.model.GatewayVirtualAccountPaymentExample +.. com.welab.pay.gateway.model.GatewayVirtualAccountPaymentExample$Criterion
com.welab.pay.gateway.VirtualAccount <|.. com.welab.pay.gateway.impl.astrapay.AstrapayVirtualAccountImpl
com.welab.sea.util.dto.PageQuery <|-- com.welab.pay.gateway.dto.qry.VirtualAccountQry
com.welab.pay.gateway.service.IAstraPayWalletService <|.. com.welab.pay.gateway.service.impl.AstraPayWalletServiceImpl
java.io.Serializable <|.. com.welab.pay.gateway.vo.GatewayRequestVO
com.welab.pay.gateway.config.astrapay.wallet.Payment +.. com.welab.pay.gateway.config.astrapay.wallet.Payment$Request
com.welab.pay.gateway.config.astrapay.wallet.Payment +.. com.welab.pay.gateway.config.astrapay.wallet.Payment$Response
java.io.Serializable <|.. com.welab.pay.gateway.dto.GatewayRepaymentOrderResDTO
com.welab.pay.gateway.model.GatewayBankAccountExample +.. com.welab.pay.gateway.model.GatewayBankAccountExample$GeneratedCriteria
com.welab.pay.gateway.model.GatewayBankAccountExample +.. com.welab.pay.gateway.model.GatewayBankAccountExample$Criteria
com.welab.pay.gateway.model.GeneratedCriteria <|-- com.welab.pay.gateway.model.GatewayBankAccountExample$Criteria
com.welab.pay.gateway.model.GatewayBankAccountExample +.. com.welab.pay.gateway.model.GatewayBankAccountExample$Criterion
com.welab.pay.gateway.impl.AbstractPayment <|-- com.welab.pay.gateway.impl.alfamart.AlfamartPayment
java.io.Serializable <|.. com.welab.pay.gateway.vo.BaseVO
java.io.Serializable <|.. com.welab.pay.gateway.response.DueVo
java.io.Serializable <|.. com.welab.pay.gateway.dto.ChangeLendingWayDto
com.welab.pay.gateway.dto.BaseDto <|-- com.welab.pay.gateway.dto.UpdateInvoiceDto
com.welab.pay.gateway.config.bni.BNIPaymentConfig +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$WrapReqeust
com.welab.pay.gateway.config.bni.Serializable <|.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$WrapReqeust
com.welab.pay.gateway.config.bni.BNIPaymentConfig +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$WrapResponse
com.welab.pay.gateway.config.bni.Serializable <|.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$WrapResponse
com.welab.pay.gateway.config.bni.BNIPaymentConfig +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Token
com.welab.pay.gateway.config.bni.BNIPaymentConfig$Token +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Token$Response
com.welab.pay.gateway.config.bni.Serializable <|.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Token$Response
com.welab.pay.gateway.config.bni.BNIPaymentConfig +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankinquiry
com.welab.pay.gateway.config.bni.Serializable <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankinquiry
com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankinquiry +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankinquiry$Request
com.welab.pay.gateway.config.bni.WrapReqeust <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankinquiry$Request
com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankinquiry +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankinquiry$Response
com.welab.pay.gateway.config.bni.WrapResponse <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankinquiry$Response
com.welab.pay.gateway.config.bni.BNIPaymentConfig +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getbalance
com.welab.pay.gateway.config.bni.Serializable <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getbalance
com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getbalance +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getbalance$Request
com.welab.pay.gateway.config.bni.WrapReqeust <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getbalance$Request
com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getbalance +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getbalance$Response
com.welab.pay.gateway.config.bni.WrapResponse <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getbalance$Response
com.welab.pay.gateway.config.bni.BNIPaymentConfig +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Dopayment
com.welab.pay.gateway.config.bni.Serializable <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Dopayment
com.welab.pay.gateway.config.bni.BNIPaymentConfig$Dopayment +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Dopayment$Request
com.welab.pay.gateway.config.bni.WrapReqeust <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Dopayment$Request
com.welab.pay.gateway.config.bni.BNIPaymentConfig$Dopayment +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Dopayment$Response
com.welab.pay.gateway.config.bni.WrapResponse <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Dopayment$Response
com.welab.pay.gateway.config.bni.BNIPaymentConfig +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinhouseinquiry
com.welab.pay.gateway.config.bni.Serializable <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinhouseinquiry
com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinhouseinquiry +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinhouseinquiry$Request
com.welab.pay.gateway.config.bni.WrapReqeust <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinhouseinquiry$Request
com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinhouseinquiry +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinhouseinquiry$Response
com.welab.pay.gateway.config.bni.WrapResponse <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinhouseinquiry$Response
com.welab.pay.gateway.config.bni.BNIPaymentConfig +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getpaymentstatus
com.welab.pay.gateway.config.bni.Serializable <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getpaymentstatus
com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getpaymentstatus +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getpaymentstatus$Request
com.welab.pay.gateway.config.bni.WrapReqeust <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getpaymentstatus$Request
com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getpaymentstatus +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getpaymentstatus$Response
com.welab.pay.gateway.config.bni.WrapResponse <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getpaymentstatus$Response
com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getpaymentstatus +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getpaymentstatus$PreviousResponse
com.welab.pay.gateway.config.bni.Serializable <|.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getpaymentstatus$PreviousResponse
com.welab.pay.gateway.config.bni.BNIPaymentConfig +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankpayment
com.welab.pay.gateway.config.bni.Serializable <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankpayment
com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankpayment +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankpayment$Request
com.welab.pay.gateway.config.bni.WrapReqeust <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankpayment$Request
com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankpayment +.. com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankpayment$Response
com.welab.pay.gateway.config.bni.WrapResponse <|-- com.welab.pay.gateway.config.bni.BNIPaymentConfig$Getinterbankpayment$Response
com.welab.pay.gateway.config.bca.BcaApiModel +.. com.welab.pay.gateway.config.bca.BcaApiModel$BcaHttpReq
com.welab.pay.gateway.config.bca.BcaApiModel +.. com.welab.pay.gateway.config.bca.BcaApiModel$BaseBcaHttpRes
com.welab.pay.gateway.config.bca.BcaApiModel$BaseBcaHttpRes +.. com.welab.pay.gateway.config.bca.BcaApiModel$BaseBcaHttpRes$BcaResultMsg
com.welab.pay.gateway.config.bca.BcaApiModel +.. com.welab.pay.gateway.config.bca.BcaApiModel$Authentication
com.welab.pay.gateway.config.bca.BcaApiModel +.. com.welab.pay.gateway.config.bca.BcaApiModel$AccessTokenOpt
com.welab.pay.gateway.config.bca.BcaApiModel$AccessTokenOpt +.. com.welab.pay.gateway.config.bca.BcaApiModel$AccessTokenOpt$AccessTokenRes
com.welab.pay.gateway.config.bca.BcaApiModel +.. com.welab.pay.gateway.config.bca.BcaApiModel$InquiryAccountOpt
com.welab.pay.gateway.config.bca.BcaApiModel$InquiryAccountOpt +.. com.welab.pay.gateway.config.bca.BcaApiModel$InquiryAccountOpt$InquiryAccountReq
com.welab.pay.gateway.config.bca.BcaApiModel$InquiryAccountOpt +.. com.welab.pay.gateway.config.bca.BcaApiModel$InquiryAccountOpt$InquiryAccountRes
com.welab.pay.gateway.config.bca.BaseBcaHttpRes <|-- com.welab.pay.gateway.config.bca.BcaApiModel$InquiryAccountOpt$InquiryAccountRes
com.welab.pay.gateway.config.bca.BcaApiModel +.. com.welab.pay.gateway.config.bca.BcaApiModel$TransfersOpt
com.welab.pay.gateway.config.bca.BcaApiModel$TransfersOpt +.. com.welab.pay.gateway.config.bca.BcaApiModel$TransfersOpt$TransfersReq
com.welab.pay.gateway.config.bca.BcaApiModel$TransfersOpt +.. com.welab.pay.gateway.config.bca.BcaApiModel$TransfersOpt$TransfersRes
com.welab.pay.gateway.config.bca.BaseBcaHttpRes <|-- com.welab.pay.gateway.config.bca.BcaApiModel$TransfersOpt$TransfersRes
com.welab.pay.gateway.config.bca.BcaApiModel +.. com.welab.pay.gateway.config.bca.BcaApiModel$TransfersDomesticOpt
com.welab.pay.gateway.config.bca.BcaApiModel$TransfersDomesticOpt +.. com.welab.pay.gateway.config.bca.BcaApiModel$TransfersDomesticOpt$TransfersDomesticReq
com.welab.pay.gateway.config.bca.BcaApiModel$TransfersDomesticOpt +.. com.welab.pay.gateway.config.bca.BcaApiModel$TransfersDomesticOpt$TransfersDomesticRes
com.welab.pay.gateway.config.bca.BaseBcaHttpRes <|-- com.welab.pay.gateway.config.bca.BcaApiModel$TransfersDomesticOpt$TransfersDomesticRes
com.welab.pay.gateway.config.bca.BcaApiModel +.. com.welab.pay.gateway.config.bca.BcaApiModel$TransfersStatusOpt
com.welab.pay.gateway.config.bca.BcaApiModel$TransfersStatusOpt +.. com.welab.pay.gateway.config.bca.BcaApiModel$TransfersStatusOpt$TransfersStatusReq
com.welab.pay.gateway.config.bca.BcaApiModel$TransfersStatusOpt +.. com.welab.pay.gateway.config.bca.BcaApiModel$TransfersStatusOpt$TransfersStatusRes
com.welab.pay.gateway.config.bca.BaseBcaHttpRes <|-- com.welab.pay.gateway.config.bca.BcaApiModel$TransfersStatusOpt$TransfersStatusRes
com.welab.pay.gateway.config.bca.BcaApiModel +.. com.welab.pay.gateway.config.bca.BcaApiModel$GetBalanceOpt
com.welab.pay.gateway.config.bca.BcaApiModel$GetBalanceOpt +.. com.welab.pay.gateway.config.bca.BcaApiModel$GetBalanceOpt$BalanceRes
com.welab.pay.gateway.config.bca.BaseBcaHttpRes <|-- com.welab.pay.gateway.config.bca.BcaApiModel$GetBalanceOpt$BalanceRes
com.welab.pay.gateway.config.bca.BcaApiModel$GetBalanceOpt +.. com.welab.pay.gateway.config.bca.BcaApiModel$GetBalanceOpt$AccountDetailDataSuccess
com.welab.pay.gateway.config.bca.BcaApiModel$GetBalanceOpt +.. com.welab.pay.gateway.config.bca.BcaApiModel$GetBalanceOpt$AccountDetailDataFailed
com.welab.pay.gateway.config.bca.BcaResultMsg <|-- com.welab.pay.gateway.config.bca.BcaApiModel$GetBalanceOpt$AccountDetailDataFailed
com.welab.pay.gateway.vo.bca.VaBillsResVO +.. com.welab.pay.gateway.vo.bca.VaBillsResVO$DetailBill
com.welab.pay.gateway.config.astrapay.wallet.Authorization +.. com.welab.pay.gateway.config.astrapay.wallet.Authorization$Response
java.io.Serializable <|.. com.welab.pay.gateway.vo.AccessTokenVo
java.io.Serializable <|.. com.welab.pay.gateway.dto.mq.BaseMqDto
com.welab.pay.gateway.Account <|.. com.welab.pay.gateway.impl.permata.PermataAccountImpl
com.welab.pay.gateway.model.GatewayMqExample +.. com.welab.pay.gateway.model.GatewayMqExample$GeneratedCriteria
com.welab.pay.gateway.model.GatewayMqExample +.. com.welab.pay.gateway.model.GatewayMqExample$Criteria
com.welab.pay.gateway.model.GeneratedCriteria <|-- com.welab.pay.gateway.model.GatewayMqExample$Criteria
com.welab.pay.gateway.model.GatewayMqExample +.. com.welab.pay.gateway.model.GatewayMqExample$Criterion
com.welab.pay.gateway.error.Exception <|-- com.welab.pay.gateway.error.GatewayException
com.welab.pay.gateway.dto.BaseDto <|-- com.welab.pay.gateway.dto.TransferDto
com.welab.pay.gateway.core.authentication.AbstractAuthHandler <|-- com.welab.pay.gateway.core.authentication.AccessTokenAuthHandler
com.welab.pay.gateway.service.ValidatorService <|.. com.welab.pay.gateway.service.impl.ValidatorServiceImpl
com.welab.pay.gateway.service.InvoiceService <|.. com.welab.pay.gateway.service.impl.InvoiceServiceImpl
java.io.Serializable <|.. com.welab.pay.gateway.config.astrapay.PaymentRequestDto
com.welab.pay.gateway.model.GatewayVirtualAccountExample +.. com.welab.pay.gateway.model.GatewayVirtualAccountExample$GeneratedCriteria
com.welab.pay.gateway.model.GatewayVirtualAccountExample +.. com.welab.pay.gateway.model.GatewayVirtualAccountExample$Criteria
com.welab.pay.gateway.model.GeneratedCriteria <|-- com.welab.pay.gateway.model.GatewayVirtualAccountExample$Criteria
com.welab.pay.gateway.model.GatewayVirtualAccountExample +.. com.welab.pay.gateway.model.GatewayVirtualAccountExample$Criterion
com.welab.pay.gateway.impl.AbstractPayment <|-- com.welab.pay.gateway.impl.permata.PermataPayment
com.welab.pay.gateway.Validator <|.. com.welab.pay.gateway.impl.bni.BniValidator
org.springframework.test.context.junit4.AbstractJUnit4SpringContextTests <|-- com.welab.pay.gateway.test.BaseTest
com.welab.pay.gateway.model.GatewayRequestBackExample +.. com.welab.pay.gateway.model.GatewayRequestBackExample$GeneratedCriteria
com.welab.pay.gateway.model.GatewayRequestBackExample +.. com.welab.pay.gateway.model.GatewayRequestBackExample$Criteria
com.welab.pay.gateway.model.GeneratedCriteria <|-- com.welab.pay.gateway.model.GatewayRequestBackExample$Criteria
com.welab.pay.gateway.model.GatewayRequestBackExample +.. com.welab.pay.gateway.model.GatewayRequestBackExample$Criterion
com.welab.pay.gateway.vo.BaseVO <|-- com.welab.pay.gateway.vo.BankVO
java.io.Serializable <|.. com.welab.pay.gateway.dto.cmd.BNIDisbursementCmd
org.springframework.amqp.core.MessageListener <|.. com.welab.pay.gateway.mq.consumers.VaCreateOrUpdateConsumer
com.welab.pay.gateway.http.test.SimpleTest <|-- com.welab.pay.gateway.test.QueryTaskServiceImplTest
com.welab.pay.gateway.vo.BaseVO <|-- com.welab.pay.gateway.vo.BaseTaskVO
com.welab.pay.gateway.http.test.SimpleTest <|-- com.welab.pay.gateway.test.VATest
com.welab.pay.gateway.model.GatewayRequestBack <|-- com.welab.pay.gateway.model.GatewayRequestBackWithBLOBs
com.welab.sea.util.dto.Command <|-- com.welab.pay.gateway.dto.cmd.CreateVANumberCmd
com.welab.pay.gateway.VirtualAccount <|.. com.welab.pay.gateway.impl.permata.PermataVirtualAccountImpl
com.welab.pay.gateway.vo.BaseVO <|-- com.welab.pay.gateway.vo.InvoiceVO
com.welab.pay.gateway.vo.InvoiceVO +.. com.welab.pay.gateway.vo.InvoiceVO$AvailableBankVO
com.welab.pay.gateway.vo.Serializable <|.. com.welab.pay.gateway.vo.InvoiceVO$AvailableBankVO
com.welab.pay.gateway.vo.InvoiceVO +.. com.welab.pay.gateway.vo.InvoiceVO$AvailableRetailOutletVO
com.welab.pay.gateway.vo.Serializable <|.. com.welab.pay.gateway.vo.InvoiceVO$AvailableRetailOutletVO
com.welab.pay.gateway.dto.BaseDto <|-- com.welab.pay.gateway.dto.VirtualAccountDto
com.welab.pay.gateway.config.faspay.FaspayCallbackConfig +.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$BaseRequest
com.welab.pay.gateway.config.faspay.Serializable <|.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$BaseRequest
com.welab.pay.gateway.config.faspay.FaspayCallbackConfig +.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$BaseResponse
com.welab.pay.gateway.config.faspay.Serializable <|.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$BaseResponse
com.welab.pay.gateway.config.faspay.FaspayCallbackConfig +.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Inquiry
com.welab.pay.gateway.config.faspay.Serializable <|-- com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Inquiry
com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Inquiry +.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Inquiry$Request
com.welab.pay.gateway.config.faspay.BaseRequest <|-- com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Inquiry$Request
com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Inquiry +.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Inquiry$Response
com.welab.pay.gateway.config.faspay.BaseResponse <|-- com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Inquiry$Response
com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Inquiry +.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Inquiry$CallBack
com.welab.pay.gateway.config.faspay.Serializable <|.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Inquiry$CallBack
com.welab.pay.gateway.config.faspay.FaspayCallbackConfig +.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Payment
com.welab.pay.gateway.config.faspay.Serializable <|-- com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Payment
com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Payment +.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Payment$Request
com.welab.pay.gateway.config.faspay.BaseRequest <|-- com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Payment$Request
com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Payment +.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Payment$Response
com.welab.pay.gateway.config.faspay.BaseResponse <|-- com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Payment$Response
com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Payment +.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Payment$CallBack
com.welab.pay.gateway.config.faspay.Serializable <|.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$Payment$CallBack
com.welab.pay.gateway.config.faspay.FaspayCallbackConfig +.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$PaymentNotification
com.welab.pay.gateway.config.faspay.Serializable <|-- com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$PaymentNotification
com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$PaymentNotification +.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$PaymentNotification$Request
com.welab.pay.gateway.config.faspay.BaseRequest <|-- com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$PaymentNotification$Request
com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$PaymentNotification +.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$PaymentNotification$Response
com.welab.pay.gateway.config.faspay.BaseResponse <|-- com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$PaymentNotification$Response
com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$PaymentNotification +.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$PaymentNotification$CallBack
com.welab.pay.gateway.config.faspay.Serializable <|.. com.welab.pay.gateway.config.faspay.FaspayCallbackConfig$PaymentNotification$CallBack
com.welab.pay.gateway.core.authentication.AbstractAuthHandler <|-- com.welab.pay.gateway.core.authentication.BaseicAuthHandler
com.welab.sea.util.dto.Command <|-- com.welab.pay.gateway.dto.cmd.VirtualAccountAddCmd
com.welab.pay.gateway.dto.cmd.VirtualAccountAddCmd +.. com.welab.pay.gateway.dto.cmd.VirtualAccountAddCmd$CustomizeNotice
com.welab.pay.gateway.dto.cmd.Serializable <|.. com.welab.pay.gateway.dto.cmd.VirtualAccountAddCmd$CustomizeNotice
java.io.Serializable <|.. com.welab.pay.gateway.dto.BaseDto
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.pay.gateway.job.RetryVirtualAccountSynJob
com.welab.pay.gateway.model.GatewayAmountRecordExample +.. com.welab.pay.gateway.model.GatewayAmountRecordExample$GeneratedCriteria
com.welab.pay.gateway.model.GatewayAmountRecordExample +.. com.welab.pay.gateway.model.GatewayAmountRecordExample$Criteria
com.welab.pay.gateway.model.GeneratedCriteria <|-- com.welab.pay.gateway.model.GatewayAmountRecordExample$Criteria
com.welab.pay.gateway.model.GatewayAmountRecordExample +.. com.welab.pay.gateway.model.GatewayAmountRecordExample$Criterion
com.welab.pay.gateway.dto.mq.BaseMqDto <|-- com.welab.pay.gateway.dto.mq.VirtualAccountPaymentMqDto
java.io.Serializable <|.. com.welab.pay.gateway.dto.astrapay.AstraPayWalletProfileDTO
com.welab.pay.gateway.vo.BaseVO <|-- com.welab.pay.gateway.vo.TransferVO
com.welab.pay.gateway.vo.BaseVO <|-- com.welab.pay.gateway.vo.TaskVO
com.welab.pay.gateway.test.BaseTest <|-- com.welab.pay.gateway.test.PayServiceImplTest
com.welab.pay.gateway.service.ITaskService <|.. com.welab.pay.gateway.service.impl.TaskServiceImpl
com.welab.pay.gateway.http.test.SimpleTest <|-- com.welab.pay.gateway.http.test.BNIPaymentHttp12UtilsTest
com.welab.pay.gateway.dto.mq.BaseMqDto <|-- com.welab.pay.gateway.dto.mq.TransferCallbackDto
com.welab.pay.gateway.dto.BaseDto <|-- com.welab.pay.gateway.dto.QueryVirtualAccountDto
java.io.Serializable <|.. com.welab.pay.gateway.response.DisbursementStatusResponse
com.welab.pay.gateway.config.permata.PermataLoanConfig +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$WrapResponse
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$WrapResponse
com.welab.pay.gateway.config.permata.PermataLoanConfig +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$WrapRequest
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$WrapRequest
com.welab.pay.gateway.config.permata.PermataLoanConfig +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$Token
com.welab.pay.gateway.config.permata.Serializable <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$Token
com.welab.pay.gateway.config.permata.PermataLoanConfig$Token +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$Token$Request
com.welab.pay.gateway.config.permata.WrapRequest <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$Token$Request
com.welab.pay.gateway.config.permata.PermataLoanConfig$Token +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$Token$Response
com.welab.pay.gateway.config.permata.WrapResponse <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$Token$Response
com.welab.pay.gateway.config.permata.PermataLoanConfig +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo
com.welab.pay.gateway.config.permata.Serializable <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Request
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Request
com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Request +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Request$BalInqRq
com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Request$BalInqRq +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Request$BalInqRq$MsgRqHdr
com.welab.pay.gateway.config.permata.WrapRequest <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Request$BalInqRq$MsgRqHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Request$BalInqRq +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Request$BalInqRq$InqInfo
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Request$BalInqRq$InqInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Response
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Response
com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Response +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Response$BalInqRs
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Response$BalInqRs
com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Response$BalInqRs +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Response$BalInqRs$MsgRsHdr
com.welab.pay.gateway.config.permata.WrapResponse <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Response$BalInqRs$MsgRsHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Response$BalInqRs +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Response$BalInqRs$InqInfo
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BalanceInfo$Response$BalInqRs$InqInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo
com.welab.pay.gateway.config.permata.Serializable <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Request
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Request
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Request +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Request$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Request$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.WrapRequest <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Request$Obj$InqInfo
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Request$Obj$InqInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Response
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Response
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Response +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Response$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Response$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.WrapResponse <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Response$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Response$Obj$InqInfo
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountInfo$Response$Obj$InqInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer
com.welab.pay.gateway.config.permata.Serializable <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer
com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Request
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Request
com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Request +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Request$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Request$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.WrapRequest <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Request$Obj$XferInfo
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Request$Obj$XferInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Response
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Response
com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Response +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Response$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Response$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Response$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.WrapResponse <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$FundsTransfer$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo
com.welab.pay.gateway.config.permata.Serializable <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Request
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Request
com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Request +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Request$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Request$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.WrapRequest <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Request$Obj$XferInfo
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Request$Obj$XferInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Response
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Response
com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Response +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Response$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Response$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Response$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.WrapResponse <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Response$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Response$Obj$XferInfo
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$OnlineXferInfo$Response$Obj$XferInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer
com.welab.pay.gateway.config.permata.Serializable <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer
com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Request
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Request
com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Request +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Request$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Request$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.WrapRequest <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Request$Obj$XferInfo
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Request$Obj$XferInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Response
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Response
com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Response +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Response$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Response$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Response$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.WrapResponse <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$InterBankTransfer$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer
com.welab.pay.gateway.config.permata.Serializable <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer
com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Request
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Request
com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Request +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Request$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Request$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.WrapRequest <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Request$Obj$XferInfo
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Request$Obj$XferInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Response
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Response
com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Response +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Response$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Response$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Response$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.WrapResponse <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$LlgTransfer$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer
com.welab.pay.gateway.config.permata.Serializable <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer
com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Request
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Request
com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Request +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Request$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Request$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.WrapRequest <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Request$Obj$XferInfo
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Request$Obj$XferInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Response
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Response
com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Response +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Response$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Response$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Response$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.WrapResponse <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$RtgsTransfer$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo
com.welab.pay.gateway.config.permata.Serializable <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Request
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Request
com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Request +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Request$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Request$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.WrapRequest <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Request$Obj$BillInquiryInfo
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Request$Obj$BillInquiryInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Response
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Response
com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Response +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Response$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Response$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Response$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.WrapResponse <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$BillInfo$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment
com.welab.pay.gateway.config.permata.Serializable <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment
com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Request
com.welab.pay.gateway.config.permata.WrapRequest <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Request
com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Request +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Request$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Request$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.WrapRequest <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Request$Obj$BillPaymentInfo
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Request$Obj$BillPaymentInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Response
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Response
com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Response +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Response$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Response$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Response$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.WrapResponse <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$Payment$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement
com.welab.pay.gateway.config.permata.Serializable <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Request
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Request
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Request +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Request$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Request$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.WrapRequest <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Request$Obj$MsgRqHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Request$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Request$Obj$StatementInfo
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Request$Obj$StatementInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.WrapResponse <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj$MsgRsHdr
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj$StatementInfo
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj$StatementInfo
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj$DetailStatement
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj$DetailStatement
com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj$AcctStmtDtl
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$AccountStatement$Response$Obj$AcctStmtDtl
com.welab.pay.gateway.config.permata.PermataLoanConfig +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction
com.welab.pay.gateway.config.permata.Serializable <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction
com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction$Request
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction$Request
com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction$Request +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction$Request$Obj
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction$Request$Obj
com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction$Response
com.welab.pay.gateway.config.permata.Serializable <|.. com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction$Response
com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction$Response +.. com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction$Response$Obj
com.welab.pay.gateway.config.permata.WrapResponse <|-- com.welab.pay.gateway.config.permata.PermataLoanConfig$StatusTransaction$Response$Obj
com.welab.pay.gateway.service.QueryTaskService <|.. com.welab.pay.gateway.service.impl.QueryTaskServiceImpl
com.welab.pay.gateway.vo.BaseVO <|-- com.welab.pay.gateway.vo.BankAccountVO
java.io.Serializable <|.. com.welab.pay.gateway.response.AstraPayResponse
com.welab.pay.gateway.dto.mq.BaseMqDto <|-- com.welab.pay.gateway.dto.mq.MqRefundDto
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$CreateSubscription
com.welab.pay.gateway.config.SimulateConfig$CreateSubscription +.. com.welab.pay.gateway.config.SimulateConfig$CreateSubscription$Request
com.welab.pay.gateway.config.SimulateConfig$CreateSubscription +.. com.welab.pay.gateway.config.SimulateConfig$CreateSubscription$Callback
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$GetSubscription
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$CancelSubscription
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$CreateCharge
com.welab.pay.gateway.config.SimulateConfig$CreateCharge +.. com.welab.pay.gateway.config.SimulateConfig$CreateCharge$Request
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$CreateRefund
com.welab.pay.gateway.config.SimulateConfig$CreateRefund +.. com.welab.pay.gateway.config.SimulateConfig$CreateRefund$Request
com.welab.pay.gateway.config.SimulateConfig$CreateRefund +.. com.welab.pay.gateway.config.SimulateConfig$CreateRefund$Callback
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$AvailableVirtualAccountBanks
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$GetDisbursementById
com.welab.pay.gateway.config.SimulateConfig$GetDisbursementById +.. com.welab.pay.gateway.config.SimulateConfig$GetDisbursementById$Request
com.welab.pay.gateway.config.SimulateConfig$GetDisbursementById +.. com.welab.pay.gateway.config.SimulateConfig$GetDisbursementById$Response
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$CreateDisbursement
com.welab.pay.gateway.config.SimulateConfig$CreateDisbursement +.. com.welab.pay.gateway.config.SimulateConfig$CreateDisbursement$Request
com.welab.pay.gateway.config.SimulateConfig$CreateDisbursement +.. com.welab.pay.gateway.config.SimulateConfig$CreateDisbursement$Response
com.welab.pay.gateway.config.SimulateConfig$CreateDisbursement +.. com.welab.pay.gateway.config.SimulateConfig$CreateDisbursement$Callback
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$GetDisbursementByExternalId
com.welab.pay.gateway.config.SimulateConfig$GetDisbursementByExternalId +.. com.welab.pay.gateway.config.SimulateConfig$GetDisbursementByExternalId$Request
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$GetAvailableDisbursementBanks
com.welab.pay.gateway.config.SimulateConfig$GetAvailableDisbursementBanks +.. com.welab.pay.gateway.config.SimulateConfig$GetAvailableDisbursementBanks$Response
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$NameValidator
com.welab.pay.gateway.config.SimulateConfig$NameValidator +.. com.welab.pay.gateway.config.SimulateConfig$NameValidator$Request
com.welab.pay.gateway.config.SimulateConfig$NameValidator +.. com.welab.pay.gateway.config.SimulateConfig$NameValidator$Response
com.welab.pay.gateway.config.SimulateConfig$NameValidator +.. com.welab.pay.gateway.config.SimulateConfig$NameValidator$Callback
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$NPWPValidator
com.welab.pay.gateway.config.SimulateConfig$NPWPValidator +.. com.welab.pay.gateway.config.SimulateConfig$NPWPValidator$Request
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$CreateQuote
com.welab.pay.gateway.config.SimulateConfig$CreateQuote +.. com.welab.pay.gateway.config.SimulateConfig$CreateQuote$Request
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$GetBanksForVirtualAccounts
com.welab.pay.gateway.config.SimulateConfig$GetBanksForVirtualAccounts +.. com.welab.pay.gateway.config.SimulateConfig$GetBanksForVirtualAccounts$Response
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$CreateFixedVirtualAccounts
com.welab.pay.gateway.config.SimulateConfig$CreateFixedVirtualAccounts +.. com.welab.pay.gateway.config.SimulateConfig$CreateFixedVirtualAccounts$Request
com.welab.pay.gateway.config.SimulateConfig$CreateFixedVirtualAccounts +.. com.welab.pay.gateway.config.SimulateConfig$CreateFixedVirtualAccounts$Response
com.welab.pay.gateway.config.SimulateConfig$CreateFixedVirtualAccounts +.. com.welab.pay.gateway.config.SimulateConfig$CreateFixedVirtualAccounts$PaymentCallback
com.welab.pay.gateway.config.SimulateConfig$CreateFixedVirtualAccounts +.. com.welab.pay.gateway.config.SimulateConfig$CreateFixedVirtualAccounts$CreateUpdateCallback
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$UpdateFixedVirtualAccounts
com.welab.pay.gateway.config.SimulateConfig$UpdateFixedVirtualAccounts +.. com.welab.pay.gateway.config.SimulateConfig$UpdateFixedVirtualAccounts$Request
com.welab.pay.gateway.config.SimulateConfig$UpdateFixedVirtualAccounts$Request +.. com.welab.pay.gateway.config.SimulateConfig$UpdateFixedVirtualAccounts$Request$Optional
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$GetFixedVirtualAccount
com.welab.pay.gateway.config.SimulateConfig$GetFixedVirtualAccount +.. com.welab.pay.gateway.config.SimulateConfig$GetFixedVirtualAccount$Request
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$GetFixedVirtualAccountPayment
com.welab.pay.gateway.config.SimulateConfig$GetFixedVirtualAccountPayment +.. com.welab.pay.gateway.config.SimulateConfig$GetFixedVirtualAccountPayment$Request
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$CreateInvoice
com.welab.pay.gateway.config.SimulateConfig$CreateInvoice +.. com.welab.pay.gateway.config.SimulateConfig$CreateInvoice$Request
com.welab.pay.gateway.config.SimulateConfig$CreateInvoice +.. com.welab.pay.gateway.config.SimulateConfig$CreateInvoice$Response
com.welab.pay.gateway.config.SimulateConfig$CreateInvoice +.. com.welab.pay.gateway.config.SimulateConfig$CreateInvoice$AvailableBanks
com.welab.pay.gateway.config.SimulateConfig$CreateInvoice +.. com.welab.pay.gateway.config.SimulateConfig$CreateInvoice$AvailableRetailOutlets
com.welab.pay.gateway.config.SimulateConfig$CreateInvoice +.. com.welab.pay.gateway.config.SimulateConfig$CreateInvoice$Callback
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$GetInvoice
com.welab.pay.gateway.config.SimulateConfig$GetInvoice +.. com.welab.pay.gateway.config.SimulateConfig$GetInvoice$Request
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$ExpireInvoice
com.welab.pay.gateway.config.SimulateConfig$ExpireInvoice +.. com.welab.pay.gateway.config.SimulateConfig$ExpireInvoice$Request
com.welab.pay.gateway.config.SimulateConfig +.. com.welab.pay.gateway.config.SimulateConfig$GetBalance
com.welab.pay.gateway.config.SimulateConfig$GetBalance +.. com.welab.pay.gateway.config.SimulateConfig$GetBalance$Request
com.welab.pay.gateway.config.SimulateConfig$GetBalance +.. com.welab.pay.gateway.config.SimulateConfig$GetBalance$Response
com.welab.pay.gateway.Invoice <|.. com.welab.pay.gateway.impl.bni.BniInvoiceImpl
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.pay.gateway.job.EmergencyJob
com.welab.pay.gateway.http.OkHttpsUtils +.. com.welab.pay.gateway.http.OkHttpsUtils$MyTrustManager
com.welab.pay.gateway.http.X509TrustManager <|.. com.welab.pay.gateway.http.OkHttpsUtils$MyTrustManager
com.welab.pay.gateway.http.OkHttpsUtils +.. com.welab.pay.gateway.http.OkHttpsUtils$TrustAllHostnameVerifier
com.welab.pay.gateway.http.HostnameVerifier <|.. com.welab.pay.gateway.http.OkHttpsUtils$TrustAllHostnameVerifier
com.welab.pay.gateway.model.GatewayRequest <|-- com.welab.pay.gateway.model.GatewayRequestWithBLOBs
com.welab.pay.gateway.test.BaseTest <|-- com.welab.pay.gateway.test.MqServiceTest
com.welab.pay.gateway.Validator <|.. com.welab.pay.gateway.impl.permata.PermataValidator
org.springframework.context.ApplicationContextAware <|.. com.welab.pay.gateway.utils.SpringBeanUtil
org.springframework.web.servlet.handler.HandlerInterceptorAdapter <|-- com.welab.pay.gateway.interceptor.ThirdpartyAuthenticationInterceptor
org.springframework.amqp.core.MessageListener <|.. com.welab.pay.gateway.mq.consumers.VirtualAccountConsumer
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.pay.gateway.job.RepairPaymentJob
com.welab.pay.gateway.test.BaseTest <|-- com.welab.pay.gateway.test.InvoiceServiceTest
com.welab.pay.gateway.dto.BaseDto <|-- com.welab.pay.gateway.dto.UpdateVirtualAccountDto
com.welab.pay.gateway.service.GatewayRepaymentOrderService <|.. com.welab.pay.gateway.app.impl.GatewayRepaymentOrderServiceImpl
com.welab.sea.util.dto.Command <|-- com.welab.pay.gateway.dto.cmd.VirtualAccountUpdateCmd
java.io.Serializable <|.. com.welab.pay.gateway.config.bni.BNIAuthenticateConfig
com.welab.pay.gateway.Account <|.. com.welab.pay.gateway.impl.simulate.SimulateAccountImpl
com.welab.pay.gateway.dto.BaseDto <|-- com.welab.pay.gateway.config.astrapay.PaymentResponseDto
com.welab.pay.gateway.service.AccountService <|.. com.welab.pay.gateway.service.impl.AccountServiceImpl
com.welab.pay.gateway.http.BNIHttpUtils +.. com.welab.pay.gateway.http.BNIHttpUtils$WrapData
@enduml