@startuml
class com.welab.merchant.model.MerchantProductSettingsExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> MerchantProductSettingsExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.merchant.model.MerchantProductSettingsExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andMerchantCodeIsNull()
+ Criteria andMerchantCodeIsNotNull()
+ Criteria andMerchantCodeEqualTo(String)
+ Criteria andMerchantCodeNotEqualTo(String)
+ Criteria andMerchantCodeGreaterThan(String)
+ Criteria andMerchantCodeGreaterThanOrEqualTo(String)
+ Criteria andMerchantCodeLessThan(String)
+ Criteria andMerchantCodeLessThanOrEqualTo(String)
+ Criteria andMerchantCodeLike(String)
+ Criteria andMerchantCodeNotLike(String)
+ Criteria andMerchantCodeIn(List<String>)
+ Criteria andMerchantCodeNotIn(List<String>)
+ Criteria andMerchantCodeBetween(String,String)
+ Criteria andMerchantCodeNotBetween(String,String)
+ Criteria andProductCodeIsNull()
+ Criteria andProductCodeIsNotNull()
+ Criteria andProductCodeEqualTo(String)
+ Criteria andProductCodeNotEqualTo(String)
+ Criteria andProductCodeGreaterThan(String)
+ Criteria andProductCodeGreaterThanOrEqualTo(String)
+ Criteria andProductCodeLessThan(String)
+ Criteria andProductCodeLessThanOrEqualTo(String)
+ Criteria andProductCodeLike(String)
+ Criteria andProductCodeNotLike(String)
+ Criteria andProductCodeIn(List<String>)
+ Criteria andProductCodeNotIn(List<String>)
+ Criteria andProductCodeBetween(String,String)
+ Criteria andProductCodeNotBetween(String,String)
+ Criteria andAcquirerNameIsNull()
+ Criteria andAcquirerNameIsNotNull()
+ Criteria andAcquirerNameEqualTo(String)
+ Criteria andAcquirerNameNotEqualTo(String)
+ Criteria andAcquirerNameGreaterThan(String)
+ Criteria andAcquirerNameGreaterThanOrEqualTo(String)
+ Criteria andAcquirerNameLessThan(String)
+ Criteria andAcquirerNameLessThanOrEqualTo(String)
+ Criteria andAcquirerNameLike(String)
+ Criteria andAcquirerNameNotLike(String)
+ Criteria andAcquirerNameIn(List<String>)
+ Criteria andAcquirerNameNotIn(List<String>)
+ Criteria andAcquirerNameBetween(String,String)
+ Criteria andAcquirerNameNotBetween(String,String)
+ Criteria andMaxLoanNewIsNull()
+ Criteria andMaxLoanNewIsNotNull()
+ Criteria andMaxLoanNewEqualTo(Long)
+ Criteria andMaxLoanNewNotEqualTo(Long)
+ Criteria andMaxLoanNewGreaterThan(Long)
+ Criteria andMaxLoanNewGreaterThanOrEqualTo(Long)
+ Criteria andMaxLoanNewLessThan(Long)
+ Criteria andMaxLoanNewLessThanOrEqualTo(Long)
+ Criteria andMaxLoanNewIn(List<Long>)
+ Criteria andMaxLoanNewNotIn(List<Long>)
+ Criteria andMaxLoanNewBetween(Long,Long)
+ Criteria andMaxLoanNewNotBetween(Long,Long)
+ Criteria andMaxLoanRoIsNull()
+ Criteria andMaxLoanRoIsNotNull()
+ Criteria andMaxLoanRoEqualTo(Long)
+ Criteria andMaxLoanRoNotEqualTo(Long)
+ Criteria andMaxLoanRoGreaterThan(Long)
+ Criteria andMaxLoanRoGreaterThanOrEqualTo(Long)
+ Criteria andMaxLoanRoLessThan(Long)
+ Criteria andMaxLoanRoLessThanOrEqualTo(Long)
+ Criteria andMaxLoanRoIn(List<Long>)
+ Criteria andMaxLoanRoNotIn(List<Long>)
+ Criteria andMaxLoanRoBetween(Long,Long)
+ Criteria andMaxLoanRoNotBetween(Long,Long)
+ Criteria andMaxLoanRoDpdIsNull()
+ Criteria andMaxLoanRoDpdIsNotNull()
+ Criteria andMaxLoanRoDpdEqualTo(Long)
+ Criteria andMaxLoanRoDpdNotEqualTo(Long)
+ Criteria andMaxLoanRoDpdGreaterThan(Long)
+ Criteria andMaxLoanRoDpdGreaterThanOrEqualTo(Long)
+ Criteria andMaxLoanRoDpdLessThan(Long)
+ Criteria andMaxLoanRoDpdLessThanOrEqualTo(Long)
+ Criteria andMaxLoanRoDpdIn(List<Long>)
+ Criteria andMaxLoanRoDpdNotIn(List<Long>)
+ Criteria andMaxLoanRoDpdBetween(Long,Long)
+ Criteria andMaxLoanRoDpdNotBetween(Long,Long)
+ Criteria andOperationPersonIsNull()
+ Criteria andOperationPersonIsNotNull()
+ Criteria andOperationPersonEqualTo(String)
+ Criteria andOperationPersonNotEqualTo(String)
+ Criteria andOperationPersonGreaterThan(String)
+ Criteria andOperationPersonGreaterThanOrEqualTo(String)
+ Criteria andOperationPersonLessThan(String)
+ Criteria andOperationPersonLessThanOrEqualTo(String)
+ Criteria andOperationPersonLike(String)
+ Criteria andOperationPersonNotLike(String)
+ Criteria andOperationPersonIn(List<String>)
+ Criteria andOperationPersonNotIn(List<String>)
+ Criteria andOperationPersonBetween(String,String)
+ Criteria andOperationPersonNotBetween(String,String)
+ Criteria andIsDeleteIsNull()
+ Criteria andIsDeleteIsNotNull()
+ Criteria andIsDeleteEqualTo(Boolean)
+ Criteria andIsDeleteNotEqualTo(Boolean)
+ Criteria andIsDeleteGreaterThan(Boolean)
+ Criteria andIsDeleteGreaterThanOrEqualTo(Boolean)
+ Criteria andIsDeleteLessThan(Boolean)
+ Criteria andIsDeleteLessThanOrEqualTo(Boolean)
+ Criteria andIsDeleteIn(List<Boolean>)
+ Criteria andIsDeleteNotIn(List<Boolean>)
+ Criteria andIsDeleteBetween(Boolean,Boolean)
+ Criteria andIsDeleteNotBetween(Boolean,Boolean)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.merchant.model.MerchantProductSettingsExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.merchant.model.MerchantProductSettingsExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.merchant.controller.PartnerController {
- BasePartnerService basePartnerService
+ Response<PageInfo<PartnerInfoVO>> getPartner(PartnerDto)
+ Response getPartnerSelection()
+ Response changeStatus(PartnerStatusDto)
+ Response getPartnerConfig(Long)
+ Response savePartnerConfig(PartnerLimitConfigDto)
+ Response<PartnerEmailConfigVO> getEmailPartnerConfig(Long)
+ Response saveEmailPartnerConfig(PartnerEmailConfigDto)
+ Response getBankPartnerConfig(Long)
+ Response saveBankPartnerConfig(PartnerBankConfigDto)
+ void downloadPartnerExcel(PartnerDto,HttpServletResponse)
+ Response<Boolean> partnerBankConfig(String)
+ Response savePartnerLogoConfig(PartnerLogoConfigDto)
}
class com.welab.merchant.vo.ProductExcelVO {
- String merchantCode
- String productName
- String productCode
- Long maxLoanNew
- Long maxLoanRo
- Long maxLoanRoDpd
- String installment
- String description
}
interface com.welab.merchant.mapper.ext.MerchantInfoExtMapper {
~ List<MerchantInfo> findByChannelAndBankCodeNotNull(String)
}
class com.welab.merchant.app.base.BasePartnerService {
- PartnerLimitConfigMapper partnerLimitConfigMapper
- PartnerInfoMapper partnerInfoMapper
- CreditTagConfigServiceFacade creditTagConfigServiceFacade
- PartnerInfoExtMapper partnerInfoExtMapper
- BaseMerchantService baseMerchantService
+ PageInfo<PartnerInfoVO> getPartner(PartnerDto)
+ List<PartnerInfoVO> getPartnerList(PartnerDto)
+ void changeStatus(PartnerStatusDto)
+ List<PartnerInfoVO> getPartnerSelection()
+ List<PartnerLimitConfigVO> getPartnerLimitConfig(Long)
+ void savePartnerLimitConfig(PartnerLimitConfigDto)
- List<PartnerLimitConfigVO> buildPartnerLimitConfigVO(List<PartnerLimitConfig>)
- void initTag(Long)
- List<PartnerInfoVO> buildPartnerInfoVO(List<PartnerInfo>)
+ PartnerInfo findByChannel(String)
+ PartnerLimitConfig findByCPartnerIdAndTag(Long,String)
+ Integer savePartnerInfo(PartnerInfo)
+ PartnerEmailConfigVO getPartnerEmailConfig(Long)
- PartnerEmailConfigVO buildPartnerEmailConfigVO(PartnerInfo)
+ int savePartnerEmailConfig(PartnerEmailConfigDto)
+ List<PartnerToMerchantVO> queryPartnerToMerchant(List<String>)
+ OfficialNameVO findOfficialNameByMerchant(String)
+ int saveBankEmailConfig(PartnerBankConfigDto)
+ QueryPartnerBankDTO getPartnerBankInfo(String)
+ HttpServletResponse downloadPartnerExcel(PartnerDto,HttpServletResponse)
- List<PartnerInfoDownloadVO> buildPartnerInfoDownloadVO(List<PartnerInfoVO>)
+ Boolean isPartnerBank(String)
+ PartnerBankConfigVO getPartnerBankConfig(Long)
- PartnerBankConfigVO buildPartnerBankConfigVO(PartnerInfo)
- LinkedHashMap<String,String> excelHead()
+ PartnerInfo checkPartnerBank(String)
+ void savePartnerLogoConfig(PartnerLogoConfigDto)
+ List<PartnerInfo> findAll()
}
class com.welab.merchant.vo.MerchantExcelVO {
- String merchantName
- String merchantCode
- String merchantChannel
- String merchantAddress
- String merchantPhoneNumber
- String bankCode
- String bankAccount
- String mdr
- String tax
- Integer signatureType
- String description
}
interface com.welab.merchant.mapper.PartnerLimitConfigMapper {
~ long countByExample(PartnerLimitConfigExample)
~ int deleteByExample(PartnerLimitConfigExample)
~ int deleteByPrimaryKey(Long)
~ int insert(PartnerLimitConfig)
~ int insertSelective(PartnerLimitConfig)
~ List<PartnerLimitConfig> selectByExample(PartnerLimitConfigExample)
~ PartnerLimitConfig selectByPrimaryKey(Long)
~ int updateByExampleSelective(PartnerLimitConfig,PartnerLimitConfigExample)
~ int updateByExample(PartnerLimitConfig,PartnerLimitConfigExample)
~ int updateByPrimaryKeySelective(PartnerLimitConfig)
~ int updateByPrimaryKey(PartnerLimitConfig)
~ int updateBatch(List<TagLimit>,Long)
~ List<String> findTagList(Long)
}
class com.welab.merchant.Application {
- {static} Logger LOG
+ FilterRegistrationBean httpServletRequestReplacedFilter()
+ {static} void main(String[])
}
class com.welab.merchant.vo.dto.MerchantInfoDto {
- Long id
- String merchantName
- String merchantCode
- String merchantChannel
- Integer signatureType
- String description
- String logo
- BigDecimal mdr
- BigDecimal tax
- String bankCode
- String bankAccount
- String address
- String mobile
- String merchantCategory
- Boolean isDelete
- Boolean hasBlackList
}
class com.welab.merchant.vo.dto.PartnerEmailConfigDto {
- Long partnerId
- List<String> toUserMails
- List<String> ccUserMails
- List<String> bccUserMails
- List<String> repayToUserMails
- List<String> repayCcUserMails
- List<String> repayBccUserMails
}
class com.welab.merchant.facade.user.UserServiceFacade {
- UserService userService
+ UserInfoDTO getUserInfoByUserId(Long)
}
class com.welab.merchant.filter.LogFilter {
- {static} Logger LOGGER
- {static} String NOTIFICATION_PREFIX
- {static} String REQUEST_PREFIX
- {static} String RESPONSE_PREFIX
- AtomicLong _id
# void doFilterInternal(HttpServletRequest,HttpServletResponse,FilterChain)
+ void destroy()
- void log(StringBuilder)
- StringBuilder prefixId(StringBuilder,long)
- void printRequestLine(StringBuilder,String,long,String,String)
- void printResponseLine(StringBuilder,String,long,int)
- void printPrefixedHeaders(StringBuilder,long,String,HttpServletRequest)
}
class com.welab.merchant.facade.application.LoanCreditOrderServiceFacade {
- LoanCreditOrderService loanCreditOrderService
+ int unFinishedCount(LoanCreditOrderQry)
}
enum com.welab.merchant.enums.BankConfigurationEnum {
+  SETTLEMENT_TO_PARTNER
+  SETTLEMENT_TO_MERCHANT
- Byte value
- String desc
+ {static} String getBankConfigurationEnumDesc(Byte)
}
enum com.welab.merchant.enums.PartnerStatusEnum {
+  ABLE
+  ENABLE
- Byte key
}
class com.welab.merchant.model.MerchantProductInfo {
- Long id
- String merchantCode
- String productName
- String productCode
- Long maxActiveLoan
- Long maxLoanNew
- Long maxLoanRo
- Long maxLoanRoDpd
- String description
- Date createdAt
- Date updatedAt
- Boolean isDelete
- Byte installment
+ Long getId()
+ void setId(Long)
+ String getMerchantCode()
+ void setMerchantCode(String)
+ String getProductName()
+ void setProductName(String)
+ String getProductCode()
+ void setProductCode(String)
+ Long getMaxActiveLoan()
+ void setMaxActiveLoan(Long)
+ Long getMaxLoanNew()
+ void setMaxLoanNew(Long)
+ Long getMaxLoanRo()
+ void setMaxLoanRo(Long)
+ Long getMaxLoanRoDpd()
+ void setMaxLoanRoDpd(Long)
+ String getDescription()
+ void setDescription(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ Boolean getIsDelete()
+ void setIsDelete(Boolean)
+ Byte getInstallment()
+ void setInstallment(Byte)
}
class com.welab.merchant.vo.dto.ProductExcelDto {
- List<String> errRow
- Integer successCount
}
class com.welab.merchant.controller.ConfigController {
- BaseMerchantService baseMerchantService
+ Response getLoansListByLoansDto()
}
class com.welab.merchant.model.PartnerLimitConfig {
- Long id
- Long partnerId
- String tag
- Long maxLimit
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ Long getPartnerId()
+ void setPartnerId(Long)
+ String getTag()
+ void setTag(String)
+ Long getMaxLimit()
+ void setMaxLimit(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.merchant.vo.PartnerInfoDownloadVO {
- String partner
- String status
- String bankConfiguration
- String bankCode
- String bankAccount
}
class com.welab.merchant.app.command.MerchantUserLimitInfoQryExe {
- CreditTagConfigServiceFacade creditTagConfigServiceFacade
- LoanQueryServiceFacade loanQueryServiceFacade
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- BasePartnerService basePartnerService
+ MerchantUserLimitInfoDTO getMerchantUserLimitInfo(MerchantUserLimitInfoQry)
}
class com.welab.merchant.vo.MerchantInfoDownloadVo {
- Long id
- String merchantName
- String merchantCode
- String merchantChannel
- Integer signatureType
- String description
- String logo
- Double mdr
- Double tax
- String bankCode
- String bankAccount
- String address
- String mobile
- String merchantCategory
- Boolean isDelete
- Boolean hasBlackList
- Date createdAt
- Date updatedAt
}
class com.welab.merchant.dto.CheckDto {
- String merchantCode
- String merchantProductCode
- Long userId
}
class com.welab.merchant.model.MerchantProductInfoExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> MerchantProductInfoExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.merchant.model.MerchantProductInfoExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andMerchantCodeIsNull()
+ Criteria andMerchantCodeIsNotNull()
+ Criteria andMerchantCodeEqualTo(String)
+ Criteria andMerchantCodeNotEqualTo(String)
+ Criteria andMerchantCodeGreaterThan(String)
+ Criteria andMerchantCodeGreaterThanOrEqualTo(String)
+ Criteria andMerchantCodeLessThan(String)
+ Criteria andMerchantCodeLessThanOrEqualTo(String)
+ Criteria andMerchantCodeLike(String)
+ Criteria andMerchantCodeNotLike(String)
+ Criteria andMerchantCodeIn(List<String>)
+ Criteria andMerchantCodeNotIn(List<String>)
+ Criteria andMerchantCodeBetween(String,String)
+ Criteria andMerchantCodeNotBetween(String,String)
+ Criteria andProductNameIsNull()
+ Criteria andProductNameIsNotNull()
+ Criteria andProductNameEqualTo(String)
+ Criteria andProductNameNotEqualTo(String)
+ Criteria andProductNameGreaterThan(String)
+ Criteria andProductNameGreaterThanOrEqualTo(String)
+ Criteria andProductNameLessThan(String)
+ Criteria andProductNameLessThanOrEqualTo(String)
+ Criteria andProductNameLike(String)
+ Criteria andProductNameNotLike(String)
+ Criteria andProductNameIn(List<String>)
+ Criteria andProductNameNotIn(List<String>)
+ Criteria andProductNameBetween(String,String)
+ Criteria andProductNameNotBetween(String,String)
+ Criteria andProductCodeIsNull()
+ Criteria andProductCodeIsNotNull()
+ Criteria andProductCodeEqualTo(String)
+ Criteria andProductCodeNotEqualTo(String)
+ Criteria andProductCodeGreaterThan(String)
+ Criteria andProductCodeGreaterThanOrEqualTo(String)
+ Criteria andProductCodeLessThan(String)
+ Criteria andProductCodeLessThanOrEqualTo(String)
+ Criteria andProductCodeLike(String)
+ Criteria andProductCodeNotLike(String)
+ Criteria andProductCodeIn(List<String>)
+ Criteria andProductCodeNotIn(List<String>)
+ Criteria andProductCodeBetween(String,String)
+ Criteria andProductCodeNotBetween(String,String)
+ Criteria andMaxLoanNewIsNull()
+ Criteria andMaxLoanNewIsNotNull()
+ Criteria andMaxLoanNewEqualTo(Long)
+ Criteria andMaxLoanNewNotEqualTo(Long)
+ Criteria andMaxLoanNewGreaterThan(Long)
+ Criteria andMaxLoanNewGreaterThanOrEqualTo(Long)
+ Criteria andMaxLoanNewLessThan(Long)
+ Criteria andMaxLoanNewLessThanOrEqualTo(Long)
+ Criteria andMaxLoanNewIn(List<Long>)
+ Criteria andMaxLoanNewNotIn(List<Long>)
+ Criteria andMaxLoanNewBetween(Long,Long)
+ Criteria andMaxLoanNewNotBetween(Long,Long)
+ Criteria andMaxLoanRoIsNull()
+ Criteria andMaxLoanRoIsNotNull()
+ Criteria andMaxLoanRoEqualTo(Long)
+ Criteria andMaxLoanRoNotEqualTo(Long)
+ Criteria andMaxLoanRoGreaterThan(Long)
+ Criteria andMaxLoanRoGreaterThanOrEqualTo(Long)
+ Criteria andMaxLoanRoLessThan(Long)
+ Criteria andMaxLoanRoLessThanOrEqualTo(Long)
+ Criteria andMaxLoanRoIn(List<Long>)
+ Criteria andMaxLoanRoNotIn(List<Long>)
+ Criteria andMaxLoanRoBetween(Long,Long)
+ Criteria andMaxLoanRoNotBetween(Long,Long)
+ Criteria andMaxLoanRoDpdIsNull()
+ Criteria andMaxLoanRoDpdIsNotNull()
+ Criteria andMaxLoanRoDpdEqualTo(Long)
+ Criteria andMaxLoanRoDpdNotEqualTo(Long)
+ Criteria andMaxLoanRoDpdGreaterThan(Long)
+ Criteria andMaxLoanRoDpdGreaterThanOrEqualTo(Long)
+ Criteria andMaxLoanRoDpdLessThan(Long)
+ Criteria andMaxLoanRoDpdLessThanOrEqualTo(Long)
+ Criteria andMaxLoanRoDpdIn(List<Long>)
+ Criteria andMaxLoanRoDpdNotIn(List<Long>)
+ Criteria andMaxLoanRoDpdBetween(Long,Long)
+ Criteria andMaxLoanRoDpdNotBetween(Long,Long)
+ Criteria andMaxActiveLoanIsNull()
+ Criteria andMaxActiveLoanIsNotNull()
+ Criteria andMaxActiveLoanEqualTo(Long)
+ Criteria andMaxActiveLoanNotEqualTo(Long)
+ Criteria andMaxActiveLoanGreaterThan(Long)
+ Criteria andMaxActiveLoanGreaterThanOrEqualTo(Long)
+ Criteria andMaxActiveLoanLessThan(Long)
+ Criteria andMaxActiveLoanLessThanOrEqualTo(Long)
+ Criteria andMaxActiveLoanIn(List<Long>)
+ Criteria andMaxActiveLoanNotIn(List<Long>)
+ Criteria andMaxActiveLoanBetween(Long,Long)
+ Criteria andMaxActiveLoanNotBetween(Long,Long)
+ Criteria andDescriptionIsNull()
+ Criteria andDescriptionIsNotNull()
+ Criteria andDescriptionEqualTo(String)
+ Criteria andDescriptionNotEqualTo(String)
+ Criteria andDescriptionGreaterThan(String)
+ Criteria andDescriptionGreaterThanOrEqualTo(String)
+ Criteria andDescriptionLessThan(String)
+ Criteria andDescriptionLessThanOrEqualTo(String)
+ Criteria andDescriptionLike(String)
+ Criteria andDescriptionNotLike(String)
+ Criteria andDescriptionIn(List<String>)
+ Criteria andDescriptionNotIn(List<String>)
+ Criteria andDescriptionBetween(String,String)
+ Criteria andDescriptionNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
+ Criteria andIsDeleteIsNull()
+ Criteria andIsDeleteIsNotNull()
+ Criteria andIsDeleteEqualTo(Boolean)
+ Criteria andIsDeleteNotEqualTo(Boolean)
+ Criteria andIsDeleteGreaterThan(Boolean)
+ Criteria andIsDeleteGreaterThanOrEqualTo(Boolean)
+ Criteria andIsDeleteLessThan(Boolean)
+ Criteria andIsDeleteLessThanOrEqualTo(Boolean)
+ Criteria andIsDeleteIn(List<Boolean>)
+ Criteria andIsDeleteNotIn(List<Boolean>)
+ Criteria andIsDeleteBetween(Boolean,Boolean)
+ Criteria andIsDeleteNotBetween(Boolean,Boolean)
+ Criteria andInstallmentIsNull()
+ Criteria andInstallmentIsNotNull()
+ Criteria andInstallmentEqualTo(Byte)
+ Criteria andInstallmentNotEqualTo(Byte)
+ Criteria andInstallmentGreaterThan(Byte)
+ Criteria andInstallmentGreaterThanOrEqualTo(Byte)
+ Criteria andInstallmentLessThan(Byte)
+ Criteria andInstallmentLessThanOrEqualTo(Byte)
+ Criteria andInstallmentIn(List<Byte>)
+ Criteria andInstallmentNotIn(List<Byte>)
+ Criteria andInstallmentBetween(Byte,Byte)
+ Criteria andInstallmentNotBetween(Byte,Byte)
}
class com.welab.merchant.model.MerchantProductInfoExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.merchant.model.MerchantProductInfoExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.merchant.model.PartnerInfoExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> PartnerInfoExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.merchant.model.PartnerInfoExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andPartnerIsNull()
+ Criteria andPartnerIsNotNull()
+ Criteria andPartnerEqualTo(String)
+ Criteria andPartnerNotEqualTo(String)
+ Criteria andPartnerGreaterThan(String)
+ Criteria andPartnerGreaterThanOrEqualTo(String)
+ Criteria andPartnerLessThan(String)
+ Criteria andPartnerLessThanOrEqualTo(String)
+ Criteria andPartnerLike(String)
+ Criteria andPartnerNotLike(String)
+ Criteria andPartnerIn(List<String>)
+ Criteria andPartnerNotIn(List<String>)
+ Criteria andPartnerBetween(String,String)
+ Criteria andPartnerNotBetween(String,String)
+ Criteria andStatusIsNull()
+ Criteria andStatusIsNotNull()
+ Criteria andStatusEqualTo(Byte)
+ Criteria andStatusNotEqualTo(Byte)
+ Criteria andStatusGreaterThan(Byte)
+ Criteria andStatusGreaterThanOrEqualTo(Byte)
+ Criteria andStatusLessThan(Byte)
+ Criteria andStatusLessThanOrEqualTo(Byte)
+ Criteria andStatusIn(List<Byte>)
+ Criteria andStatusNotIn(List<Byte>)
+ Criteria andStatusBetween(Byte,Byte)
+ Criteria andStatusNotBetween(Byte,Byte)
+ Criteria andChannelIsNull()
+ Criteria andChannelIsNotNull()
+ Criteria andChannelEqualTo(String)
+ Criteria andChannelNotEqualTo(String)
+ Criteria andChannelGreaterThan(String)
+ Criteria andChannelGreaterThanOrEqualTo(String)
+ Criteria andChannelLessThan(String)
+ Criteria andChannelLessThanOrEqualTo(String)
+ Criteria andChannelLike(String)
+ Criteria andChannelNotLike(String)
+ Criteria andChannelIn(List<String>)
+ Criteria andChannelNotIn(List<String>)
+ Criteria andChannelBetween(String,String)
+ Criteria andChannelNotBetween(String,String)
+ Criteria andToUserMailsIsNull()
+ Criteria andToUserMailsIsNotNull()
+ Criteria andToUserMailsEqualTo(String)
+ Criteria andToUserMailsNotEqualTo(String)
+ Criteria andToUserMailsGreaterThan(String)
+ Criteria andToUserMailsGreaterThanOrEqualTo(String)
+ Criteria andToUserMailsLessThan(String)
+ Criteria andToUserMailsLessThanOrEqualTo(String)
+ Criteria andToUserMailsLike(String)
+ Criteria andToUserMailsNotLike(String)
+ Criteria andToUserMailsIn(List<String>)
+ Criteria andToUserMailsNotIn(List<String>)
+ Criteria andToUserMailsBetween(String,String)
+ Criteria andToUserMailsNotBetween(String,String)
+ Criteria andCcUserMailsIsNull()
+ Criteria andCcUserMailsIsNotNull()
+ Criteria andCcUserMailsEqualTo(String)
+ Criteria andCcUserMailsNotEqualTo(String)
+ Criteria andCcUserMailsGreaterThan(String)
+ Criteria andCcUserMailsGreaterThanOrEqualTo(String)
+ Criteria andCcUserMailsLessThan(String)
+ Criteria andCcUserMailsLessThanOrEqualTo(String)
+ Criteria andCcUserMailsLike(String)
+ Criteria andCcUserMailsNotLike(String)
+ Criteria andCcUserMailsIn(List<String>)
+ Criteria andCcUserMailsNotIn(List<String>)
+ Criteria andCcUserMailsBetween(String,String)
+ Criteria andCcUserMailsNotBetween(String,String)
+ Criteria andBccUserMailsIsNull()
+ Criteria andBccUserMailsIsNotNull()
+ Criteria andBccUserMailsEqualTo(String)
+ Criteria andBccUserMailsNotEqualTo(String)
+ Criteria andBccUserMailsGreaterThan(String)
+ Criteria andBccUserMailsGreaterThanOrEqualTo(String)
+ Criteria andBccUserMailsLessThan(String)
+ Criteria andBccUserMailsLessThanOrEqualTo(String)
+ Criteria andBccUserMailsLike(String)
+ Criteria andBccUserMailsNotLike(String)
+ Criteria andBccUserMailsIn(List<String>)
+ Criteria andBccUserMailsNotIn(List<String>)
+ Criteria andBccUserMailsBetween(String,String)
+ Criteria andBccUserMailsNotBetween(String,String)
+ Criteria andRepaymentToUserMailsIsNull()
+ Criteria andRepaymentToUserMailsIsNotNull()
+ Criteria andRepaymentToUserMailsEqualTo(String)
+ Criteria andRepaymentToUserMailsNotEqualTo(String)
+ Criteria andRepaymentToUserMailsGreaterThan(String)
+ Criteria andRepaymentToUserMailsGreaterThanOrEqualTo(String)
+ Criteria andRepaymentToUserMailsLessThan(String)
+ Criteria andRepaymentToUserMailsLessThanOrEqualTo(String)
+ Criteria andRepaymentToUserMailsLike(String)
+ Criteria andRepaymentToUserMailsNotLike(String)
+ Criteria andRepaymentToUserMailsIn(List<String>)
+ Criteria andRepaymentToUserMailsNotIn(List<String>)
+ Criteria andRepaymentToUserMailsBetween(String,String)
+ Criteria andRepaymentToUserMailsNotBetween(String,String)
+ Criteria andRepaymentCcUserMailsIsNull()
+ Criteria andRepaymentCcUserMailsIsNotNull()
+ Criteria andRepaymentCcUserMailsEqualTo(String)
+ Criteria andRepaymentCcUserMailsNotEqualTo(String)
+ Criteria andRepaymentCcUserMailsGreaterThan(String)
+ Criteria andRepaymentCcUserMailsGreaterThanOrEqualTo(String)
+ Criteria andRepaymentCcUserMailsLessThan(String)
+ Criteria andRepaymentCcUserMailsLessThanOrEqualTo(String)
+ Criteria andRepaymentCcUserMailsLike(String)
+ Criteria andRepaymentCcUserMailsNotLike(String)
+ Criteria andRepaymentCcUserMailsIn(List<String>)
+ Criteria andRepaymentCcUserMailsNotIn(List<String>)
+ Criteria andRepaymentCcUserMailsBetween(String,String)
+ Criteria andRepaymentCcUserMailsNotBetween(String,String)
+ Criteria andRepaymentBccUserMailsIsNull()
+ Criteria andRepaymentBccUserMailsIsNotNull()
+ Criteria andRepaymentBccUserMailsEqualTo(String)
+ Criteria andRepaymentBccUserMailsNotEqualTo(String)
+ Criteria andRepaymentBccUserMailsGreaterThan(String)
+ Criteria andRepaymentBccUserMailsGreaterThanOrEqualTo(String)
+ Criteria andRepaymentBccUserMailsLessThan(String)
+ Criteria andRepaymentBccUserMailsLessThanOrEqualTo(String)
+ Criteria andRepaymentBccUserMailsLike(String)
+ Criteria andRepaymentBccUserMailsNotLike(String)
+ Criteria andRepaymentBccUserMailsIn(List<String>)
+ Criteria andRepaymentBccUserMailsNotIn(List<String>)
+ Criteria andRepaymentBccUserMailsBetween(String,String)
+ Criteria andRepaymentBccUserMailsNotBetween(String,String)
+ Criteria andOfficialNameIsNull()
+ Criteria andOfficialNameIsNotNull()
+ Criteria andOfficialNameEqualTo(String)
+ Criteria andOfficialNameNotEqualTo(String)
+ Criteria andOfficialNameGreaterThan(String)
+ Criteria andOfficialNameGreaterThanOrEqualTo(String)
+ Criteria andOfficialNameLessThan(String)
+ Criteria andOfficialNameLessThanOrEqualTo(String)
+ Criteria andOfficialNameLike(String)
+ Criteria andOfficialNameNotLike(String)
+ Criteria andOfficialNameIn(List<String>)
+ Criteria andOfficialNameNotIn(List<String>)
+ Criteria andOfficialNameBetween(String,String)
+ Criteria andOfficialNameNotBetween(String,String)
+ Criteria andBankConfigurationIsNull()
+ Criteria andBankConfigurationIsNotNull()
+ Criteria andBankConfigurationEqualTo(Byte)
+ Criteria andBankConfigurationNotEqualTo(Byte)
+ Criteria andBankConfigurationGreaterThan(Byte)
+ Criteria andBankConfigurationGreaterThanOrEqualTo(Byte)
+ Criteria andBankConfigurationLessThan(Byte)
+ Criteria andBankConfigurationLessThanOrEqualTo(Byte)
+ Criteria andBankConfigurationIn(List<Byte>)
+ Criteria andBankConfigurationNotIn(List<Byte>)
+ Criteria andBankConfigurationBetween(Byte,Byte)
+ Criteria andBankConfigurationNotBetween(Byte,Byte)
+ Criteria andBankCodeIsNull()
+ Criteria andBankCodeIsNotNull()
+ Criteria andBankCodeEqualTo(String)
+ Criteria andBankCodeNotEqualTo(String)
+ Criteria andBankCodeGreaterThan(String)
+ Criteria andBankCodeGreaterThanOrEqualTo(String)
+ Criteria andBankCodeLessThan(String)
+ Criteria andBankCodeLessThanOrEqualTo(String)
+ Criteria andBankCodeLike(String)
+ Criteria andBankCodeNotLike(String)
+ Criteria andBankCodeIn(List<String>)
+ Criteria andBankCodeNotIn(List<String>)
+ Criteria andBankCodeBetween(String,String)
+ Criteria andBankCodeNotBetween(String,String)
+ Criteria andBankAccountIsNull()
+ Criteria andBankAccountIsNotNull()
+ Criteria andBankAccountEqualTo(String)
+ Criteria andBankAccountNotEqualTo(String)
+ Criteria andBankAccountGreaterThan(String)
+ Criteria andBankAccountGreaterThanOrEqualTo(String)
+ Criteria andBankAccountLessThan(String)
+ Criteria andBankAccountLessThanOrEqualTo(String)
+ Criteria andBankAccountLike(String)
+ Criteria andBankAccountNotLike(String)
+ Criteria andBankAccountIn(List<String>)
+ Criteria andBankAccountNotIn(List<String>)
+ Criteria andBankAccountBetween(String,String)
+ Criteria andBankAccountNotBetween(String,String)
+ Criteria andLogoUrlIsNull()
+ Criteria andLogoUrlIsNotNull()
+ Criteria andLogoUrlEqualTo(String)
+ Criteria andLogoUrlNotEqualTo(String)
+ Criteria andLogoUrlGreaterThan(String)
+ Criteria andLogoUrlGreaterThanOrEqualTo(String)
+ Criteria andLogoUrlLessThan(String)
+ Criteria andLogoUrlLessThanOrEqualTo(String)
+ Criteria andLogoUrlLike(String)
+ Criteria andLogoUrlNotLike(String)
+ Criteria andLogoUrlIn(List<String>)
+ Criteria andLogoUrlNotIn(List<String>)
+ Criteria andLogoUrlBetween(String,String)
+ Criteria andLogoUrlNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.merchant.model.PartnerInfoExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.merchant.model.PartnerInfoExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.merchant.dto.cmd.UpdateMerchantProductCmd {
- String merchantCode
- String productName
- String productCode
- String description
}
class com.welab.merchant.app.base.BaseMerchantProductService {
- MerchantProductInfoMapper productInfoMapper
- MerchantProductInfoExtMapper merchantProductInfoExtMapper
- BaseMerchantService baseMerchantService
+ PageInfo<MerchantProductInfo> getPageByDto(QueryProductInfoVo)
+ MerchantProductInfo getProductByProductCode(String,String,Boolean)
+ Response saveProductByMerchantCodeAndProductCode(MerchantProductInfo)
+ Response saveProduct(MerchantProductInfo)
+ void deleteProductById(List<Long>)
+ void deleteProductByMerchantCode(String)
+ ProductExcelDto importExcel(List<ProductExcelVO>)
- Byte buildInstallment(String)
}
class com.welab.merchant.vo.dto.MerchantRepaymentDTO {
- String merchantChannel
- String merchantCodes
- String loanNumber
- Date beginTime
- Date endTime
- int pageSize
- int pageNum
- Long userId
}
class com.welab.merchant.app.base.BaseMerchantProductSettingsService {
~ MerchantProductSettingsMapper merchantProductSettingsMapper
~ UserServiceFacade userServiceFacade
+ PageInfo<MerchantProductSettings> getPageByDto(MerchantProductSettingsVO)
+ Response<Void> saveMerchantProductSettings(Long,MerchantProductSettingsVO)
+ void deleteMerchantProductSettings(Long,Long)
+ Response<Void> updateMerchantProductSettings(Long,MerchantProductSettingsVO)
+ MerchantProductSettings getMerchantProductSettingsByProductMerchantAcqCode(String,String,String)
+ MerchantProductSettings saveCondtionMerchantProductSettings(String,String,String)
}
class com.welab.merchant.model.PartnerInfo {
- Long id
- String partner
- Byte status
- String channel
- String toUserMails
- String ccUserMails
- String bccUserMails
- String repaymentToUserMails
- String repaymentCcUserMails
- String repaymentBccUserMails
- String officialName
- Byte bankConfiguration
- String bankCode
- String bankAccount
- String logoUrl
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getPartner()
+ void setPartner(String)
+ Byte getStatus()
+ void setStatus(Byte)
+ String getChannel()
+ void setChannel(String)
+ String getToUserMails()
+ void setToUserMails(String)
+ String getCcUserMails()
+ void setCcUserMails(String)
+ String getBccUserMails()
+ void setBccUserMails(String)
+ String getRepaymentToUserMails()
+ void setRepaymentToUserMails(String)
+ String getRepaymentCcUserMails()
+ void setRepaymentCcUserMails(String)
+ String getRepaymentBccUserMails()
+ void setRepaymentBccUserMails(String)
+ String getOfficialName()
+ void setOfficialName(String)
+ Byte getBankConfiguration()
+ void setBankConfiguration(Byte)
+ String getBankCode()
+ void setBankCode(String)
+ String getBankAccount()
+ void setBankAccount(String)
+ String getLogoUrl()
+ void setLogoUrl(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.merchant.vo.PartnerLogoVO {
- Long partnerId
- String partnerName
- String officialName
- String logoUrl
}
class com.welab.merchant.vo.MerchantInfoVO {
- String merchantName
- String productName
- String merchantCategory
- String merchantChannel
- String merchantCode
- Boolean isDelete
}
class com.welab.merchant.vo.PartnerInfoVO {
- Long id
- String partner
- Byte status
- Byte bankConfiguration
- String bankCode
- String bankAccount
- String logoUrl
}
class com.welab.merchant.vo.MerchantRepaymentVO {
- String loanNumber
- String orderNo
- String merchantName
- String origin
- String periods
- String repaymentAmount
- Date actualRepaymentAt
}
class com.welab.merchant.model.MerchantInfoExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> MerchantInfoExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.merchant.model.MerchantInfoExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andMerchantNameIsNull()
+ Criteria andMerchantNameIsNotNull()
+ Criteria andMerchantNameEqualTo(String)
+ Criteria andMerchantNameNotEqualTo(String)
+ Criteria andMerchantNameGreaterThan(String)
+ Criteria andMerchantNameGreaterThanOrEqualTo(String)
+ Criteria andMerchantNameLessThan(String)
+ Criteria andMerchantNameLessThanOrEqualTo(String)
+ Criteria andMerchantNameLike(String)
+ Criteria andMerchantNameNotLike(String)
+ Criteria andMerchantNameIn(List<String>)
+ Criteria andMerchantNameNotIn(List<String>)
+ Criteria andMerchantNameBetween(String,String)
+ Criteria andMerchantNameNotBetween(String,String)
+ Criteria andMerchantCodeIsNull()
+ Criteria andMerchantCodeIsNotNull()
+ Criteria andMerchantCodeEqualTo(String)
+ Criteria andMerchantCodeNotEqualTo(String)
+ Criteria andMerchantCodeGreaterThan(String)
+ Criteria andMerchantCodeGreaterThanOrEqualTo(String)
+ Criteria andMerchantCodeLessThan(String)
+ Criteria andMerchantCodeLessThanOrEqualTo(String)
+ Criteria andMerchantCodeLike(String)
+ Criteria andMerchantCodeNotLike(String)
+ Criteria andMerchantCodeIn(List<String>)
+ Criteria andMerchantCodeNotIn(List<String>)
+ Criteria andMerchantCodeBetween(String,String)
+ Criteria andMerchantCodeNotBetween(String,String)
+ Criteria andMerchantChannelIsNull()
+ Criteria andMerchantChannelIsNotNull()
+ Criteria andMerchantChannelEqualTo(String)
+ Criteria andMerchantChannelNotEqualTo(String)
+ Criteria andMerchantChannelGreaterThan(String)
+ Criteria andMerchantChannelGreaterThanOrEqualTo(String)
+ Criteria andMerchantChannelLessThan(String)
+ Criteria andMerchantChannelLessThanOrEqualTo(String)
+ Criteria andMerchantChannelLike(String)
+ Criteria andMerchantChannelNotLike(String)
+ Criteria andMerchantChannelIn(List<String>)
+ Criteria andMerchantChannelNotIn(List<String>)
+ Criteria andMerchantChannelBetween(String,String)
+ Criteria andMerchantChannelNotBetween(String,String)
+ Criteria andSignatureTypeIsNull()
+ Criteria andSignatureTypeIsNotNull()
+ Criteria andSignatureTypeEqualTo(Integer)
+ Criteria andSignatureTypeNotEqualTo(Integer)
+ Criteria andSignatureTypeGreaterThan(Integer)
+ Criteria andSignatureTypeGreaterThanOrEqualTo(Integer)
+ Criteria andSignatureTypeLessThan(Integer)
+ Criteria andSignatureTypeLessThanOrEqualTo(Integer)
+ Criteria andSignatureTypeIn(List<Integer>)
+ Criteria andSignatureTypeNotIn(List<Integer>)
+ Criteria andSignatureTypeBetween(Integer,Integer)
+ Criteria andSignatureTypeNotBetween(Integer,Integer)
+ Criteria andDescriptionIsNull()
+ Criteria andDescriptionIsNotNull()
+ Criteria andDescriptionEqualTo(String)
+ Criteria andDescriptionNotEqualTo(String)
+ Criteria andDescriptionGreaterThan(String)
+ Criteria andDescriptionGreaterThanOrEqualTo(String)
+ Criteria andDescriptionLessThan(String)
+ Criteria andDescriptionLessThanOrEqualTo(String)
+ Criteria andDescriptionLike(String)
+ Criteria andDescriptionNotLike(String)
+ Criteria andDescriptionIn(List<String>)
+ Criteria andDescriptionNotIn(List<String>)
+ Criteria andDescriptionBetween(String,String)
+ Criteria andDescriptionNotBetween(String,String)
+ Criteria andLogoIsNull()
+ Criteria andLogoIsNotNull()
+ Criteria andLogoEqualTo(String)
+ Criteria andLogoNotEqualTo(String)
+ Criteria andLogoGreaterThan(String)
+ Criteria andLogoGreaterThanOrEqualTo(String)
+ Criteria andLogoLessThan(String)
+ Criteria andLogoLessThanOrEqualTo(String)
+ Criteria andLogoLike(String)
+ Criteria andLogoNotLike(String)
+ Criteria andLogoIn(List<String>)
+ Criteria andLogoNotIn(List<String>)
+ Criteria andLogoBetween(String,String)
+ Criteria andLogoNotBetween(String,String)
+ Criteria andMdrIsNull()
+ Criteria andMdrIsNotNull()
+ Criteria andMdrEqualTo(BigDecimal)
+ Criteria andMdrNotEqualTo(BigDecimal)
+ Criteria andMdrGreaterThan(BigDecimal)
+ Criteria andMdrGreaterThanOrEqualTo(BigDecimal)
+ Criteria andMdrLessThan(BigDecimal)
+ Criteria andMdrLessThanOrEqualTo(BigDecimal)
+ Criteria andMdrIn(List<BigDecimal>)
+ Criteria andMdrNotIn(List<BigDecimal>)
+ Criteria andMdrBetween(BigDecimal,BigDecimal)
+ Criteria andMdrNotBetween(BigDecimal,BigDecimal)
+ Criteria andTaxIsNull()
+ Criteria andTaxIsNotNull()
+ Criteria andTaxEqualTo(BigDecimal)
+ Criteria andTaxNotEqualTo(BigDecimal)
+ Criteria andTaxGreaterThan(BigDecimal)
+ Criteria andTaxGreaterThanOrEqualTo(BigDecimal)
+ Criteria andTaxLessThan(BigDecimal)
+ Criteria andTaxLessThanOrEqualTo(BigDecimal)
+ Criteria andTaxIn(List<BigDecimal>)
+ Criteria andTaxNotIn(List<BigDecimal>)
+ Criteria andTaxBetween(BigDecimal,BigDecimal)
+ Criteria andTaxNotBetween(BigDecimal,BigDecimal)
+ Criteria andBankCodeIsNull()
+ Criteria andBankCodeIsNotNull()
+ Criteria andBankCodeEqualTo(String)
+ Criteria andBankCodeNotEqualTo(String)
+ Criteria andBankCodeGreaterThan(String)
+ Criteria andBankCodeGreaterThanOrEqualTo(String)
+ Criteria andBankCodeLessThan(String)
+ Criteria andBankCodeLessThanOrEqualTo(String)
+ Criteria andBankCodeLike(String)
+ Criteria andBankCodeNotLike(String)
+ Criteria andBankCodeIn(List<String>)
+ Criteria andBankCodeNotIn(List<String>)
+ Criteria andBankCodeBetween(String,String)
+ Criteria andBankCodeNotBetween(String,String)
+ Criteria andBankAccountIsNull()
+ Criteria andBankAccountIsNotNull()
+ Criteria andBankAccountEqualTo(String)
+ Criteria andBankAccountNotEqualTo(String)
+ Criteria andBankAccountGreaterThan(String)
+ Criteria andBankAccountGreaterThanOrEqualTo(String)
+ Criteria andBankAccountLessThan(String)
+ Criteria andBankAccountLessThanOrEqualTo(String)
+ Criteria andBankAccountLike(String)
+ Criteria andBankAccountNotLike(String)
+ Criteria andBankAccountIn(List<String>)
+ Criteria andBankAccountNotIn(List<String>)
+ Criteria andBankAccountBetween(String,String)
+ Criteria andBankAccountNotBetween(String,String)
+ Criteria andAddressIsNull()
+ Criteria andAddressIsNotNull()
+ Criteria andAddressEqualTo(String)
+ Criteria andAddressNotEqualTo(String)
+ Criteria andAddressGreaterThan(String)
+ Criteria andAddressGreaterThanOrEqualTo(String)
+ Criteria andAddressLessThan(String)
+ Criteria andAddressLessThanOrEqualTo(String)
+ Criteria andAddressLike(String)
+ Criteria andAddressNotLike(String)
+ Criteria andAddressIn(List<String>)
+ Criteria andAddressNotIn(List<String>)
+ Criteria andAddressBetween(String,String)
+ Criteria andAddressNotBetween(String,String)
+ Criteria andMobileIsNull()
+ Criteria andMobileIsNotNull()
+ Criteria andMobileEqualTo(String)
+ Criteria andMobileNotEqualTo(String)
+ Criteria andMobileGreaterThan(String)
+ Criteria andMobileGreaterThanOrEqualTo(String)
+ Criteria andMobileLessThan(String)
+ Criteria andMobileLessThanOrEqualTo(String)
+ Criteria andMobileLike(String)
+ Criteria andMobileNotLike(String)
+ Criteria andMobileIn(List<String>)
+ Criteria andMobileNotIn(List<String>)
+ Criteria andMobileBetween(String,String)
+ Criteria andMobileNotBetween(String,String)
+ Criteria andMerchantCategoryIsNull()
+ Criteria andMerchantCategoryIsNotNull()
+ Criteria andMerchantCategoryEqualTo(String)
+ Criteria andMerchantCategoryNotEqualTo(String)
+ Criteria andMerchantCategoryGreaterThan(String)
+ Criteria andMerchantCategoryGreaterThanOrEqualTo(String)
+ Criteria andMerchantCategoryLessThan(String)
+ Criteria andMerchantCategoryLessThanOrEqualTo(String)
+ Criteria andMerchantCategoryLike(String)
+ Criteria andMerchantCategoryNotLike(String)
+ Criteria andMerchantCategoryIn(List<String>)
+ Criteria andMerchantCategoryNotIn(List<String>)
+ Criteria andMerchantCategoryBetween(String,String)
+ Criteria andMerchantCategoryNotBetween(String,String)
+ Criteria andIsDeleteIsNull()
+ Criteria andIsDeleteIsNotNull()
+ Criteria andIsDeleteEqualTo(Boolean)
+ Criteria andIsDeleteNotEqualTo(Boolean)
+ Criteria andIsDeleteGreaterThan(Boolean)
+ Criteria andIsDeleteGreaterThanOrEqualTo(Boolean)
+ Criteria andIsDeleteLessThan(Boolean)
+ Criteria andIsDeleteLessThanOrEqualTo(Boolean)
+ Criteria andIsDeleteIn(List<Boolean>)
+ Criteria andIsDeleteNotIn(List<Boolean>)
+ Criteria andIsDeleteBetween(Boolean,Boolean)
+ Criteria andIsDeleteNotBetween(Boolean,Boolean)
+ Criteria andHasBlackListIsNull()
+ Criteria andHasBlackListIsNotNull()
+ Criteria andHasBlackListEqualTo(Boolean)
+ Criteria andHasBlackListNotEqualTo(Boolean)
+ Criteria andHasBlackListGreaterThan(Boolean)
+ Criteria andHasBlackListGreaterThanOrEqualTo(Boolean)
+ Criteria andHasBlackListLessThan(Boolean)
+ Criteria andHasBlackListLessThanOrEqualTo(Boolean)
+ Criteria andHasBlackListIn(List<Boolean>)
+ Criteria andHasBlackListNotIn(List<Boolean>)
+ Criteria andHasBlackListBetween(Boolean,Boolean)
+ Criteria andHasBlackListNotBetween(Boolean,Boolean)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.merchant.model.MerchantInfoExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.merchant.model.MerchantInfoExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.merchant.controller.TradingController {
- MerchantTradingServiceFacade merchantTradingServiceFacade
+ Response<MerchantTradingDTO> tradingInfor(QueryMerchantTradingVO)
+ Response<PageInfo<MerchantLoanDTO>> queryMerchantLoans(QueryMerchantLoansVO)
+ Response export(QueryMerchantLoansVO)
}
class com.welab.merchant.test.SimpleTest {
+ {static} void main(String[])
}
interface com.welab.merchant.mapper.PartnerInfoMapper {
~ long countByExample(PartnerInfoExample)
~ int deleteByExample(PartnerInfoExample)
~ int deleteByPrimaryKey(Long)
~ int insert(PartnerInfo)
~ int insertSelective(PartnerInfo)
~ List<PartnerInfo> selectByExample(PartnerInfoExample)
~ PartnerInfo selectByPrimaryKey(Long)
~ int updateByExampleSelective(PartnerInfo,PartnerInfoExample)
~ int updateByExample(PartnerInfo,PartnerInfoExample)
~ int updateByPrimaryKeySelective(PartnerInfo)
~ int updateByPrimaryKey(PartnerInfo)
}
class com.welab.merchant.controller.BankController {
- PayServiceFacade payServiceFacade
+ Response<List<BankVO>> banks()
}
class com.welab.merchant.service.MerchantRepaymentService {
- MerchantTradingServiceFacade merchantTradingServiceFacade
- BaseMerchantService baseMerchantService
+ PageInfo<MerchantRepaymentVO> list(MerchantRepaymentDTO)
+ Response export(MerchantRepaymentDTO)
- List<MerchantRepaymentVO> buildMerchantRepaymentVO(List<MerchantRepaymentLoanDTO>)
- LinkedHashMap<String,String> excelHead()
}
class com.welab.merchant.vo.dto.MerchantProductDto {
}
class com.welab.merchant.config.Swagger2Config {
+ Docket createRestApi()
- ApiInfo apiInfo()
}
class com.welab.merchant.vo.PartnerConfigVo {
- Long id
- String channel
}
class com.welab.merchant.app.base.BaseRateConfigService {
- RateConfigMapper rateConfigMapper
- PartnerInfoMapper partnerInfoMapper
+ List<PartnerConfigVo> getPartnerconfig()
- List<PartnerConfigVo> buildRateConfigVo(List<PartnerInfo>)
+ RateConfig getRateByChannel(String)
+ void saveRate(RateConfig)
}
interface com.welab.merchant.mapper.MerchantProductSettingsMapper {
~ long countByExample(MerchantProductSettingsExample)
~ int deleteByExample(MerchantProductSettingsExample)
~ int deleteByPrimaryKey(Long)
~ int insert(MerchantProductSettings)
~ int insertSelective(MerchantProductSettings)
~ List<MerchantProductSettings> selectByExample(MerchantProductSettingsExample)
~ MerchantProductSettings selectByPrimaryKey(Long)
~ int updateByExampleSelective(MerchantProductSettings,MerchantProductSettingsExample)
~ int updateByExample(MerchantProductSettings,MerchantProductSettingsExample)
~ int updateByPrimaryKeySelective(MerchantProductSettings)
~ int updateByPrimaryKey(MerchantProductSettings)
}
class com.welab.merchant.vo.dto.PartnerLogoConfigDto {
- Long partnerId
- String logoUrl
}
class com.welab.merchant.model.RateConfigExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> RateConfigExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.merchant.model.RateConfigExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andChannelIsNull()
+ Criteria andChannelIsNotNull()
+ Criteria andChannelEqualTo(String)
+ Criteria andChannelNotEqualTo(String)
+ Criteria andChannelGreaterThan(String)
+ Criteria andChannelGreaterThanOrEqualTo(String)
+ Criteria andChannelLessThan(String)
+ Criteria andChannelLessThanOrEqualTo(String)
+ Criteria andChannelLike(String)
+ Criteria andChannelNotLike(String)
+ Criteria andChannelIn(List<String>)
+ Criteria andChannelNotIn(List<String>)
+ Criteria andChannelBetween(String,String)
+ Criteria andChannelNotBetween(String,String)
+ Criteria andRateIsNull()
+ Criteria andRateIsNotNull()
+ Criteria andRateEqualTo(BigDecimal)
+ Criteria andRateNotEqualTo(BigDecimal)
+ Criteria andRateGreaterThan(BigDecimal)
+ Criteria andRateGreaterThanOrEqualTo(BigDecimal)
+ Criteria andRateLessThan(BigDecimal)
+ Criteria andRateLessThanOrEqualTo(BigDecimal)
+ Criteria andRateIn(List<BigDecimal>)
+ Criteria andRateNotIn(List<BigDecimal>)
+ Criteria andRateBetween(BigDecimal,BigDecimal)
+ Criteria andRateNotBetween(BigDecimal,BigDecimal)
+ Criteria andTaxIsNull()
+ Criteria andTaxIsNotNull()
+ Criteria andTaxEqualTo(BigDecimal)
+ Criteria andTaxNotEqualTo(BigDecimal)
+ Criteria andTaxGreaterThan(BigDecimal)
+ Criteria andTaxGreaterThanOrEqualTo(BigDecimal)
+ Criteria andTaxLessThan(BigDecimal)
+ Criteria andTaxLessThanOrEqualTo(BigDecimal)
+ Criteria andTaxIn(List<BigDecimal>)
+ Criteria andTaxNotIn(List<BigDecimal>)
+ Criteria andTaxBetween(BigDecimal,BigDecimal)
+ Criteria andTaxNotBetween(BigDecimal,BigDecimal)
+ Criteria andParentChannelIsNull()
+ Criteria andParentChannelIsNotNull()
+ Criteria andParentChannelEqualTo(String)
+ Criteria andParentChannelNotEqualTo(String)
+ Criteria andParentChannelGreaterThan(String)
+ Criteria andParentChannelGreaterThanOrEqualTo(String)
+ Criteria andParentChannelLessThan(String)
+ Criteria andParentChannelLessThanOrEqualTo(String)
+ Criteria andParentChannelLike(String)
+ Criteria andParentChannelNotLike(String)
+ Criteria andParentChannelIn(List<String>)
+ Criteria andParentChannelNotIn(List<String>)
+ Criteria andParentChannelBetween(String,String)
+ Criteria andParentChannelNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.merchant.model.RateConfigExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.merchant.model.RateConfigExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.merchant.vo.dto.TagLimit {
- String tag
- Long limit
}
interface com.welab.merchant.mapper.MerchantInfoMapper {
~ long countByExample(MerchantInfoExample)
~ int deleteByExample(MerchantInfoExample)
~ int deleteByPrimaryKey(Long)
~ int insert(MerchantInfo)
~ int insertSelective(MerchantInfo)
~ List<MerchantInfo> selectByExample(MerchantInfoExample)
~ MerchantInfo selectByPrimaryKey(Long)
~ int updateByExampleSelective(MerchantInfo,MerchantInfoExample)
~ int updateByExample(MerchantInfo,MerchantInfoExample)
~ int updateByPrimaryKeySelective(MerchantInfo)
~ int updateByPrimaryKey(MerchantInfo)
}
class com.welab.merchant.dto.MerchantProductDto {
- Long id
- String merchantCode
- String productName
- String productCode
- Long maxActiveLoan
- String description
- Date createdAt
- Date updatedAt
- Boolean isDelete
- Byte installment
}
class com.welab.merchant.vo.dto.PartnerStatusDto {
- Long partnerId
- Byte status
}
class com.welab.merchant.facade.paygateway.PayServiceFacade {
- PayService payService
+ Response<List<BankVO>> getBanks()
}
class com.welab.merchant.controller.MerchantController {
- BaseMerchantService baseMerchantService
- MerchantManager merchantManager
+ Response<PageInfo<MerchantInfo>> getLoansListByLoansDto(MerchantInfoVO)
+ Response<Void> saveMerchant(MerchantInfo)
+ Response<Void> updateMerchant(MerchantInfo)
+ Response deleteMerchant(Long)
+ Response<MerchantPartnerVO> merchantPartnerInfo(String)
+ Response uploadMerchantExcel(MultipartFile)
+ Response uploadBlackMerchantExcel(MultipartFile)
+ Response downloadMerchantExcel(MerchantInfoVO,HttpServletResponse)
+ Response<Boolean> hasBlackList(String)
+ Response switchBankCheck(String)
}
class com.welab.merchant.dto.MerchantProductCheckResDTO {
- String merchantName
- String merchantProductName
- Byte installment
- Long maxLimit
- Long available
}
class com.welab.merchant.facade.finance.CreditTagConfigServiceFacade {
- CreditTagConfigService creditTagConfigService
+ List<String> getTags()
+ CreditUserTagConfigDTO getPlTagProductConfig(String)
}
class com.welab.merchant.service.dubbo.PartnerServiceImpl {
- BasePartnerService basePartnerService
+ Map<String,List<String>> queryPartnerToMerchant(List<String>)
+ QueryPartnerVO queryByPartnerName(String)
+ OfficialNameVO findOfficialNameByMerchant(String)
+ List<PartnerLogoVO> findPartnerLogos()
- List<PartnerLogoVO> buildPartnerLogoVO(List<PartnerInfo>)
- QueryPartnerVO buildQueryPartnerVO(PartnerInfo)
}
class com.welab.merchant.dto.MerchantRateQryDTO {
- String merchantCode
}
enum com.welab.merchant.enums.TenorTypeEnums {
+  ALL
+  D
+  M
- String type
- String desc
}
enum com.welab.merchant.enums.RedisEnum {
+  PAYLATER_TRADING_JOB_KEY
- String value
}
class com.welab.merchant.model.MerchantInfo {
- Long id
- String merchantName
- String merchantCode
- String merchantChannel
- Integer signatureType
- String description
- String logo
- BigDecimal mdr
- BigDecimal tax
- String bankCode
- String bankAccount
- String address
- String mobile
- String merchantCategory
- Boolean isDelete
- Boolean hasBlackList
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getMerchantName()
+ void setMerchantName(String)
+ String getMerchantCode()
+ void setMerchantCode(String)
+ String getMerchantChannel()
+ void setMerchantChannel(String)
+ Integer getSignatureType()
+ void setSignatureType(Integer)
+ String getDescription()
+ void setDescription(String)
+ String getLogo()
+ void setLogo(String)
+ BigDecimal getMdr()
+ void setMdr(BigDecimal)
+ BigDecimal getTax()
+ void setTax(BigDecimal)
+ String getBankCode()
+ void setBankCode(String)
+ String getBankAccount()
+ void setBankAccount(String)
+ String getAddress()
+ void setAddress(String)
+ String getMobile()
+ void setMobile(String)
+ String getMerchantCategory()
+ void setMerchantCategory(String)
+ Boolean getIsDelete()
+ void setIsDelete(Boolean)
+ Boolean getHasBlackList()
+ void setHasBlackList(Boolean)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.merchant.model.RateConfig {
- Long id
- String channel
- BigDecimal rate
- BigDecimal tax
- String parentChannel
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getChannel()
+ void setChannel(String)
+ BigDecimal getRate()
+ void setRate(BigDecimal)
+ BigDecimal getTax()
+ void setTax(BigDecimal)
+ String getParentChannel()
+ void setParentChannel(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.merchant.controller.MerchantProductSettingsController {
- BaseMerchantProductSettingsService baseMerchantProductSettingsService
+ Response<PageInfo<MerchantProductSettings>> getLoansListByLoansDto(MerchantProductSettingsVO)
+ Response<Void> saveProductSetting(Long,MerchantProductSettingsVO)
+ Response<Void> updateProductSetting(Long,MerchantProductSettingsVO)
+ Response deleteProductSetting(Long,Long)
}
class com.welab.merchant.controller.FileController {
- MongodbFileService mongodbFileService
+ Response<PageInfo<FileInfo>> list(Long,UploadFileQry)
+ Response<Object> downloand(String,HttpServletResponse)
}
class com.welab.merchant.vo.MerchantProductSettingsVO {
- Long id
- String merchantCode
- String productCode
- String acquirerName
- Long maxLoanNew
- Long maxLoanRo
- Long maxLoanRoDpd
- String operationPerson
- Boolean isDelete
- Date createdAt
- Date updatedAt
}
class com.welab.merchant.app.manager.MerchantManager {
- BaseMerchantService baseMerchantService
- ValidatorServiceFacade validatorServiceFacade
- BasePartnerService basePartnerService
+ Response<Void> saveMerchant(MerchantInfo)
+ String uploadExcelMerchant(List<MerchantExcelVO>,Boolean)
+ String uploadExcelMerchantBlack(List<MerchantExcelVO>,Boolean)
- List<MerchantInfo> buildMerchantInfo(List<MerchantExcelVO>)
+ HttpServletResponse downloadExcelMerchant(MerchantInfoVO,HttpServletResponse)
- List<MerchantInfoDownloadVo> buildMerchantInfoDownloadVo(List<MerchantInfo>)
- LinkedHashMap<String,String> excelHead()
}
class com.welab.merchant.facade.finance.MerchantTradingServiceFacade {
- IMerchantTradingService merchantTradingService
+ Response<MerchantTradingDTO> queryMerchantTradingInfor(QueryMerchantTradingVO)
+ Response<PageInfo<MerchantLoanDTO>> queryMerchantLoans(QueryMerchantLoansVO)
+ Response asynExportMerchantLoans(QueryMerchantLoansVO)
+ PageInfo<MerchantRepaymentLoanDTO> queryMerchantRepaymentLoans(MerchantRepaymentDTO)
+ Response asynExportMerchantLoans(MerchantRepaymentDTO)
}
class com.welab.merchant.controller.RateConfigController {
- BaseRateConfigService rateConfigService
+ Response<List<PartnerConfigVo>> getPartnerconfig()
+ Response updateRateConfig(RateConfig)
}
interface com.welab.merchant.common.Urls {
~ String ROOT
~ String ROOT_DESC
~ String V1
~ String V3
}
interface com.welab.merchant.common.Urls$Merchant {
~ String MODULE
~ String V1_MERCHANT_LIST
~ String V1_MERCHANT_LIST_DESC
~ String V1_MERCHANT_SAVE
~ String V1_MERCHANT_SAVE_DESC
~ String V1_MERCHANT_UPDATE
~ String V1_MERCHANT_UPDATE_DESC
~ String V1_MERCHANT_DELETE
~ String V1_MERCHANT_DELETE_DESC
~ String V1_MERCHANT_PARTNER_INFO
~ String V1_MERCHANT_PARTNER_INFO_DESC
~ String V3_MERCHANT_UPLOAD
~ String V3_MERCHANT_UPLOAD_DESC
~ String V3_MERCHANT_UPLOAD_BLACK
~ String V3_MERCHANT_UPLOAD_BLACK_DESC
~ String V3_MERCHANT_DOWNLOAD
~ String V3_MERCHANT_DOWNLOAD_DESC
~ String V3_MERCHANT_BLACK_LIST
~ String V3_MERCHANT_BLACK_LIST_DESC
~ String V3_SWITCH_BANK_CHECK
~ String V3_SWITCH_BANK_CHECK_DESC
}
interface com.welab.merchant.common.Urls$Product {
~ String MODULE
~ String V1_PRODUCT_LIST
~ String V1_PRODUCT_LIST_DESC
~ String V1_PRODUCT_UPDATE
~ String V1_PRODUCT_UPDATE_DESC
~ String V1_PRODUCT_SAVE
~ String V1_PRODUCT_SAVE_DESC
~ String V1_PRODUCT_DELETE
~ String V1_PRODUCT_DELETE_DESC
~ String V1_PRODUCT_BATCH_DELETE
~ String V1_PRODUCT_BATCH_DELETE_DESC
~ String V3_PRODUCT_UPLOAD
~ String V3_PRODUCT_UPLOAD_DESC
}
interface com.welab.merchant.common.Urls$PRODUCT_SETTINGS {
~ String MODULE
~ String V3_MERCHANT_PRODUCT_LIST
~ String V3_MERCHANT_PRODUCT_LIST_DESC
~ String V3_MERCHANT_PRODUCT_SAVE
~ String V3_MERCHANT_PRODUCT_SAVE_DESC
~ String V3_MERCHANT_PRODUCT_UPDATE
~ String V3_MERCHANT_PRODUCT_UPDATE_DESC
~ String V3_MERCHANT_PRODUCT_DELETE
~ String V3_MERCHANT_PRODUCT_DELETE_DESC
}
interface com.welab.merchant.common.Urls$RateConfig {
~ String MODULE
~ String V1_RATE_CONFIG_LIST
~ String V1_RATE_CONFIG_LIST_DESC
~ String V1_RATE_CONFIG_UPDATE
~ String V1_RATE_CONFIG_UPDATE_DESC
}
interface com.welab.merchant.common.Urls$Config {
~ String MODULE
~ String V1_CONFIG_LIST
~ String V1_CONFIG_LIST_DESC
}
interface com.welab.merchant.common.Urls$Trading {
~ String MODULE
~ String V1_TRADING_PANEL
~ String V1_TRADING_PANEL_DESC
~ String V1_TRADING_LIST
~ String V1_TRADING_LIST_DESC
~ String V1_TRADING_EXPORT
~ String V1_TRADING_EXPORT_DESC
}
interface com.welab.merchant.common.Urls$Repayment {
~ String MODULE
~ String V3_REPAYMENT
~ String V3_REPAYMENT_DESC
~ String V3_REPAYMENT_EXPORT
~ String V3_REPAYMENT_EXPORT_DESC
}
interface com.welab.merchant.common.Urls$File {
~ String MODULE
~ String V1_FILE_LIST
~ String V1_FILE_LIST_DESC
~ String V1_FILE_DOWNLOAND
~ String V1_FILE_DOWNLOAND_DESC
}
interface com.welab.merchant.common.Urls$Bank {
~ String MODULE
~ String V1_BANK_LIST
~ String V1_BANK_LIST_DESC
}
interface com.welab.merchant.common.Urls$Partner {
~ String MODULE
~ String V1_PARTNER_LIST
~ String V1_PARTNER_LIST_DESC
~ String V1_PARTNER_STATUS
~ String V1_PARTNER_STATUS_DESC
~ String V1_PARTNER_SELECTION
~ String V1_PARTNER_SELECTION_DESC
~ String V1_PARTNER_PARTNER_CONFIG
~ String V1_PARTNER_PARTNER_CONFIG_DESC
~ String V1_PARTNER_PARTNER_CONFIG_SAVE
~ String V1_PARTNER_PARTNER_CONFIG__SAVE_DESC
~ String V1_PARTNER_EMAIL_CONFIG
~ String V1_PARTNER_EMAIL_CONFIG_DESC
~ String V1_PARTNER_EMAIL_CONFIG_SAVE
~ String V1_PARTNER_EMAIL_CONFIG_SAVE_DESC
~ String V3_PARTNER_BANK_CONFIG_GET
~ String V3_PARTNER_BANK_CONFIG_GET_DESC
~ String V3_PARTNER_BANK_CONFIG_SAVE
~ String V3_PARTNER_BANK_CONFIG_SAVE_DESC
~ String V3_PARTNER_DOWNLOAD
~ String V3_PARTNER_DOWNLOAD_DESC
~ String V3_HAS_PARTNER_BANK
~ String V3_PARTNER_BANK_CONFIG_DESC
~ String V3_LOGO_CONFIG_SAVE
~ String V3_LOGO_CONFIG_SAVE_DESC
}
class com.welab.merchant.vo.QueryPartnerVO {
- String partner
- Byte status
- String channel
- String toUserMails
- String ccUserMails
- String bccUserMails
- String repayToUserMails
- String repayCcUserMails
- String repayBccUserMails
- String officialName
- Byte bankConfiguration
}
class com.welab.merchant.vo.MerchantProductVO {
- Long id
- String merchantCode
- String productName
- String productCode
- Long maxActiveLoan
- Long maxLoanNew
- Long maxLoanRo
- Long maxLoanRoDpd
- Byte installment
- Boolean hasBlackList
- String description
- Boolean isDelete
}
interface com.welab.merchant.service.PartnerService {
~ Map<String,List<String>> queryPartnerToMerchant(List<String>)
~ QueryPartnerVO queryByPartnerName(String)
~ OfficialNameVO findOfficialNameByMerchant(String)
~ List<PartnerLogoVO> findPartnerLogos()
}
class com.welab.merchant.facade.finance.LoanQueryServiceFacade {
- ILoanQueryService loanQueryService
+ Long sumUnFinishLoanAmount(UnFinishLoanAmountQry)
}
class com.welab.merchant.vo.PartnerLimitConfigVO {
- String tag
- Long limit
}
class com.welab.merchant.config.WebAppConfigurer {
+ void addInterceptors(InterceptorRegistry)
+ void addArgumentResolvers(List<HandlerMethodArgumentResolver>)
+ void configureMessageConverters(List<HttpMessageConverter<?>>)
+ HttpMessageConverter fastJsonHttpMessageConverters()
# void addResourceHandlers(ResourceHandlerRegistry)
}
class com.welab.merchant.vo.PartnerToMerchantVO {
- String partner
- String merchantCode
}
class com.welab.merchant.interceptor.MerchantPartnerInfoInterceptor {
- BaseMerchantService baseMerchantService
+ boolean preHandle(HttpServletRequest,HttpServletResponse,Object)
+ void postHandle(HttpServletRequest,HttpServletResponse,Object,ModelAndView)
+ void afterCompletion(HttpServletRequest,HttpServletResponse,Object,Exception)
- A getAnnotation(Object,Class<A>)
}
class com.welab.merchant.vo.dto.PartnerBankConfigDto {
- Long partnerId
- Byte bankConfiguration
- String bankCode
- String bankAccount
}
class com.welab.merchant.vo.OfficialNameVO {
- String partner
- String officialName
}
class com.welab.merchant.app.command.MerchantLimitInfoQryExe {
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
- BasePartnerService basePartnerService
+ MerchantUserLimitInfoDTO getMerchantUserLimitInfo(MerchantUserLimitInfoQry)
}
interface com.welab.merchant.mapper.MerchantProductInfoMapper {
~ long countByExample(MerchantProductInfoExample)
~ int deleteByExample(MerchantProductInfoExample)
~ int deleteByPrimaryKey(Long)
~ int insert(MerchantProductInfo)
~ int insertSelective(MerchantProductInfo)
~ List<MerchantProductInfo> selectByExample(MerchantProductInfoExample)
~ MerchantProductInfo selectByPrimaryKey(Long)
~ int updateByExampleSelective(MerchantProductInfo,MerchantProductInfoExample)
~ int updateByExample(MerchantProductInfo,MerchantProductInfoExample)
~ int updateByPrimaryKeySelective(MerchantProductInfo)
~ int updateByPrimaryKey(MerchantProductInfo)
}
class com.welab.merchant.controller.ProductController {
- BaseMerchantProductService productService
+ Response<PageInfo<MerchantProductInfo>> getProduct(QueryProductInfoVo)
+ Response saveProduct(MerchantProductInfo)
+ Response deleteProduct(Long)
+ Response batchDeleteProduct(List<Long>)
+ Response updateProductInfo(MerchantProductInfo)
+ Response uploadProductExcel(MultipartFile)
}
class com.welab.merchant.controller.RepaymentController {
- MerchantRepaymentService merchantRepaymentService
+ Response<PageInfo<MerchantRepaymentVO>> list(MerchantRepaymentDTO)
+ Response export(MerchantRepaymentDTO)
}
class com.welab.merchant.dto.qry.MerchantUserLimitInfoQry {
- Long userId
- String merchantChannel
- String merchantCode
}
class com.welab.merchant.dto.QueryMerchantProductDto {
- String merchantCode
- String productCode
- Boolean delFalg
}
class com.welab.merchant.vo.QueryMerchantLoansVO {
- String merchantChannel
- String merchantCodes
- String mobile
- String name
- Date beginTime
- Date endTime
- int pageSize
- int pageNum
- Long userId
- String status
}
class com.welab.merchant.facade.finance.CreditUserAccountServiceFacade {
- CreditUserAccountService creditUserAccountService
+ CreditUserAccountVO findByUserId(Long)
+ CreditUserAccountVO findByUserIdWithoutStatusFilter(Long)
}
class com.welab.merchant.vo.QueryMerchantTradingVO {
- String merchantChannel
- String merchantCodes
}
class com.welab.merchant.handler.argument.MerchantPartnerRequestBodyMethodArgumentResolver {
+ boolean supportsParameter(MethodParameter)
+ Object resolveArgument(MethodParameter,ModelAndViewContainer,NativeWebRequest,WebDataBinderFactory)
}
class com.welab.merchant.dto.MerchantDto {
- String merchantName
- String merchantCode
- String merchantChannel
- Integer signatureType
- String description
- BigDecimal merchantRate
- String adress
- String mobile
- String merchantCategory
- String bankCode
- String bankAccount
}
enum com.welab.merchant.enums.AcquirerNameEnum {
+  ASTRAPAY
+  OTHERS
- String name
}
class com.welab.merchant.dto.MerchantRateDTO {
- BigDecimal rate
- BigDecimal mdr
- BigDecimal tax
}
interface com.welab.merchant.service.MerchantProductSettingsService {
+ MerchantProductSettingsDTO getMerchantProductSettingsByProductMerchantAcqCode(String,String,String)
}
interface com.welab.merchant.mapper.ext.MerchantProductInfoExtMapper {
~ List<MerchantProductVO> findByQuery(QueryProductInfoVo)
}
class com.welab.merchant.dto.cmd.MerchantProductCheckCmd {
- String merchantChannel
- String merchantCode
- String merchantProductCode
- Long userId
- String acquirerName
}
interface com.welab.merchant.mapper.ext.PartnerInfoExtMapper {
~ List<PartnerToMerchantVO> queryPartnerToMerchant(List<String>)
~ OfficialNameVO findOfficialNameByMerchant(String)
~ QueryPartnerBankDTO getPartnerBankInfo(String)
}
class com.welab.merchant.app.command.MerchantProductCheckCmdExe {
- BaseMerchantService baseMerchantService
- BaseMerchantProductService baseMerchantProductService
- BaseMerchantProductSettingsService baseMerchantProductSettingsService
- LoanCreditOrderServiceFacade loanCreditOrderServiceFacade
- MerchantUserLimitInfoQryExe merchantUserLimitInfoQryExe
- CreditUserAccountServiceFacade creditUserAccountServiceFacade
+ Response<MerchantProductCheckResDTO> execute(MerchantProductCheckCmd)
}
class com.welab.merchant.vo.QueryPartnerBankDTO {
- String bankCode
- String bankAccount
- Byte bankConfiguration
}
class com.welab.merchant.test.merchantTest {
- BaseMerchantService baseMerchantService
- MerchantService merchantService
- PartnerInfoExtMapper partnerInfoExtMapper
- MerchantProductCheckCmdExe merchantProductCheckCmdExe
- JedisCluster jedisCluster
- {static} ThreadLocal<String> KEY_VALUE
+ void test()
+ void testMaxLoan()
+ void getPageByDto()
+ void rr()
}
interface com.welab.merchant.mapper.RateConfigMapper {
~ long countByExample(RateConfigExample)
~ int deleteByExample(RateConfigExample)
~ int deleteByPrimaryKey(Long)
~ int insert(RateConfig)
~ int insertSelective(RateConfig)
~ List<RateConfig> selectByExample(RateConfigExample)
~ RateConfig selectByPrimaryKey(Long)
~ int updateByExampleSelective(RateConfig,RateConfigExample)
~ int updateByExample(RateConfig,RateConfigExample)
~ int updateByPrimaryKeySelective(RateConfig)
~ int updateByPrimaryKey(RateConfig)
}
class com.welab.merchant.dto.qry.MerchantProductInfoQry {
- String merchantCode
- String productName
- String productCode
- Long maxActiveLoan
- String description
- Byte installment
}
class com.welab.merchant.vo.dto.PartnerLimitConfigDto {
- Long partnerId
- List<TagLimit> tags
}
class com.welab.merchant.dto.qry.MerchantInfoQry {
- String merchantName
- String merchantCode
- String merchantChannel
- Integer signatureType
- String description
- BigDecimal mdr
- BigDecimal tax
- String bankCode
- String bankAccount
- String address
- String mobile
}
class com.welab.merchant.model.MerchantProductSettings {
- Long id
- String merchantCode
- String productCode
- String acquirerName
- Long maxLoanNew
- Long maxLoanRo
- Long maxLoanRoDpd
- String operationPerson
- Boolean isDelete
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getMerchantCode()
+ void setMerchantCode(String)
+ String getProductCode()
+ void setProductCode(String)
+ String getAcquirerName()
+ void setAcquirerName(String)
+ Long getMaxLoanNew()
+ void setMaxLoanNew(Long)
+ Long getMaxLoanRo()
+ void setMaxLoanRo(Long)
+ Long getMaxLoanRoDpd()
+ void setMaxLoanRoDpd(Long)
+ String getOperationPerson()
+ void setOperationPerson(String)
+ Boolean getIsDelete()
+ void setIsDelete(Boolean)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.merchant.vo.dto.PartnerDto {
- String partner
}
class com.welab.merchant.vo.MerchantPartnerVO {
- SimpleMerchantInfo merchantInfo
- List<SimpleMerchantInfo> partnerList
}
class com.welab.merchant.vo.MerchantPartnerVO$SimpleMerchantInfo {
- String merchantName
- String merchantCode
- String merchantChannel
- String logo
}
class com.welab.merchant.vo.PageVO {
- int pageNum
- int pageSize
- long total
- int pages
- List<T> data
+ <<Create>> PageVO()
+ <<Create>> PageVO(int,int)
+ int getStart()
}
class com.welab.merchant.test.RateTest {
- BaseRateConfigService rateConfigService
+ void getRateconfig()
}
class com.welab.merchant.test.ProductSettingTest {
- BaseMerchantProductSettingsService baseMerchantProductSettingsService
+ void testSave()
+ void getList()
+ void update()
+ void delete()
}
class com.welab.merchant.facade.paygateway.ValidatorServiceFacade {
- ValidatorService validatorService
+ Response<BankAccountVO> validatorBankAccount(BankAccountDto)
}
class com.welab.merchant.service.dubbo.MerchantProductSettingsServiceImpl {
- BaseMerchantProductSettingsService baseMerchantProductSettingsService
+ MerchantProductSettingsDTO getMerchantProductSettingsByProductMerchantAcqCode(String,String,String)
}
interface com.welab.merchant.service.MerchantService {
~ MerchantDto getMerchant(String)
~ List<MerchantDto> getMerchants(List<String>)
~ MerchantProductDto getMerchantProduct(String)
~ MerchantProductDto getMerchantProduct(QueryMerchantProductDto)
~ Response<BigDecimal> getAstraRate(String)
~ Response<MerchantRateDTO> getRate(MerchantRateQryDTO)
~ Response<MerchantProductCheckResDTO> checkProduct(MerchantProductCheckCmd)
~ Response<MerchantUserLimitInfoDTO> getMerchantUserLimitInfo(MerchantUserLimitInfoQry)
~ Response<MerchantUserLimitInfoDTO> getMerchantLimitInfo(MerchantUserLimitInfoQry)
~ Response createMerchant(MerchantInfoQry)
~ Response updateMerchant(MerchantInfoQry)
~ Response createMerchantProduct(MerchantProductInfoQry)
~ Response updateMerchantProduct(MerchantProductInfoQry)
~ Response<Boolean> hasBlackListByMerchantCode(String)
~ Response<QueryPartnerBankDTO> getPartnerBankConfig(String)
~ QueryPartnerVO queryByPartnerName(String)
~ Response updateMerchantProductV2(UpdateMerchantProductCmd)
}
class com.welab.merchant.service.dubbo.MerchantServiceImpl {
- BaseMerchantService baseMerchantService
- BaseMerchantProductService productService
- BasePartnerService basePartnerService
- MerchantProductCheckCmdExe merchantProductCheckCmdExe
- MerchantUserLimitInfoQryExe merchantUserLimitInfoQryExe
- MerchantManager merchantManager
- MerchantLimitInfoQryExe merchantLimitInfoQryExe
+ MerchantDto getMerchant(String)
+ List<MerchantDto> getMerchants(List<String>)
+ MerchantProductDto getMerchantProduct(String)
+ MerchantProductDto getMerchantProduct(QueryMerchantProductDto)
+ Response<BigDecimal> getAstraRate(String)
+ Response<MerchantRateDTO> getRate(MerchantRateQryDTO)
+ Response<MerchantProductCheckResDTO> checkProduct(MerchantProductCheckCmd)
+ Response<MerchantUserLimitInfoDTO> getMerchantUserLimitInfo(MerchantUserLimitInfoQry)
+ Response<MerchantUserLimitInfoDTO> getMerchantLimitInfo(MerchantUserLimitInfoQry)
+ Response createMerchant(MerchantInfoQry)
+ Response updateMerchant(MerchantInfoQry)
+ Response createMerchantProduct(MerchantProductInfoQry)
+ Response updateMerchantProduct(MerchantProductInfoQry)
+ Response<Boolean> hasBlackListByMerchantCode(String)
+ Response<QueryPartnerBankDTO> getPartnerBankConfig(String)
+ QueryPartnerVO queryByPartnerName(String)
+ Response updateMerchantProductV2(UpdateMerchantProductCmd)
- QueryPartnerVO buildQueryPartnerVO(PartnerInfo)
- MerchantInfo buildMerchantInfo(MerchantInfoQry,MerchantInfo)
- MerchantProductInfo buildMerchantProductInfo(MerchantProductInfoQry,MerchantProductInfo)
}
class com.welab.merchant.dto.MerchantProductSettingsDTO {
- Long id
- String merchantCode
- String productCode
- String acquirerName
- Long maxLoanNew
- Long maxLoanRo
- Long maxLoanRoDpd
- String operationPerson
- Boolean isDelete
- Date createdAt
- Date updatedAt
}
class com.welab.merchant.dto.MerchantProductRuleDto {
- String productCode
- BigDecimal userQuota
- BigDecimal productQuota
- Boolean allowQuota
- String tenorType
- String tenor
- BigDecimal astraFee
- String description
}
class com.welab.merchant.app.base.BaseMerchantService {
- MerchantInfoMapper merchantInfoMapper
- BaseMerchantProductService productService
- MerchantInfoExtMapper merchantInfoExtMapper
+ PageInfo<MerchantInfo> getPageByDto(MerchantInfoVO)
+ void saveMerchant(MerchantInfo)
+ void deleteById(Long)
+ MerchantInfo getMerchantByCode(String,Boolean)
+ List<String> getAllMerchantCode()
+ List<MerchantInfo> getMerchants(List<String>)
+ MerchantPartnerVO getMerchantPartnerInfo(String)
+ List<MerchantInfo> getMerchantInfoList(MerchantInfoVO)
+ Boolean hasBlackList(String)
+ List<MerchantInfo> findByChannelAndBankCodeNotNull(String)
}
class com.welab.merchant.vo.QueryProductInfoVo {
- String productName
- String merchantCode
- String merchantChannel
- String productCode
- Boolean isDelete
}
class com.welab.merchant.vo.PartnerEmailConfigVO {
- List<String> toUserMails
- List<String> ccUserMails
- List<String> bccUserMails
- List<String> repayToUserMails
- List<String> repayCcUserMails
- List<String> repayBccUserMails
}
class com.welab.merchant.model.PartnerLimitConfigExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> PartnerLimitConfigExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.merchant.model.PartnerLimitConfigExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andPartnerIdIsNull()
+ Criteria andPartnerIdIsNotNull()
+ Criteria andPartnerIdEqualTo(Long)
+ Criteria andPartnerIdNotEqualTo(Long)
+ Criteria andPartnerIdGreaterThan(Long)
+ Criteria andPartnerIdGreaterThanOrEqualTo(Long)
+ Criteria andPartnerIdLessThan(Long)
+ Criteria andPartnerIdLessThanOrEqualTo(Long)
+ Criteria andPartnerIdIn(List<Long>)
+ Criteria andPartnerIdNotIn(List<Long>)
+ Criteria andPartnerIdBetween(Long,Long)
+ Criteria andPartnerIdNotBetween(Long,Long)
+ Criteria andTagIsNull()
+ Criteria andTagIsNotNull()
+ Criteria andTagEqualTo(String)
+ Criteria andTagNotEqualTo(String)
+ Criteria andTagGreaterThan(String)
+ Criteria andTagGreaterThanOrEqualTo(String)
+ Criteria andTagLessThan(String)
+ Criteria andTagLessThanOrEqualTo(String)
+ Criteria andTagLike(String)
+ Criteria andTagNotLike(String)
+ Criteria andTagIn(List<String>)
+ Criteria andTagNotIn(List<String>)
+ Criteria andTagBetween(String,String)
+ Criteria andTagNotBetween(String,String)
+ Criteria andMaxLimitIsNull()
+ Criteria andMaxLimitIsNotNull()
+ Criteria andMaxLimitEqualTo(Long)
+ Criteria andMaxLimitNotEqualTo(Long)
+ Criteria andMaxLimitGreaterThan(Long)
+ Criteria andMaxLimitGreaterThanOrEqualTo(Long)
+ Criteria andMaxLimitLessThan(Long)
+ Criteria andMaxLimitLessThanOrEqualTo(Long)
+ Criteria andMaxLimitIn(List<Long>)
+ Criteria andMaxLimitNotIn(List<Long>)
+ Criteria andMaxLimitBetween(Long,Long)
+ Criteria andMaxLimitNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.merchant.model.PartnerLimitConfigExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.merchant.model.PartnerLimitConfigExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.merchant.vo.PartnerBankConfigVO {
- Byte bankConfiguration
- String bankCode
- String bankAccount
}
enum com.welab.merchant.enums.InstallmentEnum {
+  NON_INSTALLMENT_ONLY
+  INSTALLMENT_ONLY
+  BOTH
- Byte value
+ {static} InstallmentEnum getInstallmentEnum(Byte)
}
class com.welab.merchant.dto.MerchantUserLimitInfoDTO {
- Long maxLimit
- Long available
}
class com.welab.merchant.utils.DateJodaUtil {
+ {static} String[] FORMATS
+ {static} Date getNow()
+ {static} String getNowStr(String)
+ {static} Date getTimestampToDate(Timestamp)
+ {static} long getMillis()
+ {static} Date getSqlDateToDate(java.sql.Date)
+ {static} long getStrToTime(String,String)
+ {static} Date getStrToDate(String,String)
+ {static} Date getTimeToDate(long)
+ {static} String formatDate(Date,String)
+ {static} String formatDate(String)
+ {static} String formatDateByFull(Date)
+ {static} String formatDateByShort(Date)
+ {static} Date plusMonths(Date,int)
+ {static} Date plusDays(Date,int)
+ {static} Date plusMinutes(Date,int)
+ {static} Date minusDays(Date,int)
+ {static} Date minusMinutes(Date,int)
+ {static} Date plusMonthsAndDays(Date,int,int)
+ {static} int yearsBetween(Date,Date)
+ {static} int monthsBetween(Date,Date)
+ {static} int daysBetween(Date,Date)
+ {static} int hoursBetween(Date,Date)
+ {static} int secondBetWeen(Date,Date)
+ {static} int dayNumOfMonth(Date)
+ {static} void main(String[])
}


com.welab.merchant.model.MerchantProductSettingsExample +.. com.welab.merchant.model.MerchantProductSettingsExample$GeneratedCriteria
com.welab.merchant.model.MerchantProductSettingsExample +.. com.welab.merchant.model.MerchantProductSettingsExample$Criteria
com.welab.merchant.model.GeneratedCriteria <|-- com.welab.merchant.model.MerchantProductSettingsExample$Criteria
com.welab.merchant.model.MerchantProductSettingsExample +.. com.welab.merchant.model.MerchantProductSettingsExample$Criterion
org.springframework.web.filter.OncePerRequestFilter <|-- com.welab.merchant.filter.LogFilter
java.io.Serializable <|.. com.welab.merchant.dto.CheckDto
com.welab.merchant.model.MerchantProductInfoExample +.. com.welab.merchant.model.MerchantProductInfoExample$GeneratedCriteria
com.welab.merchant.model.MerchantProductInfoExample +.. com.welab.merchant.model.MerchantProductInfoExample$Criteria
com.welab.merchant.model.GeneratedCriteria <|-- com.welab.merchant.model.MerchantProductInfoExample$Criteria
com.welab.merchant.model.MerchantProductInfoExample +.. com.welab.merchant.model.MerchantProductInfoExample$Criterion
com.welab.merchant.model.PartnerInfoExample +.. com.welab.merchant.model.PartnerInfoExample$GeneratedCriteria
com.welab.merchant.model.PartnerInfoExample +.. com.welab.merchant.model.PartnerInfoExample$Criteria
com.welab.merchant.model.GeneratedCriteria <|-- com.welab.merchant.model.PartnerInfoExample$Criteria
com.welab.merchant.model.PartnerInfoExample +.. com.welab.merchant.model.PartnerInfoExample$Criterion
java.io.Serializable <|.. com.welab.merchant.dto.cmd.UpdateMerchantProductCmd
java.io.Serializable <|.. com.welab.merchant.vo.PartnerLogoVO
com.welab.sea.util.dto.PageQuery <|-- com.welab.merchant.vo.MerchantInfoVO
com.welab.merchant.model.MerchantInfoExample +.. com.welab.merchant.model.MerchantInfoExample$GeneratedCriteria
com.welab.merchant.model.MerchantInfoExample +.. com.welab.merchant.model.MerchantInfoExample$Criteria
com.welab.merchant.model.GeneratedCriteria <|-- com.welab.merchant.model.MerchantInfoExample$Criteria
com.welab.merchant.model.MerchantInfoExample +.. com.welab.merchant.model.MerchantInfoExample$Criterion
org.springframework.test.context.junit4.AbstractJUnit4SpringContextTests <|-- com.welab.merchant.test.SimpleTest
com.welab.merchant.model.RateConfigExample +.. com.welab.merchant.model.RateConfigExample$GeneratedCriteria
com.welab.merchant.model.RateConfigExample +.. com.welab.merchant.model.RateConfigExample$Criteria
com.welab.merchant.model.GeneratedCriteria <|-- com.welab.merchant.model.RateConfigExample$Criteria
com.welab.merchant.model.RateConfigExample +.. com.welab.merchant.model.RateConfigExample$Criterion
java.io.Serializable <|.. com.welab.merchant.dto.MerchantProductDto
java.io.Serializable <|.. com.welab.merchant.dto.MerchantProductCheckResDTO
com.welab.merchant.service.PartnerService <|.. com.welab.merchant.service.dubbo.PartnerServiceImpl
java.io.Serializable <|.. com.welab.merchant.dto.MerchantRateQryDTO
com.welab.sea.util.dto.PageQuery <|-- com.welab.merchant.vo.MerchantProductSettingsVO
com.welab.merchant.common.Urls +.. com.welab.merchant.common.Urls$Merchant
com.welab.merchant.common.Urls +.. com.welab.merchant.common.Urls$Product
com.welab.merchant.common.Urls +.. com.welab.merchant.common.Urls$PRODUCT_SETTINGS
com.welab.merchant.common.Urls +.. com.welab.merchant.common.Urls$RateConfig
com.welab.merchant.common.Urls +.. com.welab.merchant.common.Urls$Config
com.welab.merchant.common.Urls +.. com.welab.merchant.common.Urls$Trading
com.welab.merchant.common.Urls +.. com.welab.merchant.common.Urls$Repayment
com.welab.merchant.common.Urls +.. com.welab.merchant.common.Urls$File
com.welab.merchant.common.Urls +.. com.welab.merchant.common.Urls$Bank
com.welab.merchant.common.Urls +.. com.welab.merchant.common.Urls$Partner
java.io.Serializable <|.. com.welab.merchant.vo.QueryPartnerVO
org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport <|-- com.welab.merchant.config.WebAppConfigurer
org.springframework.web.servlet.HandlerInterceptor <|.. com.welab.merchant.interceptor.MerchantPartnerInfoInterceptor
java.io.Serializable <|.. com.welab.merchant.vo.OfficialNameVO
java.io.Serializable <|.. com.welab.merchant.dto.qry.MerchantUserLimitInfoQry
java.io.Serializable <|.. com.welab.merchant.dto.QueryMerchantProductDto
java.io.Serializable <|.. com.welab.merchant.vo.QueryMerchantTradingVO
org.springframework.web.method.support.HandlerMethodArgumentResolver <|.. com.welab.merchant.handler.argument.MerchantPartnerRequestBodyMethodArgumentResolver
java.io.Serializable <|.. com.welab.merchant.dto.MerchantDto
java.io.Serializable <|.. com.welab.merchant.dto.MerchantRateDTO
java.io.Serializable <|.. com.welab.merchant.dto.cmd.MerchantProductCheckCmd
java.io.Serializable <|.. com.welab.merchant.vo.QueryPartnerBankDTO
com.welab.merchant.test.SimpleTest <|-- com.welab.merchant.test.merchantTest
java.io.Serializable <|.. com.welab.merchant.dto.qry.MerchantProductInfoQry
java.io.Serializable <|.. com.welab.merchant.dto.qry.MerchantInfoQry
com.welab.sea.util.dto.PageQuery <|-- com.welab.merchant.vo.dto.PartnerDto
com.welab.merchant.vo.MerchantPartnerVO +.. com.welab.merchant.vo.MerchantPartnerVO$SimpleMerchantInfo
com.welab.merchant.test.SimpleTest <|-- com.welab.merchant.test.RateTest
com.welab.merchant.test.SimpleTest <|-- com.welab.merchant.test.ProductSettingTest
com.welab.merchant.service.MerchantProductSettingsService <|.. com.welab.merchant.service.dubbo.MerchantProductSettingsServiceImpl
com.welab.merchant.service.MerchantService <|.. com.welab.merchant.service.dubbo.MerchantServiceImpl
java.io.Serializable <|.. com.welab.merchant.dto.MerchantProductSettingsDTO
java.io.Serializable <|.. com.welab.merchant.dto.MerchantProductRuleDto
com.welab.sea.util.dto.PageQuery <|-- com.welab.merchant.vo.QueryProductInfoVo
com.welab.merchant.model.PartnerLimitConfigExample +.. com.welab.merchant.model.PartnerLimitConfigExample$GeneratedCriteria
com.welab.merchant.model.PartnerLimitConfigExample +.. com.welab.merchant.model.PartnerLimitConfigExample$Criteria
com.welab.merchant.model.GeneratedCriteria <|-- com.welab.merchant.model.PartnerLimitConfigExample$Criteria
com.welab.merchant.model.PartnerLimitConfigExample +.. com.welab.merchant.model.PartnerLimitConfigExample$Criterion
java.io.Serializable <|.. com.welab.merchant.dto.MerchantUserLimitInfoDTO
@enduml