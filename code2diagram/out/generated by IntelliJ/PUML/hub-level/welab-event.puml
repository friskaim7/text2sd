@startuml
class com.welab.event.service.TestDb {
- JdbcTemplate jdbcTemplate
+ void testQuery()
+ void testQuery2()
+ void testQuery3()
}
class com.welab.event.web.EventControllerTest {
+ void testSave()
}
abstract class com.welab.event.service.AbstractActionService {
- AmqpTemplate rabbitTemplate
- ActionLogServiceImpl actionLogService
- ApplicationService applicationService
- long WELAB_EVENT_CENTER_DELAY_SECOND
- int WELAB_EVENT_CENTER_RETRY_COUNT
# String APP_ID
- LoansService loansService
- UserService userService
- IProductCodeInfoService productCodeInfoService
- LoanCreditLimitService loanCreditLimitService
# {static} ConcurrentMap<String,ProductCodeInfoDto> productCodeMap
+ void process(EventAction,EventDto)
+ void process(ActionJob)
# boolean isActived()
# {abstract}void doProcess(ActionJob)
# void addDelayQueue(ActionJob)
+ Long getUserId(EventDto)
# UserProfileVO getUserInfo(EventDto)
+ Long getUserOrgId(EventDto)
# ProductCodeInfoDto getProductCodeInfoDto(String)
# String getIndoName(String)
}
class com.welab.event.service.AbstractActionService$ActionJob {
- int retryCount
~ EventAction action
~ EventDto event
}
interface com.welab.event.mapper.SecondaryProcessingMetaMapper {
~ long countByExample(SecondaryProcessingMetaExample)
~ int deleteByExample(SecondaryProcessingMetaExample)
~ int deleteByPrimaryKey(Long)
~ int insert(SecondaryProcessingMeta)
~ int insertSelective(SecondaryProcessingMeta)
~ List<SecondaryProcessingMeta> selectByExampleWithBLOBs(SecondaryProcessingMetaExample)
~ List<SecondaryProcessingMeta> selectByExample(SecondaryProcessingMetaExample)
~ SecondaryProcessingMeta selectByPrimaryKey(Long)
~ int updateByExampleSelective(SecondaryProcessingMeta,SecondaryProcessingMetaExample)
~ int updateByExampleWithBLOBs(SecondaryProcessingMeta,SecondaryProcessingMetaExample)
~ int updateByExample(SecondaryProcessingMeta,SecondaryProcessingMetaExample)
~ int updateByPrimaryKeySelective(SecondaryProcessingMeta)
~ int updateByPrimaryKeyWithBLOBs(SecondaryProcessingMeta)
~ int updateByPrimaryKey(SecondaryProcessingMeta)
}
class com.welab.event.service.impl.action.SmsActionServiceImpl {
- MessageSmsService messageSmsService
+ void doProcess(ActionJob)
- Map<String,String> buildReplaceFieldMap(String,UserProfileVO)
}
interface com.welab.event.config.rocketmq.listener.MsgQueueListener {
+ void execute(MetaData)
}
class com.welab.event.config.DWConfigruation {
- RocketMQConsumerCmdExe rocketMQConsumerCmdExe
- Environment env
+ DruidDataSource getAllRead()
+ void run(ApplicationArguments)
}
class com.welab.event.service.impl.WelabEventServiceImpl {
- AmqpTemplate rabbitTemplate
+ void publishEvent(EventDto)
}
class com.welab.event.constant.WeLabEventConstants {
+ {static} long DEFAULT_ORG_ID
+ {static} int DEFAULT_PAGE
+ {static} int DEFAULT_PAGE_SIZE
+ {static} String DEFAULT_ENCODING
+ {static} String REDIS_KEY_PREFIX
- <<Create>> WeLabEventConstants()
+ {static} String getCacheKey(String)
}
class com.welab.event.constant.WeLabEventConstants$EventParamConstant {
+ {static} String EVENT_PARAM_MAP_CACHE_USER_INFO_KEY
+ {static} String EVENT_PARAM_MAP_USER_ID_KEY
+ {static} String EVENT_PARAM_MAP_USER_MOBILE_KEY
+ {static} String EVENT_PARAM_MAP_LOAN_NUMBER_KEY
+ {static} String EVENT_PARAM_MAP_ORG_ID_KEY
+ {static} String EVENT_PARAM_MAP_CLOSEDAT_KEY
+ {static} String EVENT_PARAM_MAP_REPAYMENT_AMOUNT_KEY
+ {static} String EVENT_PARAM_MAP_REPAYMENTAT_KEY
+ {static} String EVENT_PARAM_MAP_DISBURSEDDATE_KEY
+ {static} String EVENT_PARAM_MAP_DISBURSEAMOUNT_KEY
+ {static} String EVENT_PARAM_MAP_VIRTUALACCOUNTS_KEY
- <<Create>> EventParamConstant()
}
class com.welab.event.constant.WeLabEventConstants$ActionConfigConstant {
+ {static} String SMS_ACTION_BEAN_NAME
+ {static} String EMAIL_ACTION_BEAN_NAME
+ {static} String APP_PUSH_ACTION_BEAN_NAME
+ {static} String INTEGRAL_ACTION_BEAN_NAME
- <<Create>> ActionConfigConstant()
}
class com.welab.event.service.AopRedisTest {
- EventMsgLogServiceImpl eventMsgLogService
- EventServiceImpl eventService
+ void testAop()
+ void testEventName()
+ {static} void main(String[])
}
class com.welab.event.model.EventMsgLog {
- Long id
- String msgId
- Long userId
- String name
- String param
- String actions
- Date createdAt
}
class com.welab.event.model.PartitionData {
- Integer patition
- String topic
- Long offset
- String msgId
- MetaData mmsg
}
class com.welab.event.app.command.dw.AssociationRelationshipHandlerCmdExe {
# RestStatus sinkData(EsData)
# EsData buildSinkData(DmHandlerInfo)
# void reBuildData(AssociationRelationDmHandlerInfo,EsData,String)
- void reBuildDataByPkConfig(AssociationRelationDmHandlerInfo,EsData,String)
- void reBuildDataBySql(AssociationRelationDmHandlerInfo,EsData,String)
}
class com.welab.event.service.impl.ActionLogServiceImpl {
- ActionLogMapper failedActionLogMapper
- EventMsgLogServiceImpl eventMsgLogService
- EventActionServiceImpl eventAcetionService
- int WELAB_EVENT_CENTER_RETRY_COUNT
+ boolean insert(ActionLog)
+ ActionLog selectByMsgIdAndActionId(String,Long)
+ boolean updateByMsgIdAndActionId(ActionLog)
+ ActionLog selectActionLog(long)
+ void retryAction(long)
}
class com.welab.event.app.command.dw.second.AssociationRelationHandler {
- String sourceDwTable
- List<String> keyFields
- String sourceDwTableNestedFieldName
- boolean nested
~ JedisCluster clusterClient
+ <<Create>> AssociationRelationHandler(JSONObject)
+ void handler(EsDataExt)
# void initBean()
+ boolean filter(EsDataExt)
+ ConsumeConcurrentlyStatus consumeMessage(List<MessageExt>,ConsumeConcurrentlyContext)
}
class com.welab.event.util.LocalCacheUtils {
- {static} Cache<String,Object> LOCAL_CACHE
+ {static} String METADATA_KEY
+ {static} String cacheKey
+ {static} String OTHERKEY
- <<Create>> LocalCacheUtils()
+ {static} MetaDataMapping getMetaData(String)
+ {static} List<String> getMetaDataMappingList()
+ {static} CanalMetaInfo getMetaInfoOtherConfig(String)
+ {static} void refresh(String)
}
class com.welab.event.vo.MetaInitVo {
- String meta
- String fullDataTask
- Object pkVlaue
- boolean pkVbatch
}
class com.welab.event.config.rocketmq.listener.MetaDataProcess {
- MetaDataMappingManager metaDataMappingManager
+ void execute(MetaData)
}
class com.welab.event.vo.CanalMetaInfoVO {
- Long id
- String metaName
- String currentMode
- Long lastPkId
- String meta
- String metaUpdate
- String initScript
}
class com.welab.event.app.manager.group.DwsGroupForTopicManager {
+ void subscriptionQueue(String,boolean,String)
# void subscriptionHandler(String,Map<String,List<ConsumerInfo>>,int,String)
# void subsQueue(String,int,AtomicInteger,String,String,String)
+ void registerMeta(String)
+ void registerTopic(String,String)
+ boolean buildPartition(List<String>,RocketMQDWSConsumerComponent)
+ Integer getMaxSubs(String,boolean)
+ void registerPath(String)
+ String getBeanType()
}
enum com.welab.event.enums.MetaInfoStatusEnum {
+  FULL_COLUMN
+  INCREMENT_COLUMN
+  NORMAL
- int mode
+ {static} MetaInfoStatusEnum getEnum(Integer)
}
class com.welab.event.service.QlTest {
+ {static} void main(String[])
}
interface com.welab.event.mapper.EventActionMapper {
~ int insert(EventAction)
~ List<EventAction> selectByQueryEventActionVo(QueryEventActionVo)
~ int updateByPrimaryKey(EventAction)
~ List<EventAction> selectEventActionByEventId(Long)
~ int deleteEventActionByEventId(Long)
~ int insertEventActionRel(Long,List<Long>)
}
class com.welab.event.model.dw.ConsumerInfo {
- String dataBase
- String sourceTable
- String targetTable
}
enum com.welab.event.constant.ESHandlerTypeEnum {
+  WRITE_HANDLER
+  SCRIPT_HANDLER
- Byte typeValue
}
class com.welab.event.vo.QueryEventActionVo {
- int pageNum
- int pageSize
- String nameLike
}
class com.welab.event.app.component.es.EsUtilComponent {
- RestHighLevelClient client
- JedisCluster redisClient
- {static} ConcurrentHashMap<String,String> SCRIPT_MAP
- String INDEX
- String UPDATE
- String DELETE
+ RestStatus createIndex(String)
+ RestStatus addDocument(String,JSONObject,String)
+ RestStatus addScript(String,String)
- void initScript(String,String)
+ void addColumn(String,JSONObject)
- XContentBuilder buildProp(XContentBuilder,String,JSONObject)
- XContentBuilder newProp(XContentBuilder,JSONObject)
- XContentBuilder process(XContentBuilder,JSONObject)
+ RestStatus deleteDocument(String,String)
+ RestStatus updateDocument(UpdateRequest)
+ RestStatus updateDocument(String,JSONObject,String)
+ RestStatus updateToDeleteDocument(String,JSONObject,String)
+ boolean existDocument(String,String)
+ Map<String,Object> findDocumentAllFiled(String,String,String[])
+ RestStatus updateOrAddNested(String,JSONObject,String,String,String,String)
+ RestStatus bulkRequest(String,Map<String,Object>)
+ RestStatus bulkRequestForUpdate(String,List<UpdateRequest>)
# String getFailMsg(BulkItemResponse,DocWriteRequest<?>)
+ MultiGetResponse bulkRequestForGet(String,List<Item>)
+ RestStatus bulkRequestForAdd(String,List<IndexRequest>)
+ UpdateRequest buildExecScript(String,String,String)
+ SearchResponse search(SearchRequest)
+ JSONObject queryOneBySQL(String)
+ JSONObject queryOneBySQL(String,List<JSONObject>)
+ {static} Comparator<? super JSONObject> buildComparator(List<JSONObject>)
}
class com.welab.event.model.CanalMetaProcessExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CanalMetaProcessExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.event.model.CanalMetaProcessExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andMetaIsNull()
+ Criteria andMetaIsNotNull()
+ Criteria andMetaEqualTo(String)
+ Criteria andMetaNotEqualTo(String)
+ Criteria andMetaGreaterThan(String)
+ Criteria andMetaGreaterThanOrEqualTo(String)
+ Criteria andMetaLessThan(String)
+ Criteria andMetaLessThanOrEqualTo(String)
+ Criteria andMetaLike(String)
+ Criteria andMetaNotLike(String)
+ Criteria andMetaIn(List<String>)
+ Criteria andMetaNotIn(List<String>)
+ Criteria andMetaBetween(String,String)
+ Criteria andMetaNotBetween(String,String)
+ Criteria andTopicIsNull()
+ Criteria andTopicIsNotNull()
+ Criteria andTopicEqualTo(String)
+ Criteria andTopicNotEqualTo(String)
+ Criteria andTopicGreaterThan(String)
+ Criteria andTopicGreaterThanOrEqualTo(String)
+ Criteria andTopicLessThan(String)
+ Criteria andTopicLessThanOrEqualTo(String)
+ Criteria andTopicLike(String)
+ Criteria andTopicNotLike(String)
+ Criteria andTopicIn(List<String>)
+ Criteria andTopicNotIn(List<String>)
+ Criteria andTopicBetween(String,String)
+ Criteria andTopicNotBetween(String,String)
+ Criteria andPartitionTextIsNull()
+ Criteria andPartitionTextIsNotNull()
+ Criteria andPartitionTextEqualTo(String)
+ Criteria andPartitionTextNotEqualTo(String)
+ Criteria andPartitionTextGreaterThan(String)
+ Criteria andPartitionTextGreaterThanOrEqualTo(String)
+ Criteria andPartitionTextLessThan(String)
+ Criteria andPartitionTextLessThanOrEqualTo(String)
+ Criteria andPartitionTextLike(String)
+ Criteria andPartitionTextNotLike(String)
+ Criteria andPartitionTextIn(List<String>)
+ Criteria andPartitionTextNotIn(List<String>)
+ Criteria andPartitionTextBetween(String,String)
+ Criteria andPartitionTextNotBetween(String,String)
+ Criteria andPartitionIsNull()
+ Criteria andPartitionIsNotNull()
+ Criteria andPartitionEqualTo(Integer)
+ Criteria andPartitionNotEqualTo(Integer)
+ Criteria andPartitionGreaterThan(Integer)
+ Criteria andPartitionGreaterThanOrEqualTo(Integer)
+ Criteria andPartitionLessThan(Integer)
+ Criteria andPartitionLessThanOrEqualTo(Integer)
+ Criteria andPartitionIn(List<Integer>)
+ Criteria andPartitionNotIn(List<Integer>)
+ Criteria andPartitionBetween(Integer,Integer)
+ Criteria andPartitionNotBetween(Integer,Integer)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.event.model.CanalMetaProcessExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.event.model.CanalMetaProcessExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.event.app.component.fulldatatask.IncrementColumnFullDataComponent {
~ void runTask()
- void doMigrate(CanalMetaInfo,JSONObject,String,Set<String>,Map<String,List<String>>)
}
class com.welab.event.model.CanalMetaInfoExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> CanalMetaInfoExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.event.model.CanalMetaInfoExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andMetaNameIsNull()
+ Criteria andMetaNameIsNotNull()
+ Criteria andMetaNameEqualTo(String)
+ Criteria andMetaNameNotEqualTo(String)
+ Criteria andMetaNameGreaterThan(String)
+ Criteria andMetaNameGreaterThanOrEqualTo(String)
+ Criteria andMetaNameLessThan(String)
+ Criteria andMetaNameLessThanOrEqualTo(String)
+ Criteria andMetaNameLike(String)
+ Criteria andMetaNameNotLike(String)
+ Criteria andMetaNameIn(List<String>)
+ Criteria andMetaNameNotIn(List<String>)
+ Criteria andMetaNameBetween(String,String)
+ Criteria andMetaNameNotBetween(String,String)
+ Criteria andCurrentModeIsNull()
+ Criteria andCurrentModeIsNotNull()
+ Criteria andCurrentModeEqualTo(String)
+ Criteria andCurrentModeNotEqualTo(String)
+ Criteria andCurrentModeGreaterThan(String)
+ Criteria andCurrentModeGreaterThanOrEqualTo(String)
+ Criteria andCurrentModeLessThan(String)
+ Criteria andCurrentModeLessThanOrEqualTo(String)
+ Criteria andCurrentModeLike(String)
+ Criteria andCurrentModeNotLike(String)
+ Criteria andCurrentModeIn(List<String>)
+ Criteria andCurrentModeNotIn(List<String>)
+ Criteria andCurrentModeBetween(String,String)
+ Criteria andCurrentModeNotBetween(String,String)
+ Criteria andLastPkIdIsNull()
+ Criteria andLastPkIdIsNotNull()
+ Criteria andLastPkIdEqualTo(Long)
+ Criteria andLastPkIdNotEqualTo(Long)
+ Criteria andLastPkIdGreaterThan(Long)
+ Criteria andLastPkIdGreaterThanOrEqualTo(Long)
+ Criteria andLastPkIdLessThan(Long)
+ Criteria andLastPkIdLessThanOrEqualTo(Long)
+ Criteria andLastPkIdIn(List<Long>)
+ Criteria andLastPkIdNotIn(List<Long>)
+ Criteria andLastPkIdBetween(Long,Long)
+ Criteria andLastPkIdNotBetween(Long,Long)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.event.model.CanalMetaInfoExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.event.model.CanalMetaInfoExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.event.controller.EventController {
- EventServiceImpl eventService
- ProductService productService
+ Response<PageInfo<Event>> eventPage(QueryEventVo)
+ Response<EventVo> detail(Long)
+ Response save(EventVo)
+ Response updateStatus(Event)
+ Response<List<ProductVO>> platform()
}
class com.welab.event.vo.QueryEventVo {
- int pageNum
- int pageSize
- String nameLike
- List<String> nameList
}
class com.welab.event.app.manager.BulkBuilderManager {
+ List<UpdateRequest> buildUpdateRequest(EsData)
+ UpdateRequest buildUpdateRequest(String,JSONObject,String)
+ UpdateRequest buildScriptRequest(String,JSONObject,String,ScriptConfig)
+ UpdateRequest buildUpdateNestedRequest(String,EsData,int,String)
+ UpdateRequest buildInitScriptRequest(String,String,JSONObject)
+ IndexRequest buildAddRequest(String,JSONObject,String)
}
class com.welab.event.vo.EventVo {
~ List<EventAction> actionList
~ List<Long> actionIds
}
class com.welab.event.controller.DwsMetaManagerController {
- BaseCanalMetaInfoService baseCanalMetaInfoService
+ Response<List<CanalMetaInfoVO>> getMetaInfoList(String)
+ Response<Object> updateMetaInfoList(CanalMetaInfoVO)
}
class com.welab.event.app.manager.MetaDataManager {
+ void refresh(String)
}
class com.welab.event.app.manager.DwsQueueManager {
- String beanType
- List<AbstractDwsGroupManager> managerList
~ Map<String,AbstractDwsGroupManager> beanMap
~ String fixedBeanType
+ void init()
- AbstractDwsGroupManager getBean()
+ void registerMeta(String)
+ void registerTopic(String,String)
+ void subscriptionQueue(String,boolean,String)
+ void logout(String)
+ void pause(String)
+ void start(String)
+ void restart(String)
+ void continueTask(String)
+ void registerPath(String)
+ void destroy()
+ void reBuildAndStart(String)
+ void rebuildAndStart(MetaInitVo)
}
class com.welab.event.controller.TestController {
- IWelabEventService welabEventService
+ String testPublish(HttpServletRequest)
}
class com.welab.event.exception.ActionDelayQueueException {
}
class com.welab.event.app.manager.group.DwsGroupForMetaManager {
+ void subscriptionQueue(String,boolean,String)
# void subscriptionHandler(String,Map<String,List<ConsumerInfo>>,int,String)
# void subsQueue(String,int,AtomicInteger,String,String,String)
+ void registerMeta(String)
+ void registerTopic(String,String)
+ boolean buildPartition(List<String>,RocketMQDWSConsumerComponent)
+ Integer getMaxSubs(String,boolean)
+ void registerPath(String)
+ String getBeanType()
}
class com.welab.event.service.impl.action.AppPushActionServiceImpl {
- MessagePushService messagePushService
- ApplicationService applicationService
- DisburseService disburseService
# void doProcess(ActionJob)
- MessagePushWithTemplate buildMessagePushWithTemplate(EventDto,String)
- MessagePushWithTemplate buildApprovedPushWithTemplate(EventDto,String)
- MessagePushWithTemplate buildOfflineFifConfirmPushWithTemplate(EventDto,String)
- MessagePushWithTemplate buildDisbursedOfflineFifPushWithTemplate(EventDto,String)
- MessagePushWithTemplate buildDisbursedOnlinePushWithTemplate(EventDto,String)
- MessagePushWithTemplate buildClosedPushWithTemplate(EventDto,String)
- MessagePushWithTemplate buildRepaymentPushWithTemplate(EventDto,String)
}
class com.welab.event.service.impl.action.AppPushActionServiceImpl$MessagePushWithTemplate {
- Long userId
- String templateName
- Map<String,String> replaceField
- Map<String,Object> eventMap
}
class com.welab.event.controller.ActionController {
- EventActionServiceImpl actionService
- ActionLogServiceImpl actionLogService
+ Response<List<EventAction>> all(QueryEventActionVo)
+ Response<PageInfo<EventAction>> actionPage(QueryEventActionVo)
+ Response save(EventAction)
+ Response updateStatus(EventAction)
+ Response<List<String>> getMessageKeys(String)
+ Response<List<String>> actionTypes()
+ Response retry(Long)
}
interface com.welab.event.mapper.EventMapper {
~ int insert(Event)
~ List<Event> selectByQueryEventVo(QueryEventVo)
~ int updateByPrimaryKey(Event)
}
class com.welab.event.constant.EventParamConstans {
+ {static} String WELAB_EVENT_SKIP_EVENT_ACTION_KEY
+ {static} String WELAB_EVENT_DISBURSED_EMAIL_ACTION_NAME
}
class com.welab.event.service.dw.DmHandlerCmdExeTest {
+ void dmHandlerForCount()
}
class com.welab.event.util.FullDataTaskSqlBuilderUtil {
+ {static} String buildPkSql(SQLmodel)
+ {static} String buildSlaveSql(SQLmodel)
}
class com.welab.event.util.FullDataTaskSqlBuilderUtil$SQLmodel {
- String tableKey
- JSONObject tableJson
- List<String> pkNames
- String limit
- List<String> columnList
- JSONObject where
+ <<Create>> SQLmodel(String,JSONObject,List<String>,String)
+ <<Create>> SQLmodel(String,JSONObject,List<String>,String,List<String>)
+ <<Create>> SQLmodel(String,List<String>,JSONObject)
+ <<Create>> SQLmodel(String,List<String>,JSONObject,JSONObject)
}
abstract class com.welab.event.model.dm.DmHandlerInfo {
- String sourceIndex
- String sourcePkName
- List<String> condition
- String sinkIndex
- String sinkPkNames
+ {abstract}boolean build(EsData,JSONObject)
}
class com.welab.event.service.Db2Excel {
- JdbcTemplate jdbcTemplate
+ void testCreate()
+ {static} Colour getNearestColour(String)
+ {static} void main(String[])
}
class com.welab.event.app.manager.DatawarehouseZkManager {
- ZkUtil zkUtil
- String ROOT
- String datawarehouse
- String ip
- String ipPath
- String username
- String password
- String address
+ void init()
- String pathstartHandler(String)
+ String getMetaPartition(String)
+ String getMetaVersion(String)
+ boolean registerMeta(String)
+ void addIPMeta(String)
+ boolean logoutMeta(String)
+ void metadataListener()
+ void activeListener(ChildEventHook)
+ void removeMeta(String)
}
interface com.welab.event.app.manager.DatawarehouseZkManager$ChildEventHook {
+ void changing(PathChildrenCacheEvent)
}
class com.welab.event.SimpleTest {
+ <<Create>> SimpleTest()
+ {static} void print(Object)
}
class com.welab.event.config.DwsNameManager {
- {static} ApplicationContext context
+ void setApplicationContext(ApplicationContext)
+ {static} String getTableName(String)
+ String getTopic(String)
}
class com.welab.event.app.command.rocketmq.RocketMQConsumerCmdExe {
- DatawarehouseZkManager datawarehouseZkManager
- CheckPartitionChanagedManager checkPartitionChanagedManager
- DwsQueueManager dwsqueueManager
- LinkedBlockingQueue<Runnable> consumerQueue
- Integer device
- {static} double BLOCK_NUM
- {static} int MAX_COMMON_THREAD_COUNT
~ BlockingQueue<Runnable> queue
~ ThreadPoolExecutor queuePullPool
+ void start()
- void putStart(String[])
- void putStart()
+ void loadMeta()
}
class com.welab.event.app.command.rocketmq.RocketMQConsumerCmdExe$ConsumerManagerTask {
- int errorTimes
+ void run()
}
class com.welab.event.app.command.dw.DwsHandlerCmdExe {
- EsUtilComponent esUtil
- EsInsertToUpdateCmdExe esInsertToUpdateCmdExe
- JedisCluster redisClient
- BulkBuilderManager bulkBuilderManager
- RocketMQProducer rocketMQProducer
- SecondHandlerManager secondHandlerManager
- ScheduledExecutorService delayExector
+ RestStatus saveDocument(EsData)
+ RestStatus saveDocument(EsData,int)
- void nestedDelete(EsData,String)
- void delete(EsData,int,String)
- void nestedHandler(EsData,String,String)
- void nestedHandler(EsData,String)
- void insert(EsData,int,String)
}
class com.welab.event.util.DWSExpressUtil {
~ {static} Pattern numPattern
+ {static} boolean isBlank(String)
+ {static} boolean isNum(String)
+ {static} boolean contains(String,String)
+ {static} String replace(String,String,String)
+ {static} Integer replaceToInt(String,String)
}
class com.welab.event.model.dw.EsDataExt {
- String dataId
- EsData data
}
class com.welab.event.service.TestUser {
+ {static} void main(String[])
}
class com.welab.event.web.ActionControllerTest {
+ void testSave()
+ void testQuery()
}
class com.welab.event.aop.RedisAspect {
- JedisCluster jedisCluster
+ void cachePointcut()
+ void doPut(JoinPoint,Object,RedisCachePut)
+ void doClear(JoinPoint,RedisCacheClear)
+ Object doCache(ProceedingJoinPoint,RedisCache)
- Object save2Redis(String,RedisCache,Object)
- String buildRedisKey(RedisCache,JoinPoint,ExpressionParser,StandardEvaluationContext)
- boolean isEnableCacheAction(RedisCache,JoinPoint,ExpressionParser,StandardEvaluationContext)
- StandardEvaluationContext initContextVariables(JoinPoint)
}
class com.welab.event.app.manager.CheckPartitionChanagedManager {
- String beanType
- DatawarehouseZkManager datawarehouseZkManager
- DwsQueueManager dwsQueueManager
- Map<String,String> metaPartition
- Map<String,RocketMQDWSConsumerComponent> metaRocketMq
+ void checkPartition(String,String,RocketMQDWSConsumerComponent)
+ void checkPartition()
}
class com.welab.event.app.manager.CheckPartitionChanagedManager$CheckPartitionThread {
+ void run()
}
class com.welab.event.app.component.rocketmq.RocketMQConsumer {
- Environment env
- ZkUtil zkUtil
- String ROOT
- String path
- String ip
~ Map<String,DefaultMQPushConsumer> cacheConsumer
+ void init()
+ void subscriptionDisorder(String,String,MessageListenerConcurrently,MessageModel)
+ void subscriptionDisorder(String,String,MessageListenerConcurrently)
+ void subscriptionOrderly(String,String,MessageListenerOrderly)
- boolean registerTopic(String)
+ void unSubs(String)
}
abstract class com.welab.event.app.command.dw.AbstractDmHandler {
# EsUtilComponent esUtil
# DwsHandlerCmdExe dwsHandlerCmdExe
+ {static} AbstractDmHandler getDmHandler(HandlerTypeEnum)
+ RestStatus dmHandler(DmHandlerInfo)
# {abstract}RestStatus sinkData(EsData)
# {abstract}EsData buildSinkData(DmHandlerInfo)
}
enum com.welab.event.app.command.dw.HandlerTypeEnum {
+  INTERNAL
+  EXTERNAL
+  ASSOCIATION_RELATION
- String desc
- String beanName
- Class<?> handlerClass
}
abstract class com.welab.event.app.component.fulldatatask.AbstractFullDataComponent {
+ {static} String FCFD
+ {static} String ICFD
~ int limit
# Runnable incrementHook
# MetaDataMapping metaDataMapping
# String meta
# JdbcTemplate jdbcTemplate
# MetaDataMappingManager metaDataMappingManager
# BaseCanalMetaInfoService baseCanalMetaInfoService
- JedisCluster jedisCluster
# Object pkVlaue
+ void run()
+ {static} AbstractFullDataComponent buildTask(String,String)
# JSONObject parseMetaData(MetaDataMapping)
~ {abstract}void runTask()
+ MetaData buildMetaData(String,String,List<Map<String,Object>>,String)
# ThreadPoolExecutor buildThreadPool(int)
# void shutdownPool(ThreadPoolExecutor)
# void clearMetaInfo(CanalMetaInfo)
# String saveLastRecord(CanalMetaInfo,Long)
}
class com.welab.event.web.BaseWebTest {
- WebApplicationContext context
- String contenPath
- int port
+ TestRestTemplate template
+ MockMvc mvc
+ String basePath
+ void setUp()
+ MultiValueMap<String,String> bean2MultiValueMap(Object)
}
class com.welab.event.constant.EventMqConstants {
+ {static} String WELAB_EVENT_QUEUE_NAME
+ {static} String WELAB_EVENT_DEAD_QUEUE_NAME
+ {static} String WELAB_EVENT_DELAY_QUEUE_NAME
+ {static} String WELAB_EVENT_FANOUT_EXCHANGE_NAME
+ {static} String WELAB_EVENT_DELAY_EXCHANGE_NAME
- <<Create>> EventMqConstants()
}
class com.welab.event.model.dm.ExternalDmHandlerInfo {
- String sourceIndex
- JSONObject condition
- JSONObject findResult
- String sinkIdxId
- String sinkIndex
- JSONObject sinkCondition
- Map<String,String> sinkField
}
class com.welab.event.model.ext.CanalMetaInfoExt {
- String metaNameLike
}
class com.welab.event.config.ElasticsearchConfigurationExt {
- String ips
- String username
- String password
+ RestHighLevelClient buildEsHighLevelClient()
+ EsUtilComponent buildEsUtilComponent(JedisCluster,RestHighLevelClient)
}
class com.welab.event.util.RocketMQConsumerBuilderUtil {
- {static} long DEFAULT_POLLTIMEOUT
- {static} Map<String,RocketMQDWSConsumerComponent> cacheMeta
- {static} AtomicInteger brokerIdBuilder
+ {static} RocketMQDWSConsumerComponent buildMQConsumer(String,String,String)
+ {static} RocketMQDWSConsumerComponent buildMQConsumer(String,String,String,long)
+ {static} void removeConsumer(RocketMQDWSConsumerComponent)
+ {static} void initConsumer(RocketMQDWSConsumerComponent)
}
class com.welab.event.model.CanalMetaInfoWithBLOBs {
- String meta
- String metaUpdate
- String initScript
+ String getMeta()
+ void setMeta(String)
+ String getMetaUpdate()
+ void setMetaUpdate(String)
+ String getInitScript()
+ void setInitScript(String)
}
enum com.welab.event.constant.RedisKeyEnum {
+  EVENT_MSG_LOG
+  EVENT_NAME_REL
+  EVENT_INFO
+  PRODUCT_INFO
- String key
- String desc
- Integer failureTime
+ String getCacheKey(String)
}
class com.welab.event.util.DataTransitionUtil {
+ {static} String CURRENT_TYPE
+ {static} String CURRENT_DATA
+ {static} String CURRENT_RULE_CONFIG
- <<Create>> DataTransitionUtil()
+ {static} void row2Column(DataTransitionContext)
+ {static} void main(String[])
}
class com.welab.event.util.DataTransitionUtil$DataTransitionContext {
- JSONObject oldData
- JSONObject newData
- JSONObject resultData
- JSONObject param
- String type
}
class com.welab.event.app.component.rocketmq.RocketmqDataHandlerComponent {
# void handlerData(RocketMQDWSConsumerComponent,Map<String,Map<Integer,List<PartitionData>>>,Map<String,Map<Integer,MessageQueue>>,AtomicInteger)
- void handlerData(RocketMQDWSConsumerComponent,MessageQueue,List<PartitionData>,AtomicInteger)
+ void seekOffset(DefaultLitePullConsumer,Long,MessageQueue)
}
class com.welab.event.model.dm.InternalDmHandlerInfo {
}
enum com.welab.event.constant.CommonStatusEnum {
+  OPEN
+  CLOSE
- int val
- String desc
}
class com.welab.event.service.dw.MetaDataMappingManagerTest {
- MetaDataMappingManager metaDataMappingManager
+ void testDynamicConsumerInfo()
+ void testHandData()
+ void testFullData()
}
class com.welab.event.config.RabbitConfig {
+ Queue welabSeaEventQueue()
~ FanoutExchange welabSeaFanoutExchange()
~ Binding bindingWelabSeaExchange(Queue,FanoutExchange)
+ Queue welabSeaEventDeadQueue()
+ DirectExchange welabSeaEventDelayExchange()
+ Queue welabSeaEventDelayQueue()
+ Binding welabSeaEvenDelayBinding(Queue,DirectExchange)
}
class com.welab.event.service.dw.EsTest {
- EsUtilComponent esUtil
+ void createIndex()
+ void addCloumn()
+ void update()
+ void insert()
+ void delete()
+ void exists()
+ void testMysql()
+ void addDeleteScript()
+ void addinitDataScript()
+ void testScript()
+ void find()
+ void updateOrAddNestedTest()
}
class com.welab.event.controller.DwManagerController {
- DwsQueueCmdExe dwsQueueCmdExe
- DwsQueueManager dwsQueueManager
- BaseCanalMetaInfoService baseCanalMetaInfoService
+ Response<Void> pause(String)
+ Response<Void> restart(String)
+ Response<Void> rebuildAndStart(String)
+ Response<Void> rebuildAndStart(MetaInitVo)
+ Response<Void> continueTask(String)
+ Response<Void> refresh(String)
+ Response<Boolean> updateMeta(String,Integer)
}
class com.welab.event.service.dw.DwSaveRecordCmdTest {
- DwsHandlerCmdExe dwSaveRecordCmd
- EsUtilComponent esUtil
+ void test()
+ void testInitRecord()
+ void testIncrementRecord()
+ void delete()
}
class com.welab.event.app.component.rocketmq.RocketmqDataPretreatmentComponent {
+ Map<String,Map<Integer,List<PartitionData>>> buildGroupData(List<MessageExt>,String)
}
interface com.welab.event.mapper.EventMsgLogMapper {
~ int insert(EventMsgLog)
~ EventMsgLog selectByMsgId(String)
}
class com.welab.event.model.ActionLog {
- Long id
- String msgId
- Long actionId
- String actionType
- String errorMsg
- Byte state
- Date createdAt
- Date updateAt
}
interface com.welab.event.mapper.CanalMetaInfoMapper {
~ long countByExample(CanalMetaInfoExample)
~ int deleteByExample(CanalMetaInfoExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CanalMetaInfoWithBLOBs)
~ int insertSelective(CanalMetaInfoWithBLOBs)
~ List<CanalMetaInfoWithBLOBs> selectByExampleWithBLOBs(CanalMetaInfoExample)
~ List<CanalMetaInfo> selectByExample(CanalMetaInfoExample)
~ CanalMetaInfoWithBLOBs selectByPrimaryKey(Long)
~ int updateByExampleSelective(CanalMetaInfoWithBLOBs,CanalMetaInfoExample)
~ int updateByExampleWithBLOBs(CanalMetaInfoWithBLOBs,CanalMetaInfoExample)
~ int updateByExample(CanalMetaInfo,CanalMetaInfoExample)
~ int updateByPrimaryKeySelective(CanalMetaInfoWithBLOBs)
~ int updateByPrimaryKeyWithBLOBs(CanalMetaInfoWithBLOBs)
~ int updateByPrimaryKey(CanalMetaInfo)
}
class com.welab.event.service.dw.EsScriptInitTest {
- EsUtilComponent esUtil
+ void addDeleteScript()
+ void addinitDataScript()
+ void common_script()
+ void testScript()
+ void count_plan_success()
+ void sign_faceid_status()
}
class com.welab.event.app.component.fulldatatask.FullColumnFullDataComponent {
~ void runTask()
}
class com.welab.event.model.CanalMetaProcess {
- Long id
- String meta
- String topic
- String partitionText
- Integer partition
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getMeta()
+ void setMeta(String)
+ String getTopic()
+ void setTopic(String)
+ String getPartitionText()
+ void setPartitionText(String)
+ Integer getPartition()
+ void setPartition(Integer)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.event.config.Swagger2Config {
- boolean swaggerEnable
+ Docket createRestApi()
- ApiInfo apiInfo()
}
abstract class com.welab.event.app.manager.group.AbstractDwsGroupManager {
# Map<String,Map<String,RocketMQDWSConsumerComponent>> queuePool
# MetaDataMappingManager metaDataMappingManagers
# DatawarehouseZkManager datawarehouseZkManager
# String topicPrefix
# CheckPartitionChanagedManager checkPartitionChanagedManager
# String namesvraddr
# Long polltimeout
# Integer device
# RocketMQConsumerCmdExe rocketMQConsumerCmdExe
- BaseCanalMetaInfoService baseCanalMetaInfoService
- DwsQueueCmdExe dwsQueueCmdExe
- JedisCluster jedisCluster
+ {abstract}String getBeanType()
+ {abstract}void registerMeta(String)
+ {abstract}void registerTopic(String,String)
+ {abstract}void subscriptionQueue(String,boolean,String)
# {abstract}void subscriptionHandler(String,Map<String,List<ConsumerInfo>>,int,String)
# {abstract}void subsQueue(String,int,AtomicInteger,String,String,String)
+ {abstract}Integer getMaxSubs(String,boolean)
+ {abstract}boolean buildPartition(List<String>,RocketMQDWSConsumerComponent)
+ void logout(String)
# String buildKey(List<String>)
+ void pause(String)
+ void start(String)
+ void restart(String)
+ void continueTask(String)
+ {abstract}void registerPath(String)
+ void reBuildAndStart(String)
+ void rebuildAndStart(MetaInitVo)
}
class com.welab.event.model.dm.AssociationRelationDmHandlerInfo {
- FindResultConfig findResult
- List<JSONObject> sinkData
- String nestedFieldName
- String nestedFieldPkNames
- List<String> nestedPkValue
- String sourceDwTableNestedFieldName
- boolean nested
- List<String> sinkFields
+ boolean build(EsData,JSONObject)
}
class com.welab.event.model.dm.AssociationRelationDmHandlerInfo$FindResultConfig {
~ String type
~ List<JSONObject> config
}
interface com.welab.event.service.IWelabEventService {
+ void publishEvent(EventDto)
}
class com.welab.event.util.ZkUtil {
- {static} Map<String,ZkUtil> cache
- CuratorFramework zkClient
~ Map<String,PathChildrenCache> cachePathListener
~ Map<String,TreeCache> cachePathNodeListener
- <<Create>> ZkUtil()
+ {static} ZkUtil build(String,String,String)
+ void close()
+ void deleteRecursive(String)
+ void writeData(String,byte[])
+ boolean create(String,CreateMode)
+ void createAndSaveData(String,byte[],CreateMode)
+ void createEphemeral(String)
+ void delete(String)
+ boolean exists(String)
+ List<String> getChildren(String)
+ byte[] readData(String,boolean)
+ void subscribeChildChanges(String,PathChildrenCacheListener)
+ void unsubscribeChildChanges(String,PathChildrenCacheListener)
+ void subscribeDataChanges(String,TreeCacheListener)
+ void subscribeStateChanges(ConnectionStateListener)
+ void unsubscribeDataChanges(String,TreeCacheListener)
+ byte[] readData(String)
}
enum com.welab.event.constant.EventNameEnum {
+  REGISTERED
+  SIMULATION
+  USER_PROFILES
+  WORK_PROFILES
+  CONTACT
+  FACE_SUBMIT
+  PROOF_OR_WORK
+  ADDITIONAL_INFO
+  BANK_CARD_SUBMIT
+  REJECTED
+  CLOSED
+  REPAYMENT
+  SEND_BACK
+  APPROVED
+  TIMEOUT_EXPIRED_ACCEPT_OFFER
+  TIMEOUT_EXPIRED_OFFLINE
+  TIMEOUT_EXPIRED_SENDBACK
+  CANCELED_APPROVED
+  CANCELED_CUSTOMER
+  DISBURSED_ONLINE
+  DISBURSED_OFFLINE_FIF
+  DISBURSED_OFFLINE_ALFAMART
+  SUBMIT_APPLY
+  BACK_SUBMIT_APPLY
+  OFFLINE_FIF_CONFIRM
+  OFFLINE_IN_DISBURSED
+  ONLINE_IN_DISBURSED
- String name
- String desc
+ {static} EventNameEnum findEventNameEnumByName(String)
}
interface com.welab.event.mapper.ActionLogMapper {
~ int insert(ActionLog)
~ List<ActionLog> selectActionLog(QueryActionLogVo)
~ int updateByMsgIdAndActionId(ActionLog)
}
class com.welab.event.app.command.rocketmq.EsInsertToUpdateCmdExe {
+ {static} String topic
- RocketMQConsumer rocketMQConsumer
- EsUtilComponent esUtil
- DwsNameManager dwsNameManager
- JedisCluster jedisCluster
+ void init()
+ ConsumeConcurrentlyStatus consumeMessage(List<MessageExt>,ConsumeConcurrentlyContext)
+ void updateDocument(UpdateRequest,String)
}
interface com.welab.event.mapper.CanalMetaProcessMapper {
~ long countByExample(CanalMetaProcessExample)
~ int deleteByExample(CanalMetaProcessExample)
~ int deleteByPrimaryKey(Long)
~ int insert(CanalMetaProcess)
~ int insertSelective(CanalMetaProcess)
~ List<CanalMetaProcess> selectByExample(CanalMetaProcessExample)
~ CanalMetaProcess selectByPrimaryKey(Long)
~ int updateByExampleSelective(CanalMetaProcess,CanalMetaProcessExample)
~ int updateByExample(CanalMetaProcess,CanalMetaProcessExample)
~ int updateByPrimaryKeySelective(CanalMetaProcess)
~ int updateByPrimaryKey(CanalMetaProcess)
}
class com.welab.event.service.impl.action.IntegralActionServiceImpl {
# void doProcess(ActionJob)
}
class com.welab.event.service.impl.EventServiceImpl {
- EventMapper eventMapper
- EventActionMapper eventActionMapper
- ProductService productService
+ boolean saveEvent(EventVo)
- boolean addEvent(Event)
- boolean updateEvent(Event)
- Event selectByEventName(String)
+ PageInfo<Event> getEventPage(QueryEventVo)
+ Event selectByEventId(Long)
+ List<Event> selectByEventNames(List<String>)
+ EventVo selectEventDetailById(Long)
+ List<Event> selectByQueryEventVo(QueryEventVo)
+ boolean updateStatus(long,Boolean)
+ ProductVO getProductByOrgId(Long)
}
class com.welab.event.model.Event {
- Long id
- String name
- String description
- Byte scope
- String scopeModule
- Boolean status
- Date createdAt
- Date updatedAt
}
class com.welab.event.job.TransferData2MonthTableJob {
- WelabSeaDynamicDbService welabSeaDynamicDbService
- JdbcTemplate jdbcTemplate
+ void execute(ShardingContext)
}
class com.welab.event.app.manager.group.DwsGroupForQueueManager {
+ void subscriptionQueue(String,boolean,String)
# void subscriptionHandler(String,Map<String,List<ConsumerInfo>>,int,String)
# void subsQueue(String,int,AtomicInteger,String,String,String)
+ void registerMeta(String)
+ void registerTopic(String,String)
+ boolean buildPartition(List<String>,RocketMQDWSConsumerComponent)
+ Integer getMaxSubs(String,boolean)
+ void registerPath(String)
+ String getBeanType()
}
class com.welab.event.app.component.rocketmq.RocketMQProducer {
- Environment env
- DefaultMQProducer defaultMQProducer
- JedisCluster jedisCluster
+ void init()
+ void send(String,Object)
+ void sendAndSetKey(String,Object,Object,int,boolean)
+ void sendAndSetKey(String,Object,Object,int)
- void saveToRedis(Message)
+ void sendAndSetTags(String,String,Object,int)
+ void sendAndSetTags(String,String,Object,int,boolean)
+ void resendMsg()
}
class com.welab.event.app.component.rocketmq.RocketMQProducer$DelayTimeLevel {
+ {static} int LEVEL_1S
+ {static} int LEVEL_5S
+ {static} int LEVEL_1M
+ {static} int LEVEL_30M
+ {static} int LEVEL_1H
}
class com.welab.event.model.dw.MetaData {
- boolean isFullData
- String sourceDataBase
- String sourceTable
- String targetTable
- List<JSONObject> data
- List<JSONObject> old
- Boolean isDdl
- String type
}
class com.welab.event.filter.LogFilter {
- {static} String NOTIFICATION_PREFIX
- {static} String REQUEST_PREFIX
- {static} String RESPONSE_PREFIX
- AtomicLong _id
# void doFilterInternal(HttpServletRequest,HttpServletResponse,FilterChain)
+ void destroy()
- void log(StringBuilder)
- StringBuilder prefixId(StringBuilder,long)
- void printRequestLine(StringBuilder,String,long,String,String)
- void printResponseLine(StringBuilder,String,long,int)
- void printPrefixedHeaders(StringBuilder,long,String,HttpServletRequest)
}
class com.welab.event.model.EventAction {
- Long id
- String name
- String actionType
- String description
- String messageKey
- Boolean status
- Date createdAt
- Date updatedAt
}
class com.welab.event.service.dw.RocketMqConsumerTest {
- DwsQueueManager dwsQueueManager
- MetaDataProcess metaDataProcess
+ void testTransition()
+ void testSeek()
+ void processMsg()
}
class com.welab.event.app.command.rocketmq.DwsQueueCmdExe {
- String topic
- DwsQueueManager dwsQueueManager
- RocketMQConsumer rocketMQConsumer
- RocketMQProducer productMqProducer
- InitColumnConfigComponent initColumnConfigComponent
# void subscribe()
+ void pushMethod(JSONObject)
+ ConsumeConcurrentlyStatus consumeMessage(List<MessageExt>,ConsumeConcurrentlyContext)
}
class com.welab.event.model.CanalMetaInfo {
- Long id
- String metaName
- String currentMode
- Long lastPkId
- Date createdAt
- Date updatedAt
+ Long getId()
+ void setId(Long)
+ String getMetaName()
+ void setMetaName(String)
+ String getCurrentMode()
+ void setCurrentMode(String)
+ Long getLastPkId()
+ void setLastPkId(Long)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
}
class com.welab.event.app.base.BaseSecondaryProcessingMetaService {
- SecondaryProcessingMetaMapper secondaryProcessingMetaMapper
+ List<SecondaryProcessingMeta> findEnableConfig()
}
abstract class com.welab.event.app.command.dw.second.AbstractSecondHandler {
# JSONObject config
# AbstractDmHandler dmHandlerCmdExe
# ApplicationContext applicationContext
# String beanName
# int consumerType
+ {abstract}boolean filter(EsDataExt)
+ {abstract}void handler(EsDataExt)
}
class com.welab.event.app.command.dw.second.AbstractSecondHandler$ConsumerType {
+ {static} int MessageListenerConcurrently
+ {static} int MessageListenerOrderly
}
class com.welab.event.exception.MessageProcessException {
- {static} long serialVersionUID
- Integer code
+ <<Create>> MessageProcessException(Exception)
}
class com.welab.event.exception.MessageProcessException$ExceptionCode {
+ {static} int IGNORE
+ {static} int ROLLBACK
}
class com.welab.event.model.dw.EsData {
- boolean isFullData
- String targetTable
- String type
- Boolean isPrimaryTable
- String pkNames
- List<String> pkValues
- List<JSONObject> handDataList
- ScriptConfig script
- String nestedFieldName
- String nestedFieldPkNames
- String nestedFieldSinkPkNames
- List<String> nestedPkValues
- List<ScriptConfig> scripts
}
class com.welab.event.model.SecondaryProcessingMetaExample {
# String orderByClause
# boolean distinct
# List<Criteria> oredCriteria
+ <<Create>> SecondaryProcessingMetaExample()
+ void setOrderByClause(String)
+ String getOrderByClause()
+ void setDistinct(boolean)
+ boolean isDistinct()
+ List<Criteria> getOredCriteria()
+ void or(Criteria)
+ Criteria or()
+ Criteria createCriteria()
# Criteria createCriteriaInternal()
+ void clear()
}
abstract class com.welab.event.model.SecondaryProcessingMetaExample$GeneratedCriteria {
# List<Criterion> criteria
# <<Create>> GeneratedCriteria()
+ boolean isValid()
+ List<Criterion> getAllCriteria()
+ List<Criterion> getCriteria()
# void addCriterion(String)
# void addCriterion(String,Object,String)
# void addCriterion(String,Object,Object,String)
+ Criteria andIdIsNull()
+ Criteria andIdIsNotNull()
+ Criteria andIdEqualTo(Long)
+ Criteria andIdNotEqualTo(Long)
+ Criteria andIdGreaterThan(Long)
+ Criteria andIdGreaterThanOrEqualTo(Long)
+ Criteria andIdLessThan(Long)
+ Criteria andIdLessThanOrEqualTo(Long)
+ Criteria andIdIn(List<Long>)
+ Criteria andIdNotIn(List<Long>)
+ Criteria andIdBetween(Long,Long)
+ Criteria andIdNotBetween(Long,Long)
+ Criteria andBeanNameIsNull()
+ Criteria andBeanNameIsNotNull()
+ Criteria andBeanNameEqualTo(String)
+ Criteria andBeanNameNotEqualTo(String)
+ Criteria andBeanNameGreaterThan(String)
+ Criteria andBeanNameGreaterThanOrEqualTo(String)
+ Criteria andBeanNameLessThan(String)
+ Criteria andBeanNameLessThanOrEqualTo(String)
+ Criteria andBeanNameLike(String)
+ Criteria andBeanNameNotLike(String)
+ Criteria andBeanNameIn(List<String>)
+ Criteria andBeanNameNotIn(List<String>)
+ Criteria andBeanNameBetween(String,String)
+ Criteria andBeanNameNotBetween(String,String)
+ Criteria andMetaModelIsNull()
+ Criteria andMetaModelIsNotNull()
+ Criteria andMetaModelEqualTo(String)
+ Criteria andMetaModelNotEqualTo(String)
+ Criteria andMetaModelGreaterThan(String)
+ Criteria andMetaModelGreaterThanOrEqualTo(String)
+ Criteria andMetaModelLessThan(String)
+ Criteria andMetaModelLessThanOrEqualTo(String)
+ Criteria andMetaModelLike(String)
+ Criteria andMetaModelNotLike(String)
+ Criteria andMetaModelIn(List<String>)
+ Criteria andMetaModelNotIn(List<String>)
+ Criteria andMetaModelBetween(String,String)
+ Criteria andMetaModelNotBetween(String,String)
+ Criteria andConfigStatusIsNull()
+ Criteria andConfigStatusIsNotNull()
+ Criteria andConfigStatusEqualTo(Boolean)
+ Criteria andConfigStatusNotEqualTo(Boolean)
+ Criteria andConfigStatusGreaterThan(Boolean)
+ Criteria andConfigStatusGreaterThanOrEqualTo(Boolean)
+ Criteria andConfigStatusLessThan(Boolean)
+ Criteria andConfigStatusLessThanOrEqualTo(Boolean)
+ Criteria andConfigStatusIn(List<Boolean>)
+ Criteria andConfigStatusNotIn(List<Boolean>)
+ Criteria andConfigStatusBetween(Boolean,Boolean)
+ Criteria andConfigStatusNotBetween(Boolean,Boolean)
+ Criteria andDescIsNull()
+ Criteria andDescIsNotNull()
+ Criteria andDescEqualTo(String)
+ Criteria andDescNotEqualTo(String)
+ Criteria andDescGreaterThan(String)
+ Criteria andDescGreaterThanOrEqualTo(String)
+ Criteria andDescLessThan(String)
+ Criteria andDescLessThanOrEqualTo(String)
+ Criteria andDescLike(String)
+ Criteria andDescNotLike(String)
+ Criteria andDescIn(List<String>)
+ Criteria andDescNotIn(List<String>)
+ Criteria andDescBetween(String,String)
+ Criteria andDescNotBetween(String,String)
+ Criteria andCreatedAtIsNull()
+ Criteria andCreatedAtIsNotNull()
+ Criteria andCreatedAtEqualTo(Date)
+ Criteria andCreatedAtNotEqualTo(Date)
+ Criteria andCreatedAtGreaterThan(Date)
+ Criteria andCreatedAtGreaterThanOrEqualTo(Date)
+ Criteria andCreatedAtLessThan(Date)
+ Criteria andCreatedAtLessThanOrEqualTo(Date)
+ Criteria andCreatedAtIn(List<Date>)
+ Criteria andCreatedAtNotIn(List<Date>)
+ Criteria andCreatedAtBetween(Date,Date)
+ Criteria andCreatedAtNotBetween(Date,Date)
+ Criteria andUpdatedAtIsNull()
+ Criteria andUpdatedAtIsNotNull()
+ Criteria andUpdatedAtEqualTo(Date)
+ Criteria andUpdatedAtNotEqualTo(Date)
+ Criteria andUpdatedAtGreaterThan(Date)
+ Criteria andUpdatedAtGreaterThanOrEqualTo(Date)
+ Criteria andUpdatedAtLessThan(Date)
+ Criteria andUpdatedAtLessThanOrEqualTo(Date)
+ Criteria andUpdatedAtIn(List<Date>)
+ Criteria andUpdatedAtNotIn(List<Date>)
+ Criteria andUpdatedAtBetween(Date,Date)
+ Criteria andUpdatedAtNotBetween(Date,Date)
}
class com.welab.event.model.SecondaryProcessingMetaExample$Criterion {
- String condition
- Object value
- Object secondValue
- boolean noValue
- boolean singleValue
- boolean betweenValue
- boolean listValue
- String typeHandler
# <<Create>> Criterion(String)
# <<Create>> Criterion(String,Object,String)
# <<Create>> Criterion(String,Object)
# <<Create>> Criterion(String,Object,Object,String)
# <<Create>> Criterion(String,Object,Object)
+ String getCondition()
+ Object getValue()
+ Object getSecondValue()
+ boolean isNoValue()
+ boolean isSingleValue()
+ boolean isBetweenValue()
+ boolean isListValue()
+ String getTypeHandler()
}
class com.welab.event.model.SecondaryProcessingMetaExample$Criteria {
# <<Create>> Criteria()
}
class com.welab.event.service.listener.ActionJobListener {
+ void deadProcess(String)
}
class com.welab.event.app.manager.SecondHandlerManager {
- CopyOnWriteArrayList<AbstractSecondHandler> secondHandlerList
- BaseSecondaryProcessingMetaService baseSecondaryProcessingMetaService
- RocketMQConsumer rocketMQConsumer
- DwsNameManager dwsNameManager
- ApplicationContext applicationContext
+ void init()
# void activeHandler(Collection<SecondaryProcessingMeta>)
+ List<AbstractSecondHandler> getHandlerList()
+ void refresh()
}
class com.welab.event.util.FullDataTaskWhereBuilderUtil {
+ {static} JSONObject buildMainWhere(Long,String)
+ {static} JSONObject buildMainWhereForPK(Object,String)
+ {static} JSONObject buildSlaveWhere(List<Object>,String,String)
+ {static} JSONObject buildSlaveWhereForMoreKeys(List<Map<String,Object>>,String)
}
class com.welab.event.util.MapUtil {
+ {static} Map<V,K> reverse(Map<K,V>)
}
class com.welab.event.service.dw.DwManagerControllerTest {
- DwManagerController dwManagerController
- DwsQueueManager dwsQueueManager
+ void resiterMeta()
}
class com.welab.event.service.impl.action.EmailActionServiceImpl {
- MessageEmailService messageEmailService
- ApplicationService applicationService
- DocumentService documentService
+ void doProcess(ActionJob)
- void buildMailDTO(MailDTO,EventDto,UserProfileVO)
- DocumentVO findLastestOneDocument(Long,Integer,String)
- String getReceiptUrl(Long)
- String getDDMContractUrl(Long)
- void buildDisbursedNotice(MailDTO,EventDto,UserProfileVO)
}
class com.welab.event.dto.EventDto {
- String msgId
- String eventName
- Map<String,Object> eventParam
}
class com.welab.event.model.dw.MetaDataMapping {
- String targetTable
- String pkNames
- List<ColumnConfig> columnConfigs
}
class com.welab.event.model.dw.MetaDataMapping$ColumnConfig {
- String sourceDataBase
- String sourceTable
- Boolean isPrimaryTable
- String filterExpression
- String pkNames
- NestedConfig nestedConfig
- Map<String,String> mapping
- Map<String,List<Operate>> transition
- List<String> updateConditions
- Byte handlerType
- ScriptConfig script
}
class com.welab.event.model.dw.MetaDataMapping$Operate {
- String scope
- String expression
- JSONObject param
}
class com.welab.event.model.dw.MetaDataMapping$NestedConfig {
- String nestedField
- String pkNames
- List<ScriptConfig> scripts
}
class com.welab.event.model.dw.MetaDataMapping$ScriptConfig {
- String type
- JSONObject params
- String scriptName
}
class com.welab.event.util.FastJsonUtil {
- {static} SerializerFeature[] default_serializerFeature
- {static} FastJsonConfig fastJsonConfig
- <<Create>> FastJsonUtil()
+ {static} FastJsonConfig getFastJsonConfig()
+ {static} String toJSONString(Object)
}
class com.welab.event.service.listener.WelabEventListener {
- EventServiceImpl eventService
- EventActionServiceImpl eventActionService
- EventMsgLogServiceImpl eventMsgLogService
+ void process(Message)
- void handle(EventDto,EventMsgLog)
- Event selecEvent(EventDto,ProductVO)
- boolean isStopAction(Event,List<EventAction>,EventMsgLog,ProductVO)
- String appendActions(List<EventAction>)
}
class com.welab.event.app.manager.MetaDataMappingManager {
- ExpressRunner runner
- DwsHandlerCmdExe dwsHandlerCmdExe
+ void init()
+ List<MetaDataMapping> getList()
+ List<ConsumerInfo> getDynamicConsumerInfo()
+ List<ConsumerInfo> getDynamicConsumerInfo(String)
+ MetaDataMapping getMetaDataMapping(String)
+ void handData(MetaData)
- void saveDocument(MetaData,MetaDataMapping,MetaDataMapping.ColumnConfig)
- JSONObject dataMapping(String,JSONObject,JSONObject,MetaDataMapping.ColumnConfig)
- String pkMapping(JSONObject,String)
}
class com.welab.event.service.TestEventMsg {
- WelabEventListener welabEventListener
- ActionLogServiceImpl actionLogService
~ EmailActionServiceImpl emailActionService
+ void testMsg()
+ void insertActionLog()
+ void updateActionLog()
+ void selectActionLog()
}
class com.welab.event.exception.EventException {
- {static} long serialVersionUID
+ <<Create>> EventException(Integer)
+ <<Create>> EventException(Integer,String)
+ <<Create>> EventException(ResponsCodeType.EventResponsCodeTypeEnum)
}
class com.welab.event.service.dw.EsSqlTest {
- EsUtilComponent esUtilComponent
+ void findOneTest()
}
class com.welab.event.vo.QueryActionLogVo {
}
class com.welab.event.app.component.rocketmq.RocketMQDWSConsumerComponent {
+ {static} int NEW
+ {static} int INIT
+ {static} int RUN
+ {static} int READY
+ {static} int PAUSE
+ {static} int STOP
# DefaultLitePullConsumer rkmqClient
- RocketmqDataHandlerComponent dataHandler
- Map<String,Map<Integer,MessageQueue>> messageQueueMap
- String meta
- Long pollTimeOut
- int runState
- ConcurrentMap<String,List<Integer>> partitionListener
- LinkedBlockingQueue<Runnable> commonQueue
- AtomicInteger errorTimes
- MetaDataProcess process
- String group
- boolean inited
- JedisCluster redisClient
- RocketmqDataPretreatmentComponent rocketmqDataPretreatment
~ AtomicInteger counter
~ int threshold
- Set<MessageQueue> errorQueue
+ <<Create>> RocketMQDWSConsumerComponent(String,String,long)
+ MetaInfoStatusEnum getModel()
+ void initConsumer(Map<String,Map<Integer,MessageQueue>>)
- void initOffset(Map<String,Map<Integer,MessageQueue>>)
+ boolean ready(int)
+ void run()
- void pullData()
+ void pause()
+ void saveOffset()
+ int getTransitionState()
+ void startTransition()
+ AbstractFullDataComponent buildTransition()
+ void addPartition(Map<String,List<Integer>>)
+ void firstRun()
+ void seekErrorOffset(Long,MessageQueue)
+ void removeErrorOffset(MessageQueue)
+ void stop()
}
class com.welab.event.model.SecondaryProcessingMeta {
- Long id
- String beanName
- String metaModel
- Boolean configStatus
- String desc
- Date createdAt
- Date updatedAt
- String config
+ Long getId()
+ void setId(Long)
+ String getBeanName()
+ void setBeanName(String)
+ String getMetaModel()
+ void setMetaModel(String)
+ Boolean getConfigStatus()
+ void setConfigStatus(Boolean)
+ String getDesc()
+ void setDesc(String)
+ Date getCreatedAt()
+ void setCreatedAt(Date)
+ Date getUpdatedAt()
+ void setUpdatedAt(Date)
+ String getConfig()
+ void setConfig(String)
}
class com.welab.event.config.ActionConfig {
+ {static} AbstractActionService getActionByType(ActionTypeEnum)
+ {static} AbstractActionService getActionByType(String)
+ {static} void doRetryAction(String)
+ {static} void doRetryAction(ActionJob)
}
class com.welab.event.util.EventUtil {
+ {static} String INDO_DDMMMYYYY
- <<Create>> EventUtil()
+ {static} String parseDate(Date,String)
+ {static} String handleRp(Long)
+ {static} String exception2Str(Throwable)
+ {static} String buildExceptionInfo(Throwable)
+ {static} Field getFieldByName(String,Class<?>)
+ {static} Object getFieldValueByFieldName(String,Object)
+ {static} List<String> getParamKey(String)
}
class com.welab.event.service.impl.EventActionServiceImpl {
- EventActionMapper eventActionMapper
- MessagePushConfService messagePushConfService
- MessageSmsConfService messageSmsConfService
- MessageEmailConfService messageEmailConfService
+ PageInfo<EventAction> getActionPage(QueryEventActionVo)
+ List<EventAction> getActionList(QueryEventActionVo)
+ List<EventAction> selectEventActionByEventId(long)
+ boolean saveEventAction(EventAction)
+ boolean addEventAction(EventAction)
+ boolean updateEventAction(EventAction)
+ boolean updateStatus(long,Boolean)
+ EventAction selectByEventActionName(String)
+ EventAction selectByActionId(long)
+ List<String> getMessageKeys(ActionTypeEnum)
}
enum com.welab.event.constant.EventScopeEnum {
+  ALL
+  OPEN_PORTION
+  LIMIT_PORTION
- Byte val
- String desc
}
class com.welab.event.app.component.rocketmq.RocketMQMetaReflushComponent {
+ void addPartition(RocketMQDWSConsumerComponent,Map<String,List<Integer>>)
}
interface com.welab.event.common.Urls {
~ String ROOT
~ String V1
~ String V3
}
interface com.welab.event.common.Urls$Event {
~ String EVENT_DESC
~ String V1_EVENT
~ String V1_EVENT_LIST
~ String V1_EVENT_LIST_DESC
~ String V1_EVENT_DETAIL
~ String V1_EVENT_DETAIL_DESC
~ String V1_EVENT_SAVE
~ String V1_EVENT_SAVE_DESC
~ String V1_EVENT_UPDATE_STATUS
~ String V1_EVENT_UPDATE_STATUS_DESC
~ String V1_EVENT_PLATFORM
~ String V1_EVENT_PLATFORM_DESC
}
interface com.welab.event.common.Urls$Action {
~ String ACTION_DESC
~ String V1_ACTION
~ String V1_ACTION_ALL
~ String V1_ACTION_ALL_DESC
~ String V1_ACTION_LIST
~ String V1_ACTION_LIST_DESC
~ String V1_ACTION_SAVE
~ String V1_ACTION_SAVE_DESC
~ String V1_ACTION_UPDATE_STATUS
~ String V1_ACTION_UPDATE_STATUS_DESC
~ String V1_ACTION_TYPES
~ String V1_ACTION_TYPES_DESC
~ String V1_ACTION_MESSAGE_KEY
~ String V1_ACTION_MESSAGE_KEY_DESC
~ String V1_ACTION_RETRY
~ String V1_ACTION_RETRY_DESC
}
interface com.welab.event.common.Urls$DwManager {
~ String ACTION_DESC
~ String Moudle
~ String V3_PAUSE
~ String V3_PAUSE_DESC
~ String V3_RESTART
~ String V3_RESTART_DESC
~ String V3_REBUILD_START
~ String V3_REBUILD_START_DESC
~ String V3_CONTINUETASK
~ String V3_CONTINUETASK_DESC
~ String V3_INIT_DATA
~ String V3_INIT_DATA_DESC
~ String V3_REFRESH_CONFIG
~ String V3_REFRESH_CONFIG_DESC
~ String V3_UPDATE_METAINFO
~ String V3_UPDATE_METAINFO_DESC
}
interface com.welab.event.common.Urls$DwsMetaManager {
~ String ACTION_DESC
~ String Moudle
~ String V3_META_INFO
~ String V3_META_INFO_DESC
}
class com.welab.event.Application {
+ {static} void main(String[])
}
class com.welab.event.job.RocketMQSendTimeHandlerJob {
- RocketMQProducer rocketMQProducer
+ void execute(ShardingContext)
}
class com.welab.event.app.base.BaseCanalMetaInfoService {
- CanalMetaInfoMapper canalMetaInfoMapper
+ List<CanalMetaInfoWithBLOBs> getMetaInfoList()
+ Boolean saveOrUpdateInfo(CanalMetaInfoWithBLOBs)
+ CanalMetaInfo getMetaInfoOtherConfig(String)
+ CanalMetaInfoWithBLOBs getMetaInfo(String)
+ CanalMetaInfoWithBLOBs getMetaInfo(Long)
+ List<CanalMetaInfoWithBLOBs> getMetaInfoList(CanalMetaInfoExt)
}
enum com.welab.event.constant.ActionTypeEnum {
+  SMS
+  EMAIL
+  APP_PUSH
+  INTEGRAL
- String name
- String beanName
- String desc
+ {static} List<String> getAllActionType()
+ {static} ActionTypeEnum getActionTypeEnumByActionName(String)
}
class com.welab.event.Test1 {
+ void exec()
}
class com.welab.event.app.component.es.InitColumnConfigComponent {
- BaseCanalMetaInfoService baseCanalMetaInfoService
- JedisCluster redisClient
+ String getInitColumn(String)
# String getKey(String)
+ String refreshInitColumn(String)
}
enum com.welab.event.constant.SqlTypeEnum {
+  INSERT
+  UPDATE
+  DELETE
}
class com.welab.event.response.ResponsCodeType {
+ {static} String NAME_NOT_NULL
+ {static} String NAME_EXISTS
+ {static} String ACTION_TYPE_ERROR
+ {static} String BUSINESS_EXCEPTION
}
enum com.welab.event.response.EventResponsCodeTypeEnum {
+  NAME_NOT_NULL
+  NAME_EXISTS
+  ACTION_TYPE_ERROR
+  BUSINESS_EXCEPTION
- Integer code
- String message
}
class com.welab.event.service.impl.EventMsgLogServiceImpl {
- EventMsgLogMapper eventMsgLogMapper
+ boolean insert(EventMsgLog)
+ EventMsgLog selectByMsgId(String)
}


com.welab.event.SimpleTest <|-- com.welab.event.service.TestDb
com.welab.event.web.BaseWebTest <|-- com.welab.event.web.EventControllerTest
com.welab.event.service.AbstractActionService +.. com.welab.event.service.AbstractActionService$ActionJob
com.welab.event.service.AbstractActionService <|-- com.welab.event.service.impl.action.SmsActionServiceImpl
org.springframework.boot.ApplicationRunner <|.. com.welab.event.config.DWConfigruation
com.welab.event.service.IWelabEventService <|.. com.welab.event.service.impl.WelabEventServiceImpl
com.welab.event.constant.WeLabEventConstants +.. com.welab.event.constant.WeLabEventConstants$EventParamConstant
com.welab.event.constant.WeLabEventConstants +.. com.welab.event.constant.WeLabEventConstants$ActionConfigConstant
com.welab.event.SimpleTest <|-- com.welab.event.service.AopRedisTest
com.welab.event.app.command.dw.AbstractDmHandler <|-- com.welab.event.app.command.dw.AssociationRelationshipHandlerCmdExe
org.apache.rocketmq.client.consumer.listener.MessageListenerConcurrently <|.. com.welab.event.app.command.dw.second.AssociationRelationHandler
com.welab.event.app.command.dw.second.AbstractSecondHandler <|-- com.welab.event.app.command.dw.second.AssociationRelationHandler
com.welab.event.config.rocketmq.listener.MsgQueueListener <|.. com.welab.event.config.rocketmq.listener.MetaDataProcess
com.welab.event.app.manager.group.AbstractDwsGroupManager <|-- com.welab.event.app.manager.group.DwsGroupForTopicManager
com.welab.event.model.EventAction <|-- com.welab.event.vo.QueryEventActionVo
com.welab.event.model.CanalMetaProcessExample +.. com.welab.event.model.CanalMetaProcessExample$GeneratedCriteria
com.welab.event.model.CanalMetaProcessExample +.. com.welab.event.model.CanalMetaProcessExample$Criteria
com.welab.event.model.GeneratedCriteria <|-- com.welab.event.model.CanalMetaProcessExample$Criteria
com.welab.event.model.CanalMetaProcessExample +.. com.welab.event.model.CanalMetaProcessExample$Criterion
com.welab.event.app.component.fulldatatask.AbstractFullDataComponent <|-- com.welab.event.app.component.fulldatatask.IncrementColumnFullDataComponent
com.welab.event.model.CanalMetaInfoExample +.. com.welab.event.model.CanalMetaInfoExample$GeneratedCriteria
com.welab.event.model.CanalMetaInfoExample +.. com.welab.event.model.CanalMetaInfoExample$Criterion
com.welab.event.model.CanalMetaInfoExample +.. com.welab.event.model.CanalMetaInfoExample$Criteria
com.welab.event.model.GeneratedCriteria <|-- com.welab.event.model.CanalMetaInfoExample$Criteria
java.io.Serializable <|.. com.welab.event.vo.QueryEventVo
com.welab.event.model.Event <|-- com.welab.event.vo.QueryEventVo
com.welab.event.model.Event <|-- com.welab.event.vo.EventVo
org.springframework.beans.factory.DisposableBean <|.. com.welab.event.app.manager.DwsQueueManager
com.welab.event.exception.RuntimeException <|-- com.welab.event.exception.ActionDelayQueueException
com.welab.event.app.manager.group.AbstractDwsGroupManager <|-- com.welab.event.app.manager.group.DwsGroupForMetaManager
com.welab.event.service.AbstractActionService <|-- com.welab.event.service.impl.action.AppPushActionServiceImpl
com.welab.event.service.impl.action.AppPushActionServiceImpl +.. com.welab.event.service.impl.action.AppPushActionServiceImpl$MessagePushWithTemplate
com.welab.event.util.FullDataTaskSqlBuilderUtil +.. com.welab.event.util.FullDataTaskSqlBuilderUtil$SQLmodel
com.welab.event.SimpleTest <|-- com.welab.event.service.Db2Excel
com.welab.event.app.manager.DatawarehouseZkManager +.. com.welab.event.app.manager.DatawarehouseZkManager$ChildEventHook
org.springframework.context.ApplicationContextAware <|.. com.welab.event.config.DwsNameManager
com.welab.event.app.command.rocketmq.RocketMQConsumerCmdExe +.. com.welab.event.app.command.rocketmq.RocketMQConsumerCmdExe$ConsumerManagerTask
com.welab.event.app.command.rocketmq.Runnable <|.. com.welab.event.app.command.rocketmq.RocketMQConsumerCmdExe$ConsumerManagerTask
com.welab.event.web.BaseWebTest <|-- com.welab.event.web.ActionControllerTest
com.welab.event.app.manager.CheckPartitionChanagedManager +.. com.welab.event.app.manager.CheckPartitionChanagedManager$CheckPartitionThread
com.welab.event.app.manager.Runnable <|.. com.welab.event.app.manager.CheckPartitionChanagedManager$CheckPartitionThread
org.springframework.test.context.junit4.AbstractJUnit4SpringContextTests <|-- com.welab.event.web.BaseWebTest
com.welab.event.model.CanalMetaInfo <|-- com.welab.event.model.ext.CanalMetaInfoExt
com.welab.event.model.CanalMetaInfo <|-- com.welab.event.model.CanalMetaInfoWithBLOBs
com.welab.event.util.DataTransitionUtil +.. com.welab.event.util.DataTransitionUtil$DataTransitionContext
com.welab.event.SimpleTest <|-- com.welab.event.service.dw.MetaDataMappingManagerTest
com.welab.event.SimpleTest <|-- com.welab.event.service.dw.EsTest
com.welab.event.SimpleTest <|-- com.welab.event.service.dw.DwSaveRecordCmdTest
com.welab.event.app.component.fulldatatask.AbstractFullDataComponent <|-- com.welab.event.app.component.fulldatatask.FullColumnFullDataComponent
com.welab.event.model.dm.DmHandlerInfo <|-- com.welab.event.model.dm.AssociationRelationDmHandlerInfo
com.welab.event.model.dm.AssociationRelationDmHandlerInfo +.. com.welab.event.model.dm.AssociationRelationDmHandlerInfo$FindResultConfig
org.apache.rocketmq.client.consumer.listener.MessageListenerConcurrently <|.. com.welab.event.app.command.rocketmq.EsInsertToUpdateCmdExe
com.welab.event.service.AbstractActionService <|-- com.welab.event.service.impl.action.IntegralActionServiceImpl
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.event.job.TransferData2MonthTableJob
com.welab.event.app.manager.group.AbstractDwsGroupManager <|-- com.welab.event.app.manager.group.DwsGroupForQueueManager
com.welab.event.app.component.rocketmq.RocketMQProducer +.. com.welab.event.app.component.rocketmq.RocketMQProducer$DelayTimeLevel
org.springframework.web.filter.OncePerRequestFilter <|-- com.welab.event.filter.LogFilter
org.apache.rocketmq.client.consumer.listener.MessageListenerConcurrently <|.. com.welab.event.app.command.rocketmq.DwsQueueCmdExe
com.welab.event.app.command.dw.second.AbstractSecondHandler +.. com.welab.event.app.command.dw.second.AbstractSecondHandler$ConsumerType
com.welab.event.exception.RuntimeException <|-- com.welab.event.exception.MessageProcessException
com.welab.event.exception.MessageProcessException +.. com.welab.event.exception.MessageProcessException$ExceptionCode
com.welab.event.model.SecondaryProcessingMetaExample +.. com.welab.event.model.SecondaryProcessingMetaExample$GeneratedCriteria
com.welab.event.model.SecondaryProcessingMetaExample +.. com.welab.event.model.SecondaryProcessingMetaExample$Criterion
com.welab.event.model.SecondaryProcessingMetaExample +.. com.welab.event.model.SecondaryProcessingMetaExample$Criteria
com.welab.event.model.GeneratedCriteria <|-- com.welab.event.model.SecondaryProcessingMetaExample$Criteria
org.apache.commons.collections.MapUtils <|-- com.welab.event.util.MapUtil
com.welab.event.SimpleTest <|-- com.welab.event.service.dw.DwManagerControllerTest
com.welab.event.service.AbstractActionService <|-- com.welab.event.service.impl.action.EmailActionServiceImpl
java.io.Serializable <|.. com.welab.event.dto.EventDto
com.welab.event.model.dw.MetaDataMapping +.. com.welab.event.model.dw.MetaDataMapping$ColumnConfig
com.welab.event.model.dw.MetaDataMapping +.. com.welab.event.model.dw.MetaDataMapping$Operate
com.welab.event.model.dw.MetaDataMapping +.. com.welab.event.model.dw.MetaDataMapping$NestedConfig
com.welab.event.model.dw.MetaDataMapping +.. com.welab.event.model.dw.MetaDataMapping$ScriptConfig
com.welab.event.SimpleTest <|-- com.welab.event.service.TestEventMsg
com.welab.common.exception.FastRuntimeException <|-- com.welab.event.exception.EventException
com.welab.event.model.ActionLog <|-- com.welab.event.vo.QueryActionLogVo
com.welab.event.app.component.rocketmq.Runnable <|.. com.welab.event.app.component.rocketmq.RocketMQDWSConsumerComponent
com.welab.event.common.Urls +.. com.welab.event.common.Urls$Event
com.welab.event.common.Urls +.. com.welab.event.common.Urls$Action
com.welab.event.common.Urls +.. com.welab.event.common.Urls$DwManager
com.welab.event.common.Urls +.. com.welab.event.common.Urls$DwsMetaManager
com.dangdang.ddframe.job.api.simple.SimpleJob <|.. com.welab.event.job.RocketMQSendTimeHandlerJob
@enduml